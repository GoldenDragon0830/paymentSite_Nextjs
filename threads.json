[
  {
    "info": {
      "name": "Request new options for Select component on scroll",
      "id": "1080469637667495947",
      "guildId": "967097582721572934",
      "createdAt": 1677674435775
    },
    "intro": {
      "content": "Hi @jmikrut<br>Does anyone know how request more options for Select input from payload/components/forms?<br>I&#x27;m trying to put a select input on custom page, and pass as options entries from collection, and I want options to load dynamically as user scrolls down <br>In relationship field payload loads new options when scrolled to the end of select, but I can&#x27;t find a prop for request function or callback when end is reached",
      "fileAttachments": [],
      "authorID": "351983077423185921",
      "authorName": "Ysione",
      "authorAvatar": "f612bad72951735200e85f09988732ec",
      "createdAtDate": 1677674435775
    },
    "messages": [
      {
        "content": "hey there! ok so first thing you want to make sure of is that you don&#x27;t use the <code>type: &#x27;select&#x27;</code> field, because with that field, the options are created as an &quot;enum&quot; in GraphQL, db, etc. Meaning you need to know the options when you start the server, and they can&#x27;t change. Instead, you should use a <code>type: &#x27;text&#x27;</code> field, which will not be an <code>enum</code> and will accept any value at the database level. From there, you could just create a custom React component for your field that renders our internally used <code>select</code> field UI<br> <br> and if you re-use our built-in select field, that is just built on top of <code>react-select</code>, which has methods that you can pass to fire callbacks based on when the user scrolls to the bottom of the available options. You can look at our current <code>relationship</code> component to see how we wire it up. It&#x27;s fairly complex, but it can be done!",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677682123602
      },
      {
        "content": "According to types for select component Payload doesn&#x27;t have loadOptions prop as react-select does, is there a quick way to have react-select look an behave like payload select? I&#x27;m trying to keep everything in one style<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">SelectInputProps</span> = <span class=\"hljs-title class_\">Omit</span>&lt;<span class=\"hljs-title class_\">SelectField</span>, <span class=\"hljs-string\">&#x27;type&#x27;</span> | <span class=\"hljs-string\">&#x27;value&#x27;</span> | <span class=\"hljs-string\">&#x27;options&#x27;</span>&gt; &amp; {\n    showError?: <span class=\"hljs-built_in\">boolean</span>;\n    errorMessage?: <span class=\"hljs-built_in\">string</span>;\n    readOnly?: <span class=\"hljs-built_in\">boolean</span>;\n    <span class=\"hljs-attr\">path</span>: <span class=\"hljs-built_in\">string</span>;\n    required?: <span class=\"hljs-built_in\">boolean</span>;\n    value?: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">string</span>[];\n    description?: <span class=\"hljs-title class_\">Description</span>;\n    onChange?: <span class=\"hljs-function\">(<span class=\"hljs-params\">value: Option</span>) =&gt;</span> <span class=\"hljs-built_in\">void</span>;\n    style?: <span class=\"hljs-title class_\">React</span>.<span class=\"hljs-property\">CSSProperties</span>;\n    className?: <span class=\"hljs-built_in\">string</span>;\n    width?: <span class=\"hljs-built_in\">string</span>;\n    hasMany?: <span class=\"hljs-built_in\">boolean</span>;\n    isSortable?: <span class=\"hljs-built_in\">boolean</span>;\n    options?: <span class=\"hljs-title class_\">OptionObject</span>[];\n    isClearable?: <span class=\"hljs-built_in\">boolean</span>;\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "351983077423185921",
        "authorName": "Ysione",
        "authorAvatar": "f612bad72951735200e85f09988732ec",
        "createdAtDate": 1677754547344
      },
      {
        "content": "just render our built-in ReactSelect wrapper<br> <br> <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/elements/ReactSelect/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/elements/ReactSelect/index.tsx</a><br> <br> you will probably have to import this from <code>payload/dist</code> but it should work<br> <br> and if it does not have the prop you need exposed, feel free to PR to Payload to make sure that we pass what you need through to the underlying <code>react-select</code> library",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677781131308
      },
      {
        "content": "Import from <code>payload/dist</code> works, and it has the prop - onMenuScrollToBottom<br>Thank you for your time and help",
        "fileAttachments": [],
        "authorID": "351983077423185921",
        "authorName": "Ysione",
        "authorAvatar": "f612bad72951735200e85f09988732ec",
        "createdAtDate": 1677826166319
      },
      {
        "content": "beautiful! you are very welcome!",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677852014561
      }
    ],
    "messageCount": 9,
    "slug": "request-new-options-for-select-component-on-scroll"
  },
  {
    "info": {
      "name": "regenerateMediaSizes + plugin-cloud-storage",
      "id": "1080843016413118544",
      "guildId": "967097582721572934",
      "createdAt": 1677763456205
    },
    "intro": {
      "content": "but I&#x27;m getting this error: <br><pre><code class=\"hljs\">`\nTypeError: Cannot read properties of undefined (reading &#x27;split&#x27;)\n    at generateFileData (/[...]/node_modules/payload/dist/uploads/generateFileData.js:87:29)\n    at update (/[...]/node_modules/payload/dist/collections/operations/update.js:95:103)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async /[...]/cms/regenerateMediaSizes.js:28:15\n    at async /[...]/cms/regenerateMediaSizes.js:25:11\n    at async Promise.all (index 0)\n    at async regenerateMediaSizes (/[...]/cms/regenerateMediaSizes.js:22:5)\nMedia 640ce5695867e6824e272192 failed to regenerate\nFileUploadError: There was a problem while uploading the file.</code></pre><br> <br> <pre><code class=\"hljs\">at new ExtendableError (/[...]/node_modules/payload/dist/errors/APIError.js:22:15)\n    at new APIError (/[...]/node_modules/payload/dist/errors/APIError.js:38:9)\n    at new FileUploadError (/[...]/node_modules/payload/dist/errors/FileUploadError.js:10:9)\n    at generateFileData (/[...]/node_modules/payload/dist/uploads/generateFileData.js:121:15)\n    at update (/[...]/node_modules/payload/dist/collections/operations/update.js:95:103)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async /[...]/cms/regenerateMediaSizes.js:28:15\n    at async /[...]/cms/regenerateMediaSizes.js:25:11\n    at async Promise.all (index 0)\n    at async regenerateMediaSizes (/[...]/cms/regenerateMediaSizes.js:22:5) {\n  status: 400,\n  data: null,\n  isPublic: false,\n  isOperational: true\n}</code></pre><br> <br> I tried to log blob to check if its loading ok, and it seems fine:<br><pre><code class=\"hljs\">Blob {\n  [Symbol(type)]: &#x27;image/jpeg&#x27;,\n  [Symbol(buffer)]: &lt;Buffer ff d8 ff e1 00 bc 45 78 69 66 00 00 49 49 2a 00 08 00 00 00 06 00 12 01 03 00 01 00 00 00 01 00 00 00 1a 01 05 00 01 00 00 00 56 00 00 00 1b 01 05 00 ... 283730 more bytes&gt;\n}</code></pre><br> <br> @jmikrut can you shed some light on this? What format is expected for <code>file</code>?<br><br>I found that the error is because payload is trying to access <code>file.name</code>. So I tried to send it like this, and did not get any errors, but also no image being updated:<br><br><pre><code class=\"hljs\">file: {\n  ...blob,\n  name: mediaDoc.filename,\n},</code></pre>",
      "fileAttachments": [],
      "authorID": "736673642158620680",
      "authorName": "arielarial",
      "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
      "createdAtDate": 1678818562332
    },
    "messages": [
      {
        "content": "you need to pass it corresponding to the type, which is here:<br> <br> <a href=\"https://github.com/payloadcms/payload/blob/master/src/uploads/types.ts#L82\">https://github.com/payloadcms/payload/blob/master/src/uploads/types.ts#L82</a><br> <br> your <code>Buffer</code> goes on <code>file.data</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678907692246
      },
      {
        "content": "Nice, thanks a lot! I&#x27;m sending file like specified, getting no errors, but the new media size is still not being generated :/<br>I&#x27;m not used to work with blobs/buffer, s I&#x27;m kinda lost here, sorry<br><br><pre><code class=\"hljs\">await fetch(mediaDoc.url)\n  .then((response) =&gt; response.blob())\n  .then(async (blob) =&gt; {\n    const arrayBuffer = await blob.arrayBuffer();\n    const buffer = await Buffer.from(arrayBuffer, &quot;binary&quot;);\n\n    const file = {\n      data: buffer,\n      mimetype: blob.type,\n      name: mediaDoc.filename,\n      size: mediaDoc.filesize,\n    };\n\n    await payload.update({\n      collection: &quot;media&quot;,\n      id: mediaDoc.id,\n      data: mediaDoc,\n      file,\n      overwriteExistingFiles: true,\n      contentType: blob.type,\n    });\n\n    console.log(\n      `Media ${\n        mediaDoc.filename || mediaDoc.id\n      } regenerated successfully`\n    );\n  })</code></pre>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1678909185473
      },
      {
        "content": "is your new file <em><strong>bigger</strong></em> than your newly added media sizes?<br> <br> like, dimensions-wise<br> <br> i think you&#x27;re almost there. honestly this type of thing <em><strong>is very confusing</strong></em> no matter what<br> <br> blob vs buffer, arrayBuffer, etc etc",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678911228894
      },
      {
        "content": "not really, I made a test image size which is 100x100<br> <br> the uploaded media is 2560x1440",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1678911460410
      },
      {
        "content": "question - are the <em><strong>old</strong></em> sizes being re-generated?<br> <br> can you tell by looking at modified / created timestamps on the files on disk? I am wondering because maybe your script is using your already-built Payload config, which might not have the new sizes reflected<br> <br> and second question - (more like a suggestion)<br> <br> if i were you, at this point, i&#x27;d try and get set up with a debugger in your IDE so that you can step through what&#x27;s actually happening inside of both your function, and in Payload&#x27;s <code>update</code> operation, to see where the file is failing to be sized to your new sizes",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678912562379
      },
      {
        "content": "hmm, ok. So, about old sizes being re-generated: they are. I&#x27;ve just checked in GCS bucket<br> <br> About an already built-in payload config, I don&#x27;t see how this could be. Because I&#x27;m testing this locally, and even restarted manually payload to double check<br> <br> But I guess the way to go really is to set a debugger and try to find this out, like you said. Because the way it is now, we are shooting in the dark :/",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1678913027303
      },
      {
        "content": "in your script, are you calling <code>payload.init</code>?<br> <br> i&#x27;d double-check that it&#x27;s loading your <code>/src</code> payload config, and not the <code>/dist</code> one<br> <br> (that is, if you&#x27;re using TS)",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678913435352
      },
      {
        "content": "OH.",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1678913495640
      },
      {
        "content": "😏<br> <br> you should definitely make this script into a GH discussion!<br> <br> would be super valuable for others i think",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678913505528
      },
      {
        "content": "of course!<br> <br> so, I&#x27;m using payload.init like this:<br><pre><code class=\"hljs\">await payload.init({\n      secret: PAYLOAD_SECRET,\n      mongoURL: MONGODB_URI,\n      local: true,\n    });</code></pre><br> <br> I&#x27;m not specifying the config file ,so it will default to <code>/dist</code>, thats it?",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1678913547662
      },
      {
        "content": "well that depends<br> <br> where is your payload config located?<br> <br> and / or, do you have an environment variable set to manually declare <code>PAYLOAD_CONFIG_PATH</code><br> <br> it won&#x27;t default to <code>/dist</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678913649833
      },
      {
        "content": "oh, thats right<br> <br> oh my...<br> <br> <code>&quot;regenerateImages&quot;: &quot;cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js node ./regenerateMediaSizes.js&quot;,</code><br> <br> 🤡",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1678913689285
      },
      {
        "content": "nailed it<br> <br> hey, love it when we get the answers",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678913730019
      },
      {
        "content": "That one took a while!<br> <br> Thank you so much, James!",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1678913976237
      },
      {
        "content": "of course<br> <br> thanks for staying after it 👍",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678914060437
      },
      {
        "content": "I&#x27;ll definitely add this to the thread 🙂<br> <br> thanks for the patience! 😅<br> <br> snippet here:<br><a href=\"https://github.com/payloadcms/payload/discussions/1834#discussioncomment-5327718\">https://github.com/payloadcms/payload/discussions/1834#discussioncomment-5327718</a>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1678914064287
      },
      {
        "content": "nice work, feels like this should be part of the plugin somewhat<br> <br> or part of a core, or a combination 😂",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678938248530
      }
    ],
    "messageCount": 56,
    "slug": "regeneratemediasizes-plugin-cloud-storage"
  },
  {
    "info": {
      "name": "looking to preview a page in the demo version is that possible?",
      "id": "1075261284192374784",
      "guildId": "967097582721572934",
      "createdAt": 1676432667540
    },
    "intro": {
      "content": "hi 🙂 I&#x27;m not a developer i&#x27;m a conent creator looking to replace our current CMS. i wrote a page in the in the demo version so see what elements are available and the editor looks very promising. i&#x27;d like to preview the page so i can see what the elements look like in real life (media slider, content columns etc) but for the life of me i cannot figure out how to preview a page. i can only publish or save drafts. is this maybe disabled for the demo account?",
      "fileAttachments": [],
      "authorID": "781884553366470677",
      "authorName": "Matzathfanboy",
      "authorAvatar": null,
      "createdAtDate": 1676432667540
    },
    "messages": [
      {
        "content": "The Payload demo does not have a corresponding frontend (a website for presenting the content to a user) in order to do any sort of preview. It is API and Admin interface only. That being said, once a frontend is built by one of your developers, access control could be configured so certain users can view drafts on the live site. Hope that makes sense, let me know if you have more questions.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676471280986
      }
    ],
    "messageCount": 1,
    "slug": "looking-to-preview-a-page-in-the-demo-version-is-that-possible"
  },
  {
    "info": {
      "name": "Remove \"field width\" in form builder plugin",
      "id": "1076205863762677822",
      "guildId": "967097582721572934",
      "createdAt": 1676657872859
    },
    "intro": {
      "content": "Decided to try implementing the form builder plugin into my website today but am currently kind of stuck on the &quot;field width&quot; field. And I know that sounds stupid and I could just leave it empty but for me the beauty of Payload so far is that I can really tailor it to what I need. I looked through the source code of the plugin and it seems there isn&#x27;t a built-in way to remove it 😅<br><br>My two cents: the field width input should probably not be a default. All the other fields are absolutely essential, but that field is very dependent on the design being implemented in the frontend. I think it would perhaps be better to have an easier way of extending the default fields with field width inputs, but by default I don&#x27;t think it&#x27;s a good thing to have.<br><br>If that&#x27;s something that can maybe be agreed on, I would be down to make a PR to the plugin! Otherwise I could suffice with just having the blocks in <a href=\"https://github.com/payloadcms/plugin-form-builder/blob/main/src/collections/Forms/fields.ts\">https://github.com/payloadcms/plugin-form-builder/blob/main/src/collections/Forms/fields.ts</a> exported so I can reuse them. Or in the worst case do some copy pasting 🙈",
      "fileAttachments": [],
      "authorID": "321229198234615808",
      "authorName": "Ellie",
      "authorAvatar": "7472ce50c8e25a58fb6ed48925a7c31d",
      "createdAtDate": 1676657872859
    },
    "messages": [
      {
        "content": "Totally see your point here and I agree that <code>width</code> is pretty specific to front-end. The problem here is that it&#x27;s already in the API so we can&#x27;t remove it at this point. What you <em>could</em> do here is override that field with <code>hidden: true</code> so that it never appears in the admin panel. Would that work for you?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676902930044
      }
    ],
    "messageCount": 1,
    "slug": "remove-field-width-in-form-builder-plugin"
  },
  {
    "info": {
      "name": "Production deployment throws TypeError: Router.use() requires a middleware function",
      "id": "1070942828009627698",
      "guildId": "967097582721572934",
      "createdAt": 1675403067353
    },
    "intro": {
      "content": "Everything was running well in production but after developing and locally testing some changes, deployment to production threw, out of nowhere, the following error: TypeError: Router.use() requires a middleware function<br><br>Full trace:<br><pre><code class=\"hljs\">error Command failed with exit code 1.\n at internal/main/run_main_module.js:17:47\n at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:75:12)\n at Function.Module._load (internal/modules/cjs/loader.js:790:12)\n at Module.load (internal/modules/cjs/loader.js:950:32)\n at Object.Module._extensions..js (internal/modules/cjs/loader.js:1114:10)\n at Module._compile (internal/modules/cjs/loader.js:1085:14)\n at Object.&lt;anonymous&gt; (/home/node/dist/server.js:51:8)\n at Function.use (/home/node/node_modules/express/lib/router/index.js:462:11)\nTypeError: Router.use() requires a middleware function\n\n ^\n throw new TypeError(&#x27;Router.use() requires a middleware function&#x27;)\n/home/node/node_modules/express/lib/router/index.js:462</code></pre><br><br>Because I didn&#x27;t make any fundamental changes and all works well locally, it&#x27;s quite a mystery where this opaque error comes from. <br><br>Has anybody had a similar problem in production?<br><br>The only place where Router.use() function is used is in server.ts file and that hasn&#x27;t changed in the recent update.<br><br>server.ts<br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\n...\nconst router = express.Router();\nrouter.use(payload.authenticate);\n...</code></pre>",
      "fileAttachments": [],
      "authorID": "567578449439621124",
      "authorName": "KasparTr",
      "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
      "createdAtDate": 1675403067353
    },
    "messages": [
      {
        "content": "Do you want to create a new Router? express.Router(); returns a New Router Object. Instead, you can add the middleware directly to express.<br><br><pre><code class=\"hljs\">const app = express();\nconst yourMiddleware = (req, res, next) =&gt; {\n    \n    next();\n};\n\napp.get(&quot;/&quot;, (_, res) =&gt; {    res.redirect(&quot;/admin&quot;);  });\napp.use(yourMiddleware);</code></pre>",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1675405120286
      },
      {
        "content": "No, I haven&#x27;t changed anything nor do I wish to change anything about this. It hasn&#x27;t changed but the server failed to build this with any further new build. Even when I restored everything back to previously working code, the server now just doesn&#x27;t run. Looks like a hosting provider issue?<br> <br> Solved. Turns out it was the Payload npm package.<br>I was using the following version notation  <pre><code class=\"hljs\">&quot;payload&quot;: &quot;^1.4.1&quot;</code></pre> meaning all latest minor changes will be used.<br><br>Between now and 24 days ago since I last built a new image, something has changes in the way PayloadCMS works with Express and although it claims to be a <strong>minor</strong> change, it was a breaking change and something in the <strong>server.ts</strong> file related with express needs to be re-written. <br><br>I don&#x27;t have time to do it now, so I reverted to using a strict version (1.4.1) of payload and it works. As soon as I use anything modern, it breaks.<br> <br> I want to have my own custom routes (e.g. health check, and others) and I also need to access payload authentication middleware inside them. <br>So I followed tutorials on this but this doesn&#x27;t work anymore in latest payload versions.<br><br>Here is my server.ts new router related code.<br><br><pre><code class=\"hljs\">  \n  const router = express.Router();\n  router.use(payload.authenticate);\n\n  router.post(&#x27;/transactions/process&#x27;, (req: any, res) =&gt; {\n    if (req.user) {\n      return res.send(`Authenticated successfully as ${req.user.email}.`);\n    }\n    return res.send(&#x27;Not authenticated&#x27;);\n  });\n\n  router.get(&#x27;/health&#x27;, (req: any, res) =&gt; {\n    res.send(&#x27;Healthy&#x27;)\n  });\n\n  app.use(&#x27;/custom&#x27;, router);\n  app.listen(3000);</code></pre>",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1675408157733
      },
      {
        "content": "It works if await payload.init is before payload.authenticate.<br><br><pre><code class=\"hljs\">const start = async () =&gt; {\n  const router = express.Router();\n  \n  await payload.init({...}); // Changed to async. Need to wrap code into an async function\n\n  router.use(payload.authenticate);\n\n  router.post(&#x27;/transactions/process&#x27;, (req: any, res) =&gt; {\n    if (req.user) {\n      return res.send(`Authenticated successfully as ${req.user.email}.`);\n    }\n    return res.send(&#x27;Not authenticated&#x27;);\n  });\n\n  router.get(&#x27;/health&#x27;, (req: any, res) =&gt; {\n    res.send(&#x27;Healthy&#x27;)\n  });\n\n  app.use(&#x27;/custom&#x27;, router);\n  app.listen(3000);\n}\n\nstart();</code></pre>",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1675588363664
      },
      {
        "content": "Same problem here.",
        "fileAttachments": [],
        "authorID": "329095202335621122",
        "authorName": "Adroit",
        "authorAvatar": "2607692e6209351e45ed31e0756a2231",
        "createdAtDate": 1678601888194
      }
    ],
    "messageCount": 6,
    "slug": "production-deployment-throws-typeerror-routeruse-requires-a-middleware-function"
  },
  {
    "info": {
      "name": "Hey there!",
      "id": "1075271142845194364",
      "guildId": "967097582721572934",
      "createdAt": 1676435018026
    },
    "intro": {
      "content": "I&#x27;m trying to customize a bit some of my list views. Is there a way to have &quot;custom fields&quot; on the list view? <br>eg: I have a Post with 3 comments and want to have a field with that &quot;calculated amount&quot; without storing it on the DB. Just showing thay <code>comments.length</code> value.<br><br>And is it possible to set a default sorting sorting for my collections?",
      "fileAttachments": [],
      "authorID": "494333401264947218",
      "authorName": "nacho",
      "authorAvatar": null,
      "createdAtDate": 1676435018026
    },
    "messages": [
      {
        "content": "It sounds like you&#x27;re looking for a <code>ui</code> type field with custom cell component<br><br>Docs for swapping the components: <a href=\"https://payloadcms.com/docs/admin/components#collections\">https://payloadcms.com/docs/admin/components#collections</a><br>Docs for a cell component: <a href=\"https://payloadcms.com/docs/admin/components#cell-component\">https://payloadcms.com/docs/admin/components#cell-component</a><br>Docs for <code>ui</code> fields: <a href=\"https://payloadcms.com/docs/fields/ui#ui-field\">https://payloadcms.com/docs/fields/ui#ui-field</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676471690217
      },
      {
        "content": "Thanks!<br> <br> Regarding to the other question.. Is it posible to define a custom sorting for each collection?",
        "fileAttachments": [],
        "authorID": "494333401264947218",
        "authorName": "nacho",
        "authorAvatar": null,
        "createdAtDate": 1676509445743
      }
    ],
    "messageCount": 3,
    "slug": "hey-there"
  },
  {
    "info": {
      "name": "Filesize error on upload",
      "id": "1077535089828835358",
      "guildId": "967097582721572934",
      "createdAt": 1676974785049
    },
    "intro": {
      "content": "how can i display the file size limit after admin uploads , currently it just shows me a error &quot;There was a problem uploading the file",
      "fileAttachments": [],
      "authorID": "877297218967724072",
      "authorName": "eloahsam",
      "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
      "createdAtDate": 1676974785049
    },
    "messages": [
      {
        "content": "hi @eloahsam - currently it is not possible to customize this error message, but I think it would be great to give more detailed information for upload errors. Feel free to open a feature request to improve upload error messages.<br><br>In the meantime, you could add an admin description to your uploads collection / fields stating the max file size.",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678105200886
      },
      {
        "content": "Not sure how to access the allowed filesize, but if you&#x27;re interested in making a PR @eloahsam check out...<br> <br> <a href=\"https://github.com/payloadcms/payload/blob/812ab9f86824aca3689ddef8af759a84f59f2148/src/errors/FileUploadError.ts#L5\">https://github.com/payloadcms/payload/blob/812ab9f86824aca3689ddef8af759a84f59f2148/src/errors/FileUploadError.ts#L5</a><br> <br> Which is only called in two files it seems like<br> <br> <a href=\"https://github.com/payloadcms/payload/blob/812ab9f86824aca3689ddef8af759a84f59f2148/src/uploads/generateFileData.ts#L159\">https://github.com/payloadcms/payload/blob/812ab9f86824aca3689ddef8af759a84f59f2148/src/uploads/generateFileData.ts#L159</a><br> <br> and<br> <br> <a href=\"https://github.com/payloadcms/payload/blob/812ab9f86824aca3689ddef8af759a84f59f2148/src/uploads/uploadFiles.ts#L14\">https://github.com/payloadcms/payload/blob/812ab9f86824aca3689ddef8af759a84f59f2148/src/uploads/uploadFiles.ts#L14</a><br> <br> maybe @jesschow knows how to access the fileSize via the Payload object in the FileUploadError",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678111369845
      },
      {
        "content": "The file size error should show even before calling any api etc,from the two links I see that you’ve sent it’s after api calls as these are file upload errors …so the input file size should also give a error aswell",
        "fileAttachments": [],
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1678183815347
      }
    ],
    "messageCount": 9,
    "slug": "filesize-error-on-upload"
  },
  {
    "info": {
      "name": "Specify the name or path of upload",
      "id": "1077236038898044998",
      "guildId": "967097582721572934",
      "createdAt": 1676903485751
    },
    "intro": {
      "content": "I have a 2 collections first is for products with preview image field (upload type) in it as well as field for other images of the product, second one to store those images - <strong>productMediaCollection</strong>. <br>I wanted on image upload (for example from <em>products</em> collection) to change the name or/and file path of it to fit product title like:<br><br><strong>productMediaCollection/someProduct/image_uuid.webp;</strong><br><br>or at least to change the name to something like this:<br><br><strong>productMediaCollection/productTitle_uuid.webp</strong><br><br>So is there a way to change default uploading name for example via <em>beforeValidate</em> hook, because i dont quite understand how to do it?<br>Or maybe it possible to provide some function to <em>staticDir</em> in <strong>productMediaCollection</strong> to make it conditional?<br><br>Thank for answers",
      "fileAttachments": [],
      "authorID": "215833081158959105",
      "authorName": "Daniq",
      "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
      "createdAtDate": 1676903485751
    },
    "messages": [
      {
        "content": "There is a Github discussion on this topic: <a href=\"https://github.com/payloadcms/payload/discussions/1153\">https://github.com/payloadcms/payload/discussions/1153</a><br>You should be able to handle it in a <code>beforeOperation</code> similar to marked answer.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676913455813
      },
      {
        "content": "Thank, this solution might work, but if i create hook on <strong>productMediaCollection</strong> then i cant have an access to  information about product from which i created a media 😦<br>so i cant provide a product title or something like that into hook<br><br>So i media collection hook dont knows from where it was edited last time or something like that",
        "fileAttachments": [],
        "authorID": "215833081158959105",
        "authorName": "Daniq",
        "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
        "createdAtDate": 1676939180548
      }
    ],
    "messageCount": 2,
    "slug": "specify-the-name-or-path-of-upload"
  },
  {
    "info": {
      "name": "Help embedding video in rich text editor",
      "id": "1083191281636880526",
      "guildId": "967097582721572934",
      "createdAt": 1678323326263
    },
    "intro": {
      "content": "Hello everyone,<br>I&#x27;m very new to payload and it seems very powerful. I&#x27;ve been able to connect to the Rest API and grab some content from fields. When it comes to the rich text editor, I&#x27;ve managed to serialize its content with the help of the docs. The only I have no clue how to do is to enable video embedding. In your demo I see this button which allows for it.<br>Could you give me a hint how I would do that? Thanks a lot!",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1083191281636880526/1083191281771085844/Captura_de_Pantalla_2023-03-09_a_les_1.53.20.png",
          "name": "Captura_de_Pantalla_2023-03-09_a_les_1.53.20.png",
          "id": "1083191281771085844",
          "size": 91332,
          "url": "https://cdn.discordapp.com/attachments/1083191281636880526/1083191281771085844/Captura_de_Pantalla_2023-03-09_a_les_1.53.20.png",
          "proxyURL": "https://media.discordapp.net/attachments/1083191281636880526/1083191281771085844/Captura_de_Pantalla_2023-03-09_a_les_1.53.20.png",
          "height": 453,
          "width": 742,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "978594935899062282",
      "authorName": "Martí Arnau - React",
      "authorAvatar": null,
      "createdAtDate": 1678323326263
    },
    "messages": [
      {
        "content": "Hey there! We use this on our public facing website, that repo is also open source. Here is a link to our serialize function that renders content in our RTE elements 🙂<br><br> <a href=\"https://github.com/payloadcms/website/blob/main/src/components/RichText/Serialize/index.tsx\">https://github.com/payloadcms/website/blob/main/src/components/RichText/Serialize/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678331756898
      }
    ],
    "messageCount": 1,
    "slug": "help-embedding-video-in-rich-text-editor"
  },
  {
    "info": {
      "name": "Is it possible to query a 3 nested collection?",
      "id": "1076804860969754695",
      "guildId": "967097582721572934",
      "createdAt": 1676800684922
    },
    "intro": {
      "content": "I have these collections,<br><br>Location Group<br>Location<br>Post<br><br>Location Group has a value &quot;title&quot; string.<br>Location has a value &quot;group&quot; which relates to Location Group and &quot;title&quot; string.<br>Post has a value &quot;location&quot; which relates to Location.<br><br>When I&#x27;m trying to use dot notation on REST query on Post using location.locationGroup.title, it&#x27;s not working, but when I use location.title, its working.<br><br>PLEASE HELP",
      "fileAttachments": [],
      "authorID": "950202910095081473",
      "authorName": "johnmadrigal_",
      "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
      "createdAtDate": 1676800684922
    },
    "messages": [
      {
        "content": "@johnmadrigal_ can you paste in your configs? You may I can help you write a query for this, which would look something like this <code>?where[location.group.title][equals]=hello&amp;depth=3</code> (depth might be your missing piece)",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676901594479
      },
      {
        "content": "Hello Jacob, thanks for responding. I am using your sample work name &quot;website-cms&quot; and I also found the same issue with your code.<br><br>This is the repo code:<br><a href=\"https://github.com/payloadcms/website-cms/blob/main/src/collections/Posts.ts\">https://github.com/payloadcms/website-cms/blob/main/src/collections/Posts.ts</a><br><br>Can you create a Post record and create a query for &quot;author.photo.alt&quot;? Because in my end, even if I puth depth in the query, it still shows nothing.<br><br><a href=\"http://localhost:9000/api/posts?where[author.photo.alt][equals]=test&amp;depth=3\">http://localhost:9000/api/posts?where[author.photo.alt][equals]=test&amp;depth=3</a><br><br>I&#x27;m suspecting that it is not allowed to query the 2nd nested collection, which in your code, the photo inside author which is under post.<br><br>That is the exact issue i&#x27;m facing in my own payloadcms app.",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676931372619
      },
      {
        "content": "Thanks for the description! Very helpful. That query <em>should</em> look like this: <code>https://cms.payloadcms.com/api/posts?where[author.photo.alt][equals]=Write%20for%20the%20Community%20Blog%20Image</code> but it appears to be broken at the moment 😢<br> <br> Go ahead and pull an issue in our repo if you&#x27;d like. We&#x27;ll get this patched up.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676934708249
      },
      {
        "content": "Okay thanks, but is this working before? or we really don&#x27;t have feature like this?",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676958469738
      },
      {
        "content": "This was working before so once we fix the issue we&#x27;ll also write tests to prevent future regression.<br> <br> Update: this was fixed with <a href=\"https://github.com/payloadcms/payload/pull/2199\">https://github.com/payloadcms/payload/pull/2199</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676990423459
      }
    ],
    "messageCount": 7,
    "slug": "is-it-possible-to-query-a-3-nested-collection"
  },
  {
    "info": {
      "name": "build /admin/styles.css",
      "id": "1077593873221685369",
      "guildId": "967097582721572934",
      "createdAt": 1676988800102
    },
    "intro": {
      "content": "how do I build the styles? I&#x27;m running build and serve and /admin/styles.css is not building!",
      "fileAttachments": [],
      "authorID": "864214921620357150",
      "authorName": "ashermyers",
      "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
      "createdAtDate": 1676988800102
    },
    "messages": [
      {
        "content": "@ashermyers Is there any relevant information here? <a href=\"https://payloadcms.com/docs/admin/customizing-css#customizing-css-and-scss\">https://payloadcms.com/docs/admin/customizing-css#customizing-css-and-scss</a><br> <br> Have you defined a path for custom admin styles?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676988997585
      },
      {
        "content": "I&#x27;m not trying to add custom styles, the existing admin/styles.css is not loading, I&#x27;m getting a 404 error<br>(Cannot GET /admin/styles.css)",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989100567
      },
      {
        "content": "Hmmm",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989159883
      },
      {
        "content": "I&#x27;m running:<br>yarn copyfiles &amp;&amp; yarn build:payload &amp;&amp; yarn build:server<br>and <br>cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989190498
      },
      {
        "content": "Can we see your config",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989198865
      },
      {
        "content": "<pre><code class=\"hljs\">import { buildConfig } from &#x27;payload/config&#x27;;\nimport path from &#x27;path&#x27;;\n// import Examples from &#x27;./collections/Examples&#x27;;\nimport Users from &#x27;./collections/Users&#x27;;\n\nexport default buildConfig({\n  serverURL: &#x27;https://subdomain.example.org&#x27;,\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Users,\n    // Add Collections here\n    // Examples,\n  ],\n  typescript: {\n    outputFile: path.resolve(__dirname, &#x27;payload-types.ts&#x27;),\n  },\n  graphQL: {\n    schemaOutputFile: path.resolve(__dirname, &#x27;generated-schema.graphql&#x27;),\n  },\n});</code></pre>",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989237835
      },
      {
        "content": "Also, this may be unrelated, but I&#x27;ve seen two suggestions regarding clearing the npm/yarn cache<br> <br> Seems odd that I&#x27;d see two suggestions regarding 404&#x27;s on styles<br> <br> nothing looks weird there",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989238110
      },
      {
        "content": "I don&#x27;t know if its something I&#x27;m doing since i&#x27;m just using the npx command and adding my mongodb config",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989285771
      },
      {
        "content": "are any other assets returning a 404 status<br> <br> or is it this one stylesheet from what you can tell",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989360167
      },
      {
        "content": "No, just this one stylesheet",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989446918
      },
      {
        "content": "is the file in the out dist?<br> <br> or not created",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989555280
      },
      {
        "content": "gimme a sec. lemme check<br> <br> testing something rn",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676989570465
      },
      {
        "content": "ok no rush<br> <br> im stuck at work all day",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676989793753
      },
      {
        "content": "got it working by building the css on another machine and copying it over. Weird...",
        "fileAttachments": [],
        "authorID": "864214921620357150",
        "authorName": "ashermyers",
        "authorAvatar": "2b9f48b9778d15aab581b59fa35712b2",
        "createdAtDate": 1676991401861
      }
    ],
    "messageCount": 21,
    "slug": "build-admin-stylescss"
  },
  {
    "info": {
      "name": "Is there way to read form submission data from the Form Builder plugin?",
      "id": "1083601970226532402",
      "guildId": "967097582721572934",
      "createdAt": 1678421242053
    },
    "intro": {
      "content": "Just wanting to know if its possible to read form submission data using a get method like <br><br><pre><code class=\"hljs\">        const response = await fetch(\n            `${process.env.NEXT_PUBLIC_CMS_URL}/api/form-submissions/${resultsId}`,\n            {\n                method: &#x27;GET&#x27;,\n                headers: {\n                    &#x27;Content-Type&#x27;: &#x27;application/json&#x27;,\n                },\n            \n            }\n        )</code></pre>",
      "fileAttachments": [],
      "authorID": "1009647354758054068",
      "authorName": "christopher.nowlan",
      "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
      "createdAtDate": 1678421242053
    },
    "messages": [
      {
        "content": "Yes that is possible",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678422474038
      },
      {
        "content": "@Jarrod Ive been getting a 403 error",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1678422514973
      },
      {
        "content": "By default, read access on this collection is locked down to logged in users",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678422596948
      },
      {
        "content": "I would assume I could change access to read but that would be opening it up to the public to read all submission data?",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1678422831741
      },
      {
        "content": "Enable API key in your users collection.<br><pre><code class=\"hljs\">auth: {\n    useAPIKey: true,\n  },</code></pre><br>Then add the API-Key to you header.<br><pre><code class=\"hljs\">const response = fetch(\n    `${process.env.NEXT_PUBLIC_CMS_URL}/api/form-submissions/${resultsId}`,\n    {\n      headers: {\n        Authorization: `users API-Key &lt;your api key&gt;`,\n      },\n    }\n  ).then&lt;Meta&gt;((res) =&gt; res.json());</code></pre><br> <br> Remember only to use the fetch with server render, or else you expose your API-Key",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1678423952590
      },
      {
        "content": "Or you can log in via the api, and then send “credentials”: “include” in your request 🙂",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678448680667
      },
      {
        "content": "Is there an example of this or could you point me in the direction of the docs for this.",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1678459236244
      },
      {
        "content": "Yep! Check out this section: <a href=\"https://payloadcms.com/docs/authentication/overview#http-only-cookies\">https://payloadcms.com/docs/authentication/overview#http-only-cookies</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678467174401
      }
    ],
    "messageCount": 9,
    "slug": "is-there-way-to-read-form-submission-data-from-the-form-builder-plugin"
  },
  {
    "info": {
      "name": "Exposing group and block types when generating types",
      "id": "1075432369823158312",
      "guildId": "967097582721572934",
      "createdAt": 1676473457533
    },
    "intro": {
      "content": "I want to write some generic mappings that maps from payload&#x27;s types to props for my frontend React components. Blocks and groups aren&#x27;t exposed at the top level, so I&#x27;m having to manually pick them out by unpacking arrays and extracting specific blocks. <br><br>Is it possible to expose these when generating types? Or is there a simpler way for me to define these types based on the generated typings?",
      "fileAttachments": [],
      "authorID": "173581681058512897",
      "authorName": "sam",
      "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
      "createdAtDate": 1676473457533
    },
    "messages": [
      {
        "content": "Hey @sam , have you seen how this is done in our website repo? This might be a pattern you would benefit from. <a href=\"https://github.com/payloadcms/website/blob/main/src/components/RenderBlocks/index.tsx\">https://github.com/payloadcms/website/blob/main/src/components/RenderBlocks/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677594308032
      }
    ],
    "messageCount": 1,
    "slug": "exposing-group-and-block-types-when-generating-types"
  },
  {
    "info": {
      "name": "Allow the user to have \"update\" rights only to the articles he has created",
      "id": "1079668069829451786",
      "guildId": "967097582721572934",
      "createdAt": 1677483327110
    },
    "intro": {
      "content": "Hello everyone! I&#x27;d like to allow the user to have &quot;update&quot; rights only to the articles he has created. I have a simple function that checks if the user pseudonym is equal to the article field but seems I&#x27;m doing something wrong because the pseudonym field is undefined.<br> <br> Perhaps it&#x27;s possible to somehow pass an article object to this function?<br> <br> Okay. Seems it doesn&#x27;t work because the article author is an object<br> <br> I&#x27;ve updated the code but it gives the same result",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1079668069988847676/image.png",
          "name": "image.png",
          "id": "1079668069988847676",
          "size": 19699,
          "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1079668069988847676/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1079668069988847676/image.png",
          "height": 231,
          "width": 641,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1079668070307610705/image.png",
          "name": "image.png",
          "id": "1079668070307610705",
          "size": 9435,
          "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1079668070307610705/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1079668070307610705/image.png",
          "height": 138,
          "width": 361,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "187948379920138240",
      "authorName": "mihanc",
      "authorAvatar": "348c9d84bef605e502effc609bf2834b",
      "createdAtDate": 1677483327110
    },
    "messages": [
      {
        "content": "You should take at look here <a href=\"https://github.com/payloadcms/website-cms/blob/main/src/access/isAdminOrSelf.ts\">https://github.com/payloadcms/website-cms/blob/main/src/access/isAdminOrSelf.ts</a>",
        "fileAttachments": [],
        "authorID": "122444319054495746",
        "authorName": "SKRY",
        "authorAvatar": "5b54bd085cab964c72bce21dcfe04638",
        "createdAtDate": 1677491701784
      },
      {
        "content": "This part is not working in my case because I have an object and need to compare a key.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1079738856418574356/image.png",
            "name": "image.png",
            "id": "1079738856418574356",
            "size": 5675,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1079738856418574356/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1079738856418574356/image.png",
            "height": 161,
            "width": 541,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1079738856863178772/image.png",
            "name": "image.png",
            "id": "1079738856863178772",
            "size": 19207,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1079738856863178772/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1079738856863178772/image.png",
            "height": 218,
            "width": 644,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "348c9d84bef605e502effc609bf2834b",
        "createdAtDate": 1677500204120
      },
      {
        "content": "hi @mihanc - you can access the full doc using <code>data</code>, take a look at this example:",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1079899930136682646/Screen_Shot_2023-02-27_at_10.54.27_PM.png",
            "name": "Screen_Shot_2023-02-27_at_10.54.27_PM.png",
            "id": "1079899930136682646",
            "size": 407681,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1079899930136682646/Screen_Shot_2023-02-27_at_10.54.27_PM.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1079899930136682646/Screen_Shot_2023-02-27_at_10.54.27_PM.png",
            "height": 1660,
            "width": 2688,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1677538606887
      },
      {
        "content": "Why the data can be undefined?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1080459313690185799/image.png",
            "name": "image.png",
            "id": "1080459313690185799",
            "size": 12334,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1080459313690185799/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1080459313690185799/image.png",
            "height": 103,
            "width": 593,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079668069829451786/1080459314059288576/image.png",
            "name": "image.png",
            "id": "1080459314059288576",
            "size": 12006,
            "url": "https://cdn.discordapp.com/attachments/1079668069829451786/1080459314059288576/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079668069829451786/1080459314059288576/image.png",
            "height": 114,
            "width": 594,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "348c9d84bef605e502effc609bf2834b",
        "createdAtDate": 1677671974416
      },
      {
        "content": "The afterRead hook runs when you save the doc - so if you hit save and check your console.log again you should see the data",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1677678775285
      },
      {
        "content": "Is there any way to access the data before the afterRead hook? I&#x27;d like to disable Save button if the user is not the author of this article.",
        "fileAttachments": [],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "348c9d84bef605e502effc609bf2834b",
        "createdAtDate": 1677679037616
      },
      {
        "content": "My apologies, you&#x27;re not using a hook I was mixing this up with another similar thread. However, I would suggest adding a collection hook then you can access the document data before saving with beforeValidate or beforeChange <a href=\"https://payloadcms.com/docs/hooks/collections\">https://payloadcms.com/docs/hooks/collections</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1677679750564
      }
    ],
    "messageCount": 10,
    "slug": "allow-the-user-to-have-update-rights-only-to-the-articles-he-has-created"
  },
  {
    "info": {
      "name": "Hooks advice for an Orders collections",
      "id": "1076916607860875264",
      "guildId": "967097582721572934",
      "createdAt": 1676827327457
    },
    "intro": {
      "content": "Hi @payloadcms team!<br><br>I have an orders collection with an order <code>status</code> which has various payment/shipping statuses associated with the state of the order.<br><br>I would like to create a couple of hooks to do the following:<br><br>1. When I set a status of <code>order_ready_to_dispatch</code> I would like to create a new tracking request with my chosen courier, then write the response of that to the order record (I have these fields ready).<br><br>2. When I set a status of <code>order_shipped</code> I would like to create an email with details of the order, including the tracking information.<br><br>I have the email templates working and fire these off when I receive a payment_intent of succeeded in my stripe webhook.<br><br>I have a couple of questions around hooks:<br><br>1. Which hook should I use for these two use-cases?<br><br>2. How to prevent these from firing again if an order is updated and status remains the same; ie the status is <code>order_shipped</code> and I want to update any field. I wouldn&#x27;t then want the email to sent again when I resave the record. Feels like I would need a log of events attached to the record ie every status changes writes a log? Or would an object of bools be better, allowing me to undo a state should something malfunction, thus then allowing the hook to fire again if needs be?<br><br>Advice here would be really welcome!<br><br>Thanks!",
      "fileAttachments": [],
      "authorID": "357456032454410240",
      "authorName": "jakehopking",
      "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
      "createdAtDate": 1676827327457
    },
    "messages": [
      {
        "content": "@jakehopking would an <code>afterChange</code> hook work for you? In this hook you can check your order status and perform additional actions based on it. To prevent duplicative hooks compare its value with another hidden field that you maintain. Here&#x27;s a similar example to this: <a href=\"https://github.com/payloadcms/payload/discussions/1996#discussioncomment-4885826\">https://github.com/payloadcms/payload/discussions/1996#discussioncomment-4885826</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676902245365
      },
      {
        "content": "Thanks @jacobsfletch  - yeah that&#x27;s what I was thinking to do (although keep the checkboxes visible, so can toggle/re-fire the actions if ever needs be).<br><br>Do you have some good examples of <code>afterChange</code> hooks, or good examples of hooks in general? I&#x27;ve not written one yet and would like to see how to do correctly.<br> <br> PS Thanks for your work on the ecommerce boilerplate... it <em>really</em> helped me in getting my dynamic cart with payment_intents (and linking payload and stripe customers/orders together etc) working nicely.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676905997814
      },
      {
        "content": "What if instead of making a request when a field value is updated, you make it a custom REST endpoint or GraphQL mutation which modifies the field value? You can add a button somewhere if you need to call it manually. That would make the action more explicit.",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1676913475618
      },
      {
        "content": "That would make it more explicit I agree. If I could have this button on the order itself (in payload) that would work well I think... and could use the endpoint in the future on a admin dashboard etc.<br> <br> Nice idea.<br> <br> Do you know if it&#x27;s easy to add a new button, which would then have access to the order item data (being inside the order collection record within payload).<br> <br> @Jesse Sivonen sorry, meant to @ you in my reply 🙂",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676914160427
      },
      {
        "content": "@jakehopking Adding button is also as simple as adding a field (<a href=\"https://payloadcms.com/docs/fields/ui\">https://payloadcms.com/docs/fields/ui</a>) though you need to create a component for it yourself. For that you probably need these React hooks (<a href=\"https://payloadcms.com/docs/admin/hooks\">https://payloadcms.com/docs/admin/hooks</a>).",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1676914681844
      },
      {
        "content": "Thanks for the info @Jesse Sivonen - I&#x27;ll take a look.<br> <br> @jacobsfletch do you have any examples in any of your public repos for the use of a ui field type and a custom component?<br> <br> It&#x27;s not possible to use the buttons that are already a part of the admin ui??",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676915054365
      },
      {
        "content": "There doesn&#x27;t seem to be a component library exported from Payload, but maybe you can use the same classes 🤷 There&#x27;s also SCSS variables and mixins that you can import if that&#x27;s any use: <a href=\"https://payloadcms.com/docs/admin/components#styling-custom-components\">https://payloadcms.com/docs/admin/components#styling-custom-components</a>",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1676916535899
      },
      {
        "content": "Looking at the <code>website-cms</code> repo, they are using the admin ui components in a customisation of slatejs to support videos... so I guess I could use these too:<br><pre><code class=\"hljs ts\"># ~<span class=\"hljs-regexp\">/payloadcms/</span>website-cms/src/fields/richText/video/<span class=\"hljs-title class_\">Button</span>/index.<span class=\"hljs-property\">tsx</span>\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ElementButton</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/components/rich-text&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Form</span>, <span class=\"hljs-title class_\">Select</span>, <span class=\"hljs-title class_\">Text</span>, <span class=\"hljs-title class_\">Submit</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/components/forms&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">MinimalTemplate</span>, <span class=\"hljs-title class_\">Button</span>, X } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/components&#x27;</span>;</code></pre><br> <br> This feels like a lot of work, whereas the hook method is straightforward. I think i&#x27;ll sleep on this!",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676916773947
      },
      {
        "content": "The SEO plugin has some pretty good examples of this that I often share, check it out: <a href=\"https://github.com/payloadcms/plugin-seo/blob/main/src/fields/MetaTitle.tsx\">https://github.com/payloadcms/plugin-seo/blob/main/src/fields/MetaTitle.tsx</a>. @Jesse Sivonen is right in that you create a field, assign your custom component to it, and use hooks within that component to interact with Payload state. <br><br><blockquote>There doesn&#x27;t seem to be a component library exported from Payload<br></blockquote><br>Exactly, our Payload component library is not very well exported, this is a roadmap item we plan on tackling relatively soon, here are the details: <a href=\"https://github.com/payloadcms/payload/discussions/293\">https://github.com/payloadcms/payload/discussions/293</a>.<br><br><blockquote>This feels like a lot of work, whereas the hook method is straightforward. I think i&#x27;ll sleep on this!<br></blockquote><br>This is 100% accurate. An <code>afterChange</code> hook is the best option here. This is where Payload shines.<br><br>Here&#x27;s a demo hook based on your description. You could also place this hook on your <em>field</em> directly instead of the collection itself. BUT you&#x27;ll need to add a second field to check the previous value against (here&#x27;s an example: <a href=\"https://github.com/payloadcms/payload/discussions/1996#discussioncomment-4885826\">https://github.com/payloadcms/payload/discussions/1996#discussioncomment-4885826</a>)<br><br><pre><code class=\"hljs ts\">{\n    <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;YOUR_COLLECTION&#x27;</span>,\n    <span class=\"hljs-attr\">hooks</span>: {\n        <span class=\"hljs-attr\">afterChange</span>: [\n            <span class=\"hljs-keyword\">async</span> ({ doc }) =&gt; {\n                <span class=\"hljs-keyword\">const</span> { orderStatus } = doc;\n                \n                <span class=\"hljs-keyword\">if</span> (orderStatus === <span class=\"hljs-string\">&#x27;order_ready_to_dispatch&#x27;</span>) {\n                    <span class=\"hljs-comment\">// Do something async, like update stock, etc</span>\n                }\n\n                <span class=\"hljs-keyword\">if</span> (orderStatus === <span class=\"hljs-string\">&#x27;order_shipped&#x27;</span>) {\n                    <span class=\"hljs-comment\">// Do something async, like send emails, etc</span>\n                }\n            }\n        ]\n    },\n    <span class=\"hljs-attr\">fields</span>: [\n        {\n            <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;orderStatus&#x27;</span>,\n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;select&#x27;</span>,\n            <span class=\"hljs-attr\">options</span>: [\n                { <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Ready To Ship&#x27;</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;order_ready_to_dispatch&#x27;</span> },\n                { <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Shipped&#x27;</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;order_shipped&#x27;</span> },\n            ]\n        }\n    ]\n}</code></pre><br>Hope this is helpful!",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676935804950
      },
      {
        "content": "@jacobsfletch Thanks a lot for your help here, really great!",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676940614336
      }
    ],
    "messageCount": 17,
    "slug": "hooks-advice-for-an-orders-collections"
  },
  {
    "info": {
      "name": "Place custom fields in collection meta?",
      "id": "1072178378788057169",
      "guildId": "967097582721572934",
      "createdAt": 1675697645614
    },
    "intro": {
      "content": "Do we have access to the <code>collection-edit__meta</code> as a custom <code>admin: { position: ... }}</code> ?<br><br>I&#x27;d like to add a custom &quot;Preview URL&quot; and &quot;Published URL&quot; link/label to the bottom right collection meta... <br><br>Currently, it looks like I can add this to the <code>sidebar</code> ... but I&#x27;d like to use the bottom right meta instead.<br><br>Also, is it possible to set a position weight for items in the sidebar, so that items can be placed above/below other items ... when using plugins to introduce fields to collections, it&#x27;s hard to keep the order of items synchronized.",
      "fileAttachments": [],
      "authorID": "131800639293358080",
      "authorName": "David",
      "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
      "createdAtDate": 1675697645614
    },
    "messages": [
      {
        "content": "It would be nice to have more control on the meta like you&#x27;re saying. I would open a github discussion as a feature request. I think others would be interested in this as well. We have the <code>admin.position</code> property, it could be extended to push fields to meta I would think.<br><br>As for ordering fields, they just come in the order that they appear in the config. I&#x27;m unsure why you would need a <code>weight</code> property instead.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675699911796
      },
      {
        "content": "@dribbens if I modify the collection via a handful of plugins, and then also add fields to the collection config itself ... it becomes a pain to figure out where my field is going to be placed.<br><br>Say for example I have two plugins which automatically attach fields to every collection in the sidebar ... then in a specific collection I want to add a couple fields to the sidebar, but I want the first sidebar field on the top, and the second on the bottom ... with my plugins sidebar fields in the middle.<br><br>Plugin 1 - &quot;user history&quot;, which adds fields for &quot;Created By&quot; and &quot;Updated By&quot;<br>Plugin 2 - &quot;slugs&quot; which adds auto-generated slugs to my collections<br>Collection A - adds a relationship to my image uploads to the sidebar, and also adds a relationship to a Categories collection, and a Tags collection<br><br>I&#x27;d like to have the Category and Tags on the top, the Slug, the Featured Image, then Created By and Updated By<br><br>This is a bit of an acrobatic feat with the current &quot;in whatever order they were added&quot; solution - a simple weighting system would allow me to prioritize the sidebar items and they could then be sorted by this ... using a simple default of say 10 or 20 for fields that don&#x27;t explicitly specify the weight, allows for other fields to go before or after them easily",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675701223885
      },
      {
        "content": "I definitely see your point! I&#x27;m considering how we should go about this.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675981083824
      },
      {
        "content": "Hi folks! I was actually just looking into how I could do just that, but sounds like this isn&#x27;t yet a possibility, is that correct?<br>Should we create a feature request for it on github? 👀",
        "fileAttachments": [],
        "authorID": "233209174069084161",
        "authorName": "Tinouti",
        "authorAvatar": "93bc00441e597b312b56079702a22275",
        "createdAtDate": 1678506570061
      },
      {
        "content": "@Tinouti That would be a big help. We bump feature requests to the roadmap this way.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1678801108928
      },
      {
        "content": "Done! 👍 <br><a href=\"https://github.com/payloadcms/payload/discussions/2318\">https://github.com/payloadcms/payload/discussions/2318</a>",
        "fileAttachments": [],
        "authorID": "233209174069084161",
        "authorName": "Tinouti",
        "authorAvatar": "93bc00441e597b312b56079702a22275",
        "createdAtDate": 1678823803993
      }
    ],
    "messageCount": 6,
    "slug": "place-custom-fields-in-collection-meta"
  },
  {
    "info": {
      "name": "Trying to implement a custom SlateJS element following the custom-website-series.",
      "id": "1063517008911667260",
      "guildId": "967097582721572934",
      "createdAt": 1673632614115
    },
    "intro": {
      "content": "I have everything set up the same, but I keep getting this error on the front-end. What is set up differently in the custom-website series that allows one to use useSlate in their elements/leaves?<br> <br> It is also used in the link element in the current build of payload",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1063517008911667260/1063517009180098681/image.png",
          "name": "image.png",
          "id": "1063517009180098681",
          "size": 44978,
          "url": "https://cdn.discordapp.com/attachments/1063517008911667260/1063517009180098681/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1063517008911667260/1063517009180098681/image.png",
          "height": 368,
          "width": 666,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "1028003433090924695",
      "authorName": "blupandaman",
      "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
      "createdAtDate": 1673632614115
    },
    "messages": [
      {
        "content": "you should be able to <code>useSlate</code> for sure<br> <br> do you have a local copy of Slate installed?<br> <br> it must be on the same version otherwise your <code>useSlate</code> hook could be using a different copy of context vs. the internal one that Payload uses. You also might try and add a webpack alias to enforce that Webpack always uses the same copy of Slate, which would alleviate this even if you did have multiple copies installed",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443021802
      },
      {
        "content": "Ok I will double check those and get back to you on that! Thanks for the tip",
        "fileAttachments": [],
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675484702924
      },
      {
        "content": "hey @blupandaman , wanted to ask what your solution was to this as I am getting the same error.<br><br>I am starting a project and using the PayloadCMS website repo as a starting point. The <code>useSlate</code> hook is called in the richText field in the video Button component and I am getting this error whenever the Rich Text Editor is rendered in the admin.<br><br>Edit: I believe this was caused by a <code>slate</code> version mismatch as pointed out by @jmikrut . I was able to resolve by uninstalling <code>slate</code> and <code>slate-react</code>. Thanks for the help!",
        "fileAttachments": [],
        "authorID": "674843534616166420",
        "authorName": "reepicheep05",
        "authorAvatar": null,
        "createdAtDate": 1676422222634
      }
    ],
    "messageCount": 6,
    "slug": "trying-to-implement-a-custom-slatejs-element-following-the-custom-website-series"
  },
  {
    "info": {
      "name": "Is there a way to change the format for dates in the admin UI?",
      "id": "1083383056771055747",
      "guildId": "967097582721572934",
      "createdAt": 1678369049018
    },
    "intro": {
      "content": "I don&#x27;t want to use the US or UK standard for dates (<code>mm/dd/yyyy</code> and <code>dd/mm/yyyy</code> respectively), and would like them to display as <code>yyyy/mm/dd</code><br><br>Can we set this as a global preference?<br> <br> This date is horrible for me to read... the day/month is ambiguous and I&#x27;ve made a whole array of errors here thinking that this was UK formatted dates and not US. As said I&#x27;d prefer ISO date here to remove any ambiguity.<br> <br> <pre><code class=\"hljs ts\"><span class=\"hljs-attr\">admin</span>: {\n  <span class=\"hljs-attr\">displayFormat</span>: <span class=\"hljs-string\">&#x27;YYYY/MM/DD&#x27;</span>,\n},</code></pre><br><br>Produces console errors.<br><br>I&#x27;ve checked your docs, and I can&#x27;t see a guide on how these can be formatted. I only see the default formatting.<br> <br> and <code>pickerAppearance</code> is throwing type and console errors??<br><br>-<br> <br> ",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1083383056771055747/1083388476587778110/Screenshot_2023-03-09_at_13.34.31.png",
          "name": "Screenshot_2023-03-09_at_13.34.31.png",
          "id": "1083388476587778110",
          "size": 25861,
          "url": "https://cdn.discordapp.com/attachments/1083383056771055747/1083388476587778110/Screenshot_2023-03-09_at_13.34.31.png",
          "proxyURL": "https://media.discordapp.net/attachments/1083383056771055747/1083388476587778110/Screenshot_2023-03-09_at_13.34.31.png",
          "height": 266,
          "width": 1918,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "357456032454410240",
      "authorName": "jakehopking",
      "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
      "createdAtDate": 1678369049018
    },
    "messages": [
      {
        "content": "Hey @jakehopking, you need to nest <code>displayFormat</code> in a <code>date</code> object:<br><br><pre><code class=\"hljs\">admin: {\n    date: {\n        displayFormat: &#x27;yyyy/MM/dd&#x27;,\n    }\n}</code></pre><br><br>There is an example here but it could definitely be clearer in the docs: <a href=\"https://payloadcms.com/docs/fields/date#example\">https://payloadcms.com/docs/fields/date#example</a><br><br>Also you will get errors for YYYY and DD because they are not valid tokens so change that to <code>yyyy/MM/dd</code>, read more about that here <a href=\"https://github.com/date-fns/date-fns/blob/main/docs/unicodeTokens.md\">https://github.com/date-fns/date-fns/blob/main/docs/unicodeTokens.md</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678373583191
      },
      {
        "content": "Thanks for this info @jesschow - is it possible to set this at a global level?",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1678375991855
      },
      {
        "content": "@jakehopking currently it is not possibly to set this at a global level but I can definitely see the benefit in that - we should open a feature request for this 👍",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678449211654
      }
    ],
    "messageCount": 7,
    "slug": "is-there-a-way-to-change-the-format-for-dates-in-the-admin-ui"
  },
  {
    "info": {
      "name": "Auto-fill fields in document from REST API `POST` method?",
      "id": "1082292855650930688",
      "guildId": "967097582721572934",
      "createdAt": 1678109124816
    },
    "intro": {
      "content": "I am trying to write a frontend where users can register themselves and take that data(e.g.username, email,password) and create a mew user document for the user amd auto-fill the collection fields with the input. All this coming from Next.js based frontend. Is it possible?",
      "fileAttachments": [],
      "authorID": "537385969230413846",
      "authorName": "Arskeliss",
      "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
      "createdAtDate": 1678109124816
    },
    "messages": [
      {
        "content": "hi @Arskeliss - if I am understanding correctly you want to create a new user using the REST API. You can absolutely do this by sending a POST request to <code>/api/users</code> along with the required data as the body. <a href=\"https://payloadcms.com/docs/rest-api/overview#auth-operations\">https://payloadcms.com/docs/rest-api/overview#auth-operations</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678208126785
      },
      {
        "content": "@jesschow thank you for your reply, that&#x27;s right I want to use REST API for that. It looks easy enough, reading the docs, i will try it out. 🙌",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1678213123503
      }
    ],
    "messageCount": 2,
    "slug": "auto-fill-fields-in-document-from-rest-api-post-method"
  },
  {
    "info": {
      "name": "HTTP Cookie won't get set",
      "id": "1078662484812120154",
      "guildId": "967097582721572934",
      "createdAt": 1677243576959
    },
    "intro": {
      "content": "Can someone send me a screenshot of a successful login request that sets an http only cookie? Right now I&#x27;m receiving the cookie but it won&#x27;t get set in the browser and I&#x27;m a bit stuck. 👀<br> <br> @jmikrut I just found out that for cross-site requests the cookie needs to be set &quot;secure&quot;: &quot;true&quot; and &quot;same-site&quot;: &quot;none&quot;. That solved my issue. Would be good to have this option within the payload config to avoid patching the dependency. 🙌",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1078662484812120154/1078662485499985920/Bildschirmfoto_2023-02-24_um_13.57.51.png",
          "name": "Bildschirmfoto_2023-02-24_um_13.57.51.png",
          "id": "1078662485499985920",
          "size": 23992,
          "url": "https://cdn.discordapp.com/attachments/1078662484812120154/1078662485499985920/Bildschirmfoto_2023-02-24_um_13.57.51.png",
          "proxyURL": "https://media.discordapp.net/attachments/1078662484812120154/1078662485499985920/Bildschirmfoto_2023-02-24_um_13.57.51.png",
          "height": 95,
          "width": 1457,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "1041438496285532170",
      "authorName": "TheFrontend",
      "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
      "createdAtDate": 1677243576959
    },
    "messages": [
      {
        "content": "these two options are indeed configurable in the payload config already 👍<br> <br> <a href=\"https://payloadcms.com/docs/authentication/config#options\">https://payloadcms.com/docs/authentication/config#options</a><br> <br> check out the <code>cookies</code> option<br> <br> you can set <code>sameSite</code> as well as <code>secure</code> right in the config, based on ENV vars or whatever you need 👍",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677251775404
      },
      {
        "content": "Haha, oh no! Guess I was blind 😅",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677253219223
      },
      {
        "content": "I wanted to follow up on this real quick, because I&#x27;ve wasted countless hours on those cookie issues during my years in web dev.<br><br><strong>If you are using axios or sth similar, you need to set  withCredentials&quot;: true (or credentials: &#x27;include&#x27; in node fetch ). NOT ONLY ON THE REQUEST USING THE AUTH COOKIE, BUT ALSO ON THE REQUEST WHERE YOU WANT TO RETRIEVE THE AUTH COOKIE (e.g. login request). Otherwise, you&#x27;ll see the set-Cookie header in the response, but no cookie will be set</strong>",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1677780771739
      },
      {
        "content": "^^^^ 100%",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677870919498
      }
    ],
    "messageCount": 8,
    "slug": "http-cookie-wont-get-set"
  },
  {
    "info": {
      "name": "Using a React library custom component - ES Module not supported",
      "id": "1073208167246331944",
      "guildId": "967097582721572934",
      "createdAt": 1675943166315
    },
    "intro": {
      "content": "I want to use a React library component (a local one in our monorepo, but I have the same issue using swiper/react) in a <code>type: &#x27;ui&#x27;</code> field. I have also been able to reproduce this with the create payload app CLI<br><br>If I have the import in code and run serve, I get the following error:<br><br><code>Error [ERR_REQUIRE_ESM]: require() of ES Module not supported</code><br><br>However, if I remove the import and run serve -- once webpack kicks in, I can re-introduce the import and it works as expected.<br><br>I think it&#x27;s related to my tsconfig, and possibly I need to exclude that import somehow when ts-node runs. Any ideas?<br> <br> This seems to work using material UI (<a href=\"https://mui.com/\">https://mui.com/</a>) -- could it be related to how the library is bundled/defined?",
      "fileAttachments": [],
      "authorID": "173581681058512897",
      "authorName": "sam",
      "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
      "createdAtDate": 1675943166315
    },
    "messages": [
      {
        "content": "Is the package you&#x27;re importing ESM only?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056338543
      },
      {
        "content": "Yeah that was it in the end. The library stopped supporting CJS at a certain version. Downgrading it allowed me to use it in the payload admin panel.<br> <br> I was hoping to build out a live component preview within the admin panel, but I can&#x27;t get approval on downgrading this and another library to older versions. Is the payload team thinking of supporting ESM only libs?",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676281457406
      },
      {
        "content": "Since your Payload configuration file is loaded from the Payload source code (which are CJS), the error occurs when you try to import a ESM module (CJS can&#x27;t import ESM, while ESM can import both CJS (through dynamic imports) and ESM). Payload could provide both a ESM and CJS distribution which have been up for discussion. <br><br>In the meantime though, you can use a bundler and transpile the ESM-only library into CJS for you. For example Vite in &quot;library&quot; mode and build target as &quot;cjs&quot;.",
        "fileAttachments": [],
        "authorID": "397709884474261514",
        "authorName": "dsod",
        "authorAvatar": "fbb82213566f145908e03b5a89013a0c",
        "createdAtDate": 1676293025649
      },
      {
        "content": "Thanks for the tip. I&#x27;ll look into it! 😁",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676307032132
      },
      {
        "content": "@sam  any looks with getting your ESM package to output in CJS?",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676433867448
      },
      {
        "content": "No I haven&#x27;t had chance to look at it yet, sorry!",
        "fileAttachments": [],
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676462605834
      },
      {
        "content": "@sam can we check out your tsconfig?<br> <br> oops this was answered",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676470030673
      }
    ],
    "messageCount": 10,
    "slug": "using-a-react-library-custom-component-es-module-not-supported"
  },
  {
    "info": {
      "name": "Verify user JWT from NextJS side",
      "id": "1083023594055020634",
      "guildId": "967097582721572934",
      "createdAt": 1678283346428
    },
    "intro": {
      "content": "Hello! I&#x27;d like to verify the user JWT from payload (passed as a GET query param from the preview url) in NextJS but it seems like it is failing every time. I currently have the following code to verify using &quot;jose&quot;.<br><br>import { jwtVerify } from &quot;jose&quot;<br>await jwtVerify(token, new TextEncoder().encode(&quot;my_secret_token&quot;))",
      "fileAttachments": [],
      "authorID": "712127536326246413",
      "authorName": "hayskapoy",
      "authorAvatar": "a4d35470bc3b50a27feb3754048491e3",
      "createdAtDate": 1678283346428
    },
    "messages": [
      {
        "content": "I would look into the decode method of the jsonwebtoken library",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1678401537265
      },
      {
        "content": "Hi @hayskapoy - I&#x27;m not familiar with the jose package, have you tried using the local or REST API to verify the user JWT? <br><a href=\"https://payloadcms.com/docs/rest-api/overview#auth-operations\">https://payloadcms.com/docs/rest-api/overview#auth-operations</a><br><a href=\"https://payloadcms.com/docs/local-api/overview#auth-operations\">https://payloadcms.com/docs/local-api/overview#auth-operations</a>",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1083023594055020634/1083770980851261591/Screen_Shot_2023-03-10_at_3.16.18_PM.png",
            "name": "Screen_Shot_2023-03-10_at_3.16.18_PM.png",
            "id": "1083770980851261591",
            "size": 77501,
            "url": "https://cdn.discordapp.com/attachments/1083023594055020634/1083770980851261591/Screen_Shot_2023-03-10_at_3.16.18_PM.png",
            "proxyURL": "https://media.discordapp.net/attachments/1083023594055020634/1083770980851261591/Screen_Shot_2023-03-10_at_3.16.18_PM.png",
            "height": 508,
            "width": 1774,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678461537288
      },
      {
        "content": "hey @hayskapoy I just answered this same idea of a question here:<br> <br> <a href=\"https://discord.com/channels/967097582721572934/1085546333722660966\">https://discord.com/channels/967097582721572934/1085546333722660966</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678907945195
      }
    ],
    "messageCount": 4,
    "slug": "verify-user-jwt-from-nextjs-side"
  },
  {
    "info": {
      "name": "Logout route fails to recognize user or clear cookie",
      "id": "1061686677862613022",
      "guildId": "967097582721572934",
      "createdAt": 1673196229187
    },
    "intro": {
      "content": "When using the admin panel, clicking the logout button, the message in the UI is &quot;You have been logged out successfully.&quot; However, <code>/api/users/logout</code> returns <code>{&quot;errors&quot;:[{&quot;message&quot;:&quot;No User&quot;}]}</code>, and fails to clear cookie <code>payload-token</code>. When clicking &quot;Log back in&quot;, the UI shows &quot;Already logged in&quot;, and I can return to the dashboard. The &quot;log out&quot; link on this page in the text &quot;To log in with another user, you should log out first.&quot; similarly has no effect.<br><br>It appears the <code>set-cookie</code> header is not being sent properly by <code>api/users/logout</code>, but I observe this only in the browser. Based on the error body, it seems it&#x27;s doing this because it doesn&#x27;t recognize a user is logged in, but I can confirm that the <code>cookie</code> header with the relevant token <em>is</em> being sent by the browser in the request. Oddly, if I try the same with <code>curl</code> or Postman, the logged-in user seems to be recognized and the <code>set-cookie</code> header is sent correctly.",
      "fileAttachments": [],
      "authorID": "1033006865661050921",
      "authorName": "\\ ឵឵឵",
      "authorAvatar": null,
      "createdAtDate": 1673196229187
    },
    "messages": [
      {
        "content": "@\\ ឵឵឵ The logout operation requires a <code>user</code> to logout. Are you sending an authenticated user through a <code>POST</code> request to <code>/api/users/logout</code>?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673490939773
      },
      {
        "content": "Indeed I was, copied the cookie straight from the network inspector in the browser. Request in browser looked correct as well, but got back &quot;No user&quot;.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1673491081119
      },
      {
        "content": "Can you send the request to me?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673491127988
      },
      {
        "content": "Don&#x27;t have it on hand at the moment, but also haven&#x27;t been experiencing the issue today. You guys have been bumping versions pretty frequently the last weeks, and I&#x27;ve been upgrading regularly since we&#x27;re still in dev. Anything that might have changed in that section of the code that might explain it?",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1673491247998
      },
      {
        "content": "Nothing that would effect authentication in this way",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673492056367
      },
      {
        "content": "hey, what was the solution to this?<br> <br> I am experiencing a similar issue, that&#x27;s also stopping me from using access control. thanks.",
        "fileAttachments": [],
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1678393875994
      }
    ],
    "messageCount": 7,
    "slug": "logout-route-fails-to-recognize-user-or-clear-cookie"
  },
  {
    "info": {
      "name": "Hosting Next.js App and Payload  separately on one server",
      "id": "1079024323777540168",
      "guildId": "967097582721572934",
      "createdAt": 1677329846091
    },
    "intro": {
      "content": "Hello team,<br><br>I am following your advice on keeping Next app amd Payload on separate repos, but I am asking whether I will be able to make them work correctly if I host them together on one server?<br><br>Basically, my next app will be on <code>mydomain.com</code> and payload will be accessed through <code>mydomain.com/admin</code>. Would this work without developing them together in one repo?",
      "fileAttachments": [],
      "authorID": "537385969230413846",
      "authorName": "Arskeliss",
      "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
      "createdAtDate": 1677329846091
    },
    "messages": [
      {
        "content": "Yes",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677334666313
      },
      {
        "content": "or you can host in subdomain. like. <code>sub.mydomain.com/admin</code>. thats how I&#x27;m doing",
        "fileAttachments": [],
        "authorID": "392021078035267586",
        "authorName": "minion",
        "authorAvatar": "7858d81f8fc24d03dff1172d61a4b74e",
        "createdAtDate": 1677336270440
      },
      {
        "content": "Thank you everyone!",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677336476873
      }
    ],
    "messageCount": 3,
    "slug": "hosting-nextjs-app-and-payload-separately-on-one-server"
  },
  {
    "info": {
      "name": "useFormFields Value and Dispatch",
      "id": "1084068315187662898",
      "guildId": "967097582721572934",
      "createdAt": 1678532427356
    },
    "intro": {
      "content": "Just wanted to leave this in the community in case anyone is wanting to leverage the useFormFields functionality like useState;<br><br><pre><code class=\"hljs\">    const [status, setStatus]: [string, (value: string) =&gt; void] = useFormFields(([fields, dispatch]) =&gt; [\n        fields.status.value as string, (value: string) =&gt; dispatch({ type: &#x27;UPDATE&#x27;, path: &#x27;status&#x27;, value: value })\n    ]);</code></pre><br><br>This will allow you to use status to get the value, and setStatus(&#x27;&#x27;) to make changes to your other form values.",
      "fileAttachments": [],
      "authorID": "191776538205618177",
      "authorName": "Mark | Omniux",
      "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
      "createdAtDate": 1678532427356
    },
    "messages": [],
    "messageCount": 0,
    "slug": "useformfields-value-and-dispatch"
  },
  {
    "info": {
      "name": "Slate leaves: Any simple example?",
      "id": "1082043435432816670",
      "guildId": "967097582721572934",
      "createdAt": 1678049658402
    },
    "intro": {
      "content": "I keep seeing examples that kind of go half-way to what I need when it comes to adding a custom slate leaf. <br><br>All I want to do is add some buttons to the editor that are for changing the color of the text. <br><br>I think I understand the &quot;leaf&quot; portion of the config, but not the &quot;button&quot; one. Any help welcome!<br> <br> As I continue digging into this, I think what I want is a custom element instead, but the config looks similar so my question is still relevant.<br> <br> ok, think my realization of needing to use an element in my use-case led me to a good example<br> <br> <a href=\"https://github.com/payloadcms/public-demo/tree/master/src/fields/richText/largeBody\">https://github.com/payloadcms/public-demo/tree/master/src/fields/richText/largeBody</a><br> <br> that seemed to get me closer, but it appears that that implementation assumes you want  a block level element. not inline like my current-use-case<br> <br> switching it to a leaf seems to have more of the effect i&#x27;m wanting. however, I don&#x27;t see the way you adjust the preview in payload just yet..<br> <br> Finally got it.<br> <br> i&#x27;ll try and condense what i did...<br> <br> index.scss<pre><code class=\"hljs\">.terminaltext-leaf-traversal {\n    color: yellow;\n}</code></pre><br> <br> index.tsx<pre><code class=\"hljs\">import React from &#x27;react&#x27;\nimport { LeafButton } from &#x27;payload/components/rich-text&#x27;\n\nimport &#x27;./index.scss&#x27;\n\nconst baseClass = &#x27;terminaltext-leaf-traversal&#x27;\nconst name = &#x27;terminal-text-traversal&#x27;\n\nconst Button = () =&gt; (\n    &lt;LeafButton format={name}&gt;\n        Traversal\n    &lt;/LeafButton&gt;\n)\n\nconst Leaf = ({ attributes, leaf, children }) =&gt; {\n    if (leaf[name]) {\n        return &lt;span {...attributes} className={baseClass}&gt;{children}&lt;/span&gt;\n    }\n    return &lt;span {...attributes}&gt;{children}&lt;/span&gt;\n}\n\nexport default {\n    name,\n    Button,\n    Leaf,\n}</code></pre><br> <br> The key thing I missed at the end was the fact that the name needed to be consistent between the button&#x27;s &#x27;format&#x27; attribute and the leaf&#x27;s &#x27;name&#x27; property check.<br> <br> the examples I saw had a lot of nesting folder structure involved but if you wanted to do something simple like me, this will probably get you by.<br> <br> You then add this leaf to your richText admin.leaves array and you&#x27;ll be able to style the text you want to be &#x27;yellow&#x27; or whatever you like.<br> <br> Hope someone finds this useful!",
      "fileAttachments": [],
      "authorID": "214419801039175682",
      "authorName": "Jakey",
      "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
      "createdAtDate": 1678049658402
    },
    "messages": [],
    "messageCount": 13,
    "slug": "slate-leaves-any-simple-example"
  },
  {
    "info": {
      "name": "Why querying on the 2nd level not working?",
      "id": "1075352738696798250",
      "guildId": "967097582721572934",
      "createdAt": 1676454471993
    },
    "intro": {
      "content": "I use this query to get a collection record, why is it not working?<br><br>{<br>          &quot;location.locationGroup.title&quot;: {<br>            equals: searchParams.locationGroup,<br>          }<br>}",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1075352738696798250/1075352739162370129/image.png",
          "name": "image.png",
          "id": "1075352739162370129",
          "size": 25026,
          "url": "https://cdn.discordapp.com/attachments/1075352738696798250/1075352739162370129/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1075352738696798250/1075352739162370129/image.png",
          "height": 243,
          "width": 410,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "950202910095081473",
      "authorName": "johnmadrigal_",
      "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
      "createdAtDate": 1676454471993
    },
    "messages": [
      {
        "content": "If you console log searchParams.locationGroup, what do you get?<br><br>Can you share the config for this location field on the collection you are querying",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676464030466
      },
      {
        "content": "I double check the searchParams.locationGroup, its showing the right value. <br><br>Project Collection:<br><a href=\"https://pastebin.com/dxc0cpzc\">https://pastebin.com/dxc0cpzc</a><br><br>Location Collection:<br><a href=\"https://pastebin.com/bkiJDdkm\">https://pastebin.com/bkiJDdkm</a><br><br>Location Group Collection:<br><a href=\"https://pastebin.com/5KHmsJWn\">https://pastebin.com/5KHmsJWn</a><br><br>I also have another query that looking for location.title, it works fine, I notice that only when I try to go 1 level deep, it doesn&#x27;t work.",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676471806461
      },
      {
        "content": "@johnmadrigal_ <a href=\"https://github.com/payloadcms/payload/discussions/761\">https://github.com/payloadcms/payload/discussions/761</a> I believe nested queries are not supported but this is on our roadmap to implement in the future",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678464917892
      }
    ],
    "messageCount": 3,
    "slug": "why-querying-on-the-2nd-level-not-working"
  },
  {
    "info": {
      "name": "How to customize dark / light mode branding",
      "id": "1075154495564173404",
      "guildId": "967097582721572934",
      "createdAt": 1676407207147
    },
    "intro": {
      "content": "when white labeling using logo / icon, how can I tell the custom logo component what to render dark or light logo? is there a global parameter for knowing if we are working in light or dark mode ?",
      "fileAttachments": [],
      "authorID": "240915797180940298",
      "authorName": "Oron",
      "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
      "createdAtDate": 1676407207147
    },
    "messages": [
      {
        "content": "Hey @Oron there is a local storage key <code>payload-theme</code> that&#x27;s value is light/dark that you can read from within your logo component",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676410165966
      },
      {
        "content": "@damnstaychill but that only give me the user&#x27;s choice, could be auto and then it&#x27;s empty<br> <br> I need the actual &quot;real time&quot; theme that is used",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1676410602107
      },
      {
        "content": "This should steer you in the right direction: <a href=\"https://discord.com/channels/967097582721572934/1065405847376769146/1065426167479402548\">https://discord.com/channels/967097582721572934/1065405847376769146/1065426167479402548</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676436653562
      }
    ],
    "messageCount": 4,
    "slug": "how-to-customize-dark-light-mode-branding"
  },
  {
    "info": {
      "name": "Relationship with Form Plugin",
      "id": "1075641164629295115",
      "guildId": "967097582721572934",
      "createdAt": 1676523238094
    },
    "intro": {
      "content": "Hi, in my payload project I use the forms plugin to create dynamic forms in the site, but I want to create a collection with a relation with the form submissions. What can I do?<br> <br> This is my relation, all works fine except this<br> <br> <pre><code class=\"hljs\">    {\n      name: &quot;xxx&quot;,\n      label: &quot;xxx&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &quot;form-submissions&quot;,\n      hasMany: true,\n      admin: {\n        description: &quot;xxx&quot;,\n      },\n    },</code></pre><br> <br> I also have a global collection using that and works perfectly<br> <br> <pre><code class=\"hljs\"> {\n      name: &quot;xxx&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &quot;form-submissions&quot;,\n      required: true,\n      admin: {\n        description: &quot;xxx&quot;,\n      },\n    },</code></pre>",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1075641164629295115/1075641164797071400/image.png",
          "name": "image.png",
          "id": "1075641164797071400",
          "size": 10223,
          "url": "https://cdn.discordapp.com/attachments/1075641164629295115/1075641164797071400/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1075641164629295115/1075641164797071400/image.png",
          "height": 83,
          "width": 613,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "710199181305839707",
      "authorName": "ScriptDroid",
      "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
      "createdAtDate": 1676523238094
    },
    "messages": [
      {
        "content": "hi @ScriptDroid - your relationship field looks correct and when I recreated this field it works as expected. Could you share your Field Chapters collection so we can see if anything looks amiss?",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678100693990
      }
    ],
    "messageCount": 5,
    "slug": "relationship-with-form-plugin"
  },
  {
    "info": {
      "name": "EXAMPLE Email code verification, SMS verification, and 2FA (OTP) support",
      "id": "1051943569977516144",
      "guildId": "967097582721572934",
      "createdAt": 1670873291249
    },
    "intro": {
      "content": "Wondering if anybody has any examples of instrumenting the Payload local auth strategy more deeply or replacing it entirely.<br><br>- My use case absolutely requires that accounts are verified both by email and SMS before being considered &quot;verified&quot;.<br>- Email verification by code rather than link would also be great, but is not absolutely mandatory.<br>- 2FA support with OTP and potentially other methods is also mandatory.<br>- Is it worth trying to use the Payload local auth strategy in these cases or should it just be replaced?<br>- Examples of any of these would be fantastic, as well as any existing code for doing 2FA of any kind, or generally having multiple steps for an account to be considered verified.<br><br>Thanks!",
      "fileAttachments": [],
      "authorID": "1033006865661050921",
      "authorName": "\\ ឵឵឵",
      "authorAvatar": null,
      "createdAtDate": 1670873291249
    },
    "messages": [
      {
        "content": "I don&#x27;t think I&#x27;ve seen an example here yet but I am very interested in this for sure. I would say it&#x27;d be great to build in a way to extend our local auth strategy with other auth factors, wherein we could have a way to just &quot;pass in&quot; verification steps or similar<br> <br> we probably have about 80% of &quot;extension points&quot; needed for this, and would only need a few more",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670883489194
      },
      {
        "content": "I&#x27;m going to go check out the current implementation and see what I can discover.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1670931260880
      },
      {
        "content": "How did you get on with this",
        "fileAttachments": [],
        "authorID": "963793530160046140",
        "authorName": "valakas",
        "authorAvatar": "e7866662a0ef891bb602449754751800",
        "createdAtDate": 1672600591857
      },
      {
        "content": "<a href=\"https://github.com/ilich/passport-2fa-totp\">https://github.com/ilich/passport-2fa-totp</a><br> <br> This takes care of the OTP login, which is a step in the right direction, but doesn&#x27;t deal with having custom/multiple verification steps.<br> <br> @jmikrut Do any of the extension points you mentioned allow hooking the <code>verify</code> API on an auth collection? That would certainly be a start, allowing you to provide a method which can be called with different params for the different steps (e.g. email, SMS as above). I believe that the email verification with code rather than link could then be done by using the existing method to override <code>verify.generateEmailHTML</code>. Same can then be done for <code>forgotPassword.generateEmailHTML</code>, if the <code>reset-password</code> API can be hooked. SMS verification might need a custom API route if requiring the ability to resend. Similarly, some fiddling would be required to allow the user to change their phone number after create but before verify, but it&#x27;s doable.<br> <br> Realistically, the other thing that would be nice is being able to specify the field(s) to be used to identify a user, which would allow having things like username or username + email for login.<br> <br> Beyond that, we go into the territory of using <code>disableLocalStrategy</code> and setting up the verification, email, login, logout, etc. stuff as a combination of hooks, custom API routes, and either a custom passport auth strategy or a more suitable existing one such as above.",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1672753215378
      },
      {
        "content": "Hey, did you find a good solution in the end you could share with us? 🙂",
        "fileAttachments": [],
        "authorID": "1002213674926215350",
        "authorName": "DU DA",
        "authorAvatar": null,
        "createdAtDate": 1678273400557
      }
    ],
    "messageCount": 10,
    "slug": "example-email-code-verification-sms-verification-and-2fa-otp-support"
  },
  {
    "info": {
      "name": "Can I disable emails and redirect from form-building plugin?",
      "id": "1077837023718682625",
      "guildId": "967097582721572934",
      "createdAt": 1677046771698
    },
    "intro": {
      "content": "Hi there, is there a way to disable the confirmation type field, and the redirect and emails sections? I wan a simpler form that let me create submissions from to the admin.",
      "fileAttachments": [],
      "authorID": "706208036439588934",
      "authorName": "akacronos",
      "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
      "createdAtDate": 1677046771698
    },
    "messages": [
      {
        "content": "Hey @akacronos! Currently, you cannot disable the <code>confirmationType</code> field. But we will keep this concept in the back of our heads. <br><br>Can you give me a little bit more info of what you are trying to achieve with your form?",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1677275351553
      }
    ],
    "messageCount": 1,
    "slug": "can-i-disable-emails-and-redirect-from-form-building-plugin"
  },
  {
    "info": {
      "name": "How to access relationship field full item data?",
      "id": "1074901824785625149",
      "guildId": "967097582721572934",
      "createdAt": 1676346965739
    },
    "intro": {
      "content": "I must conditionally populate collection fields based on the selected relationship field. The relationship field only provides the ID of the selected item. As the admin fields don&#x27;t support async functions, there is no way to query more information about the selected item before updating other collection fields.<br><br>Is there some workaround to access the selected item data and based on that, alter other fields via admin config like condition?",
      "fileAttachments": [],
      "authorID": "567578449439621124",
      "authorName": "KasparTr",
      "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
      "createdAtDate": 1676346965739
    },
    "messages": [
      {
        "content": "Have you defined <code>maxDepth</code> on your relationship field? You should be able to return the full data from your relationship.<br><br>And then yes, you will be able to use hooks to populate the other fields in your collection.",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676914752076
      },
      {
        "content": "Bit more info here - yes, @KasparTr as you mentioned, conditional logic is not async intentionally. This is because those functions run VERY often, and should be heavily optimized. You could however have a &quot;virtual&quot; field with a custom React field component, that stores the data you need from the selected relationships. Your virtual field would simply fetch the relationship data, and return the relationship values that you need - but NOT store those values in the database. Rather, just show them. Then, that virtual field would be visible in the condition, which you could at that point use",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676926425089
      },
      {
        "content": "Hi @jmikrut, thanks for the extra info on this. Would it be possible to get an example of how you think this might work? I&#x27;m struggling to wrap my head around how to achieve this (maybe I&#x27;m thinking about it in a more complicated way than needs be, or maybe I just need more coffee 😆 )",
        "fileAttachments": [],
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1676975580946
      },
      {
        "content": "Hey @itsjxck checkout this demo of virtual fields, specifically look at the <code>nextEvent</code> field in the <code>Locations</code> collection - you would want to add something similar to this <a href=\"https://github.com/payloadcms/payload/tree/master/examples/virtual-fields\">https://github.com/payloadcms/payload/tree/master/examples/virtual-fields</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676977828525
      },
      {
        "content": "Thanks for the examples @jesschow, much appreciated! Unfortunately this didn&#x27;t seem to work for me as I needed the editor to dynamically update with this value during edit, and the hooks didn&#x27;t seem to run while actively editing the document. I did get a solution working, although it may not be the cleanest, by using a custom UI component:<br><pre><code class=\"hljs tsx\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span>, { useEffect } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { useField } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/components/forms&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">RelationshipField</span>, <span class=\"hljs-title class_\">UIField</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/types&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { useDocumentInfo } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/components/utilities&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">RelationExpansion</span>: <span class=\"hljs-title class_\">React</span>.<span class=\"hljs-property\">FC</span>&lt;<span class=\"hljs-title class_\">UIField</span>&gt; = <span class=\"hljs-function\">(<span class=\"hljs-params\">{ name }</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> refFieldName = name.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&quot;_&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>);\n\n  <span class=\"hljs-keyword\">const</span> {\n    <span class=\"hljs-attr\">collection</span>: { fields },\n  } = <span class=\"hljs-title function_\">useDocumentInfo</span>();\n\n  <span class=\"hljs-keyword\">const</span> relationField = fields.<span class=\"hljs-title function_\">find</span>(\n    <span class=\"hljs-function\">(<span class=\"hljs-params\">field</span>) =&gt;</span> field.<span class=\"hljs-property\">type</span> === <span class=\"hljs-string\">&quot;relationship&quot;</span> &amp;&amp; field.<span class=\"hljs-property\">name</span> === refFieldName\n  ) <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">RelationshipField</span>;\n\n  <span class=\"hljs-keyword\">const</span> { <span class=\"hljs-attr\">value</span>: self, <span class=\"hljs-attr\">setValue</span>: setSelf } = <span class=\"hljs-title function_\">useField</span>({ <span class=\"hljs-attr\">path</span>: name });\n  <span class=\"hljs-keyword\">const</span> { <span class=\"hljs-attr\">value</span>: ref } = useField&lt;<span class=\"hljs-built_in\">string</span>&gt;({\n    <span class=\"hljs-attr\">path</span>: refFieldName,\n  });\n\n  <span class=\"hljs-title function_\">useEffect</span>(<span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (!ref) <span class=\"hljs-keyword\">return</span>;\n\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getRelation</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) =&gt; {\n      <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">const</span> relationFetch = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(\n          <span class=\"hljs-string\">`/api/<span class=\"hljs-subst\">${relationField.relationTo}</span>/<span class=\"hljs-subst\">${ref}</span>`</span>\n        );\n\n        <span class=\"hljs-keyword\">const</span> relation = <span class=\"hljs-keyword\">await</span> relationFetch.<span class=\"hljs-title function_\">json</span>();\n\n        <span class=\"hljs-title function_\">setSelf</span>(relation);\n      } <span class=\"hljs-keyword\">catch</span> (error) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(error);\n      }\n    };\n\n    <span class=\"hljs-title function_\">getRelation</span>();\n  }, [ref]);\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">display:</span> &quot;<span class=\"hljs-attr\">none</span>&quot; }}&gt;</span>\n      {JSON.stringify({ relationField, ref, self })}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">code</span>&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">RelationExpansion</span>;</code></pre><br> <br> In my collection I can use this to expand the relation, using an underscore to prefix the name of the field i want to expand:<br><pre><code class=\"hljs ts\">    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;type&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;relationship&quot;</span>,\n      <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-title class_\">ItemTypes</span>.<span class=\"hljs-property\">slug</span>,\n      <span class=\"hljs-attr\">hasMany</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;_type&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;ui&quot;</span>,\n      <span class=\"hljs-attr\">admin</span>: {\n        <span class=\"hljs-attr\">components</span>: {\n          <span class=\"hljs-title class_\">Field</span>: <span class=\"hljs-title class_\">RelationExpansion</span>,\n        },\n      },\n    },</code></pre><br> <br> @KasparTr assuming you have a similar usecase to myself, this might also work for you; you can then use this field in conditionals:<br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">admin</span>: {\n  <span class=\"hljs-attr\">condition</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> data.<span class=\"hljs-property\">_type</span>?.&lt;field_on_relation&gt;,\n},</code></pre>",
        "fileAttachments": [],
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1676979445751
      },
      {
        "content": "@itsjxck love it, the custom component looks great 🙌",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676980014276
      },
      {
        "content": "This is great, very useful information. Will implement like this, thank you @jesschow and @itsjxck",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1677031394534
      }
    ],
    "messageCount": 9,
    "slug": "how-to-access-relationship-field-full-item-data"
  },
  {
    "info": {
      "name": "UI Fields",
      "id": "1079639829794529350",
      "guildId": "967097582721572934",
      "createdAt": 1677476594161
    },
    "intro": {
      "content": "Is it possible to get data from context within UI type fields? <br><br>as an example : <br>i would like to display an Image from URL in the Admin panel which is stored in another field of the same collection entry",
      "fileAttachments": [],
      "authorID": "277050857852370944",
      "authorName": "Nog",
      "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
      "createdAtDate": 1677476594161
    },
    "messages": [
      {
        "content": "Try with the useFormFields React hook 😄<br><br><a href=\"https://payloadcms.com/docs/admin/hooks\">https://payloadcms.com/docs/admin/hooks</a><br> <br> It&#x27;s a great way to get the state of a field without triggering any heavy duty rerenders",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1677482307942
      }
    ],
    "messageCount": 2,
    "slug": "ui-fields"
  },
  {
    "info": {
      "name": "Admin UI filtering not working as expected",
      "id": "1078716992028151950",
      "guildId": "967097582721572934",
      "createdAt": 1677256572492
    },
    "intro": {
      "content": "I&#x27;m seeing an issue when filtering in the Admin UI where it&#x27;s not finding a relationship with the &quot;is in&quot; query for certain relationships. It should find it, but it even goes so far as to display it the query is &quot;not in&quot; when clearly it should be there (see picture). This same filtering does work for other relationships, so I&#x27;m not sure if this is a Payload issue or an implementation issue on my part, but any insight would be appreciated!",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1078716992028151950/1078716992187551825/is_not_in.png",
          "name": "is_not_in.png",
          "id": "1078716992187551825",
          "size": 287161,
          "url": "https://cdn.discordapp.com/attachments/1078716992028151950/1078716992187551825/is_not_in.png",
          "proxyURL": "https://media.discordapp.net/attachments/1078716992028151950/1078716992187551825/is_not_in.png",
          "height": 1710,
          "width": 2600,
          "contentType": "image/png",
          "description": "Filtering by not in finds it when it shouldn't",
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1078716992028151950/1078716992514703391/is_in.png",
          "name": "is_in.png",
          "id": "1078716992514703391",
          "size": 160618,
          "url": "https://cdn.discordapp.com/attachments/1078716992028151950/1078716992514703391/is_in.png",
          "proxyURL": "https://media.discordapp.net/attachments/1078716992028151950/1078716992514703391/is_in.png",
          "height": 1222,
          "width": 2662,
          "contentType": "image/png",
          "description": "Filtering does not find relationship when it should",
          "ephemeral": false
        }
      ],
      "authorID": "408784184765710337",
      "authorName": "TheDunco",
      "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
      "createdAtDate": 1677256572492
    },
    "messages": [
      {
        "content": "Hi @TheDunco - In your case, in order for the <code>is in</code> operator to return your expected result - you would need to input the <strong>entire</strong> Stripes string value in the value input box.<br><br>E.g. <code>| Stripes | is in | Cust: (Hex/Star, IN/MM) High Leverage, (Hex) Precise Tip Geometry, (Hex) High-Performance Finish...</code><br><br>Does this make sense? Let me know!",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1677271931314
      },
      {
        "content": "That does make sense I suppose, thanks. This makes me think the &quot;is in&quot; operation is more like an &quot;equals&quot; operation, though, which is slightly confusing for polymorphic (many-to-many) relationships. Are there plans to implement more of a &quot;contains&quot; or &quot;includes&quot; query? Because members of my team would like the ability to query relationships in the manner I was initially expecting the &quot;is in&quot; to work.<br> <br> And/or is there a method for getting this functionality with some fancy logic or something that&#x27;s currently implemented that I&#x27;m not aware of?",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1677273297716
      },
      {
        "content": "Yup! In the dropdown of the filter options, we have a <code>contains</code> operation which will do what you were initially expecting to happen",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1677274769028
      },
      {
        "content": "I&#x27;m not seeing that option for this many-to-many &quot;Stripes&quot; field.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078716992028151950/1078795967362514974/image.png",
            "name": "image.png",
            "id": "1078795967362514974",
            "size": 138686,
            "url": "https://cdn.discordapp.com/attachments/1078716992028151950/1078795967362514974/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078716992028151950/1078795967362514974/image.png",
            "height": 762,
            "width": 2580,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1677275401735
      },
      {
        "content": "Ahh - so right now - for  <code>array</code> fields, you won&#x27;t have access to the <code>contains</code> operation. You would use the <code>is in</code> operation. <br><br>Filtering on relationships can only be done by ID. If you want to filter on nested fields, you need to use the rest api. So a <em>contains</em> approach wouldn&#x27;t work in the UI",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1677277509000
      },
      {
        "content": "Ah, ok, that makes sense. We can get by filtering by ID. Thanks!",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1677283397730
      }
    ],
    "messageCount": 7,
    "slug": "admin-ui-filtering-not-working-as-expected"
  },
  {
    "info": {
      "name": "How unstable is next-payload?",
      "id": "1079890412417859666",
      "guildId": "967097582721572934",
      "createdAt": 1677536337714
    },
    "intro": {
      "content": "It&#x27;s currently at version 0.0.9, which seems like a long way off from 1.0 ... but I&#x27;d really like to use it. At the same time though, I don&#x27;t want to start totally bricking sites if I use it. I was wondering if I could get a feel from the team on just how unstable it is in its current state?",
      "fileAttachments": [],
      "authorID": "1055071772585771178",
      "authorName": "samtietjen",
      "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
      "createdAtDate": 1677536337714
    },
    "messages": [
      {
        "content": "The plan is for this to hit 1.0 in the next few weeks. No <em>huge</em> changes are planned, but no guarantees. I think the disclaimer at the top of the README is accurate in that you should expect breaking changes or bugs.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677591735902
      },
      {
        "content": "Ah okay, thank you @denolfe !",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1677593976466
      }
    ],
    "messageCount": 2,
    "slug": "how-unstable-is-next-payload"
  },
  {
    "info": {
      "name": "Fetching from a database",
      "id": "1085203167802839130",
      "guildId": "967097582721572934",
      "createdAt": 1678802997304
    },
    "intro": {
      "content": "Hi. I&#x27;m a noob to coding and I&#x27;m wondering how I can store and fetch the data that&#x27;s inputted via the Payload admin panel. For example, I&#x27;ve setup a PortfolioItems.ts collections file to input a Portfolio item that contains a thumbnail image, title, subtitle.<br><br>When I upload the details via Payload admin panel, where is it stored and how do I render it on a page? For example, I&#x27;d like to render 9 portfolio items as cards displayed in a grid using TailwindCSS.",
      "fileAttachments": [],
      "authorID": "479030528084017165",
      "authorName": "Taun",
      "authorAvatar": "d683047f752adb18431194752086132e",
      "createdAtDate": 1678802997304
    },
    "messages": [
      {
        "content": "It&#x27;s stored in a local MongoDB database",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1678803119083
      },
      {
        "content": "Thanks. How do I fetch it?",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678803140988
      },
      {
        "content": "I suggest installing MongoDB Compass to inspect your database<br> <br> Fetching is done like with any other database<br> <br> See the docs for MongoDB or use any object modelling tool (for example Mongoose)<br> <br> I also think Payload has some documentation on this subject too",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1678803183808
      },
      {
        "content": "Great, downloading Compass now and I&#x27;ll go through the Mongo docs. Thanks for the help.",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678803260063
      },
      {
        "content": "Read specifically this<br> <br> <a href=\"https://www.mongodb.com/docs/drivers/node/current/\">https://www.mongodb.com/docs/drivers/node/current/</a>",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1678803299803
      },
      {
        "content": "It seems like Payload API handles most of the MongoDB stuff? <br><br>&quot;When you define a collection (e.g., posts) in Payload, it automatically generates CRUD API endpoints for you. In this case, /api/posts is the generated API endpoint to fetch the list of documents in the posts collection. When you make a request to this endpoint, Payload handles the interaction with MongoDB and returns the data for you.<br><br>Behind the scenes, Payload communicates with MongoDB, fetching the data from the posts collection and applying any necessary filtering, sorting, or pagination options you may include in the request. Once the data is retrieved, Payload returns it in a JSON format that you can easily consume and render in your application.<br><br>Keep in mind that the /api/posts URL in the example assumes your Payload API is hosted on the same domain as your application. If your Payload API is hosted on a different domain, you&#x27;ll need to use the full URL, such as <a href=\"https://your-api-domain.com/api/posts\">https://your-api-domain.com/api/posts</a>, and handle CORS settings as needed.&quot;<br><br>So I can just use axios to get the data?<br><br><pre><code class=\"hljs\">&quot;import React, { useState, useEffect } from &#x27;react&#x27;;\nimport axios from &#x27;axios&#x27;;\n\nconst PostsList = () =&gt; {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() =&gt; {\n    const fetchPosts = async () =&gt; {\n      try {\n        const response = await axios.get(&#x27;/api/posts&#x27;);\n        setPosts(response.data.docs);\n      } catch (error) {\n        console.error(&#x27;Error fetching posts:&#x27;, error);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Posts List&lt;/h1&gt;\n      &lt;ul&gt;\n        {posts.map((post) =&gt; (\n          &lt;li key={post.id}&gt;{post.title}&lt;/li&gt;\n        ))}\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default PostsList; </code></pre><br>&quot;",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678884221162
      },
      {
        "content": "They do expose a GraphQL api which you can play around with at the <code>/api/graphql-playground</code> link. Once you have your query you can fetch the data using that query by setting the body of a POST request to <code>JSON.stringify(&lt;your query and variables&gt;)</code> and sending it to /api/graphql using <code>axios</code> or <code>node-fetch</code> or the native <code>fetch</code> method like so...<br><br><pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">import</span> fetch <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;node-fetch&#x27;</span> <span class=\"hljs-comment\">// Note that you&#x27;ll have to install the node-fetch libary to use this</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">GraphQLBody</span> {\n    <span class=\"hljs-attr\">query</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">variables</span>: <span class=\"hljs-title class_\">Record</span>&lt;<span class=\"hljs-built_in\">string</span>, <span class=\"hljs-built_in\">any</span>&gt;;\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">body</span>: <span class=\"hljs-title class_\">GraphQLBody</span> = {\n  <span class=\"hljs-attr\">query</span>: <span class=\"hljs-string\">`&lt;your-graphql-query-goes-here`</span>,\n  <span class=\"hljs-attr\">variables</span>: {\n    <span class=\"hljs-comment\">// any graphql variables go here</span>\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${&lt;your-url-goes-here&gt;}</span>/api/graphql`</span>, {\n    <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;POST&#x27;</span>,\n    <span class=\"hljs-attr\">headers</span>: {\n        <span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>: <span class=\"hljs-string\">&#x27;application/json&#x27;</span>,\n    },\n    <span class=\"hljs-attr\">body</span>: <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(body),\n});</code></pre><br><br>GraphQL itself is fairly well documented and the Payload GraphQL Playground is the best I&#x27;ve seen with it&#x27;s own docs and schema. It can definitely be confusing at first, especially if you&#x27;re new to programming in general, but if you have specific questions about queries or mutations in GraphQL just ask and we can help!<br> <br> @Taun",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678885950159
      },
      {
        "content": "@Taun you could use axios, I would likely recommend just using the native <code>fetch</code> api though. But the gist, of what you have in that code block above is about right - you will likely need to adjust the endpoint and add on the domain of your payload server to make that fetch i.e. <code>[your_domain_here]/api/posts</code> when working locally, your domain will be <code>localhost:3000</code> (3000 may differ, depends on the port you start payload from)<br><br>fetch API: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\">https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch</a><br> <br> @TheDunco I think GraphQL is a great option. I just wanted to give a more beginner friendly approach, I know gql can bring a bit of mental overhead when first starting out.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678886982540
      },
      {
        "content": "Oh for sure. I know when I first started out with GraphQL I was in over my head. It&#x27;s all I really use now so I was confident in answering that way, but for sure stick to what&#x27;s simpler first. I also would have appreciated seeing a code snippet like that when I first started out (referring to web-dev in general, not necessarily Payload specifically).",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678887216039
      },
      {
        "content": "Great, thanks a lot. It&#x27;s above me at the moment, I&#x27;ll refer back to this post when I get there.",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678887824147
      },
      {
        "content": "You&#x27;ll get there for sure, but definitely stick to the basics for now!",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678887899807
      }
    ],
    "messageCount": 17,
    "slug": "fetching-from-a-database"
  },
  {
    "info": {
      "name": "Problem trying to create a build for production with Docker Compose",
      "id": "1079527355367829527",
      "guildId": "967097582721572934",
      "createdAt": 1677449778168
    },
    "intro": {
      "content": "Nobody, please? Can&#x27;t figure it out 😦<br><br>With these standard scripts:<br><pre><code class=\"hljs json\"><span class=\"hljs-attr\">&quot;scripts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;dev&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts nodemon&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;build:payload&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload build&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;build:server&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;tsc&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;build&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;yarn copyfiles &amp;&amp; yarn build:payload &amp;&amp; yarn build:server&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;serve&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;copyfiles&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;copyfiles -u 1 \\&quot;src/**/*.{html,css,scss,ttf,woff,woff2,eot,svg,jpg,png}\\&quot; dist/&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;generate:types&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload generate:types&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;generate:graphQLSchema&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload generate:graphQLSchema&quot;</span>\n<span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span></code></pre><br><br>This Dockerfile:<br><pre><code class=\"hljs docker\"><span class=\"hljs-keyword\">FROM</span> node:<span class=\"hljs-number\">18</span>-alpine as base\n\n<span class=\"hljs-keyword\">FROM</span> base as builder\n\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /app</span>\n\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> . .</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> yarn install</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> yarn build</span>\n\n<span class=\"hljs-keyword\">FROM</span> base as runtime\n\n<span class=\"hljs-keyword\">ENV</span> NODE_ENV=production\n\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /app</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> package*.json  ./</span>\n\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> yarn install --production</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> --from=builder /app ./dist</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> --from=builder /app ./build</span>\n\n<span class=\"hljs-keyword\">EXPOSE</span> <span class=\"hljs-number\">3000</span>\n\n<span class=\"hljs-keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"hljs-string\">&quot;node&quot;</span>, <span class=\"hljs-string\">&quot;dist/server.js&quot;</span>]</span></code></pre><br><br>And this Compose file:<br><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3&#x27;</span>\n\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-attr\">payload:</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;3000:3000&quot;</span>\n    <span class=\"hljs-attr\">build:</span> <span class=\"hljs-string\">.</span>\n    <span class=\"hljs-attr\">depends_on:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">mongo</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-attr\">MONGODB_URI:</span> <span class=\"hljs-string\">mongodb://mongo:27017/payload</span>\n      <span class=\"hljs-attr\">PORT:</span> <span class=\"hljs-number\">3000</span>\n    <span class=\"hljs-attr\">networks:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">network</span>\n\n  <span class=\"hljs-attr\">mongo:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mongo:latest</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;27017:27017&quot;</span>\n    <span class=\"hljs-attr\">command:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--storageEngine=wiredTiger</span>\n    <span class=\"hljs-attr\">volumes:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">data:/data/db</span>\n    <span class=\"hljs-attr\">logging:</span>\n      <span class=\"hljs-attr\">driver:</span> <span class=\"hljs-string\">none</span>\n    <span class=\"hljs-attr\">networks:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">network</span>\n\n<span class=\"hljs-attr\">volumes:</span>\n  <span class=\"hljs-attr\">data:</span>\n\n\n<span class=\"hljs-attr\">networks:</span>\n  <span class=\"hljs-attr\">network:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">traefik-network</span></code></pre><br><br>I should be able to get it working. The Payload config is located at <code>src/payload.config.ts</code>, however this error occurs:<br><pre><code class=\"hljs\">#0 3.786 Error: Error: can&#x27;t find the configuration file located at /app/src/payload.config.ts.\n#0 3.786     at build (/app/node_modules/payload/dist/bin/build.js:35:15)</code></pre><br> <br> Both Dockerfile and Compose file are located at the root, I run the build with <code>docker compose up</code>, the Dockerfile uses Node as base, then the builder stage happens, where everything is copied and builded, but that&#x27;s where the error happens, and it doesn&#x27;t make any sense why that happens. I ignore everything in <code>dockerignore</code> that isn&#x27;t needed at first, like <code>node_modules, dist and build</code> folders<br> <br> The build:payload script has a correct file path to the Payload config<br>Happens when running it in Docker on Linux and Windows<br> <br> These are the contents of the image before build happens, everything looks OK<br> <br> These are the contents of the image before <code>yarn install</code> happens<br> <br> I&#x27;m done, the problem was that import for one utility had uppercase <code>URL</code> in it, while the correct path was <code>Url</code>. Because Windows doesn&#x27;t care about uppercase / lowercase, it worked just fine, but Linux doesn&#x27;t care and the build will then throw an error.<br><br>On the other hand, Payload reported a false positive (false error) about the config file because in this block:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> build = <span class=\"hljs-keyword\">async</span> (): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">void</span>&gt; =&gt; {\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">const</span> config = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">loadConfig</span>();\n\n    <span class=\"hljs-keyword\">const</span> webpackProdConfig = <span class=\"hljs-title function_\">getWebpackProdConfig</span>(config);\n\n    <span class=\"hljs-title function_\">webpack</span>(webpackProdConfig, <span class=\"hljs-function\">(<span class=\"hljs-params\">err, stats</span>) =&gt;</span> { <span class=\"hljs-comment\">// Stats Object</span>\n      <span class=\"hljs-keyword\">if</span> (err || stats.<span class=\"hljs-title function_\">hasErrors</span>()) {\n        <span class=\"hljs-comment\">// Handle errors here</span>\n\n        <span class=\"hljs-keyword\">if</span> (stats) {\n          <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(stats.<span class=\"hljs-title function_\">toString</span>({\n            <span class=\"hljs-attr\">chunks</span>: <span class=\"hljs-literal\">false</span>,\n            <span class=\"hljs-attr\">colors</span>: <span class=\"hljs-literal\">true</span>,\n          }));\n        } <span class=\"hljs-keyword\">else</span> {\n          <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(err.<span class=\"hljs-property\">message</span>);\n        }\n      }\n    });\n  } <span class=\"hljs-keyword\">catch</span> (err) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(err);\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">`Error: can&#x27;t find the configuration file located at <span class=\"hljs-subst\">${rawConfigPath}</span>.`</span>);\n  }\n};</code></pre><br><br>It somehow catched the import error and throwed a new error with the message below which was misleading<br> <pre><code class=\"hljs\">throw new Error(`Error: can&#x27;t find the configuration file located at ${rawConfigPath}.`);</code></pre>",
      "fileAttachments": [],
      "authorID": "217360281309806593",
      "authorName": "Marťafiixek",
      "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
      "createdAtDate": 1677449778168
    },
    "messages": [],
    "messageCount": 5,
    "slug": "problem-trying-to-create-a-build-for-production-with-docker-compose"
  },
  {
    "info": {
      "name": "Is it possible to catch errors with Sentry?",
      "id": "1077585986873204747",
      "guildId": "967097582721572934",
      "createdAt": 1676986919850
    },
    "intro": {
      "content": "<a href=\"https://sentry.io\">https://sentry.io</a>",
      "fileAttachments": [],
      "authorID": "476523795251855360",
      "authorName": "thgh",
      "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
      "createdAtDate": 1676986919850
    },
    "messages": [
      {
        "content": "There is an undocummented <code>afterError</code> hook that you can use for the backend for this purpose.<br>In your config you can do this: <br><pre><code class=\"hljs\">buildConfig({\n // collections, etc.\n  hooks: { afterError (err, res) =&gt; { \n    // call your sentry code here\n  }\n});</code></pre><br>On the frontend I would probably set up the error boundary in a provider in <code>admin.components.providers</code> or your own <code>index.tsx</code><br> <br> The afterError hook is called in an express middleware for REST, or in Payload&#x27;s GraphQL code. I don&#x27;t believe it gets called when using the local API.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676998466926
      },
      {
        "content": "It would be interesting to know which request triggered the error, otherwise Sentry won&#x27;t be able to track much. How about a breaking change that would change the <code>errorHandler</code> arguments to a single object with:<br><pre><code class=\"hljs ts\"><span class=\"hljs-title function_\">afterError</span>({\n  <span class=\"hljs-attr\">error</span>: <span class=\"hljs-title class_\">Error</span>,\n  <span class=\"hljs-attr\">body</span>: <span class=\"hljs-title class_\">ErrorResponse</span>,\n  request?: <span class=\"hljs-title class_\">PayloadRequest</span>\n  response?: <span class=\"hljs-title class_\">ExpressResponse</span>\n}):\n  <span class=\"hljs-comment\">// Send this response if the error originated from HTTP request</span>\n  | <span class=\"hljs-title class_\">ErrorResponse</span>\n  <span class=\"hljs-comment\">// Don&#x27;t send a response, the handler take care of it</span>\n  | <span class=\"hljs-literal\">null</span></code></pre><br>This would cover both local API and HTTP contexts",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677071559527
      },
      {
        "content": "I&#x27;d agree, that would be way more helpful.<br>If I can remember back to why I did this 2 years ago this way it had to do with supporting both GraphQL and REST API with the same hook.<br> <br> I&#x27;m sure there is room for improvement on this and adding some documentation and tests around this would be 💯",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677102048409
      },
      {
        "content": "Received my first errors 👌",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677134930123
      }
    ],
    "messageCount": 6,
    "slug": "is-it-possible-to-catch-errors-with-sentry"
  },
  {
    "info": {
      "name": "Deployment in google cloud",
      "id": "1079171093622968352",
      "guildId": "967097582721572934",
      "createdAt": 1677364838749
    },
    "intro": {
      "content": "Can you explain me how to deploy Payload in Google Cloud services?",
      "fileAttachments": [],
      "authorID": "898767999287320607",
      "authorName": "Porfirio",
      "authorAvatar": "d66ff8314c6b768bd32c2a3dd7e54771",
      "createdAtDate": 1677364838749
    },
    "messages": [
      {
        "content": "Hi! Theres interesting conversation going on about Payload with Google Cloud - <a href=\"https://discord.com/channels/967097582721572934/1075750048924708865\">https://discord.com/channels/967097582721572934/1075750048924708865</a>. I thinks it&#x27;s what you looking for and could help you 🙂",
        "fileAttachments": [],
        "authorID": "393456218590674944",
        "authorName": "wlodar",
        "authorAvatar": "bbcdf0ffa334075be7108e88c53d9587",
        "createdAtDate": 1677368808384
      }
    ],
    "messageCount": 1,
    "slug": "deployment-in-google-cloud"
  },
  {
    "info": {
      "name": "Access Local API in Custom View",
      "id": "1077971330068119662",
      "guildId": "967097582721572934",
      "createdAt": 1677078792827
    },
    "intro": {
      "content": "I am trying to access Payload Local Api in my custom view that is overwriting the &quot;List&quot; view of one collection, if I import payload and I try to access payload.find I get <code>payload__WEBPACK_IMPORTED_MODULE_1__.default.find is not a function</code>",
      "fileAttachments": [],
      "authorID": "1077612284869885973",
      "authorName": "Enrico",
      "authorAvatar": null,
      "createdAtDate": 1677078792827
    },
    "messages": [
      {
        "content": "You cannot access Local API from front-end if I understood correctly. You must use either REST or GraphQL. In admin panel there might be some ready-made way to access the REST API. Maybe using React hooks?",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1677079077807
      },
      {
        "content": "Now i understand, thank you",
        "fileAttachments": [],
        "authorID": "1077612284869885973",
        "authorName": "Enrico",
        "authorAvatar": null,
        "createdAtDate": 1677079258514
      }
    ],
    "messageCount": 2,
    "slug": "access-local-api-in-custom-view"
  },
  {
    "info": {
      "name": "duplicate page not working",
      "id": "1052475381531299890",
      "guildId": "967097582721572934",
      "createdAt": 1671000085004
    },
    "intro": {
      "content": "@Shubham27 apologies for the delay - are you still experiencing this issue?",
      "fileAttachments": [],
      "authorID": "854377910689202256",
      "authorName": "jesschow",
      "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
      "createdAtDate": 1672910794427
    },
    "messages": [
      {
        "content": "yes @jesschow<br> <br> <a href=\"https://docs.google.com/document/d/1JYuIX7RXVhUslCm5oRXJKj7FY2ds7r-1VIAhkn28CCM/edit\">https://docs.google.com/document/d/1JYuIX7RXVhUslCm5oRXJKj7FY2ds7r-1VIAhkn28CCM/edit</a><br> <br> @jesschow here is the problem description that i am getting. hope it helps you understand issue that i am facing.",
        "fileAttachments": [],
        "authorID": "1041992215632805888",
        "authorName": "Shubham27",
        "authorAvatar": null,
        "createdAtDate": 1672914007959
      },
      {
        "content": "@Shubham27 The payload config is meant to be static. I think what you should instead do is create a custom field, possibly using the new <code>json</code> field type. You would render a custom select component that would fetch data from your endpoint and when the user submits, you add the data to the json field.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673356279890
      },
      {
        "content": "@Jarrod can you share me small example of custom select field with dynamic options or any other reference that related to it.",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1674110151835
      },
      {
        "content": "Does this mean I can&#x27;t reference data from one source (i.e. text input) and present it in a dropdown? More info on my scenario: <a href=\"https://discord.com/channels/967097582721572934/1072241616917643454/1072241616917643454\">https://discord.com/channels/967097582721572934/1072241616917643454/1072241616917643454</a>",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675780837189
      },
      {
        "content": "Hiii @remy i&#x27;m want to render data in a select menu using custom select field<br> <br> i tried from this <a href=\"https://payloadcms.com/docs/admin/components#fields:~:text=%7D%3B-,Field%20Component,-When%20writing%20your\">https://payloadcms.com/docs/admin/components#fields:~:text=%7D%3B-,Field%20Component,-When%20writing%20your</a> but it doesn&#x27;t store selected value in api",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1675944360888
      },
      {
        "content": "I managed to store the selected value with useFormFields - <a href=\"https://payloadcms.com/docs/admin/hooks#useformfields\">https://payloadcms.com/docs/admin/hooks#useformfields</a>. Hope that helps",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676047211568
      },
      {
        "content": "thanks @remy i&#x27;ll try it.<br> <br> hello @remy i tried but didn&#x27;t work<br> <br> this is the my code can you help me",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676283924845
      },
      {
        "content": "<code>useFormFields</code>, not <code>useField</code><br> <br> <pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> { fields, dispatch } = <span class=\"hljs-title function_\">useFormFields</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">[fields, dispatch]</span>) =&gt;</span> ({ fields, dispatch }))\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;fields&#x27;</span>, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(fields))</code></pre>",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676560484238
      },
      {
        "content": "hii @remy still not working it&#x27;s not storing selected value even it&#x27;s not create a field<br> <br> <br> <br> ",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676617579321
      },
      {
        "content": "Well the rest is just react:<br><pre><code class=\"hljs javascript\">  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">handleChange</span> = (<span class=\"hljs-params\">e: ChangeEvent&lt;HTMLSelectElement&gt;, path: string</span>) =&gt; {\n    <span class=\"hljs-title function_\">setSelectedOption</span>(e.<span class=\"hljs-property\">target</span>.<span class=\"hljs-property\">value</span>) <span class=\"hljs-comment\">// React.useState</span>\n  };</code></pre><br><br><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{selectedOption}</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> handleChange(e, path)}&gt;\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>...<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span></code></pre><br> <br> Obviously I can&#x27;t see what&#x27;s happening in your reducer but using React.useState will suffice for setting the selected value in the example I&#x27;ve provided. I&#x27;m assuming data.fields contains the values you&#x27;re expecting?",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676639396525
      },
      {
        "content": "data.fields give me the all fields data.<br> <br> it store only in  a state right?<br> <br> is it store into the api?",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676643644511
      },
      {
        "content": "Hey @bhavikak! You should change your field type from <code>ui</code> to <code>text</code> 🙂 <br><br>As you have noticed, ui fields <em>do not</em> store their data in the DB. So you will want to use a field type that does, i.e. text. You can leave the rest of your config as is, using the custom component that you created!",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676644124713
      },
      {
        "content": "okay @Jarrod i&#x27;ll try<br> <br> so i need to change only type?",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676644200106
      },
      {
        "content": "Yeah, and personally I think you could get away with using <code>useField</code> hook, and passing the path from props to that hook and using the <code>setValue</code> function to set the value of the field instead of the useFormFields",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676644583346
      },
      {
        "content": "wohooo it&#x27;s working with useFormField as well so i need to changed with usefield<br> <br> thanks a lot @Jarrod @remy  🙌",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676644998495
      },
      {
        "content": "Absolutely, maybe I&#x27;ll make a vid on custom components like the one you made 🤔",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676645043372
      },
      {
        "content": "yes, you can🤘<br> <br> hii @Jarrod when i select the item it&#x27;s not enable publish button<br> <br> ",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676646196510
      },
      {
        "content": "Can you log Form state for me? Using useFormFields?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676904623294
      },
      {
        "content": "yaa<br> <br> ",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676905257667
      },
      {
        "content": "This is also the case for me. It persists in draft saves but doesn&#x27;t trigger a change",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676975430863
      },
      {
        "content": "And just to clarify, you are both using <code>useField</code>?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676982248356
      },
      {
        "content": "I haven&#x27;t updated mine from <code>useFormField</code> but i&#x27;m happy to follow along for @bhavikak &#x27;s issue.",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676988823900
      },
      {
        "content": "yes @Jarrod i&#x27;m use useFormField<br> <br> nope",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1677134615450
      },
      {
        "content": "@bhavikak can you use useField instead? <br><br>Otherwise <code>useForm</code> exposes a <code>setModified</code> function that you can use to set the form as modified",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677176641708
      },
      {
        "content": "i tried with usefield as well but it&#x27;s not save my selected option<br> <br> this is the my code<br> <br> hello @Jarrod<br> <br> i&#x27;m waiting for your respone.",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1677217086320
      },
      {
        "content": "I think Jarrod wants you to convert to <code>useField</code> first<br> <br> When I get to reimplementing this, I&#x27;ll create a new thread, as we&#x27;re quite far from the original issue.",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1677594599233
      },
      {
        "content": "hii @remy i tried it but it&#x27;s not store value into the colliction api<br> <br> hello @remy my functionality is still pending can you suggest how i complete it using useField",
        "fileAttachments": [],
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1677654822669
      }
    ],
    "messageCount": 56,
    "slug": "duplicate-page-not-working"
  },
  {
    "info": {
      "name": "Bulk email using payload emailer",
      "id": "1079655600138489946",
      "guildId": "967097582721572934",
      "createdAt": 1677480354104
    },
    "intro": {
      "content": "Using custom ses transport with nodemailer, is there a way using the <code>payload.sendEmail</code> to send bulk emails, or is there any workaround?<br> <br> okay, turns out the <code>to</code> parameter can accept comma separated string to send to multiple email address",
      "fileAttachments": [],
      "authorID": "688180620744065079",
      "authorName": "teng",
      "authorAvatar": "3047a9d98f421809350f74ebc4b189a6",
      "createdAtDate": 1677480354104
    },
    "messages": [
      {
        "content": "Hey @teng that could be something we add to the Form Builder in the future. Feel free to add that as a feature request. We do have utilized the CC field for this in the past, but I am guessing you have more than a couple emails you&#x27;d like to send to.<br> <br> Curious if the email provider you&#x27;re using this with has the ability to leverage email groups, so you could send to one address, but then any number of people would receive it.",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1677531770731
      }
    ],
    "messageCount": 3,
    "slug": "bulk-email-using-payload-emailer"
  },
  {
    "info": {
      "name": "Error when trying to use the cloud storage plugin: Can't resolve \"fs\"",
      "id": "1081305825978626198",
      "guildId": "967097582721572934",
      "createdAt": 1677873798604
    },
    "intro": {
      "content": "When trying to setup a payload project that makes use of s3 I get this unexplainable error, and I&#x27;m wondering if there&#x27;s anyone who has successfully used the official payload cloud storage plugin<br> <br> To be clear, I want to store media files locally while I&#x27;m developing and on s3 when in Production",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1081305825978626198/1081305826146402414/image.png",
          "name": "image.png",
          "id": "1081305826146402414",
          "size": 109550,
          "url": "https://cdn.discordapp.com/attachments/1081305825978626198/1081305826146402414/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1081305825978626198/1081305826146402414/image.png",
          "height": 837,
          "width": 1025,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1081305825978626198/1081305826444202104/image.png",
          "name": "image.png",
          "id": "1081305826444202104",
          "size": 54275,
          "url": "https://cdn.discordapp.com/attachments/1081305825978626198/1081305826444202104/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1081305825978626198/1081305826444202104/image.png",
          "height": 203,
          "width": 1416,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "521690392983371776",
      "authorName": "hypersonic.dev",
      "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
      "createdAtDate": 1677873798604
    },
    "messages": [
      {
        "content": "I ran into this recently. there&#x27;s kind of an odd work-around atm<br> <br> setup a folder called &quot;mocks&quot; and put a <code>emptyObject.js</code> in it with this as its contents : <pre><code class=\"hljs\">export default {}</code></pre><br><br>then add this to your payload.config.ts under the <code>admin</code> property<br><br><pre><code class=\"hljs\">webpack: (config) =&gt; {\n            return {\n                ...config,\n                resolve: {\n                    ...config.resolve,\n                    alias: {\n                        ...config.resolve.alias,\n                        &#x27;fs&#x27;: mockModulePath,\n                    }\n                }\n            };\n        },</code></pre><br> <br> from what I understand, the issue arises because part of the build process assumes being on the browser, and <code>fs</code> doesn&#x27;t exist there. so this alias allows it to get around that",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677877328238
      },
      {
        "content": "Alright I&#x27;ll try this, thanks!<br> <br> It works!<br> <br> Thank you!<br> <br> NOTE FOR THOSE USING PNPM: make sure to <code>pnpm i -D process</code> to avoid errors",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1677878960907
      },
      {
        "content": "Hey @Jakey , thanks for helping out! I just ran into the same problem, but I&#x27;m not able to fix it unfortunately. What does the mockModulePath refer to?  Is it the imported empty object or the path as a string?",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1678813410522
      },
      {
        "content": "empty object",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1678813613761
      },
      {
        "content": "Hmm I get an &#x27;Invalid Configuration Object&#x27; Error when I do that. I have no idea about webpack so I&#x27;m pretty lost here😅<br> <br> Has someone already gone ahead and opened up an issue? That workaround feels weird",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1678813816815
      },
      {
        "content": "Agreed, I haven&#x27;t updated my payload cms lately, so i wonder if it&#x27;s a new error. I&#x27;ll post here if it comes up when I do.",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1678815951011
      }
    ],
    "messageCount": 13,
    "slug": "error-when-trying-to-use-the-cloud-storage-plugin-cant-resolve-fs"
  },
  {
    "info": {
      "name": "export list to csv, xlsx",
      "id": "1080406659987406908",
      "guildId": "967097582721572934",
      "createdAt": 1677659420726
    },
    "intro": {
      "content": "Hello, Is there any option to export collection list to external file?",
      "fileAttachments": [],
      "authorID": "803037652894482442",
      "authorName": "kosmo",
      "authorAvatar": "f054fc1ce7516d4903c0712698fc5eb1",
      "createdAtDate": 1677659420726
    },
    "messages": [
      {
        "content": "Built this yesterday:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> { stringify } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;csv-stringify/sync&#x27;</span>\n<span class=\"hljs-keyword\">import</span> archiver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;archiver&#x27;</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">downloadEndpoint</span>: <span class=\"hljs-title class_\">Endpoint</span> = {\n  <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&#x27;/download-zip&#x27;</span>,\n  <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;get&#x27;</span>,\n  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">handler</span>(<span class=\"hljs-params\">req, res, next</span>) {\n    <span class=\"hljs-comment\">// Only admins allowed</span>\n    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-title function_\">isAdmin</span>(req.<span class=\"hljs-property\">user</span>)) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">next</span>()\n\n    <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-title function_\">find</span>({\n      <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;widgets&#x27;</span>,\n      where, <span class=\"hljs-comment\">// derived from query params</span>\n      <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-number\">1000</span>, <span class=\"hljs-comment\">// sanity check</span>\n    })\n\n    <span class=\"hljs-keyword\">const</span> archive = <span class=\"hljs-title function_\">archiver</span>(<span class=\"hljs-string\">&#x27;zip&#x27;</span>, { <span class=\"hljs-attr\">zlib</span>: { <span class=\"hljs-attr\">level</span>: <span class=\"hljs-number\">9</span> } })\n    archive.<span class=\"hljs-title function_\">pipe</span>(res)\n    res.<span class=\"hljs-title function_\">setHeader</span>(<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>, <span class=\"hljs-string\">&#x27;application/zip&#x27;</span>)\n    res.<span class=\"hljs-title function_\">setHeader</span>(<span class=\"hljs-string\">&#x27;Content-Disposition&#x27;</span>, <span class=\"hljs-string\">&#x27;attachment; filename=widgets.zip&#x27;</span>)\n\n    <span class=\"hljs-keyword\">const</span> csv = <span class=\"hljs-title function_\">stringify</span>(result.<span class=\"hljs-property\">docs</span>, { <span class=\"hljs-attr\">header</span>: <span class=\"hljs-literal\">true</span> })\n    archive.<span class=\"hljs-title function_\">append</span>(csv, { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;test.csv&#x27;</span> })\n    archive.<span class=\"hljs-title function_\">finalize</span>()\n  },\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677666353601
      },
      {
        "content": "Thanks for answer! 💚 ,<br>Do you have some extra configuration for archiver? When I&#x27;m trying use it, I have a lot of errors",
        "fileAttachments": [],
        "authorID": "803037652894482442",
        "authorName": "kosmo",
        "authorAvatar": "f054fc1ce7516d4903c0712698fc5eb1",
        "createdAtDate": 1677677892317
      },
      {
        "content": "If it&#x27;s a webpack error, you should add archiver to payloadconfig.admin.webpack.resolve.alias so ot doesn&#x27;t try to bundle it. Otherwise not other config<br> <br> You could consider to skip the zipping and return the csv straight away",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677709884330
      },
      {
        "content": "thank you so much! Im going to try it",
        "fileAttachments": [],
        "authorID": "803037652894482442",
        "authorName": "kosmo",
        "authorAvatar": "f054fc1ce7516d4903c0712698fc5eb1",
        "createdAtDate": 1677710437718
      }
    ],
    "messageCount": 5,
    "slug": "export-list-to-csv-xlsx"
  },
  {
    "info": {
      "name": "Custom Field Components Not Working",
      "id": "1075578163884720208",
      "guildId": "967097582721572934",
      "createdAt": 1676508217546
    },
    "intro": {
      "content": "Hello, <br><br>I have been though the blog post here: <a href=\"https://payloadcms.com/blog/building-a-custom-field\">https://payloadcms.com/blog/building-a-custom-field</a> and am trying to add the color-picker custom field to a collection.  When I do I receive:<br><br>/src/components/color-picker/InputField.tsx:129<br>    return (&lt;div className={baseClass}&gt;<br>            ^<br><br>SyntaxError: Unexpected token &#x27;&lt;&#x27;<br>    at Object.compileFunction (node:vm:360:18)<br>    at wrapSafe (node:internal/modules/cjs/loader:1055:15)<br>    at Module._compile (node:internal/modules/cjs/loader:1090:27)<br>    at Module.m._compile (/customer-site/node_modules/ts-node/src/index.ts:1056:23)<br>    at Module._extensions..js (node:internal/modules/cjs/loader:1180:10)<br>    at Object.require.extensions.&lt;computed&gt; [as .tsx] (/customer-site/node_modules/ts-node/src/index.ts:1059:12)<br>    at Module.load (node:internal/modules/cjs/loader:1004:32)<br>    at Function.Module._load (node:internal/modules/cjs/loader:839:12)<br>    at Module.require (node:internal/modules/cjs/loader:1028:19)<br>    at require (node:internal/modules/cjs/helpers:102:18)<br>[nodemon] app crashed - waiting for file changes before starting...<br><br>I don&#x27;t know where to start with this one...<br><br>Thanks in advance!<br> <br> Found it in tsconfig.json &quot;compilerOptions&quot; - &gt; &quot;jsx&quot;: &quot;react&quot;  not &quot;preserve&quot;",
      "fileAttachments": [],
      "authorID": "1073680355653062788",
      "authorName": "jPetersonSoiltech",
      "authorAvatar": null,
      "createdAtDate": 1676508217546
    },
    "messages": [],
    "messageCount": 1,
    "slug": "custom-field-components-not-working"
  },
  {
    "info": {
      "name": "Use uploads for collection list images",
      "id": "1078329106434899988",
      "guildId": "967097582721572934",
      "createdAt": 1677164093360
    },
    "intro": {
      "content": "Instead of a text, I&#x27;d like to display a thumbnail (related-to field)",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1078329106434899988/1078329106736877608/Screenshot_2023-02-23_at_15.54.04.png",
          "name": "Screenshot_2023-02-23_at_15.54.04.png",
          "id": "1078329106736877608",
          "size": 109626,
          "url": "https://cdn.discordapp.com/attachments/1078329106434899988/1078329106736877608/Screenshot_2023-02-23_at_15.54.04.png",
          "proxyURL": "https://media.discordapp.net/attachments/1078329106434899988/1078329106736877608/Screenshot_2023-02-23_at_15.54.04.png",
          "height": 1152,
          "width": 1256,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "525819893333884938",
      "authorName": "wiesson",
      "authorAvatar": "45ae35ecb8e0d89dd1c9a726cf793568",
      "createdAtDate": 1677164093360
    },
    "messages": [
      {
        "content": "Possibly <a href=\"https://payloadcms.com/docs/admin/components#cell-component\">https://payloadcms.com/docs/admin/components#cell-component</a><br> <br> Where you have access to the cell and the data<br> <br> so you&#x27;d pass it to an img element",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677166037219
      },
      {
        "content": "ah, thank you! Somehow I searched the docs, but didn&#x27;t find it",
        "fileAttachments": [],
        "authorID": "525819893333884938",
        "authorName": "wiesson",
        "authorAvatar": "45ae35ecb8e0d89dd1c9a726cf793568",
        "createdAtDate": 1677166132293
      }
    ],
    "messageCount": 4,
    "slug": "use-uploads-for-collection-list-images"
  },
  {
    "info": {
      "name": "Every Collection throws 401 (Logged in)",
      "id": "1085200465760894976",
      "guildId": "967097582721572934",
      "createdAt": 1678802353087
    },
    "intro": {
      "content": "Hello all, I&#x27;m running into an issue on prod where admins can login, but every request made returns a 401 <pre><code class=\"hljs\">UnauthorizedError: Unauthorized, you must be logged in to make this request.</code></pre><br><br>We can all login. We can all see the item count in each collection, but nothing displays and the requests return a 401. <br><br>Does anyone know what&#x27;s going on? Previously we ran dev and had no issues.<br> <br> <br> <br> @jmikrut How do I run into every issue ever?<br> <br> lmao<br> <br> <em>cries</em><br> <br> OK now i can see some of the data<br> <br> but still get a 401 on every admin request",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1085200465760894976/1085200466033516685/Screenshot_2023-03-14_095746.png",
          "name": "Screenshot_2023-03-14_095746.png",
          "id": "1085200466033516685",
          "size": 27034,
          "url": "https://cdn.discordapp.com/attachments/1085200465760894976/1085200466033516685/Screenshot_2023-03-14_095746.png",
          "proxyURL": "https://media.discordapp.net/attachments/1085200465760894976/1085200466033516685/Screenshot_2023-03-14_095746.png",
          "height": 754,
          "width": 1584,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "1049775120559898725",
      "authorName": "thisisnotchris",
      "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
      "createdAtDate": 1678802353087
    },
    "messages": [
      {
        "content": "this must be related to your access control settings<br> <br> or possibly your CSRF settings?<br> <br> maybe try and whitelist the domains you are using in the <code>csrf</code> property",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678811087560
      },
      {
        "content": "This was some oddity with access controls that seems to be resolved now.",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678817349979
      },
      {
        "content": "ahh beautiful",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678907718268
      }
    ],
    "messageCount": 11,
    "slug": "every-collection-throws-401-logged-in"
  },
  {
    "info": {
      "name": "GraphQL sometimes replacing hyphens and commas with underscores",
      "id": "1077614359649468562",
      "guildId": "967097582721572934",
      "createdAt": 1676993684447
    },
    "intro": {
      "content": "Hello fellas, would anyone know why the value of something in gql has hyphens and commas replaced with underscores? This does not occur when accessing data with REST",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1077614359649468562/1077614360089866311/image.png",
          "name": "image.png",
          "id": "1077614360089866311",
          "size": 6102,
          "url": "https://cdn.discordapp.com/attachments/1077614359649468562/1077614360089866311/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1077614359649468562/1077614360089866311/image.png",
          "height": 71,
          "width": 562,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1077614359649468562/1077614360375083048/image.png",
          "name": "image.png",
          "id": "1077614360375083048",
          "size": 4875,
          "url": "https://cdn.discordapp.com/attachments/1077614359649468562/1077614360375083048/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1077614359649468562/1077614360375083048/image.png",
          "height": 22,
          "width": 889,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "225910068078444544",
      "authorName": "sesons",
      "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
      "createdAtDate": 1676993684447
    },
    "messages": [
      {
        "content": "This is because GraphQL doesn&#x27;t allow dashes<br> <br> nothing Payload can do there unfortunately. To keep parity, I would avoid using dashes in field names<br> <br> use camelCase instead<br> <br> or undrescores, either way",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993764878
      },
      {
        "content": "so just to clarify, is that just for strings that are prefixed with a hyphen? i.e. i just can&#x27;t start a value with a -",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676993840424
      },
      {
        "content": "any hyphen at all, anywhere<br> <br> doesn&#x27;t need to be prefixed<br> <br> <code>my-field</code> will be turned into <code>my_field</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993857533
      },
      {
        "content": "sorry to clarify this is for the value of a field, not a field name in itself",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676993885881
      },
      {
        "content": "like a select field for example?<br> <br> yep, same thing applies there as well. select values / radio values are <code>enum</code>s in graphql<br> <br> and enums can&#x27;t have dashes either",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676993893514
      },
      {
        "content": "ah ok makes sense<br> <br> thank you",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676993924144
      }
    ],
    "messageCount": 14,
    "slug": "graphql-sometimes-replacing-hyphens-and-commas-with-underscores"
  },
  {
    "info": {
      "name": "Stuck on another 404 Issue on prod",
      "id": "1080558274572718200",
      "guildId": "967097582721572934",
      "createdAt": 1677695568460
    },
    "intro": {
      "content": "Hello all, trying to resolve an issue on prod where I cant access my payload Admin  / API and I get a 404.<br><br>I replaced my domain with mywebsite.com in the following as an example:<br><br>in my payload config, serverURL: &quot;<a href=\"https://mywesbite.com\">https://mywesbite.com</a>&quot;<br><br>Nginx:<br><br><pre><code class=\"hljs nginx\">    <span class=\"hljs-section\">server</span> {\n        <span class=\"hljs-attribute\">server_name</span> mywebsite.com;\n        <span class=\"hljs-attribute\">root</span> /var/www/mywebsite.com;\n        <span class=\"hljs-comment\">#index index.html index.htm index.nginx-debian.html;</span>\n        <span class=\"hljs-attribute\">index</span> index.html;\n\n        <span class=\"hljs-section\">location</span> /payload/ {\n            <span class=\"hljs-attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"hljs-variable\">$proxy_add_x_forwarded_for</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> Host <span class=\"hljs-variable\">$host</span>;\n            <span class=\"hljs-attribute\">proxy_pass</span> http://127.0.0.1:3000;\n            <span class=\"hljs-attribute\">proxy_http_version</span> <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> Upgrade <span class=\"hljs-variable\">$http_upgrade</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> Connection <span class=\"hljs-string\">&quot;upgrade&quot;</span>;\n        }\n\n        <span class=\"hljs-section\">location</span> /safsapi/ {\n            <span class=\"hljs-attribute\">rewrite</span><span class=\"hljs-regexp\"> ^/safsapi/(.*)$</span> /<span class=\"hljs-variable\">$1</span> <span class=\"hljs-literal\">break</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"hljs-variable\">$proxy_add_x_forwarded_for</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> Host <span class=\"hljs-variable\">$host</span>;\n            <span class=\"hljs-attribute\">proxy_pass</span> http://127.0.0.1:5000;\n            <span class=\"hljs-attribute\">proxy_http_version</span> <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> Upgrade <span class=\"hljs-variable\">$http_upgrade</span>;\n            <span class=\"hljs-attribute\">proxy_set_header</span> Connection <span class=\"hljs-string\">&quot;upgrade&quot;</span>;\n        }\n\n        <span class=\"hljs-section\">location</span> / {\n            <span class=\"hljs-attribute\">root</span> /var/www/mywebsite.com/client/dist/safs;\n            <span class=\"hljs-comment\">#root /client/dist/safs;</span>\n            <span class=\"hljs-attribute\">try_files</span> <span class=\"hljs-variable\">$uri</span> <span class=\"hljs-variable\">$uri</span>/ /index.html;\n            <span class=\"hljs-comment\">#index  index.html index.htm;</span>\n            <span class=\"hljs-attribute\">index</span>  index.html;\n        }\n    }</code></pre><br> <br> Previously I had no issues hitting /payload and /safsapi routes<br> <br> Not sure if I accidently changed something while moving to prod<br> <br> but everything looks the same<br> <br> Update:<br> <br> If I add an express route in payload to hit &quot;/payload&quot;, I actually hit express and get a &quot;Cannot get /payload&quot;<br> <br> But still getting 404&#x27;s on payload api routes<br> <br> @zubricks Anything look weird there?",
      "fileAttachments": [],
      "authorID": "1049775120559898725",
      "authorName": "thisisnotchris",
      "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
      "createdAtDate": 1677695568460
    },
    "messages": [
      {
        "content": "Let me take a look through this config quick and see if anything looks off",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1677763625385
      },
      {
        "content": "With that proxy setup<br> <br> I tried setting my routes<br> <br> <pre><code class=\"hljs\">  routes: {\n    api: &#x27;/payload/api&#x27;,\n    admin: &#x27;/payload/admin&#x27;,\n    graphQL: &#x27;/payload/graphql&#x27;,\n    graphQLPlayground: &#x27;/payload/graphql-playground&#x27;\n  }</code></pre><br> <br> <br> <br> SOLUTION<br> <br> TY to the amazing @noheadphones<br> <br> if you have a reverse proxy<br> <br> <pre><code class=\"hljs\">        location /payload/ {\n            proxy_buffering off;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header Host $host;\n            proxy_pass http://127.0.0.1:3000;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection &quot;upgrade&quot;;\n        }</code></pre><br> <br> <pre><code class=\"hljs\">proxy_buffering off;</code></pre><br> <br> must be set to off<br> <br> (not sure why exactly, but noheadphones is genius)",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677764611284
      },
      {
        "content": "interesting...good work!",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1677765043453
      },
      {
        "content": "Also<br> <br> In my situation, if this helps anyone<br> <br> I needed to add the following to my payload config<br> <br> <pre><code class=\"hljs\">  routes: {\n    api: &#x27;/payload/api&#x27;,\n    admin: &#x27;/payload/admin&#x27;,\n    graphQL: &#x27;/payload/graphql&#x27;,\n    graphQLPlayground: &#x27;/payload/graphql-playground&#x27;\n  }</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677765063433
      }
    ],
    "messageCount": 24,
    "slug": "stuck-on-another-404-issue-on-prod"
  },
  {
    "info": {
      "name": "Passport Auth Strategy",
      "id": "1079838740488388729",
      "guildId": "967097582721572934",
      "createdAt": 1677524018166
    },
    "intro": {
      "content": "I am reading some posts and the documentation and was wondering if I can use passport strategies to build something like this:<br><br>1.) I have an admins collection with access to the dashboard and default email/password auth<br>2.) I have a users collection with NO access to the dashboard but access to the database after login via <br>- default email/password auth<br>- passport apple auth<br>- passport google auth<br><br>I just added passport-apple for the users collection and every time I start payload and visit the dashboard-login page I get redirected to the apple auth page. I‘m not sure why this is happening as this collection is not even meant to login to the dashboard. 🤔<br><br><strong>EDIT</strong><br>Currently the code looks like this.<br><br>collections/Users.ts<br><pre><code class=\"hljs\">import { CollectionConfig } from &#x27;payload/types&#x27;;\nimport { isLoggedIn } from &#x27;../access/isLoggedIn&#x27;;\nimport { verifyEmail } from &#x27;../emails/verifyEmail&#x27;;\nimport { forgotPassword } from &#x27;../emails/forgotPassword&#x27;;\nimport AppleStrategy from &#x27;../auth/apple&#x27;;\n\n// import passport from &quot;passport&quot;;\nconst Users: CollectionConfig = {\n  slug: &#x27;users&#x27;,\n  auth: {\n    cookies: {\n      sameSite: &#x27;none&#x27;,\n      secure: true,\n    },\n    strategies: [\n      {\n        name: &#x27;apple&#x27;,\n        strategy: AppleStrategy\n      },\n    ],\n    verify: {\n      generateEmailHTML: verifyEmail,\n    },\n    forgotPassword: {\n      generateEmailHTML: forgotPassword,\n    }\n  },\n  admin: {\n    useAsTitle: &#x27;email&#x27;,\n  },\n  access: {\n    create: () =&gt; true,\n    read: isLoggedIn,\n  },\n  fields: [\n    \n  ],\n}\n\nexport default Users;</code></pre><br><br>auth/apple.ts<br><pre><code class=\"hljs\">import Strategy from &quot;passport-apple&quot;;\n\nconst AppleStrategy = new Strategy(\n  {\n    clientID: &quot;XXX&quot;,\n    teamID: &quot;XXX&quot;,\n    callbackURL: &quot;XXX&quot;,\n    keyID: &quot;XXX&quot;,\n    privateKeyLocation: &quot;XXX&quot;,\n    passReqToCallback: true\n  },\n  function(req, accessToken, refreshToken, idToken, profile, cb) {\n    // \n    cb(null, idToken);\n}\n\n);\n\nexport default AppleStrategy;</code></pre>",
      "fileAttachments": [],
      "authorID": "1041438496285532170",
      "authorName": "TheFrontend",
      "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
      "createdAtDate": 1677524018166
    },
    "messages": [
      {
        "content": "@TheFrontend What&#x27;s the apple auth code look like?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677524966221
      },
      {
        "content": "I just updated the original post above, there is not much going on. I just copied and configured the blank code from passport js. <br><br>Also my payload config looks like this<br><br>payload.config.ts<br><pre><code class=\"hljs\">import { buildConfig } from &#x27;payload/config&#x27;;\nimport path from &#x27;path&#x27;;\n\nimport AdminUsers from &#x27;./collections/AdminUsers&#x27;;\nimport Users from &#x27;./collections/Users&#x27;;\n\nconst createStripeSubscriptionPath = path.resolve(__dirname, &#x27;auth/apple&#x27;);\nconst mockModulePath = path.resolve(__dirname, &#x27;mocks/emptyObject&#x27;);\n\nexport default buildConfig({\n  serverURL: process.env.APP_URL,\n  csrf: [\n    &#x27;https://localhost:5173&#x27;,\n  ],\n  admin: {\n    user: AdminUsers.slug,\n    meta: {\n      titleSuffix: &#x27;- Demo&#x27;,\n    },\n    webpack: (config) =&gt; ({\n            ...config,\n            resolve: {\n                ...config.resolve,\n                alias: {\n                    ...config.resolve.alias,\n                    [createStripeSubscriptionPath]: mockModulePath,\n                }\n            }\n        })\n  },\n  collections: [\n    AdminUsers,\n    Users,\n  ],\n  typescript: {\n    outputFile: path.resolve(__dirname, &#x27;payload-types.ts&#x27;),\n  },\n  graphQL: {\n    disablePlaygroundInProduction: false,\n    schemaOutputFile: path.resolve(__dirname, &#x27;generated-schema.graphql&#x27;),\n  },\n});</code></pre>",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677527622046
      },
      {
        "content": "Weird, looks OK to me<br> <br> and it&#x27;s redirecting on the login page?<br> <br> how so",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677528092828
      },
      {
        "content": "Now I only run into CORS issues on the login page but it&#x27;s still redirecting when trying to open /api/graphql-playground",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079838740488388729/1079862598796840970/Bildschirmfoto_2023-02-27_um_21.26.46.png",
            "name": "Bildschirmfoto_2023-02-27_um_21.26.46.png",
            "id": "1079862598796840970",
            "size": 169190,
            "url": "https://cdn.discordapp.com/attachments/1079838740488388729/1079862598796840970/Bildschirmfoto_2023-02-27_um_21.26.46.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079838740488388729/1079862598796840970/Bildschirmfoto_2023-02-27_um_21.26.46.png",
            "height": 402,
            "width": 1284,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079838740488388729/1079862599069478922/Bildschirmfoto_2023-02-27_um_21.27.08.png",
            "name": "Bildschirmfoto_2023-02-27_um_21.27.08.png",
            "id": "1079862599069478922",
            "size": 80557,
            "url": "https://cdn.discordapp.com/attachments/1079838740488388729/1079862599069478922/Bildschirmfoto_2023-02-27_um_21.27.08.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079838740488388729/1079862599069478922/Bildschirmfoto_2023-02-27_um_21.27.08.png",
            "height": 302,
            "width": 851,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677529706552
      },
      {
        "content": "Hmm that&#x27;s showing your request is failing though<br> <br> Is your allowed origins set on apple dev side?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677529818371
      },
      {
        "content": "There is nothing I can really set manually. I did enter the domains that are allowed to use sign-in-with-apple<br> <br> the exact same happens when I use the passport-google-oauth20 library. Must be missing something here 🤨<br> <br> @jmikrut any ideas on this? I also noticed once I add multiple strategies it always tries to redirect me to the one at the end of the array. When I try to open the graphql-playground or any api route it always redirects me to the external auth page (google in this case)",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677529938066
      },
      {
        "content": "So this is a problem with many Passport SSO plugins<br> <br> they are built to redirect <em><strong>all</strong></em> routes that they &quot;protect&quot; to the SSO auth page (in this case, apple). Even API routes. So when you load the dashboard, and the dashboard makes requests to /api/users/init, and /api/users/me, etc etc - - <em><strong>those</strong></em> requests are actually also incorrectly being redirected to your SSO login page... and showing CORS errors that result from Apple / Google / wherever<br> <br> that&#x27;s the tough part with SSO. 99% of the existing plugins out there are meant to redirect <em><strong>all</strong></em> routes if you are not authenticated, when really, you only want to redirect anything on /admin, and leave the /api routes alone. API routes should remain left as-is, because it should be possible to hit those routes without being authenticated<br> <br> there are different &quot;strategy&quot; methods out there - some are &quot;bearer strategies&quot; - and this is what you want. Basically, leave it up to the user to either auth or not auth, via header or cookie or similar. If no cookie / header / etc is found, they are simply not authenticated and the route proceeds as normal.<br> <br> but TL;DR, your CORS error is a red herring and is not the real issue here. What&#x27;s really happening is that those requests are incorrectly being redirected",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677597619427
      }
    ],
    "messageCount": 16,
    "slug": "passport-auth-strategy"
  },
  {
    "info": {
      "name": "Versioning on a new global with no past saved versions will throw an error",
      "id": "1078587209483034668",
      "guildId": "967097582721572934",
      "createdAt": 1677225629922
    },
    "intro": {
      "content": "Hello fellas,<br><br>It appears that I&#x27;m unable to save/publish anything to a new global if there isn&#x27;t already a saved/published version of that global in the DB when versioning is enabled.<br><br>Payload will throw <pre><code class=\"hljs\">TypeError: Cannot convert undefined or null to object</code></pre><br><br>I was able to remedy this by disabling versioning, saving/publishing changes such that there is one published version of the doc saved in the DB, then re-enabling versioning, which after this point no longer throws an error<br><br>Is someone able to corroborate that this happens to them too?",
      "fileAttachments": [],
      "authorID": "225910068078444544",
      "authorName": "sesons",
      "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
      "createdAtDate": 1677225629922
    },
    "messages": [
      {
        "content": "yeah happening here too at 1.6.15",
        "fileAttachments": [],
        "authorID": "189202872800378881",
        "authorName": "bobbyZ",
        "authorAvatar": "f0988915755cddd9a231cf1afaafea65",
        "createdAtDate": 1677419093014
      },
      {
        "content": "I was able to recreate this, I&#x27;m opening a new issue on Github and will be patching it today.<br> <br> I have a PR open, we&#x27;ll do some merging and get a release out sometime this week.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677522192098
      },
      {
        "content": "thanks Dan",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1677562705986
      }
    ],
    "messageCount": 4,
    "slug": "versioning-on-a-new-global-with-no-past-saved-versions-will-throw-an-error"
  },
  {
    "info": {
      "name": "CORS error after deployment even after setting permissions",
      "id": "1077768715334070392",
      "guildId": "967097582721572934",
      "createdAt": 1677030485710
    },
    "intro": {
      "content": "I&#x27;m trying to access my endpoint from a next.js app deployed on vercel, and I keep getting a cors error, even after setting cors=&quot;*&quot; in payload.config and trying to whitelist my domain on csrf.<br><br>From the browser and from the curl command it works fine, so It really looks like a cross-origin error.<br><br>I used Railway to deploy my payloadCMS backend.<br><br>The error is on the image. Any help is appreciated.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1077768715334070392/1077768715485057155/image.png",
          "name": "image.png",
          "id": "1077768715485057155",
          "size": 98577,
          "url": "https://cdn.discordapp.com/attachments/1077768715334070392/1077768715485057155/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1077768715334070392/1077768715485057155/image.png",
          "height": 701,
          "width": 946,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "970669344189218836",
      "authorName": "Lucas Delbel",
      "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
      "createdAtDate": 1677030485710
    },
    "messages": [
      {
        "content": "What&#x27;s in your console?<br> <br> you&#x27;re showing the issues tab, but can you show the console tab?<br> <br> and, you should check your Railway server logs<br> <br> instead of saying cors=* you should just whitelist all domains that you&#x27;ll be accessing from. Because you can&#x27;t have cors=* and still allow cookie auth at the same time",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677031525787
      },
      {
        "content": "In my console is this",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1077768715334070392/1077777823940493433/image.png",
            "name": "image.png",
            "id": "1077777823940493433",
            "size": 233632,
            "url": "https://cdn.discordapp.com/attachments/1077768715334070392/1077777823940493433/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1077768715334070392/1077777823940493433/image.png",
            "height": 719,
            "width": 935,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677032657424
      },
      {
        "content": "ahh good ol&#x27; axios<br> <br> i can&#x27;t find anything noteworthy from all of that info<br> <br> haha<br> <br> scrolling down, is there more?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677033006988
      },
      {
        "content": "This is all, unfortunately<br> <br> Can&#x27;t find anything noteworthy as well.. And I&#x27;m still looking for the server logs on Railway<br> <br> first time using it<br> <br> Even changing CORS to specific domains and removing csrf it keeps bringing the same error<br> <br> Man, I was relying on the cors property on payload config<br> <br> and it was not working<br> <br> just as a desperate act before giving up and going to bed, I added the express middleware for cors handling<br> <br> and it worked",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677033127560
      },
      {
        "content": "i also have a problem with allowing cors=&quot;*&quot; as well (useful for staging API with PR deployments for frontend), even with express middleware <code>cors</code>.<br><br>How did you get it to work? @Lucas Delbel",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1677035291295
      },
      {
        "content": "hey @bombnp , I&#x27;m still not sure what actually worked, I&#x27;ll check tomorrow.<br><br>But what I did was simply adding the middleware and the options for cors<br> <br> <br> <br> and I kept the cors configuration on payload.config",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677035861242
      },
      {
        "content": "ahh, mine didn&#x27;t have <code>app.options(&#x27;*&#x27;, cors())</code>. Maybe that&#x27;s why?<br> <br> guess i&#x27;ll try out later",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1677035930853
      },
      {
        "content": "Maybe, that&#x27;s what I was going to check",
        "fileAttachments": [],
        "authorID": "970669344189218836",
        "authorName": "Lucas Delbel",
        "authorAvatar": "5472ce6d1c38f9b5bc36975fd6d15987",
        "createdAtDate": 1677035944993
      },
      {
        "content": "is it safe to use cors middleware and payloads auth?",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1677047093685
      },
      {
        "content": "depending on what you&#x27;re looking to do with cors middleware<br> <br> <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSNotSupportingCredentials\">https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSNotSupportingCredentials</a><br> <br> this is not a Payload thing, it&#x27;s just an internet thing",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677072889152
      },
      {
        "content": "so, if i want to use PR deployments (like Netlify&#x27;s), which deploys a version of my website when I make a PR with different origins, and I want to connect it to my backend. How should I set the cors? I always get cors error since it&#x27;s different origin and the origin from PR deployments are always different.<br> <br> Or maybe it&#x27;s not possible?",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1677149567849
      },
      {
        "content": "Is it possible to create a new middleware? Then look up domains from a cache and write an alternative to the cors build-in payload middleware.<br>Can the idea be to look up CORS? Using origin and check that tokens belong to the same origin. Implement the separation between accounts to avoid exploitation of others&#x27; accounts.<br><br>unset config.cors and add<br>middleware:<br><pre><code class=\"hljs\">res.header(&#x27;Access-Control-Allow-Methods&#x27;, &#x27;PUT, PATCH, POST, GET, DELETE, OPTIONS&#x27;);\nres.header(&#x27;Access-Control-Allow-Headers&#x27;, &#x27;Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing&#x27;);\n\n\nif (corsTokenBelongsToOrigin(req.headers.origin, token) ) {\n  res.header(&quot;Access-Control-Allow-Credentials&quot;, &quot;true&quot;);\n  res.setHeader(&quot;Access-Control-Allow-Origin&quot;, req.headers.origin);\n}</code></pre><br> <br> Are you using the Payload API from a server render? else you can just add your public domain to cors and csrf?",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1677155496803
      },
      {
        "content": "you mean payload local api? then no. My website frontend (nextjs) and payload are deployed separately on different domain (for now). I&#x27;m thinking about merging them into single express app though.",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1677164065157
      },
      {
        "content": "Do you have a domain for your Nextjs app? If so, add that domain to your payload config cors, not the domain of the local container.",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1677243694458
      }
    ],
    "messageCount": 34,
    "slug": "cors-error-after-deployment-even-after-setting-permissions"
  },
  {
    "info": {
      "name": "How to upload to a folder in S3 bucket using cloud @payloadcms/plugin-cloud-storage?",
      "id": "1083517682332217454",
      "guildId": "967097582721572934",
      "createdAt": 1678401146253
    },
    "intro": {
      "content": "One thing that would be convenient to be able to do is to define a folder for each upload collection type I might have for a project. <br><br>For instance, if I have an <code>avatars</code> collection, it should point to an <code>avatars</code> folder on my s3 bucket and so on.",
      "fileAttachments": [],
      "authorID": "214419801039175682",
      "authorName": "Jakey",
      "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
      "createdAtDate": 1678401146253
    },
    "messages": [
      {
        "content": "set prefix to upload files inside folder in the bucket.<br><br><a href=\"https://github.com/payloadcms/plugin-cloud-storage\">https://github.com/payloadcms/plugin-cloud-storage</a>",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1678423104111
      },
      {
        "content": "oh that&#x27;s perfect, thank you @Martin R !",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1678455089482
      }
    ],
    "messageCount": 2,
    "slug": "how-to-upload-to-a-folder-in-s3-bucket-using-cloud-payloadcms-plugin-cloud-storage"
  },
  {
    "info": {
      "name": "Issues viewing a large collection (Over 8500 documents) with production mongo",
      "id": "1080527767839457300",
      "guildId": "967097582721572934",
      "createdAt": 1677688295088
    },
    "intro": {
      "content": "I have a collection with over 8500 documents and I&#x27;m getting an error in the payload client when trying to view the list of documents from our production mongo that says:<br><br><code>MongoServerError: PlanExecutor error during aggregation :: caused by :: Sort exceeded memory limit of 33554432 bytes, but did not opt in to external sorting.</code><br><br>I&#x27;ve tried setting <code>indexSortableFields</code> to true on the payload.config. Does anyone have any ideas on what can be done here? We are on an M5 cluster tier with MongoDB.",
      "fileAttachments": [],
      "authorID": "234785106026299393",
      "authorName": "David",
      "authorAvatar": null,
      "createdAtDate": 1677688295088
    },
    "messages": [
      {
        "content": "ok when you say <code>payload client</code>, do you mean the List view in the admin UI?<br> <br> we need to enable the aggregation property <code>allowDiskUse</code><br> <br> I also assume that this is on a collection with versions enabled<br> <br> what is happening is that we need to sort a large set of documents, and you have too many which is causing memory issues<br> <br> i would suggest setting your versions / drafts config property <code>maxPerDoc</code> to a low number",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677691292770
      },
      {
        "content": "Yes, I meant the list view in the admin UI.<br><br>And yes, this is also on a collection with versions enabled. We only have 1 version for each doc at the moment but I&#x27;ll try lowering the amount in the config to see if that helps.<br> <br> Is the property of <code>allowDiskUse</code> something we can enable on our end or would this require a payload update?<br> <br> Also with some further testing if I set maxPerDoc to 1 it still has the issue.<br><br>If I disable versions for this collection the documents do render in the list UI however.",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677692257153
      },
      {
        "content": "allowDiskUse needs to be set by Payload but you could directly edit your <code>node_modules/payload/dist</code> to see if that will fix your issue (i am pretty confident it will)<br> <br> file to be changed is here:<br> <br> <a href=\"https://github.com/payloadcms/payload/blob/master/src/versions/drafts/queryDrafts.ts#L54\">https://github.com/payloadcms/payload/blob/master/src/versions/drafts/queryDrafts.ts#L54</a><br> <br> and here is a screenshot of me editing the <code>/dist</code> version:<br> <br> <br> <br> clearly i am feeling like a 🤠 right now",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677693247573
      },
      {
        "content": "Hmm i&#x27;ve just tried editing the file and restarting my local server but still having the same issue:",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080527767839457300/1080550988001312849/image.png",
            "name": "image.png",
            "id": "1080550988001312849",
            "size": 131218,
            "url": "https://cdn.discordapp.com/attachments/1080527767839457300/1080550988001312849/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080527767839457300/1080550988001312849/image.png",
            "height": 524,
            "width": 1374,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677693831259
      },
      {
        "content": "hmm, that seems strange<br> <br> same exact error?<br> <br> <a href=\"https://www.mongodb.com/docs/atlas/reference/free-shared-limitations/?_ga=2.176267877.1329169847.1677683154-860992573.1647438381#operational-limitations\">https://www.mongodb.com/docs/atlas/reference/free-shared-limitations/?_ga=2.176267877.1329169847.1677683154-860992573.1647438381#operational-limitations</a><br> <br> looks like M5 clusters don&#x27;t support allowDiskUse, which is very good to know<br> <br> maybe we can figure out a smarter way around this",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677694405741
      },
      {
        "content": "Oh<br> <br> ah i see:<br> <br> I&#x27;m going to try bumping to M10 in the interim but this interesting and also good to know!",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677694555122
      },
      {
        "content": "ok - keep me posted<br> <br> i am not sure about how to get around this otherwise<br> <br> one other thing to note, <code>allowDiskUse</code> seems to be <code>true</code> by default on Mongo 6.0+<br> <br> so you might not need to hijack your <code>node_modules</code> like a maniac (me) if you are using 6.0+",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677695020892
      },
      {
        "content": "We&#x27;re on Mongo 5.0 at the moment. Will confirm in a couple minutes.<br> <br> @jmikrut <br>Okay! I can confirm upgrading to an m10 cluster works!",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677695664410
      },
      {
        "content": "beautiful - did you still have your node_modules fix?<br> <br> or should we set this in code? PS - would be a great PR for you to make if you&#x27;re up for it 👼",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677695788037
      },
      {
        "content": "Just deleting the change to my node_modules...<br> <br> It actually seems to work just fine",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677695884775
      },
      {
        "content": "ok awesome<br> <br> sucky that the database has gotta be more expensive - i will keep this on the radar to see if it&#x27;s possible to do this in a better way",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677695916369
      },
      {
        "content": "Awesome thanks for the support! Yeah this will work fine for us in the interim but would be great for others if a similar issue didn&#x27;t require the higher dedicated server.<br> <br> Sure I could. Would it make sense to hard code allowDiskUse in the query or have this as an optional parameter somewhere? I guess if the m10 cluster seems to solve it at mongo 5.0 though maybe not quite necessary yet?",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677696024543
      },
      {
        "content": "hard code makes sense<br> <br> i think it&#x27;s only leveraged if it&#x27;s necessary<br> <br> automatically",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677696865135
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/pull/2216\">https://github.com/payloadcms/payload/pull/2216</a><br> <br> PR is here. Feel free to update wording in the note in docs.",
        "fileAttachments": [],
        "authorID": "234785106026299393",
        "authorName": "David",
        "authorAvatar": null,
        "createdAtDate": 1677701421543
      }
    ],
    "messageCount": 42,
    "slug": "issues-viewing-a-large-collection-over-8500-documents-with-production-mongo"
  },
  {
    "info": {
      "name": "TypeError When viewing Versions",
      "id": "1076253386342674474",
      "guildId": "967097582721572934",
      "createdAt": 1676669203125
    },
    "intro": {
      "content": "TypeError: Cannot read properties of undefined (reading &#x27;label&#x27;)<br><br>Whenever I go to specific Versions documents I get this error. I&#x27;m unsure as to exactly what causes the error because the Admin UI goes completely blank whenever I get it. It only happens on certain versions of documents. I&#x27;ve solved similar problems in validation functions that usually require adding a missing question mark (<code>?.label</code>) but am unsure of exactly where the error is coming from or what causes it so I&#x27;m not sure how to provide more context. Could this be because of a validation function or something I have written? Or is it a Payload issue? I would assume it&#x27;s a Payload issue because it&#x27;s in a document&#x27;s Versions which I haven&#x27;t messed with besides enabling them.<br><br>Included in the pictures is an example of a Version document that&#x27;s breaking when I try to view it in the Admin UI. If there&#x27;s any other information I can provide please let me know!",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1076253386342674474/1076253386720149584/image.png",
          "name": "image.png",
          "id": "1076253386720149584",
          "size": 141153,
          "url": "https://cdn.discordapp.com/attachments/1076253386342674474/1076253386720149584/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1076253386342674474/1076253386720149584/image.png",
          "height": 412,
          "width": 1448,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1076253386342674474/1076253387017957486/image.png",
          "name": "image.png",
          "id": "1076253387017957486",
          "size": 190824,
          "url": "https://cdn.discordapp.com/attachments/1076253386342674474/1076253387017957486/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1076253386342674474/1076253387017957486/image.png",
          "height": 880,
          "width": 1038,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "408784184765710337",
      "authorName": "TheDunco",
      "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
      "createdAtDate": 1676669203125
    },
    "messages": [
      {
        "content": "Hi @TheDunco - what version of payload are you on? we will try to replicate this",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676916857120
      },
      {
        "content": "Hi! I&#x27;ve been experiencing this since Payload ^1.5 and am still experiencing it on v1.6.11 which is the version I&#x27;m currently running",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676919055629
      },
      {
        "content": "@TheDunco this is in production, right? Any way to replicate this issue in development so that the error message is more helpful?<br> <br> Alternatively, you could click on the top line in your error message to see where the error is coming from within the compiled code",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676926058963
      },
      {
        "content": "Ah yes, sorry, my original message contained what it looked like in development...",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076253386342674474/1077331852492283934/image.png",
            "name": "image.png",
            "id": "1077331852492283934",
            "size": 168336,
            "url": "https://cdn.discordapp.com/attachments/1076253386342674474/1077331852492283934/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1076253386342674474/1077331852492283934/image.png",
            "height": 740,
            "width": 782,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676926329540
      },
      {
        "content": "@dribbens something to look into here probably regarding <code>getTranslatedOptions</code><br> <br> probably a case of having bad data, BUT, we should be able to make that function &quot;safer&quot; so that it won&#x27;t crash",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676926465332
      },
      {
        "content": "I was thinking the same.<br> <br> I&#x27;ll take a 👀 . Might have trouble without steps to reproduce.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676926536173
      },
      {
        "content": "It seems to me like adding optional chaining and/or ternaries to wherever the <code>field.label</code> is accessed in that file should solve my particular issue. Is there a way to build and use the Payload dep locally so I could try this out myself?<br> <br> Otherwise improving the safety of that function overall should fix the issue, but if it would help to narrow it down since I can&#x27;t provide steps to reproduce I&#x27;m willing to try that",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676927326653
      },
      {
        "content": "yes, you just need a local Mongo running. from there, just pull down Payload and run <code>yarn dev versions</code> to get a versions test environment set up<br> <br> but you can run <code>yarn dev [any-test-folder]</code> and develop against a lot of stuff. in this case, <code>versions</code> is the move for you i&#x27;d expect",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676927604508
      },
      {
        "content": "Sweet, thanks! I was just checking and I&#x27;m actually having trouble reproducing myself, but this is an issue I&#x27;ve seen all over the place. Just kinda hard to nail down. I checked the document that was previously causing issues and it doesn&#x27;t seem to be an issue anymore, although there seem to be less versions now than before when it was causing issues 🤷<br> <br> This is in production and I have multiple designers working on it so someone else probably messed with it and fixed it unwittingly",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676928194256
      },
      {
        "content": "I thought I found where this could be happening but after some testing I couldn&#x27;t reproduce it.<br> <br> Oh nvm, I think I know<br> <br> I believe it is because this function could return null from a <code>find</code> not working if options have changed on the collection config.<br><a href=\"https://github.com/payloadcms/payload/blob/d9d2b6c383b55d570473f66bbf5dcfc669bb168b/src/admin/components/views/Version/RenderFieldsToDiff/fields/Select/index.tsx#L15\">https://github.com/payloadcms/payload/blob/d9d2b6c383b55d570473f66bbf5dcfc669bb168b/src/admin/components/views/Version/RenderFieldsToDiff/fields/Select/index.tsx#L15</a><br> <br> This file could be cleaned up, looks like I got kind of wild on it.<br> <br> I can sort this out, but not right now.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676929257921
      },
      {
        "content": "Cool, thanks for looking into this! It&#x27;s not super urgent, just thought I&#x27;d report!",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676992051873
      },
      {
        "content": "Issue created:<a href=\"https://github.com/payloadcms/payload/issues/2162\">https://github.com/payloadcms/payload/issues/2162</a> and I have a PR that addresses this: <a href=\"https://github.com/payloadcms/payload/pull/2163\">https://github.com/payloadcms/payload/pull/2163</a><br>That will be released probably next week.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677078050050
      },
      {
        "content": "Awesome, thank you!<br> <br> I&#x27;m glad you were able to figure out that it was related to changing options in select fields, that&#x27;s definitely what broke things for me",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1677100608709
      }
    ],
    "messageCount": 24,
    "slug": "typeerror-when-viewing-versions"
  },
  {
    "info": {
      "name": "Typescript error on .create() of `upload collection`",
      "id": "1080760782888902656",
      "guildId": "967097582721572934",
      "createdAt": 1677743850205
    },
    "intro": {
      "content": "<pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> pMedia = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;images&#x27;</span>,\n    <span class=\"hljs-attr\">filePath</span>: tmpFilePath,\n    <span class=\"hljs-attr\">data</span>: {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;name&#x27;</span>,\n      <span class=\"hljs-attr\">alt</span>: <span class=\"hljs-string\">&#x27;alt&#x27;</span>\n    }\n  });</code></pre><br><br>The above code works, but my IDE throws the following typescript error on the <code>data</code> property:<br><pre><code class=\"hljs javascript\"><span class=\"hljs-title class_\">TS2322</span>: <span class=\"hljs-title class_\">Type</span> <span class=\"hljs-string\">&#x27;{ name: string; alt: string; }&#x27;</span> is not assignable to type <span class=\"hljs-string\">&#x27;MarkOptional&lt;Image, &quot;id&quot; | &quot;updatedAt&quot; | &quot;createdAt&quot;&gt;&#x27;</span>.   <span class=\"hljs-title class_\">Property</span> <span class=\"hljs-string\">&#x27;sizes&#x27;</span> is missing <span class=\"hljs-keyword\">in</span> type <span class=\"hljs-string\">&#x27;{ name: string; alt: string; }&#x27;</span> but required <span class=\"hljs-keyword\">in</span> type <span class=\"hljs-string\">&#x27;Omit&lt;Image, &quot;id&quot; | &quot;updatedAt&quot; | &quot;createdAt&quot;&gt;&#x27;</span>.</code></pre><br><br>I copied the image collection from the docs (<a href=\"https://payloadcms.com/docs/upload/overview\">https://payloadcms.com/docs/upload/overview</a>), I only added some <code>fields</code>. It looks like this:<br><br><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Images</span>: <span class=\"hljs-title class_\">CollectionConfig</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;images&#x27;</span>,\n  <span class=\"hljs-attr\">access</span>: {\n    <span class=\"hljs-attr\">read</span>: <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-literal\">true</span>\n  },\n  <span class=\"hljs-attr\">fields</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;name&#x27;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text&#x27;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;alt&#x27;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text&#x27;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>\n    }\n  ],\n  <span class=\"hljs-attr\">upload</span>: {\n    <span class=\"hljs-attr\">staticURL</span>: <span class=\"hljs-string\">&#x27;/images&#x27;</span>,\n    <span class=\"hljs-attr\">staticDir</span>: imagesPath,\n    <span class=\"hljs-attr\">imageSizes</span>: [\n      {\n        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;thumbnail&#x27;</span>,\n        <span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">400</span>,\n        <span class=\"hljs-attr\">height</span>: <span class=\"hljs-number\">300</span>,\n        <span class=\"hljs-attr\">position</span>: <span class=\"hljs-string\">&#x27;centre&#x27;</span>\n      },\n      {\n        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;card&#x27;</span>,\n        <span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">768</span>,\n        <span class=\"hljs-attr\">height</span>: <span class=\"hljs-number\">1024</span>,\n        <span class=\"hljs-attr\">position</span>: <span class=\"hljs-string\">&#x27;centre&#x27;</span>\n      },\n      {\n        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;tablet&#x27;</span>,\n        <span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">1024</span>,\n        <span class=\"hljs-attr\">height</span>: <span class=\"hljs-literal\">undefined</span>,\n        <span class=\"hljs-attr\">position</span>: <span class=\"hljs-string\">&#x27;centre&#x27;</span>\n      }\n    ],\n    <span class=\"hljs-attr\">adminThumbnail</span>: <span class=\"hljs-string\">&#x27;thumbnail&#x27;</span>,\n    <span class=\"hljs-attr\">mimeTypes</span>: [<span class=\"hljs-string\">&#x27;image/*&#x27;</span>]\n  }\n};</code></pre><br><br>Am I doing something wrong? Thanks in advance!<br> <br> Hm. Looking at the documentation (<a href=\"https://payloadcms.com/docs/upload/overview#image-sizes\">https://payloadcms.com/docs/upload/overview#image-sizes</a>) I gather that the <code>imageSizes</code> is used to automatically rescale the image (which it does). So why should I add <code>sizes</code> key to the <code>data</code> object? What is it used for?<br> <br> Thanks for answering btw!",
      "fileAttachments": [],
      "authorID": "399871533276987392",
      "authorName": "Twoxic",
      "authorAvatar": null,
      "createdAtDate": 1677743850205
    },
    "messages": [
      {
        "content": "@Twoxic I believe you are correct, it is a TS issue and not related to the shape of data you are sending. Sizes is created for you and you should not need to send it - we just need to adjust our types on upload collections create/update to not require <code>sizes</code>.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678196732169
      }
    ],
    "messageCount": 3,
    "slug": "typescript-error-on-create-of-upload-collection"
  },
  {
    "info": {
      "name": "How to add custom heading for group of fields?",
      "id": "1080933685198606468",
      "guildId": "967097582721572934",
      "createdAt": 1677785073328
    },
    "intro": {
      "content": "I am trying to add a custom heading for group of fields, is there an option to do that? So I want to create a heading called &quot;Information&quot; and under it, have Username, password and etc. Another heading called &quot;Contact Info&quot; and have the email, phone and etc. Right now all the fields show right after each other, but I want to group them.",
      "fileAttachments": [],
      "authorID": "944284724824801302",
      "authorName": "generator101",
      "authorAvatar": null,
      "createdAtDate": 1677785073328
    },
    "messages": [
      {
        "content": "Hey there!<br>I believe what you are looking for is the Group Field. It required a name and fields attribute and will take the name property as the heading and also as the name of the object it&#x27;s fields will be put in. This is also the structure it will have when you query the field.<br><br>You can find a link to the documentation below. If you have any further questions, don&#x27;t hesitate to contact me and I&#x27;ll do my best to help you :)<br><br><a href=\"https://payloadcms.com/docs/fields/group\">https://payloadcms.com/docs/fields/group</a>",
        "fileAttachments": [],
        "authorID": "252520518945603585",
        "authorName": "MichaelBOOM",
        "authorAvatar": "c332a63449b4311dc59675b9bd6a45d1",
        "createdAtDate": 1677785793008
      },
      {
        "content": "yes, this is it<br> <br> thank you",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677787448445
      }
    ],
    "messageCount": 3,
    "slug": "how-to-add-custom-heading-for-group-of-fields"
  },
  {
    "info": {
      "name": "Fresh installation stuck on \"loading\"",
      "id": "1077313223134556311",
      "guildId": "967097582721572934",
      "createdAt": 1676921887907
    },
    "intro": {
      "content": "I have rather peculiar problem. I wanted to try out Payload, installed it from Docker to make sure everything is setup correctly. I can run the application, but creating first user has &quot;Loading&quot; overlay that never goes away. Any idea what might be wrong? Thanks!",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1077313223134556311/1077313223323295795/image.png",
          "name": "image.png",
          "id": "1077313223323295795",
          "size": 35561,
          "url": "https://cdn.discordapp.com/attachments/1077313223134556311/1077313223323295795/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1077313223134556311/1077313223323295795/image.png",
          "height": 911,
          "width": 927,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "588809189061558275",
      "authorName": "shade",
      "authorAvatar": "55bdd87589e672240165daf41b3ac1b4",
      "createdAtDate": 1676921887907
    },
    "messages": [
      {
        "content": "Anything in the docker output logs or console logs?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676926011144
      },
      {
        "content": "Yep I&#x27;d look in the Network panel in your browser&#x27;s inspector for a request that is 500&#x27;ing or similar. Then look at what the server returned in the response",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676926528491
      }
    ],
    "messageCount": 2,
    "slug": "fresh-installation-stuck-on-loading"
  },
  {
    "info": {
      "name": "Are Layouts in the Demo the Block field?",
      "id": "1075911141680758864",
      "guildId": "967097582721572934",
      "createdAt": 1676587605639
    },
    "intro": {
      "content": "Just making sure the Add Layout is indeed a Block Field with a title of &quot;Layout&quot; and not some Layout specific field, which I&#x27;m not seeing in the docs. <br><br>Aside:: I would have asked such a quick and simple question in general, but I knew you&#x27;re trying to create a spot for others to find the content too.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1075911141680758864/1075911141831737425/block.png",
          "name": "block.png",
          "id": "1075911141831737425",
          "size": 13866,
          "url": "https://cdn.discordapp.com/attachments/1075911141680758864/1075911141831737425/block.png",
          "proxyURL": "https://media.discordapp.net/attachments/1075911141680758864/1075911141831737425/block.png",
          "height": 434,
          "width": 538,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "374759691810766849",
      "authorName": "Natetronn",
      "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
      "createdAtDate": 1676587605639
    },
    "messages": [
      {
        "content": "Yes, you are right, &quot;Layout&quot; is a block field<br> <br> <br> <br> <a href=\"https://github.com/payloadcms/public-demo/blob/25db41568d78264ba99baf103afdea84f0976ed1/src/collections/Posts.ts\">https://github.com/payloadcms/public-demo/blob/25db41568d78264ba99baf103afdea84f0976ed1/src/collections/Posts.ts</a>",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1676589040666
      },
      {
        "content": "Great, thanks! I didn&#x27;t see there was a repo of the demo, that would have helped me answer my own question lol<br> <br> I guess I should have read the fine print while logging in:",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676589098283
      },
      {
        "content": "🤣",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1676589185738
      },
      {
        "content": "<blockquote>&quot;The code for this demo is open source and can be found here.&quot;<br></blockquote> <br> Thanks for the assist @Marťafiixek",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676589188615
      },
      {
        "content": "No problem 🙂",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1676589245183
      }
    ],
    "messageCount": 9,
    "slug": "are-layouts-in-the-demo-the-block-field"
  },
  {
    "info": {
      "name": "Is is possible to have an optional unique field?",
      "id": "1071899413536055387",
      "guildId": "967097582721572934",
      "createdAt": 1675631135115
    },
    "intro": {
      "content": "It seems that unique implies required.",
      "fileAttachments": [],
      "authorID": "476523795251855360",
      "authorName": "thgh",
      "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
      "createdAtDate": 1675631135115
    },
    "messages": [
      {
        "content": "Not true. I’ve had many occasions in other systems where I needed SQL indexes for “unique or null”",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675666356913
      },
      {
        "content": "Agree, how to do it in payload?",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1675667483899
      },
      {
        "content": "Could you do it in a custom validate function?",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675695086862
      },
      {
        "content": "Probably, but I think that would introduce a potential race condition. Created a discussion over here: <a href=\"https://github.com/payloadcms/payload/discussions/2072\">https://github.com/payloadcms/payload/discussions/2072</a>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1676276146369
      },
      {
        "content": "Going to mark an answered as the discussion has moved to github here.",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676913993501
      }
    ],
    "messageCount": 5,
    "slug": "is-is-possible-to-have-an-optional-unique-field"
  },
  {
    "info": {
      "name": "Problem with custom auth strategy",
      "id": "1041405431387533442",
      "guildId": "967097582721572934",
      "createdAt": 1668360803220
    },
    "intro": {
      "content": "I created a google oauth strategy with passport, I added it to payload and in the login everything works well (you can login, generate a token, and the token is set to the payload-token http-only cookie) but in the admin panel I can&#x27;t access, also, the api isn&#x27;t working, i&#x27;m getting this error in the console for the admin<br> <br> <br> <br> <br> <br> My users collection:<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">GoogleStrategy</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../auth/google&quot;</span>;\n<span class=\"hljs-keyword\">import</span> finalise <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../auth/jwt&quot;</span>;\n<span class=\"hljs-keyword\">import</span> passport <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;passport&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Users</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n  <span class=\"hljs-attr\">auth</span>: {\n    <span class=\"hljs-attr\">tokenExpiration</span>: <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">7</span>, <span class=\"hljs-comment\">// 1 week</span>\n    <span class=\"hljs-attr\">verify</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">maxLoginAttempts</span>: <span class=\"hljs-number\">5</span>,\n    <span class=\"hljs-attr\">lockTime</span>: <span class=\"hljs-number\">600</span> * <span class=\"hljs-number\">1000</span>,\n    <span class=\"hljs-attr\">useAPIKey</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">strategies</span>: [\n      {\n        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;google&quot;</span>,\n        <span class=\"hljs-attr\">strategy</span>: <span class=\"hljs-title class_\">GoogleStrategy</span>,\n      },\n    ],\n  },\n  <span class=\"hljs-attr\">endpoints</span>: [\n    {\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/google&quot;</span>,\n      <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&quot;get&quot;</span>,\n      <span class=\"hljs-attr\">handler</span>: <span class=\"hljs-keyword\">async</span> (req, res) =&gt; {\n        passport.<span class=\"hljs-title function_\">authenticate</span>(<span class=\"hljs-string\">&quot;google&quot;</span>, {\n          <span class=\"hljs-attr\">scope</span>: [<span class=\"hljs-string\">&quot;profile&quot;</span>, <span class=\"hljs-string\">&quot;email&quot;</span>],\n        })(req, res);\n      },\n    },\n    {\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/google/callback&quot;</span>,\n      <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&quot;get&quot;</span>,\n      <span class=\"hljs-attr\">handler</span>: <span class=\"hljs-keyword\">async</span> (req, res) =&gt; {\n        req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-title function_\">authenticate</span>(req, res, <span class=\"hljs-function\">() =&gt;</span> {\n          <span class=\"hljs-keyword\">if</span> (req?.<span class=\"hljs-property\">user</span>) {\n            <span class=\"hljs-keyword\">const</span> final = <span class=\"hljs-title function_\">finalise</span>(req, res);\n            <span class=\"hljs-keyword\">return</span> final.<span class=\"hljs-property\">res</span>.<span class=\"hljs-title function_\">status</span>(<span class=\"hljs-number\">200</span>).<span class=\"hljs-title function_\">send</span>({ <span class=\"hljs-attr\">token</span>: final.<span class=\"hljs-property\">token</span> });\n          }\n          <span class=\"hljs-keyword\">return</span> res.<span class=\"hljs-title function_\">status</span>(<span class=\"hljs-number\">401</span>).<span class=\"hljs-title function_\">send</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Unauthorized&quot;</span> });\n        });\n      },\n    },\n  ],\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">Users</span>;</code></pre><br> <br> the google strategy:<br> <br> <pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> payload <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Strategy</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;passport-google-oauth20&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { v4 <span class=\"hljs-keyword\">as</span> uuidv4 } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;uuid&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Forbidden</span>, <span class=\"hljs-title class_\">LockedAuth</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/errors&quot;</span>;\n\n<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;dotenv&quot;</span>).<span class=\"hljs-title function_\">config</span>();\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">GoogleStrategy</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Strategy</span>(\n  {\n    <span class=\"hljs-attr\">clientID</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">GOOGLE_CLIENT_ID</span>,\n    <span class=\"hljs-attr\">clientSecret</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">GOOGLE_CLIENT_SECRET</span>,\n    <span class=\"hljs-attr\">callbackURL</span>: <span class=\"hljs-string\">&quot;/api/users/google/callback&quot;</span>,\n    <span class=\"hljs-attr\">scope</span>: [<span class=\"hljs-string\">&quot;profile&quot;</span>, <span class=\"hljs-string\">&quot;email&quot;</span>],\n  },\n  <span class=\"hljs-keyword\">async</span> (accessToken, refreshToken, profile, done) =&gt; {\n    <span class=\"hljs-keyword\">const</span> { emails } = profile;\n    <span class=\"hljs-keyword\">const</span> email = emails[<span class=\"hljs-number\">0</span>]?.<span class=\"hljs-property\">value</span>;\n\n    <span class=\"hljs-keyword\">if</span> (!email) {\n      <span class=\"hljs-title function_\">done</span>(<span class=\"hljs-title class_\">Forbidden</span>, <span class=\"hljs-literal\">false</span>);\n    }\n\n    <span class=\"hljs-keyword\">try</span> {\n      <span class=\"hljs-keyword\">let</span> user = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">find</span>({\n        <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n        <span class=\"hljs-attr\">where</span>: {\n          <span class=\"hljs-attr\">email</span>: {\n            <span class=\"hljs-attr\">equals</span>: email,\n          },\n        },\n      });\n\n      <span class=\"hljs-keyword\">if</span> (user?.<span class=\"hljs-property\">totalDocs</span> &gt; <span class=\"hljs-number\">0</span>) {\n        user = user.<span class=\"hljs-property\">docs</span>[<span class=\"hljs-number\">0</span>];\n      }\n\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">isLocked</span> = (<span class=\"hljs-params\">date</span>) =&gt; !!(date &amp;&amp; date &gt; <span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">now</span>());\n      <span class=\"hljs-keyword\">if</span> (user &amp;&amp; <span class=\"hljs-title function_\">isLocked</span>(user.<span class=\"hljs-property\">lockUntil</span>)) {\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LockedAuth</span>();\n      }\n\n      <span class=\"hljs-keyword\">if</span> (user?.<span class=\"hljs-property\">totalDocs</span> &lt; <span class=\"hljs-number\">1</span>) {\n        user = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">create</span>({\n          <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n          <span class=\"hljs-attr\">data</span>: {\n            email,\n            <span class=\"hljs-attr\">password</span>: <span class=\"hljs-title function_\">uuidv4</span>(),\n            <span class=\"hljs-attr\">avatar</span>: <span class=\"hljs-string\">&quot;1&quot;</span>,\n            <span class=\"hljs-attr\">_verified</span>: <span class=\"hljs-literal\">true</span>,\n          },\n          <span class=\"hljs-attr\">disableVerificationEmail</span>: <span class=\"hljs-literal\">true</span>,\n        });\n      }\n\n      <span class=\"hljs-keyword\">if</span> (user) {\n        user.<span class=\"hljs-property\">collection</span> = <span class=\"hljs-string\">&quot;users&quot;</span>;\n        user.<span class=\"hljs-property\">_strategy</span> = <span class=\"hljs-string\">&quot;google&quot;</span>;\n        <span class=\"hljs-title function_\">done</span>(<span class=\"hljs-literal\">null</span>, user);\n      } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-title function_\">done</span>(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">false</span>);\n      }\n    } <span class=\"hljs-keyword\">catch</span> (e) {\n      <span class=\"hljs-title function_\">done</span>(e, <span class=\"hljs-literal\">false</span>);\n    }\n  }\n);\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">GoogleStrategy</span>;</code></pre><br> <br> token:<br> <br> <pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> jwt <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;jsonwebtoken&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">finalise</span> = (<span class=\"hljs-params\">req, res</span>) =&gt; {\n  <span class=\"hljs-keyword\">let</span> user = req.<span class=\"hljs-property\">user</span>;\n  user = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(user));\n  user = <span class=\"hljs-title function_\">sanitizeInternalFields</span>(user);\n\n  <span class=\"hljs-keyword\">const</span> collections = req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-property\">collections</span>;\n  <span class=\"hljs-keyword\">const</span> userCollection = collections[req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-property\">config</span>.<span class=\"hljs-property\">admin</span>.<span class=\"hljs-property\">user</span>];\n  <span class=\"hljs-keyword\">const</span> collectionConfig = userCollection.<span class=\"hljs-property\">config</span>;\n\n  <span class=\"hljs-keyword\">const</span> fieldsToSign = <span class=\"hljs-title function_\">getFieldsToSign</span>(collectionConfig, user);\n\n  <span class=\"hljs-keyword\">const</span> token = jwt.<span class=\"hljs-title function_\">sign</span>(fieldsToSign, req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-property\">secret</span>, {\n    <span class=\"hljs-attr\">expiresIn</span>: collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">tokenExpiration</span>,\n  });\n\n  <span class=\"hljs-keyword\">const</span> cookieOptions = {\n    <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/&quot;</span>,\n    <span class=\"hljs-attr\">httpOnly</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">expires</span>: <span class=\"hljs-title function_\">getCookieExpiration</span>(collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">tokenExpiration</span>),\n    <span class=\"hljs-attr\">secure</span>: collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-property\">secure</span>,\n    <span class=\"hljs-attr\">sameSite</span>: collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-property\">sameSite</span>,\n    <span class=\"hljs-attr\">domain</span>: <span class=\"hljs-literal\">undefined</span>,\n  };\n\n  <span class=\"hljs-keyword\">if</span> (collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-property\">domain</span>) {\n    cookieOptions.<span class=\"hljs-property\">domain</span> = collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-property\">domain</span>;\n  }\n\n  res.<span class=\"hljs-title function_\">cookie</span>(<span class=\"hljs-string\">`payload-token`</span>, token, cookieOptions);\n\n  req.<span class=\"hljs-property\">user</span> = user;\n\n  <span class=\"hljs-keyword\">return</span> { req, res, token };\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> finalise;</code></pre><br> <br> any ideas?",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1041405431387533442/1041405483887640726/image.png",
          "name": "image.png",
          "id": "1041405483887640726",
          "size": 64922,
          "url": "https://cdn.discordapp.com/attachments/1041405431387533442/1041405483887640726/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1041405431387533442/1041405483887640726/image.png",
          "height": 472,
          "width": 567,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "710199181305839707",
      "authorName": "ScriptDroid",
      "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
      "createdAtDate": 1668360803220
    },
    "messages": [
      {
        "content": "have you set all the relevant origins and callbacks in cloud console?<br> <br> <br> <br> make sure to add both localhost and localhost:3100 in your case<br> <br> and by the way, I updated the google-one-tap plugin yesterday so it should work out the box now",
        "fileAttachments": [],
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1668441210863
      },
      {
        "content": "how to use it for auth from client?",
        "fileAttachments": [],
        "authorID": "680820827804925953",
        "authorName": "Sora",
        "authorAvatar": "84460ba76680abd54e80ab5954aa3a6e",
        "createdAtDate": 1668442538165
      },
      {
        "content": "Its not built for auth from client, just as an auth for payloadcms admin. Auth from client depends a lot on what client but you should be able to quite easily copy the code in my repo and make the necessary adjustments. The main difference would be that I save the jwt token using payloads setToken useAuth whereas you would be wanting to do similar client side:<br><a href=\"https://github.com/ScottEAdams/payload-plugin-google-one-tap/blob/main/src/components/button.tsx\">https://github.com/ScottEAdams/payload-plugin-google-one-tap/blob/main/src/components/button.tsx</a>",
        "fileAttachments": [],
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1668443949266
      },
      {
        "content": "oh thank you, I made a little fork for my project<br> <br> @7wonders any toughs on this?",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668447536011
      },
      {
        "content": "Sorry, been offline a bunch. Have you got the <code>app.use(express.json())</code>",
        "fileAttachments": [],
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1669147077675
      },
      {
        "content": "yes, but it stills not work<br> <br> Now the problem is when an account does not exits resolves with a 401 code<br> <br> <br> <br> @7wonders I think i got the problem<br> <br> seems like the plugin cannot access to accounts that are not created yet<br> <br> so you can&#x27;t cerate an account in payload using this method<br> <br> any thougs in how can i make that?",
        "fileAttachments": [],
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669149976098
      },
      {
        "content": "As soon as I add this plugin to payload, the application does not compile:<br><br><pre><code class=\"hljs\">BREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.</code></pre><br> <br> Any change we can peek inside the  <pre><code class=\"hljs\">sanitizeInternalFields, getFieldsToSign and getCookieExpiration</code></pre> functions?",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1671543949638
      },
      {
        "content": "@ScriptDroid was your initial problem solved by entering all origins &amp; callbacks in the cloud console?<br> <br> @7wonders do you have any suggestions what else might be the problem if I can&#x27;t access the admin panel? I made sure the URLs are set in the google console. (and once I open any api route in the browser it redirects me to the google sign-up form)",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677533201570
      },
      {
        "content": "Really sorry, I havent been very active the last couple of months. I will see if I can check the plugins out this week and get some updating done.<br> <br> But remember that its completely open source so you are welcome to submit pull requests with fixes 🙂",
        "fileAttachments": [],
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1677608938926
      }
    ],
    "messageCount": 30,
    "slug": "problem-with-custom-auth-strategy"
  },
  {
    "info": {
      "name": "Self referencing blocks",
      "id": "1083509923171815464",
      "guildId": "967097582721572934",
      "createdAt": 1678399296325
    },
    "intro": {
      "content": "I think I can keep this one short: is it possible to specify a Block that contains itself as a block in payload?",
      "fileAttachments": [],
      "authorID": "252520518945603585",
      "authorName": "MichaelBOOM",
      "authorAvatar": "c332a63449b4311dc59675b9bd6a45d1",
      "createdAtDate": 1678399296325
    },
    "messages": [
      {
        "content": "What is your goal with that?",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1678424993380
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/discussions/1275\">https://github.com/payloadcms/payload/discussions/1275</a>",
        "fileAttachments": [],
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1678434747022
      },
      {
        "content": "@Martin R the goal is to build a POC of a layout builder and for that it would be good to have a Container block that can contain other container blocks.<br><br>@fewbar thanks a lot for the link, I believe that should be exactly what I need :)",
        "fileAttachments": [],
        "authorID": "252520518945603585",
        "authorName": "MichaelBOOM",
        "authorAvatar": "c332a63449b4311dc59675b9bd6a45d1",
        "createdAtDate": 1678530893586
      }
    ],
    "messageCount": 3,
    "slug": "self-referencing-blocks"
  },
  {
    "info": {
      "name": "Can We collaborate with Paylaod CMS?",
      "id": "1075256043220783194",
      "guildId": "967097582721572934",
      "createdAt": 1676431417995
    },
    "intro": {
      "content": "Hey Sophia! This is Vincent from the ILLA team, we are building an open-source low-code tool for developers. Our Repo is here: <a href=\"https://github.com/illacloud/illa-builder\">https://github.com/illacloud/illa-builder</a>, Do you think we can build a collaboration with your product? Since your product is headless and our product is UI libaray as a head if you can combine.",
      "fileAttachments": [],
      "authorID": "998777068785520760",
      "authorName": "silencer.xyz",
      "authorAvatar": "193babc99125d2e80dd13aa3cc219f0d",
      "createdAtDate": 1676431417995
    },
    "messages": [
      {
        "content": "@silencer.xyz Of course! Payload was built with this type of integration in mind 👍",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676470990613
      },
      {
        "content": "dope!",
        "fileAttachments": [],
        "authorID": "998777068785520760",
        "authorName": "silencer.xyz",
        "authorAvatar": "193babc99125d2e80dd13aa3cc219f0d",
        "createdAtDate": 1676641465052
      }
    ],
    "messageCount": 2,
    "slug": "can-we-collaborate-with-paylaod-cms"
  },
  {
    "info": {
      "name": "Replacing useMemo with useState?",
      "id": "1067085240062984254",
      "guildId": "967097582721572934",
      "createdAt": 1674483346716
    },
    "intro": {
      "content": "Currently, when I try to set a custom elements or leaves in the richText, I get <code>Cannot find a descendant at path</code> error which causes because useMemo is reevaluated on reloads so we might need to use useState instead?<br><a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/RichText/RichText.tsx#L155\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/RichText/RichText.tsx#L155</a><br>Related issue: <a href=\"https://github.com/ianstormtaylor/slate/issues/4081\">https://github.com/ianstormtaylor/slate/issues/4081</a><br> <br> @Jarrod any thoughts?",
      "fileAttachments": [],
      "authorID": "1050078247209140286",
      "authorName": "Mng",
      "authorAvatar": null,
      "createdAtDate": 1674483346716
    },
    "messages": [
      {
        "content": "This is probably due to your implementation, and you might be attempting to use an improper path or location<br> <br> that error is common when you try to update a node&#x27;s properties (or similar) but the path that you&#x27;re trying to do that against is not valid<br> <br> we do this often within Slate, all over the place in fact - so it&#x27;s not something that is related to our use of <code>useMemo</code> vs. <code>useState</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443143210
      },
      {
        "content": "@jmikrut hmm, all i wanted to do is overriding the elements in the richText so thats what i did<br><code>&lt;RichText name=&quot;test&quot; label=&quot;Test&quot; admin={{elements:[&#x27;h1&#x27;, &#x27;h2&#x27;]}}/&gt;</code><br>then i got the error i mentioned but worked fine after i replaced useMemo with useState",
        "fileAttachments": [],
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1676772406918
      }
    ],
    "messageCount": 5,
    "slug": "replacing-usememo-with-usestate"
  },
  {
    "info": {
      "name": "textarea field",
      "id": "1084981745016897586",
      "guildId": "967097582721572934",
      "createdAt": 1678750205998
    },
    "intro": {
      "content": "Hi,<br><br>I&#x27;m building a collapsible field with some other fields nested to it, one of these nested field is a textarea field, it all works fine except from the textarea which always renders outside its &#x27;limits&#x27; overlapping the elements below (please see screenshot 1). Resizing the textarea from the bottom-right corner fixed the issue (please see screenshot 2), but every time the page reloads the textarea gets bigger again. <br><br>Any help on this? What am I missing? Please, Thanks!",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1084981745016897586/1084981745419563018/payloadcms-textarea1.png",
          "name": "payloadcms-textarea1.png",
          "id": "1084981745419563018",
          "size": 21016,
          "url": "https://cdn.discordapp.com/attachments/1084981745016897586/1084981745419563018/payloadcms-textarea1.png",
          "proxyURL": "https://media.discordapp.net/attachments/1084981745016897586/1084981745419563018/payloadcms-textarea1.png",
          "height": 398,
          "width": 952,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1084981745016897586/1084981745700573304/payloadcms-textarea2.png",
          "name": "payloadcms-textarea2.png",
          "id": "1084981745700573304",
          "size": 21932,
          "url": "https://cdn.discordapp.com/attachments/1084981745016897586/1084981745700573304/payloadcms-textarea2.png",
          "proxyURL": "https://media.discordapp.net/attachments/1084981745016897586/1084981745700573304/payloadcms-textarea2.png",
          "height": 378,
          "width": 942,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "962537363983196240",
      "authorName": "Eustachio",
      "authorAvatar": "9c7223b53c7b2b3da3708d78133781ba",
      "createdAtDate": 1678750205998
    },
    "messages": [
      {
        "content": "Do you have any custom CSS loaded in your project that might be causing this? So far I&#x27;m not able to recreate. Could you send me your config?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678766057118
      },
      {
        "content": "Hi thanks for your reply. Yes, I have a custom css file loaded in my project, I disabled it to see if it was that, but the textarea field did the same. Maybe I needed to stop the server and run it again. I will do that and let you know. I&#x27;m not touching the textarea in my custom css file. I will send you my config soon.<br> <br> Here my Product collection config:<br> <br> import { CollectionConfig } from &#x27;payload/types&#x27;;<br><br>const Products: CollectionConfig = {<br>  slug: &#x27;products&#x27;,<br>  admin: {<br>    useAsTitle: &#x27;productName&#x27;<br>  },<br>  fields: [<br>    // general information<br>    {<br>      label: &#x27;Product Information&#x27;,<br>      type: &#x27;collapsible&#x27;, // required<br>      fields: [<br>        {<br>          type: &#x27;row&#x27;,<br>          fields: [<br>            {<br>              name: &#x27;productName&#x27;,<br>              type: &#x27;text&#x27;,<br>              required: true,<br>              admin: {<br>                width: &#x27;50%&#x27;,<br>                description: &#x27;a short name&#x27;,<br>              },<br>            },<br>            {<br>              name: &#x27;slug&#x27;,<br>              type: &#x27;text&#x27;,<br>              required: true,<br>              admin: {<br>                width: &#x27;50%&#x27;,<br>              },<br>            },<br>            {<br>              name: &#x27;feature&#x27;,<br>              type: &#x27;text&#x27;,<br>              admin: {<br>              },<br>            },<br>            {<br>              name: &#x27;description&#x27;,<br>              type: &#x27;textarea&#x27;,<br>              maxLength: 160,<br>              admin: {<br>                placeholder: &#x27;this is a place holder&#x27;,<br>                description: &#x27;Give your product a short and clear description. 120-160 characters is the recommended length for search engines.&#x27;<br>              },<br>            },<br>            {<br>              name: &#x27;discountable&#x27;,<br>              type: &#x27;checkbox&#x27;,<br>              label: &#x27;Discountable&#x27;,<br>              admin: {<br>                description: &#x27;When uncheck discounts will not be applied to this product.&#x27;,<br>              }<br>            }<br>          ],<br>        },<br>      ],<br>    },<br>  ],<br>}<br><br>export default Products;<br> <br> I have disabled the custom css, here it is a screenshot of the textarea behaviour<br> <br> ",
        "fileAttachments": [],
        "authorID": "962537363983196240",
        "authorName": "Eustachio",
        "authorAvatar": "9c7223b53c7b2b3da3708d78133781ba",
        "createdAtDate": 1678779583036
      },
      {
        "content": "Ok and which browser is that? I might be able to recreate knowing more about your environment.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678796414841
      },
      {
        "content": "I have the same exact issue.<br>There is no custom, or any CSS at all in fact, in my code.<br><pre><code class=\"hljs\">            \n{\n  type: &#x27;row&#x27;,\n  fields: [\n    {\n      name: &#x27;description&#x27;,\n      type: &#x27;textarea&#x27;,\n      required: true,\n      admin: {\n        description: &#x27;Publicly visible asset description.&#x27;,\n      },\n    },\n    {\n      name: &#x27;comments&#x27;,\n      type: &#x27;textarea&#x27;,\n      admin: {\n        description: &#x27;Private comments and notes.&#x27;,\n      },\n    },\n  ],\n},</code></pre><br><br>Browser: Chrome",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1084981745016897586/1085179213109276822/image.png",
            "name": "image.png",
            "id": "1085179213109276822",
            "size": 28370,
            "url": "https://cdn.discordapp.com/attachments/1084981745016897586/1085179213109276822/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1084981745016897586/1085179213109276822/image.png",
            "height": 335,
            "width": 967,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1678797286116
      },
      {
        "content": "My browsers are Edge and Chrome. Windows 10<br> <br> I changed this in my custom css, from the textarea component css. I commented the default value. It seems to fix the issue.",
        "fileAttachments": [],
        "authorID": "962537363983196240",
        "authorName": "Eustachio",
        "authorAvatar": "9c7223b53c7b2b3da3708d78133781ba",
        "createdAtDate": 1678801746571
      },
      {
        "content": "Thanks for the code @KasparTr I was able to recreate that - definitely a UI bug there. If anyone would kindly open an issue on our github to record this, we&#x27;ll take care of it next monday 🐛",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678911500632
      },
      {
        "content": "Hi, thanks. I&#x27;ll try to open an issue tomorrow. Cheers.",
        "fileAttachments": [],
        "authorID": "962537363983196240",
        "authorName": "Eustachio",
        "authorAvatar": "9c7223b53c7b2b3da3708d78133781ba",
        "createdAtDate": 1678914703363
      }
    ],
    "messageCount": 12,
    "slug": "textarea-field"
  },
  {
    "info": {
      "name": "Collections' field names are ignored in defaultColumns",
      "id": "1082661558250905703",
      "guildId": "967097582721572934",
      "createdAt": 1678197030366
    },
    "intro": {
      "content": "Collections&#x27; field names are ignored in defaultColumns if those fields are inside a tabs field. The only selectable fields are id, updatedAt, and createdAt 🥲",
      "fileAttachments": [],
      "authorID": "712127536326246413",
      "authorName": "hayskapoy",
      "authorAvatar": "a4d35470bc3b50a27feb3754048491e3",
      "createdAtDate": 1678197030366
    },
    "messages": [
      {
        "content": "Hey @hayskapoy I believe this is a similar report: <a href=\"https://discord.com/channels/967097582721572934/1082462155233841162\">https://discord.com/channels/967097582721572934/1082462155233841162</a><br><br>If you want to create an issue for this one on GH that would be great",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678197775544
      },
      {
        "content": "I&#x27;ll create a repo that reproduces this issue. Thanks!",
        "fileAttachments": [],
        "authorID": "712127536326246413",
        "authorName": "hayskapoy",
        "authorAvatar": "a4d35470bc3b50a27feb3754048491e3",
        "createdAtDate": 1678197852370
      },
      {
        "content": "That would be much appreciated, thank you 🙏",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678197976169
      },
      {
        "content": "@hayskapoy there&#x27;s already a PR out now that fixes this so no need! It should get merged soon and released asap <a href=\"https://github.com/payloadcms/payload/pull/2258\">https://github.com/payloadcms/payload/pull/2258</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678204056285
      },
      {
        "content": "Thank you!!!",
        "fileAttachments": [],
        "authorID": "712127536326246413",
        "authorName": "hayskapoy",
        "authorAvatar": "a4d35470bc3b50a27feb3754048491e3",
        "createdAtDate": 1678204103195
      }
    ],
    "messageCount": 5,
    "slug": "collections-field-names-are-ignored-in-defaultcolumns"
  },
  {
    "info": {
      "name": "Get Provider data in the collections.",
      "id": "1080020254765367377",
      "guildId": "967097582721572934",
      "createdAt": 1677567294542
    },
    "intro": {
      "content": "I want to access a provider&#x27;s data in the collections access control. Is it possible?",
      "fileAttachments": [],
      "authorID": "1055906817881940069",
      "authorName": "Zeeshan",
      "authorAvatar": "2f7e0f4af189093c2c40bed516eb8754",
      "createdAtDate": 1677567294542
    },
    "messages": [
      {
        "content": "A react provider? <br><br>Access control runs on the server where there is no react context",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677588237702
      }
    ],
    "messageCount": 1,
    "slug": "get-provider-data-in-the-collections"
  },
  {
    "info": {
      "name": "How to build a custom rich-text element with multiple options?",
      "id": "1075704321238368296",
      "guildId": "967097582721572934",
      "createdAt": 1676538295803
    },
    "intro": {
      "content": "I want to provide editors with the ability to embed Twitter posts, while also being able to provide fallback text. How would I do that?<br><br>My guess is that I should to something similar to what the upload/relationship elements do - render a component with some buttons that then open modals for the various options.",
      "fileAttachments": [],
      "authorID": "583713322700898304",
      "authorName": "dodov",
      "authorAvatar": "963cac7b9d70846918bedd06cc4cc389",
      "createdAtDate": 1676538295803
    },
    "messages": [
      {
        "content": "I something similar recently.<br>Basically think what you want the resulting slate node to look like. I guess <code>{type: &quot;tweet&quot;, twitterId: &quot;someid&quot;, fallback: &quot;My fallback text&quot;}</code><br>In that case, you create a button that opens the modal with some fields where you can enter this info, and confirming the modal adds a void node (it doesn&#x27;t have children) with these properties.<br><br>Have a look too at the video element on the website example: <a href=\"https://github.com/payloadcms/public-demo/tree/master/src/fields/richText/video\">https://github.com/payloadcms/public-demo/tree/master/src/fields/richText/video</a>",
        "fileAttachments": [],
        "authorID": "258898794102521857",
        "authorName": "agenericguy",
        "authorAvatar": null,
        "createdAtDate": 1676552266515
      },
      {
        "content": "I actually managed to make my own embed element: <a href=\"https://github.com/hdodov/payload-rich-text-tweet\">https://github.com/hdodov/payload-rich-text-tweet</a><br><br>It even supports both light and dark mode. 🤘",
        "fileAttachments": [],
        "authorID": "583713322700898304",
        "authorName": "dodov",
        "authorAvatar": "963cac7b9d70846918bedd06cc4cc389",
        "createdAtDate": 1676645738174
      },
      {
        "content": "Nice work! This is pretty cool!",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1676646515058
      }
    ],
    "messageCount": 3,
    "slug": "how-to-build-a-custom-rich-text-element-with-multiple-options"
  },
  {
    "info": {
      "name": "Fetching and rendering data",
      "id": "1085499202907418716",
      "guildId": "967097582721572934",
      "createdAt": 1678873577573
    },
    "intro": {
      "content": "As far as I know, ChatGPT has knowledge up until 2021, but they are working on it to keep it updated. <br>As far the code you posted seems good. You have to try it out though, to see for yourself.",
      "fileAttachments": [],
      "authorID": "537385969230413846",
      "authorName": "Arskeliss",
      "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
      "createdAtDate": 1678877047169
    },
    "messages": [
      {
        "content": "Thanks, will do. ChatGPT has knowledge up to September 2021.",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678877247510
      }
    ],
    "messageCount": 2,
    "slug": "fetching-and-rendering-data"
  },
  {
    "info": {
      "name": "WordPress to Payload?",
      "id": "1062908841664200725",
      "guildId": "967097582721572934",
      "createdAt": 1673487615744
    },
    "intro": {
      "content": "Hey everyone. I&#x27;m coming from a WordPress site with close to 1m records, is there an easier and faster way to transfer all those records to PayloadCMS or we&#x27;ll need to add them manually if we switch over to PayloadCMS?",
      "fileAttachments": [],
      "authorID": "436035265614839808",
      "authorName": "dplgngr",
      "authorAvatar": "c121ac319ebc2f4850268e8fcde127e9",
      "createdAtDate": 1673487615744
    },
    "messages": [
      {
        "content": "Hey @dplgngr,<br>I&#x27;ve written migration scripts for getting data from one source, mapping them to objects and then creating the new docs in Payload. I would never manually try and create existing data with that many records. Here is a similar question on the Payload Github with more info for you:<br><a href=\"https://github.com/payloadcms/payload/discussions/1660\">https://github.com/payloadcms/payload/discussions/1660</a>",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675443541674
      },
      {
        "content": "Cool. I&#x27;ll take a look at that. Thanks for the info @dribbens",
        "fileAttachments": [],
        "authorID": "436035265614839808",
        "authorName": "dplgngr",
        "authorAvatar": "c121ac319ebc2f4850268e8fcde127e9",
        "createdAtDate": 1677682357096
      }
    ],
    "messageCount": 2,
    "slug": "wordpress-to-payload"
  },
  {
    "info": {
      "name": "Secondary Auth Collection prevents first collection from working",
      "id": "1080721252072820777",
      "guildId": "967097582721572934",
      "createdAt": 1677734425324
    },
    "intro": {
      "content": "Hey, i&#x27;m trying to make a new auth collection so that on our frontend we can support SSO, the exisiting user collection is used for the admin dashboard only. but for some reason the new collection i&#x27;ve added seems to overwrite the default user collection and forces me to make a new account to gain access.<br><br>I&#x27;m trying to connect Discord with passportjs using the strategies but it prevents the admin dashboard from even loading just gets stuck on a white screen with no errors<br><br>So quick run down<br>1) Existing user collection should only work on Admin Dashboard<br>2) New Collection should not affect the original user collection<br>3) New collection configures with SSO&#x27;s using Passport Strategies<br>4) New collection works with SSO and doesn&#x27;t make a user/pass as it&#x27;s not required.<br><br>Errors i&#x27;m getting<br>1) Discord Passport plugin requires utils and querystring but webpack has issues with it, setting to false on fallback causes no pages to load<br>2) DisableLocalStrategy prevents the exisiting user collection from working on admin panel and just shows payload logo<br>3) New collection overrides the existing collection<br>4) if a strategy is present on new collection, nothing loads<br> <br> Got exisitng admin collection working<br> <br> needed to set the user collection in the config<br> <br> think i&#x27;m having same issue now that was previously mentioned<br>All routes are being protected by the strategy causing cors error<br> <br> still having issue if theres a strategy in use it only shows white page on admin panel",
      "fileAttachments": [],
      "authorID": "1072674585197166633",
      "authorName": "work",
      "authorAvatar": "58f7a3fd0703e50b4d6210b3ac597b70",
      "createdAtDate": 1677734425324
    },
    "messages": [
      {
        "content": "I ran into the same problem recently and solved it by creating a plugin for passport-oauth. It‘s working good so far but still need to work on the code, might share something later when I have some time<br> <br> <a href=\"https://discord.com/channels/967097582721572934/1079838740488388729\">https://discord.com/channels/967097582721572934/1079838740488388729</a><br> <br> This is basically the problem you are facing<br> <br> <a href=\"https://github.com/thgh/payload-plugin-oauth\">https://github.com/thgh/payload-plugin-oauth</a><br> <br> You can look into this plugin and copy the parts you need",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677742971075
      },
      {
        "content": "thank you, will take a look",
        "fileAttachments": [],
        "authorID": "1072674585197166633",
        "authorName": "work",
        "authorAvatar": "58f7a3fd0703e50b4d6210b3ac597b70",
        "createdAtDate": 1677804220278
      }
    ],
    "messageCount": 10,
    "slug": "secondary-auth-collection-prevents-first-collection-from-working"
  },
  {
    "info": {
      "name": "Payload hook doesn't have permission to read from collection",
      "id": "1075498716204646512",
      "guildId": "967097582721572934",
      "createdAt": 1676489275743
    },
    "intro": {
      "content": "Hello, how can I allow a Paylook hook access to read sensitive files and send them as attachments? I can&#x27;t set <code>read: ()=&gt;true</code> on this collection because then anyone could find these applications with things like social security numbers.<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Applications</span>: <span class=\"hljs-title class_\">CollectionConfig</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;applications&#x27;</span>,\n  <span class=\"hljs-attr\">access</span>: {\n    <span class=\"hljs-attr\">create</span>: ():<span class=\"hljs-function\"><span class=\"hljs-params\">boolean</span> =&gt;</span> <span class=\"hljs-literal\">true</span>,\n  },\n  <span class=\"hljs-attr\">upload</span>: {\n    <span class=\"hljs-attr\">mimeTypes</span>: [<span class=\"hljs-string\">&#x27;application/pdf&#x27;</span>],\n  },\n  <span class=\"hljs-attr\">hooks</span>: {\n    <span class=\"hljs-attr\">afterChange</span>: [\n      <span class=\"hljs-function\">(<span class=\"hljs-params\">{ doc }</span>) =&gt;</span> {\n\n        <span class=\"hljs-comment\">/* example doc:{\n             id: &#x27;63ed21907be32a1ac6e64f71&#x27;,\n             filename: &#x27;Website Application-10-10.pdf&#x27;,\n             mimeType: &#x27;application/pdf&#x27;,\n             filesize: 926986,\n             createdAt: &#x27;2023-02-15T18:16:48.348Z&#x27;,\n             updatedAt: &#x27;2023-02-15T18:16:48.348Z&#x27;,\n             url: &#x27;http://localhost:3000/applications/Website Application-10-10.pdf&#x27;\n        */</span> }\n\n        <span class=\"hljs-keyword\">const</span> fileLocation = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title function_\">URL</span>(doc.<span class=\"hljs-property\">url</span>);\n        <span class=\"hljs-keyword\">const</span> submissionTime = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>(doc.<span class=\"hljs-property\">createdAt</span>).<span class=\"hljs-title function_\">toString</span>();\n        <span class=\"hljs-keyword\">const</span> message = {\n          <span class=\"hljs-attr\">from</span>: <span class=\"hljs-string\">&#x27;website@mydomain.com&#x27;</span>,\n          <span class=\"hljs-attr\">to</span>: <span class=\"hljs-string\">&#x27;me@gmail.com&#x27;</span>,\n          <span class=\"hljs-attr\">subject</span>: <span class=\"hljs-string\">`New Driver Application at <span class=\"hljs-subst\">${submissionTime}</span>`</span>,\n          <span class=\"hljs-attr\">attachments</span>: [\n            {\n              <span class=\"hljs-attr\">path</span>: fileLocation.<span class=\"hljs-title function_\">toString</span>(),\n            },\n          ],\n          <span class=\"hljs-attr\">html</span>:<span class=\"hljs-string\">&quot;New Driver Application Attached&quot;</span>,\n        };\n        payload.<span class=\"hljs-title function_\">sendEmail</span>(message);\n      },\n    ],\n  },\n  <span class=\"hljs-attr\">fields</span>: [],\n};</code></pre><br><br><pre><code class=\"hljs bash\">Forbidden: You are not allowed to perform this action.\n    at new ExtendableError (/home/kaleb/code/ttf-cms/node_modules/payload/dist/errors/APIError.js:22:15)\n    at new APIError (/home/kaleb/code/ttf-cms/node_modules/payload/dist/errors/APIError.js:38:9)\n    at new Forbidden (/home/kaleb/code/ttf-cms/node_modules/payload/dist/errors/Forbidden.js:10:9)\n    at executeAccess (/home/kaleb/code/ttf-cms/node_modules/payload/dist/auth/executeAccess.js:9:23)\n    at async /home/kaleb/code/ttf-cms/node_modules/payload/dist/auth/getExecuteStaticAccess.js:14:34\nerror - unhandledRejection: Error: Invalid status code 403\n    at ClientRequest.&lt;anonymous&gt; (/home/kaleb/code/ttf-cms/node_modules/nodemailer/lib/fetch/index.js:218:23)\n    at ClientRequest.emit (node:events:527:28)\n    at HTTPParser.parserOnIncomingClient (node:_http_client:631:27)\n    at HTTPParser.parserOnHeadersComplete (node:_http_common:128:17)\n    at Socket.socketOnData (node:_http_client:494:22)\n    at Socket.emit (node:events:527:28)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {\n  <span class=\"hljs-built_in\">type</span>: <span class=\"hljs-string\">&#x27;FETCH&#x27;</span>,\n  sourceUrl: <span class=\"hljs-string\">&#x27;http://localhost:3000/applications/Website%20Application-10-10-10-4.pdf&#x27;</span></code></pre>",
      "fileAttachments": [],
      "authorID": "288798695699513346",
      "authorName": "TacticalSmoores",
      "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
      "createdAtDate": 1676489275743
    },
    "messages": [
      {
        "content": "in your collection config, you only have create access enabled<br> <br> right?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676489751503
      },
      {
        "content": "That&#x27;s correct, anyone can submit an application. So, create is set to true. That part works and the applications are uploaded to the server.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676489833227
      },
      {
        "content": "But read is not enabled, correct @TacticalSmoores ?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676489994062
      },
      {
        "content": "yep, this is the collection permissions setup<br><pre><code class=\"hljs\">access: {\n    create: ():boolean =&gt; true,\n  },</code></pre>",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676490024497
      },
      {
        "content": "Perhaps you need read? <a href=\"https://payloadcms.com/docs/access-control/collections#read\">https://payloadcms.com/docs/access-control/collections#read</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676490043264
      },
      {
        "content": "I have, but my understanding is the access controls are for users. This is a hook that runs on the server. The hook cannot access the file on the server.<br> <br> <pre><code class=\"hljs jsx\"><span class=\"hljs-attr\">access</span>: {\n  <span class=\"hljs-attr\">create</span>: ():<span class=\"hljs-function\"><span class=\"hljs-params\">boolean</span> =&gt;</span> <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">read</span>: ():<span class=\"hljs-function\"><span class=\"hljs-params\">boolean</span> =&gt;</span> <span class=\"hljs-literal\">true</span>,\n},</code></pre><br>This works, but is a really bad idea. Now anyone on the internet can open this application pdf containing a person&#x27;s social security number, name, address, etc.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676490143492
      },
      {
        "content": "So you want non-users to be able to access these secure documents?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676500207537
      },
      {
        "content": "Yes and no,<br>The secure documents (job application, pdf) need to be <em>emailed</em> to a non-user as an attachment immediately after being uploaded. But, we don&#x27;t any non-user to have access to the file by entering the url.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676500494029
      },
      {
        "content": "Why emailed to a non user?<br> <br> Will the person uploading the doc have a user account?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676500585997
      },
      {
        "content": "The person uploading the job application will not have an account.<br><br>Job application needs to be sent to the hiring manager who is older, not tech savvy. If they have to log into a CMS to pursue leads they probably won&#x27;t bother. But if they received an email attachment it would be easy for them.<br><br>This is replacing a system where people had to walk in and fill out a paper form.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676501032726
      },
      {
        "content": "When a doc is created you could create a uuid and attach that to the doc, then send the email with that as a query param.<br><br> In your read access you can check for the query param and see if it matches the uuid field on the upload doc and permit access if true.<br><br>It would likely be secure enough for ya.<br> <br> Having the hiring manager use an account would obviously be most secure<br> <br> But even then, the thing you are preventing access to is the collection information not the file. So this might not work for ya after all. Really you want the user to have to fetch the document and then they can read the url where the file lives and then they can navigate to the file",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676501462952
      },
      {
        "content": "Yeah, I guess I was originally looking for something like a service worker. You can give it permissions, trigger it with hooks like <code>afterChange</code> , and perform other server-side actions using it. <br><br>Now, I think your solution of a UUID, treating it like a key to give read access, will work. I&#x27;m going to give that a shot, appreciate your help!",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676502446234
      }
    ],
    "messageCount": 17,
    "slug": "payload-hook-doesnt-have-permission-to-read-from-collection"
  },
  {
    "info": {
      "name": "Creating a Multi Tab accordion block on Payload",
      "id": "1080932830802083893",
      "guildId": "967097582721572934",
      "createdAt": 1677784869624
    },
    "intro": {
      "content": "I want to create a FAQ accordion with multiple tabs: <br>Tab 1 : Products <br>- label <br>-answer<br>Tab 2 : Services <br>- label <br>-answer<br><br>Has anyone made this? Any help would be much appreciated. I&#x27;m more interested on how to implement this on a NextJS frontend",
      "fileAttachments": [],
      "authorID": "149873958760480769",
      "authorName": "roac",
      "authorAvatar": null,
      "createdAtDate": 1677784869624
    },
    "messages": [
      {
        "content": "Hi @roac, you could setup your fields like this:<br><br><pre><code class=\"hljs\">{\n  name: &#x27;tabs&#x27;,\n  type: &#x27;array&#x27;,\n  fields: [\n    {\n      name: &#x27;tabTitle&#x27;,\n      type: &#x27;text&#x27;,\n    },\n    {\n      name: &#x27;accordion&#x27;,\n      type: &#x27;array&#x27;,\n      fields: [\n        {\n          name: &#x27;label&#x27;,\n          type: &#x27;text&#x27;,\n        },\n        {\n          name: &#x27;answer&#x27;,\n          type: &#x27;richText&#x27;,\n        },\n      ],\n    },\n  ],\n}</code></pre><br><br>As for the frontend, I would recommend checking out the faceless UI collapsibles: <a href=\"https://facelessui.com/docs/collapsibles\">https://facelessui.com/docs/collapsibles</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678120199641
      },
      {
        "content": "Thanks so much @jesschow",
        "fileAttachments": [],
        "authorID": "149873958760480769",
        "authorName": "roac",
        "authorAvatar": null,
        "createdAtDate": 1678793264536
      }
    ],
    "messageCount": 2,
    "slug": "creating-a-multi-tab-accordion-block-on-payload"
  },
  {
    "info": {
      "name": "Plugin stripe - error has occurred in the Stripe plugin REST handler",
      "id": "1075712043400843334",
      "guildId": "967097582721572934",
      "createdAt": 1676540136910
    },
    "intro": {
      "content": "HI @jacobsfletch , I&#x27;m using your super stripe plugin for payload (thanks for the deployment) and unfortunately I&#x27;m having an error that I can&#x27;t understand very well<br><br>When I do a request via postman on my url  &quot;localhost:3000/api/stripe/rest&quot;, I have this error:<br><pre><code class=\"hljs\">{\n    &quot;message&quot;: &quot;An error has occurred in the Stripe plugin REST handler: &#x27;TypeError: Cannot read properties of undefined (reading &#x27;bind&#x27;)&#x27;&quot;\n}</code></pre><br><br>with this config: <br><br><pre><code class=\"hljs\"> plugins: [\n    stripePlugin({\n      stripeSecretKey: process.env.PRIVATE_STRIPE,\n      logs: true,\n      sync: [\n        {\n          collection: &quot;customers&quot;,\n          stripeResourceType: &quot;customers&quot;,\n          stripeResourceTypeSingular: &quot;customer&quot;,\n          fields: [\n            {\n              fieldPath: &quot;email&quot;, // my unique field in my collection\n              stripeProperty: &quot;email&quot;, \n            },\n          ],\n        },\n      ],\n    }),\n  ],</code></pre> <br><br>Thanks in advance for you help and thank again for the implementation of this plugin !",
      "fileAttachments": [],
      "authorID": "986156968152555540",
      "authorName": "NF01",
      "authorAvatar": "a8f64e6e32015ae37f7d21a0a04bd885",
      "createdAtDate": 1676540136910
    },
    "messages": [
      {
        "content": "Hmm that error is likely thrown by this line: <a href=\"https://github.com/payloadcms/plugin-stripe/blob/13ed91f0406341cd534e3c15555fe3f3224a7b61/src/utilities/stripeProxy.ts#L23\">https://github.com/payloadcms/plugin-stripe/blob/13ed91f0406341cd534e3c15555fe3f3224a7b61/src/utilities/stripeProxy.ts#L23</a> because the supplied <code>stripeMethod</code> is not valid<br> <br> Can you send the body of the request you are sending through Postman?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676556250357
      },
      {
        "content": "sorry to respond  late but I&#x27;m in a big rush in my project, I will send you this as soon as I can",
        "fileAttachments": [],
        "authorID": "986156968152555540",
        "authorName": "NF01",
        "authorAvatar": "a8f64e6e32015ae37f7d21a0a04bd885",
        "createdAtDate": 1676647125137
      }
    ],
    "messageCount": 3,
    "slug": "plugin-stripe-error-has-occurred-in-the-stripe-plugin-rest-handler"
  },
  {
    "info": {
      "name": "\"Cannot find module\" error on Typescript paths entries",
      "id": "1084616542458744983",
      "guildId": "967097582721572934",
      "createdAt": 1678663134923
    },
    "intro": {
      "content": "Hi,<br><br>I&#x27;ve created a scaffold project by running <code>npx create-payload-app</code> and just added a simple <code>paths</code> entry to my Typescript configuration named <code>@collections</code> (see attached screenshot #1).<br><br>Then, just to test things out, I replaced <code>import Users from &#x27;./collections/Users&#x27;;</code> with <code>import Users from &#x27;@collections/Users&#x27;;</code> in<code>payload.config.ts</code> (screenshot #2) and run <code>yarn dev</code> to start the server: now I get the error &quot;Cannot find module &#x27;@collections/Users&#x27;&quot;.<br><br>What could be the problem?",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1084616542458744983/1084616542681051206/Schermata_del_2023-03-13_00-07-38.png",
          "name": "Schermata_del_2023-03-13_00-07-38.png",
          "id": "1084616542681051206",
          "size": 27354,
          "url": "https://cdn.discordapp.com/attachments/1084616542458744983/1084616542681051206/Schermata_del_2023-03-13_00-07-38.png",
          "proxyURL": "https://media.discordapp.net/attachments/1084616542458744983/1084616542681051206/Schermata_del_2023-03-13_00-07-38.png",
          "height": 270,
          "width": 649,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1084616542458744983/1084616542915936367/Schermata_del_2023-03-13_00-17-08.png",
          "name": "Schermata_del_2023-03-13_00-17-08.png",
          "id": "1084616542915936367",
          "size": 45954,
          "url": "https://cdn.discordapp.com/attachments/1084616542458744983/1084616542915936367/Schermata_del_2023-03-13_00-17-08.png",
          "proxyURL": "https://media.discordapp.net/attachments/1084616542458744983/1084616542915936367/Schermata_del_2023-03-13_00-17-08.png",
          "height": 385,
          "width": 605,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1084616542458744983/1084616543217913947/Schermata_del_2023-03-13_00-18-11.png",
          "name": "Schermata_del_2023-03-13_00-18-11.png",
          "id": "1084616543217913947",
          "size": 11717,
          "url": "https://cdn.discordapp.com/attachments/1084616542458744983/1084616543217913947/Schermata_del_2023-03-13_00-18-11.png",
          "proxyURL": "https://media.discordapp.net/attachments/1084616542458744983/1084616543217913947/Schermata_del_2023-03-13_00-18-11.png",
          "height": 88,
          "width": 623,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "1084190325259645051",
      "authorName": "GiS91",
      "authorAvatar": "abfbbb46e00aebcecf01affdaf382d87",
      "createdAtDate": 1678663134923
    },
    "messages": [
      {
        "content": "Hi @GiS91 - you just need to add <code>./</code> in front of <code>src/collections/*</code> then you should be good to go",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1084616542458744983/1084907643287633981/Screen_Shot_2023-03-13_at_6.34.20_PM.png",
            "name": "Screen_Shot_2023-03-13_at_6.34.20_PM.png",
            "id": "1084907643287633981",
            "size": 133151,
            "url": "https://cdn.discordapp.com/attachments/1084616542458744983/1084907643287633981/Screen_Shot_2023-03-13_at_6.34.20_PM.png",
            "proxyURL": "https://media.discordapp.net/attachments/1084616542458744983/1084907643287633981/Screen_Shot_2023-03-13_at_6.34.20_PM.png",
            "height": 552,
            "width": 1308,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678732538769
      },
      {
        "content": "Ehi @jesschow , thank you so much for your reply!<br><br>That&#x27;s what happen when you try to write code at midnight 🤣 <br><br>Anyway, the solution you propose does not seem to fix the issue. I investigated the thing a bit further and it seems that the problem relates both to <strong>ts-node</strong> and <strong>webpack</strong>.<br><br>According to ts-node documentation [1],  ts-node does not support <code>paths</code> resolution out of the box, so the first thing to do is to install <code>tsconfig-paths</code> and add it to the ts-node config as explained in the documentation.<br><br>After that, you have to extend your webpack alias configuration in your<code>payload.config.ts</code> as in the attached screenshot.<br><br>Completed the above two steps, the dev server starts normally<br><br>[1] <a href=\"https://typestrong.org/ts-node/docs/paths/\">https://typestrong.org/ts-node/docs/paths/</a>",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1084616542458744983/1084921656532811866/Schermata_del_2023-03-13_20-22-43.png",
            "name": "Schermata_del_2023-03-13_20-22-43.png",
            "id": "1084921656532811866",
            "size": 26570,
            "url": "https://cdn.discordapp.com/attachments/1084616542458744983/1084921656532811866/Schermata_del_2023-03-13_20-22-43.png",
            "proxyURL": "https://media.discordapp.net/attachments/1084616542458744983/1084921656532811866/Schermata_del_2023-03-13_20-22-43.png",
            "height": 263,
            "width": 675,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "1084190325259645051",
        "authorName": "GiS91",
        "authorAvatar": "abfbbb46e00aebcecf01affdaf382d87",
        "createdAtDate": 1678735879762
      },
      {
        "content": "@GiS91 Yep! That worked for ya right?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678740640107
      },
      {
        "content": "@Jarrod Yesss... with those two steps it works perfectly!<br> <br> @jesschow @Jarrod Thank you for your support! ❤️",
        "fileAttachments": [],
        "authorID": "1084190325259645051",
        "authorName": "GiS91",
        "authorAvatar": "abfbbb46e00aebcecf01affdaf382d87",
        "createdAtDate": 1678741741283
      }
    ],
    "messageCount": 5,
    "slug": "cannot-find-module-error-on-typescript-paths-entries"
  },
  {
    "info": {
      "name": "Custom endpoint's access",
      "id": "1078763589227249705",
      "guildId": "967097582721572934",
      "createdAt": 1677267682130
    },
    "intro": {
      "content": "Is there an easy way (built-in)  to use the same access logic for custom endpoints?",
      "fileAttachments": [],
      "authorID": "468994630365609985",
      "authorName": "gaboluque",
      "authorAvatar": "ef3cafdc42601db472dede6d2908252f",
      "createdAtDate": 1677267682130
    },
    "messages": [
      {
        "content": "yes <a href=\"https://payloadcms.com/docs/rest-api/overview#custom-endpoints\">https://payloadcms.com/docs/rest-api/overview#custom-endpoints</a><br> <br> or <a href=\"https://payloadcms.com/docs/authentication/using-middleware\">https://payloadcms.com/docs/authentication/using-middleware</a>",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1677286834366
      }
    ],
    "messageCount": 2,
    "slug": "custom-endpoints-access"
  },
  {
    "info": {
      "name": "consistent error when using custom react components",
      "id": "1080105171864006666",
      "guildId": "967097582721572934",
      "createdAt": 1677587540356
    },
    "intro": {
      "content": "react-dom.development.js:86 Warning: You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1080105171864006666/1080105172296024145/Screen_Shot_2023-02-28_at_09.38.38.png",
          "name": "Screen_Shot_2023-02-28_at_09.38.38.png",
          "id": "1080105172296024145",
          "size": 701875,
          "url": "https://cdn.discordapp.com/attachments/1080105171864006666/1080105172296024145/Screen_Shot_2023-02-28_at_09.38.38.png",
          "proxyURL": "https://media.discordapp.net/attachments/1080105171864006666/1080105172296024145/Screen_Shot_2023-02-28_at_09.38.38.png",
          "height": 604,
          "width": 2478,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "1018806695130046494",
      "authorName": "ilyas771",
      "authorAvatar": null,
      "createdAtDate": 1677587540356
    },
    "messages": [
      {
        "content": "Hi @ilyas771 - what is the custom component you are using here?",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678908240085
      },
      {
        "content": "hi, not able to reproduce it on latest version, we used a custom EditView",
        "fileAttachments": [],
        "authorID": "1018806695130046494",
        "authorName": "ilyas771",
        "authorAvatar": null,
        "createdAtDate": 1678964591193
      }
    ],
    "messageCount": 2,
    "slug": "consistent-error-when-using-custom-react-components"
  },
  {
    "info": {
      "name": "How can you get the types for the resolver arguments in GraphQL?",
      "id": "1065869193062400011",
      "guildId": "967097582721572934",
      "createdAt": 1674193418518
    },
    "intro": {
      "content": "I&#x27;m writing my own graphql queries and mutations, however I couldn&#x27;t figure out how I can get types on this kind of resolver function, all arguments including <code>context</code> is untyped:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">CustomResolver</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">obj, args, context, info</span>) =&gt; {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;id received:&#x27;</span>, args)\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;context&#x27;</span>, context)\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">result</span>: <span class=\"hljs-string\">&#x27;PASS&#x27;</span>,\n  }\n}</code></pre><br> <br> I&#x27;ve done a payload import and typed the destructured context like this, not sure if there&#x27;s a cleaner approach though<br><br><pre><code class=\"hljs ts\">{ payload }: { <span class=\"hljs-attr\">payload</span>: <span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-title class_\">ImportedPayload</span> }</code></pre>",
      "fileAttachments": [],
      "authorID": "858693520012476436",
      "authorName": "noheadphones",
      "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
      "createdAtDate": 1674193418518
    },
    "messages": [
      {
        "content": "@noheadphones would you mind sharing the code of your custom resolver?",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677596116892
      },
      {
        "content": "What exactly are you looking to do? I may be able to provide a better example",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1677596247640
      },
      {
        "content": "Basically I&#x27;m just trying to learn how the response object should be formatted or how you enabled types here.",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677596484450
      },
      {
        "content": "Sure, here&#x27;s an example of a custom query (mutation is pretty much similar)<br><br>payload config, something like this<br><pre><code class=\"hljs ts\"><span class=\"hljs-title class_\">CheckQuizAnswers</span>: <span class=\"hljs-title class_\">CheckQuizAnswers</span>(<span class=\"hljs-title class_\">GraphQL</span>, payload),</code></pre><br>This is what the function actually is:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">CheckQuizAnswersResolver</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../resolvers/CheckQuizAnswersResolver&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">ImportedGraphQL</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;graphql&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Payload</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload&#x27;</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">CheckQuizAnswers</span> = (<span class=\"hljs-params\">GraphQL: <span class=\"hljs-keyword\">typeof</span> ImportedGraphQL, payload: Payload</span>) =&gt; {\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">args</span>: {\n      <span class=\"hljs-attr\">answers</span>: {\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GraphQL</span>.<span class=\"hljs-title class_\">GraphQLNonNull</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GraphQL</span>.<span class=\"hljs-title class_\">GraphQLList</span>(<span class=\"hljs-title class_\">GraphQL</span>.<span class=\"hljs-property\">GraphQLString</span>)),\n      },\n    },\n    <span class=\"hljs-attr\">resolve</span>: <span class=\"hljs-title class_\">CheckQuizAnswersResolver</span>,\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GraphQL</span>.<span class=\"hljs-title class_\">GraphQLObjectType</span>({\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;result&#x27;</span>,\n      <span class=\"hljs-attr\">fields</span>: {\n        <span class=\"hljs-attr\">result</span>: {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-title class_\">GraphQL</span>.<span class=\"hljs-property\">GraphQLString</span>,\n        },\n      },\n    }),\n  }\n}</code></pre><br>And then your resolver <code>CheckQuizAnswersResolver</code> is what actually handles the logic, in this function ^^^ type is a return type of a valid GraphQL object, so in this case it&#x27;s something custom, if I want to return a payload collection though I set the <code>type</code> to <code>payload.collections[&#x27;articles&#x27;].graphQL?.type</code> for example. The args then is what arguments you might have for your query or mutation, each arg will need a <code>type</code> as well: my type here is complex as its a mandatory (nonnull) array (list) of strings<br><br>Finally my resolver function looks a bit like this<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">CheckQuizAnswersResolver</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">obj, args: ResolverArgs, context, info</span>) =&gt; {\n  <span class=\"hljs-comment\">// do some logic here</span>\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">result</span>: result ? <span class=\"hljs-string\">&#x27;PASS&#x27;</span> : <span class=\"hljs-string\">&#x27;FAIL&#x27;</span>,\n  }\n}</code></pre><br>note that I&#x27;ve manually typed my ResolverArgs, so its a custom type every time, there&#x27;s no inference right now as far as I can tell, its possible to do it though<br> <br> Hopefully that makes sense @TheFrontend",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1677597780148
      },
      {
        "content": "Awesome, thanks!",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677598102493
      }
    ],
    "messageCount": 7,
    "slug": "how-can-you-get-the-types-for-the-resolver-arguments-in-graphql"
  },
  {
    "info": {
      "name": "Add custom component to the collection list view",
      "id": "1075680408869539892",
      "guildId": "967097582721572934",
      "createdAt": 1676532594650
    },
    "intro": {
      "content": "Hello everyone, I was wondering if it&#x27;s possible to add custom components to the collection list view. Specifically, I&#x27;d like to add a button that can fetch all documents within a collection and download them as a CSV file. I would greatly appreciate any insights or suggestions on how to achieve this. Thank you very much in advance!",
      "fileAttachments": [],
      "authorID": "608406543058206813",
      "authorName": "Dan Sivewright",
      "authorAvatar": "c89e53e5b469f9abc20e3cfab7b2de16",
      "createdAtDate": 1676532594650
    },
    "messages": [
      {
        "content": "Hi @Dan Sivewright - adding this to your collection config will allow you to overwrite the list view:<br><br><pre><code class=\"hljs\">components: {\n  views: {\n    List: CustomList,\n  }\n}</code></pre><br><br>And to not lose the original view, you can import the list from payload and add your custom component to it, for example:<br><br><pre><code class=\"hljs\">import { List } from &#x27;payload/components/views/List&#x27;;\n\nconst CustomList: React.FC = (props) =&gt; (\n  &lt;&gt;\n    &lt;p&gt;Hello add a custom component here&lt;/p&gt;\n    &lt;List {...props} /&gt;\n  &lt;/&gt;\n);\n\nexport default CustomList;</code></pre><br><br>Hope this helps!",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676570317110
      },
      {
        "content": "This helps a ton!!!!!<br>Thank you",
        "fileAttachments": [],
        "authorID": "608406543058206813",
        "authorName": "Dan Sivewright",
        "authorAvatar": "c89e53e5b469f9abc20e3cfab7b2de16",
        "createdAtDate": 1676970509579
      }
    ],
    "messageCount": 2,
    "slug": "add-custom-component-to-the-collection-list-view"
  },
  {
    "info": {
      "name": "Two-way relationship between fields",
      "id": "1076239186484535366",
      "guildId": "967097582721572934",
      "createdAt": 1676665817615
    },
    "intro": {
      "content": "I have a 2 collections:<br><pre><code class=\"hljs\">const Users: CollectionConfig = {\nfields:[\n   {//working in companies\n      name: &quot;companies&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &quot;companies&quot;,\n      hasMany: true,\n  },\n]}</code></pre><br><br><pre><code class=\"hljs\">const Companies: CollectionConfig = {\nfields:[\n   {//employees\n      name: &quot;workers&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &quot;users&quot;,\n      hasMany: true,\n  },\n]}</code></pre><br><br>Is there a way to <strong>manage two-way relationship</strong>? <br>When i&#x27;m adding a company in users <em>companies</em> then it will update this exact company and add this user to <em>workers</em> field, and vice versa for deleting? <br><br>I guess it should work similarly like relationships in keystonejs, where you can enter a field in a collection like &quot;Companies.workers&quot; and it will manage it by itself.<br><br>Maybe i&#x27;ve missed something in docs, but i didnt found a better solution than to add a lot of hooks for both fields and use <strong>payload.update({})</strong> to update another entity.",
      "fileAttachments": [],
      "authorID": "215833081158959105",
      "authorName": "Daniq",
      "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
      "createdAtDate": 1676665817615
    },
    "messages": [
      {
        "content": "Payload does not have an official way to manage 2-way relationships. The hook method that you describe is used in this community plugin which may be what you need. <a href=\"https://github.com/TimHal/pcms-backpop\">https://github.com/TimHal/pcms-backpop</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676666806455
      },
      {
        "content": "Thanks, i&#x27;ve tried to use this one and i realized that for it breaks more than fixes, so i guess i will reformat my collections in some way to reduce relationships.",
        "fileAttachments": [],
        "authorID": "215833081158959105",
        "authorName": "Daniq",
        "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
        "createdAtDate": 1676670321928
      }
    ],
    "messageCount": 2,
    "slug": "two-way-relationship-between-fields"
  },
  {
    "info": {
      "name": "CORS issues even when origins specified",
      "id": "1082697157531926650",
      "guildId": "967097582721572934",
      "createdAt": 1678205517896
    },
    "intro": {
      "content": "Not sure what I&#x27;m doing wrong here<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">buildConfig</span>({\n  <span class=\"hljs-attr\">serverURL</span>: <span class=\"hljs-string\">&quot;https://beta.safsonline.com&quot;</span>,\n  <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">user</span>: <span class=\"hljs-title class_\">Admins</span>.<span class=\"hljs-property\">slug</span>,\n  },\n  <span class=\"hljs-attr\">cors</span>: [<span class=\"hljs-string\">&quot;http://localhost:4200&quot;</span>, <span class=\"hljs-string\">&quot;http://safsbeta1.safsonline.com&quot;</span>, <span class=\"hljs-string\">&quot;http://safsbeta2.safsonline.com&quot;</span>],\n  <span class=\"hljs-attr\">csrf</span>: [<span class=\"hljs-string\">&quot;http://localhost:4200&quot;</span>, <span class=\"hljs-string\">&quot;http://safsbeta1.safsonline.com&quot;</span>, <span class=\"hljs-string\">&quot;http://safsbeta2.safsonline.com&quot;</span>],\n  <span class=\"hljs-attr\">collections</span>: [<span class=\"hljs-title class_\">Admins</span>, <span class=\"hljs-title class_\">Users</span>, <span class=\"hljs-title class_\">Pages</span>, <span class=\"hljs-title class_\">Media</span>, <span class=\"hljs-title class_\">Documents</span>],\n  <span class=\"hljs-attr\">typescript</span>: {\n    <span class=\"hljs-attr\">outputFile</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;payload-types.ts&quot;</span>),\n  },\n  <span class=\"hljs-attr\">graphQL</span>: {\n    <span class=\"hljs-attr\">schemaOutputFile</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;generated-schema.graphql&quot;</span>),\n  },\n  <span class=\"hljs-attr\">routes</span>: {\n    <span class=\"hljs-attr\">api</span>: <span class=\"hljs-string\">&#x27;/payload/api&#x27;</span>,\n    <span class=\"hljs-attr\">admin</span>: <span class=\"hljs-string\">&#x27;/payload/admin&#x27;</span>,\n    <span class=\"hljs-attr\">graphQL</span>: <span class=\"hljs-string\">&#x27;/payload/graphql&#x27;</span>,\n    <span class=\"hljs-attr\">graphQLPlayground</span>: <span class=\"hljs-string\">&#x27;/payload/graphql-playground&#x27;</span>\n  }\n});</code></pre><br> <br> and in server<br> <br> <pre><code class=\"hljs ts\">app.<span class=\"hljs-title function_\">use</span>(express.<span class=\"hljs-title function_\">json</span>());\napp.<span class=\"hljs-title function_\">use</span>(\n  <span class=\"hljs-title function_\">cors</span>({\n    \n    <span class=\"hljs-attr\">origin</span>: [<span class=\"hljs-string\">&quot;http://localhost:4200&quot;</span>, <span class=\"hljs-string\">&quot;http://safsbeta1.safsonline.com&quot;</span>, <span class=\"hljs-string\">&quot;http://safsbeta2.safsonline.com&quot;</span>],\n    <span class=\"hljs-attr\">credentials</span>: <span class=\"hljs-literal\">true</span>,\n  })\n);</code></pre>",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1082697157531926650/1082697158182060053/image.png",
          "name": "image.png",
          "id": "1082697158182060053",
          "size": 52096,
          "url": "https://cdn.discordapp.com/attachments/1082697157531926650/1082697158182060053/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1082697157531926650/1082697158182060053/image.png",
          "height": 276,
          "width": 1370,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "1049775120559898725",
      "authorName": "thisisnotchris",
      "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
      "createdAtDate": 1678205517896
    },
    "messages": [
      {
        "content": "You are getting the error on an https URL and only have http URLs listed. Maybe try changing your (what I assume is a production) safsbeta1.safsonline.com URL to https? Also if the 2nd snippet is from the same server that payload uses, I didn&#x27;t need to set any CORS settings manually on the express instance.",
        "fileAttachments": [],
        "authorID": "252520518945603585",
        "authorName": "MichaelBOOM",
        "authorAvatar": "c332a63449b4311dc59675b9bd6a45d1",
        "createdAtDate": 1678223042105
      }
    ],
    "messageCount": 3,
    "slug": "cors-issues-even-when-origins-specified"
  },
  {
    "info": {
      "name": "Simple custom component example",
      "id": "1077799821819261060",
      "guildId": "967097582721572934",
      "createdAt": 1677037902074
    },
    "intro": {
      "content": "I&#x27;m attempting to create a simple custom component for Number input field and add that to collection.<br>I have created custom UI components, they are simple as they don&#x27;t required any data to be sent to collection.<br><br>I have been through documentation about this:<br><a href=\"https://payloadcms.com/docs/admin/hooks\">https://payloadcms.com/docs/admin/hooks</a><br><a href=\"https://payloadcms.com/docs/fields/overview#custom-components\">https://payloadcms.com/docs/fields/overview#custom-components</a><br><br>All the example don&#x27;t really work in real life, they don&#x27;t compile (e.g. Property &#x27;path&#x27; does not exist on type &#x27;string&#x27;.ts and other errors).<br><br>Does anybody have a simple custom components they have made for String and or Number fields that work when added to Collection and perhaps a reference to doc where it describes how to add custom input components.<br><br>For example, while CustomTextComponent works, CustomNumberComponent doesn&#x27;t for some reason (just changed &quot;string&quot; with &quot;number&quot;).<br><br><pre><code class=\"hljs\">type Props = { path: number }\n\nconst CustomNumberField: React.FC&lt;Props&gt; = ({ path }) =&gt; {\n  const { value, setValue } = useField&lt;number&gt;({ path })\n\n  return &lt;input onChange={e =&gt; setValue(e.target.value)} value={value} /&gt;\n}\nexport default CustomNumberField;</code></pre><br><br>Type &#x27;number&#x27; is not assignable to type &#x27;string&#x27;.ts",
      "fileAttachments": [],
      "authorID": "567578449439621124",
      "authorName": "KasparTr",
      "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
      "createdAtDate": 1677037902074
    },
    "messages": [
      {
        "content": "<code>path</code> is the path key for the field inside the form the field is rendered inside of, it will always be a string",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677386326490
      }
    ],
    "messageCount": 1,
    "slug": "simple-custom-component-example"
  },
  {
    "info": {
      "name": "how do you set an image for the account icon/image",
      "id": "1084717755351179305",
      "guildId": "967097582721572934",
      "createdAt": 1678687265957
    },
    "intro": {
      "content": "The sidebar has the icon on the bottom left. How do you override it?",
      "fileAttachments": [],
      "authorID": "473343795782615060",
      "authorName": "damnstaychill",
      "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
      "createdAtDate": 1678687265957
    },
    "messages": [
      {
        "content": "@damnstaychill I think this feature was proposed <a href=\"https://github.com/payloadcms/payload/discussions/963\">https://github.com/payloadcms/payload/discussions/963</a>, but has not be created.<br> <br> TBH, this seems like a great feature for teams.",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678715760607
      },
      {
        "content": "The only customization available right now is the ability to use Gravatar for the profile picture. <a href=\"https://payloadcms.com/docs/admin/overview#admin-options\">https://payloadcms.com/docs/admin/overview#admin-options</a><br><br>I&#x27;d say upvote the feature above, so we can prioritize appropriately 👍",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1678716580073
      },
      {
        "content": "upvoted 🙏🏽<br> <br> At the moment the only options are to either A. rebuild the nav entirely or B. some hack magic. On B i might just use css to change the icon itself but not allow it to be configurable beyond that",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1678718347506
      }
    ],
    "messageCount": 5,
    "slug": "how-do-you-set-an-image-for-the-account-icon-image"
  },
  {
    "info": {
      "name": "How can I create a table?",
      "id": "1041083668480921641",
      "guildId": "967097582721572934",
      "createdAt": 1668284088965
    },
    "intro": {
      "content": "Hi, it&#x27;s me again, sorry lmao<br><br>Well, I am confused, because in Strapi there the label &quot;table&quot; like this:<br> <br> How can I create a customize label?<br> <br> Other example in Slate",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1041083668480921641/1041083668900356158/image.png",
          "name": "image.png",
          "id": "1041083668900356158",
          "size": 189188,
          "url": "https://cdn.discordapp.com/attachments/1041083668480921641/1041083668900356158/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1041083668480921641/1041083668900356158/image.png",
          "height": 768,
          "width": 1366,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "321303422991073282",
      "authorName": "peladococinero",
      "authorAvatar": "b2dcd84159ee7ff804eedff1cb088533",
      "createdAtDate": 1668284088965
    },
    "messages": [
      {
        "content": "you can recreate that exact element from Slate, but I do think we need to add support for tables natively in Payload<br> <br> tables and rich text are tough. Generally what we do is just make a &quot;markdown&quot; field when we need tables and then draw out the markdown table. You can see that on our website",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1668384198885
      },
      {
        "content": "How can I make it?<br> <br> I mean, is with Slate package?",
        "fileAttachments": [],
        "authorID": "321303422991073282",
        "authorName": "peladococinero",
        "authorAvatar": "b2dcd84159ee7ff804eedff1cb088533",
        "createdAtDate": 1668443782808
      },
      {
        "content": "All of the code for the Slate example is available right on that site above:<br> <br> <a href=\"https://github.com/ianstormtaylor/slate/blob/main/site/examples/tables.tsx\">https://github.com/ianstormtaylor/slate/blob/main/site/examples/tables.tsx</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1668717586330
      },
      {
        "content": "Sorry, I don&#x27;t undestand<br> <br> I mean, I can put a table field in Rich text?",
        "fileAttachments": [],
        "authorID": "321303422991073282",
        "authorName": "peladococinero",
        "authorAvatar": "b2dcd84159ee7ff804eedff1cb088533",
        "createdAtDate": 1668737503486
      },
      {
        "content": "it is technically possible to be able to put a table inside a rich text editor, but you need to manually extend Payload&#x27;s rich text editor to be able to support that—using the code in the example above",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1668778256709
      },
      {
        "content": "Ahh, okey<br> <br> Thanks you!",
        "fileAttachments": [],
        "authorID": "321303422991073282",
        "authorName": "peladococinero",
        "authorAvatar": "b2dcd84159ee7ff804eedff1cb088533",
        "createdAtDate": 1668778582867
      },
      {
        "content": "Hey @jmikrut 👋 Messaging here instead of starting a new thread on same topic - are there are any plans to add tables natively to Payload&#x27;s richText field? Or otherwise make it easier to do so, with a new plugin system of some kind?<br> <br> Asking so I know whether it&#x27;s worth me starting on a custom integration, or if I&#x27;d be better off waiting for Payload&#x27;s own solution. Thanks! Loving Payload so far 😀",
        "fileAttachments": [],
        "authorID": "717092488426422322",
        "authorName": "tommygun",
        "authorAvatar": "b9d4ef292957896e07ab52ebf478cee7",
        "createdAtDate": 1669226623697
      },
      {
        "content": "that is a good question<br> <br> right now there is a separate thread going about how we might build in Lexical editor support, which has native tables that are super nice<br> <br> but regarding tables in Slate, we will absolutely be getting to that one way or another, although it could be some time yet before we tackle it. We have a LOT on our plate for Q1 2023",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1669231050503
      },
      {
        "content": "Yes I&#x27;ve seen your roadmap! Exciting stuff 🥳  Thanks for confirming your plans.<br> <br> I&#x27;ve seen @Alessio 🍣 &#x27;s PR for a Lexical integration. Super cool. I&#x27;d be excited to help test this as a plugin. Tables are the missing piece for the content workflow in my current project!",
        "fileAttachments": [],
        "authorID": "717092488426422322",
        "authorName": "tommygun",
        "authorAvatar": "b9d4ef292957896e07ab52ebf478cee7",
        "createdAtDate": 1669237981093
      },
      {
        "content": "Currently working on a plugin version!<br>However, Meta&#x27;s team currently has 2 table implementations: the basic one and the &quot;experimental&quot; one (which is way nicer).<br>Since the experimental one changes what&#x27;s outputted as json, I&#x27;m planning to wait until the experimental one is stable and use that one - until then disable the table plugin. Reason is future-proofing as if I use the standard table plugin now, I can&#x27;t switch to the new one in the future as the data might break",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1669238239611
      },
      {
        "content": "Sounds great, thanks! I&#x27;m watching the GH thread, looking forward to testing out your Lexical plugin  😀",
        "fileAttachments": [],
        "authorID": "717092488426422322",
        "authorName": "tommygun",
        "authorAvatar": "b9d4ef292957896e07ab52ebf478cee7",
        "createdAtDate": 1669287498950
      },
      {
        "content": "Hey Alessio have you managed to implement the  the table. If you have would it be possible to share a gist of it",
        "fileAttachments": [],
        "authorID": "149873958760480769",
        "authorName": "roac",
        "authorAvatar": null,
        "createdAtDate": 1678433400851
      },
      {
        "content": "Hey, just updated the plugin to better support tables!<br><br>Check <a href=\"https://github.com/AlessioGr/payload-plugin-lexical/blob/master/demo/src/fields/customizedLexicalRichTextField.tsx#L37\">https://github.com/AlessioGr/payload-plugin-lexical/blob/master/demo/src/fields/customizedLexicalRichTextField.tsx#L37</a> for an example for enabling them<br> <br> Still disabled by default since I dont know which table type to use (standard or experimental), but it&#x27;s easy to enable it<br> <br> works very well though!",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1678451775945
      }
    ],
    "messageCount": 26,
    "slug": "how-can-i-create-a-table"
  },
  {
    "info": {
      "name": "Can we only allow one instance of a block to be selected?",
      "id": "1079604132991729694",
      "guildId": "967097582721572934",
      "createdAt": 1677468083380
    },
    "intro": {
      "content": "I have for example a footer block which if specified on a page, it will show the footer on the website. <br>Is there a way to stop the CMS user from adding multiple footer blocks to the page? <br><br>I know I can set min and max rows to 1, however there are also other blocks that they could add other than the footer, so we can&#x27;t use these fields.",
      "fileAttachments": [],
      "authorID": "178109250806087680",
      "authorName": "MRL",
      "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
      "createdAtDate": 1677468083380
    },
    "messages": [
      {
        "content": "Have you thought about using Footers as a Global Type instead? Then in the page collection you could create a toggle that opts in to show or hide the footer",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1677482395588
      },
      {
        "content": "I haven’t, no. But will look into it.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1677517471000
      },
      {
        "content": "Yep, a global is the way to go here. Fetch the global data on the front end and render the footer with it. If you only want it on certain pages you could add a checkbox to your pages and check to see if the page should render the footer - this will take some extra legwork on your frontend side to do but totally possible.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677587931181
      }
    ],
    "messageCount": 3,
    "slug": "can-we-only-allow-one-instance-of-a-block-to-be-selected"
  },
  {
    "info": {
      "name": "Struggling with authentication",
      "id": "1040025457896206436",
      "guildId": "967097582721572934",
      "createdAt": 1668031791901
    },
    "intro": {
      "content": "Hi, everyone. I&#x27;m struggling with authentication in frontend (Next.js)<br>I made a wrapper component in <code>_app</code> that uses <code>checkUser()</code> to see if there&#x27;s a user logged in (with <code>Me</code> query) and then returns <code>Login</code> component if user is <code>null</code>.<br><br>The login process works as expected, and returns user&#x27;s email as requested and error if email/password is wrong. I&#x27;ve followed payload/website and am using only fetch/graphQL, no Apollo. Then what I&#x27;m trying to do is call <code>checkUser()</code> again from parent to update <code>user</code> state. But user still returns null.<br><br>I don&#x27;t know if this pattern is wrong, if HTTP-only cookies aren&#x27;t being set, or something else. What am I doing wrong here?<br><br>Example monorepo: <a href=\"https://github.com/arieltonglet/payload-login-test\">https://github.com/arieltonglet/payload-login-test</a>",
      "fileAttachments": [],
      "authorID": "736673642158620680",
      "authorName": "arielarial",
      "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
      "createdAtDate": 1668031791901
    },
    "messages": [
      {
        "content": "Hi @arielarial - you might need to add the <code>credentials: &#x27;include&#x27;</code> request header so that the http-only cookie gets attached",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668032246423
      },
      {
        "content": "hi @jacobsfletch ! I&#x27;m adding it here:<br><a href=\"https://github.com/arieltonglet/payload-login-test/blob/main/frontend/graphql/index.ts#L14\">https://github.com/arieltonglet/payload-login-test/blob/main/frontend/graphql/index.ts#L14</a><br><br>should it be elsewhere?",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668032314297
      },
      {
        "content": "Ok, could it be that you are not awaiting your async <code>checkUser</code> here: <a href=\"https://github.com/arieltonglet/payload-login-test/blob/main/frontend/components/LoginContent.tsx#L20\">https://github.com/arieltonglet/payload-login-test/blob/main/frontend/components/LoginContent.tsx#L20</a><br> <br> try running your effect asynchronously<br> <br> <pre><code class=\"hljs\">useEffect(async () =&gt; {\n  await checkUser();\n}, []);</code></pre><br> <br> if that&#x27;s not it, open your network tab and look at the <code>/me</code> request<br> <br> you should see the payload token attached as a cookie",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668032769479
      },
      {
        "content": "hm.. so, React doesn&#x27;t like async effects. but  response from Me is user <code>null</code> anyway<br> <br> I don&#x27;t see payload token. should it be in Headers tab?<br> <br> No, wait. I tried using an incognito window and it is showing now. <code>Cookie: payload-token=[...]</code><br>But response still <code>{&quot;data&quot;:{&quot;meUser&quot;:{&quot;user&quot;:null}}}</code>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668033222448
      },
      {
        "content": "what about when you hit the <code>/me</code> route directly<br> <br> in a new tab",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668033728484
      },
      {
        "content": "it works! 🤔<br> <br> tried adding a logout button, but it&#x27;s the same: cookie is being sent, but the response is <code>errors: [{message: &quot;No User&quot;, locations: [{line: 3, column: 3}], path: [&quot;logoutUser&quot;],…}]</code>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668033813465
      },
      {
        "content": "Ok, we&#x27;re getting there<br> <br> I&#x27;m pretty sure you need to whitelist your domain in the <code>csrf</code> config<br> <br> like this, in your payload config.<br><pre><code class=\"hljs\"> csrf: [\n   &#x27;http://localhost:3000&#x27;\n ]</code></pre><br>change the url to match your Next.js app",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668036841144
      },
      {
        "content": "that&#x27;s it!",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668037053518
      },
      {
        "content": "amazing",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668037067223
      },
      {
        "content": "thank you so much! ✨ this was driving me crazy",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668037098930
      },
      {
        "content": "No problem! Happy to help. I know the feeling too well haha",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668037123905
      },
      {
        "content": "the payload/website repo helped A LOT as well",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668037136277
      },
      {
        "content": "Nice! We&#x27;re launching it on MONDAY so keep a look out!<br> <br> it&#x27;s been a sprint",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1668037211537
      },
      {
        "content": "that&#x27;s awesome 🎉<br> <br> I&#x27;ve updated the example repo for anyone looking for something like this (also for future me) -&gt; <a href=\"https://github.com/arieltonglet/payload-login-test\">https://github.com/arieltonglet/payload-login-test</a>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1668037439196
      },
      {
        "content": "Update: We now have an official auth example <a href=\"https://github.com/payloadcms/payload/tree/master/examples/auth\">https://github.com/payloadcms/payload/tree/master/examples/auth</a> which includes a nextjs front-end that may help others coming into this thread",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677303868648
      }
    ],
    "messageCount": 27,
    "slug": "struggling-with-authentication"
  },
  {
    "info": {
      "name": "How to trigger \"forgot password\" flow through local API",
      "id": "1078370236400685056",
      "guildId": "967097582721572934",
      "createdAt": 1677173899508
    },
    "intro": {
      "content": "I am trying this<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">forgotPassword</span>({\n  <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n  <span class=\"hljs-attr\">data</span>: {\n    email,\n  },\n});</code></pre><br><br>but this gives me following error:<br><pre><code class=\"hljs\">TypeError: Cannot read properties of undefined (reading &#x27;config&#x27;)\n    at forgotPassword (/Users/user/directory/node_modules/payload/src/auth/operations/forgotPassword.ts:51:9)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)</code></pre><br><br>reseting the password via the <code>/admin/forgot</code> works without a problem though. So it cannot be my email setup I guess.<br><br>Anyone an idea?",
      "fileAttachments": [],
      "authorID": "814899246540914698",
      "authorName": "moritz",
      "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
      "createdAtDate": 1677173899508
    },
    "messages": [
      {
        "content": "Then it&#x27;s a probably a bug, I got stuck at the same thing here and used the REST API as a workaround:<br><a href=\"https://github.com/linobino1/remix-payloadcms/blob/main/app/routes/auth/forgot-password.tsx\">https://github.com/linobino1/remix-payloadcms/blob/main/app/routes/auth/forgot-password.tsx</a>",
        "fileAttachments": [],
        "authorID": "1024331309486719056",
        "authorName": "linobino1",
        "authorAvatar": null,
        "createdAtDate": 1677183510500
      },
      {
        "content": "Hey @linobino1, I opened an issue with a bug report here <a href=\"https://github.com/payloadcms/payload/issues/2170\">https://github.com/payloadcms/payload/issues/2170</a><br>In case you want to follow that",
        "fileAttachments": [],
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1677226060655
      },
      {
        "content": "Thanks!",
        "fileAttachments": [],
        "authorID": "1024331309486719056",
        "authorName": "linobino1",
        "authorAvatar": null,
        "createdAtDate": 1677226082567
      }
    ],
    "messageCount": 3,
    "slug": "how-to-trigger-forgot-password-flow-through-local-api"
  },
  {
    "info": {
      "name": "sharp dependency still preventing use of Payload",
      "id": "1081202814048542761",
      "guildId": "967097582721572934",
      "createdAt": 1677849238646
    },
    "intro": {
      "content": "Hey all, just a reminder that some users on OSX are unable to use Payload because of the sharp dependency. You could install lib-vips via brew and then build from source on the sharp package, but the lib-vips dependency is massive. I feel like image manipulation should be handled by the user and not Payload as I would argue the majority of people care about data &amp; forms over media.<br> <br> Or make image manipulation / handling a plugin that is optional",
      "fileAttachments": [],
      "authorID": "1049775120559898725",
      "authorName": "thisisnotchris",
      "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
      "createdAtDate": 1677849238646
    },
    "messages": [
      {
        "content": "I think we will get to that point. And then we will have a local storage plugin that you would be able to tac on to a config, instead of it being baked in. But that will come at a later date.<br> <br> It will also allow us to reduce our bundle size for serverless deployments, which we would love to do - sharp is v large",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677862995792
      }
    ],
    "messageCount": 3,
    "slug": "sharp-dependency-still-preventing-use-of-payload"
  },
  {
    "info": {
      "name": "Password validation",
      "id": "1032646695181353020",
      "guildId": "967097582721572934",
      "createdAt": 1666272557779
    },
    "intro": {
      "content": "Hello, I hope you’re having a fantastic day. Is there any way to access the password field for custom validation purposes ?",
      "fileAttachments": [],
      "authorID": "967777099509268522",
      "authorName": "KokutseDJ",
      "authorAvatar": "41e22bc582b566e9e2fd2e5a408cbb95",
      "createdAtDate": 1666272557779
    },
    "messages": [
      {
        "content": "Yes! You can pass in your own password field directly into your auth-enabled config, and whatever you define on it (including custom validate function) will be merged into the default password field<br> <br> just make sure you have it named appropriately<br> <br> hmm wait i may have spoken too soon. that works for any other field <em><strong>besides</strong></em> password<br> <br> it looks like right now this is not possible, but it would be a great feature to add<br> <br> and a simple PR to make if you were interested in contributing<br> <br> I could help document the work necessary to implement it and then you could make it happen if you were up for it. Otherwise we can get to it at some point - just not sure when",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666273763384
      },
      {
        "content": "Thanks for the response, I really appreciate the work you guys are doing here. Whenever you have the time please do document the work necessary. I will be happy to help implement it.",
        "fileAttachments": [],
        "authorID": "967777099509268522",
        "authorName": "KokutseDJ",
        "authorAvatar": "41e22bc582b566e9e2fd2e5a408cbb95",
        "createdAtDate": 1666281356000
      },
      {
        "content": "Hi, is there any update on this topic? <br>Is it possible to enforce password strength without creating custom auth strategy?",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1671445425424
      },
      {
        "content": "I will add this as a feature request right now and tag it on the roadmap<br> <br> <a href=\"https://github.com/payloadcms/payload/discussions/1713\">https://github.com/payloadcms/payload/discussions/1713</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1671475372309
      },
      {
        "content": "Are there any news to this topic? I need to validate my password (min. length, has to include at least one number, one special character,...)",
        "fileAttachments": [],
        "authorID": "1002213674926215350",
        "authorName": "DU DA",
        "authorAvatar": null,
        "createdAtDate": 1678270480102
      },
      {
        "content": "In the meantime you could validate the password field with a beforeValidate hook on the collection. Throw an error if it does not meet your requirements",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678333048459
      },
      {
        "content": "How can one access password field of the document in the Collection hook?",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1678351204456
      },
      {
        "content": "If the operation is create or update it will live on <code>data</code>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678365245822
      },
      {
        "content": "We created a workaround:<br><br><code>hooks: {\n    beforeOperation: [\n      ({args, operation}) =&gt; {\n        if ((operation == &#x27;update&#x27; || operation == &#x27;create&#x27;) &amp;&amp; args?.data.password) {\n          const {password} = args?.data\n          const passwordLength = 18\n          // check if the password is at least X chars long and contains 3 of 4 conditions:\n          // lowercase / uppercase / digit / sepcial character\n          const regexString =</code>^((?=.<em>[a-z])(?=.</em>[A-Z])(?=.<em>\\d)|(?=.</em>[a-z])(?=.<em>\\d)(?=.</em>[\\W<em>])|(?=.[a-z])(?=.[A-Z])(?=.*[\\W</em>])|(?=.<em>[A-Z])(?=.</em>\\d)(?=.*[\\W_])).{${passwordLength},}$<code>const regex = new RegExp(regexString)\n          const isValid = regex.test(password)\n          if (!isValid) {\n            throw new APIError(&#x27;Error Message&#x27;, httpStatus.BAD_REQUEST)\n          }\n        }\n        return args\n      },\n    ],\n  },</code>",
        "fileAttachments": [],
        "authorID": "1002213674926215350",
        "authorName": "DU DA",
        "authorAvatar": null,
        "createdAtDate": 1678366024199
      },
      {
        "content": "Yes exactly ⬆️",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678367118311
      }
    ],
    "messageCount": 16,
    "slug": "password-validation"
  },
  {
    "info": {
      "name": "Form Builder: Create Other Field for Select/Custom Type",
      "id": "1075186230981038191",
      "guildId": "967097582721572934",
      "createdAt": 1676414773460
    },
    "intro": {
      "content": "Hey so I need to add support for an &quot;other&quot; field that will allow a custom text box to appear on the frontend, the way the data is sent is an array of submissionData <br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-built_in\">string</span>,\n  <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-built_in\">string</span>,\n  <span class=\"hljs-string\">&quot;id&quot;</span>?: <span class=\"hljs-built_in\">string</span>,\n}</code></pre><br><br>If i&#x27;m using a Select type and want to allow the extra field how should I go about submitting the text field data and adding the other field to the inbuilt type for it?<br><br>I&#x27;ve also got a custom type called &quot;multi-choice&quot; which basically identical to select, but just different blockType so it&#x27;s easier to differentiate the type of form element to show on frontend and also Select doesn&#x27;t support multi-select options it seems.<br>I&#x27;ve added an Other checkbox to say if the form creator wants to allow the custom field, but I&#x27;m unsure how to submit it, current idea would be to send it in the value key like<br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;multi-choice&quot;</span>,\n  <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;other:Custom Text Goes Here&quot;</span>,\n}</code></pre><br>correct me if i&#x27;m wrong but this would fail validation as the value doesn&#x27;t match an option.<br>so would I just extend the submission data type or is there another way that would be recommended<br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;multi-choice&quot;</span>,\n  <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;other&quot;</span>,\n  <span class=\"hljs-string\">&quot;data&quot;</span>: <span class=\"hljs-string\">&quot;Custom Text Goes Here&quot;</span>\n}</code></pre><br> <br> @jacobsfletch your prob best person to ask about this<br><br>next solution I currently have is to add a new field on the form that has &quot;nameOfField-other&quot; for accepting the other fields so it doesnt modify the returned data, and would just be an optional field returned. this gets added via a field hook for the multi-choice field, but unsure how I could add the same to the select field outside a collection hook?",
      "fileAttachments": [],
      "authorID": "1072674585197166633",
      "authorName": "work",
      "authorAvatar": "58f7a3fd0703e50b4d6210b3ac597b70",
      "createdAtDate": 1676414773460
    },
    "messages": [
      {
        "content": "It sounds like you need to add <em>two</em> new fields to your forms collection, one for the checkbox that enables and disables your text field, then the text field itself. You can use conditional logic to show and hide this field based on whether it’s enabled.<br> <br> This way you have a field to submit data to.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676423210832
      },
      {
        "content": "yep that&#x27;s pretty much what I ended up going with, and just overrode the select field to add the other toggle to it.<br><br>It would be nice if this was added into the plugin, I can make a PR for it with a rough implementation which can be edited by someone to follow your standards closer incase i&#x27;ve done something that doesn&#x27;t follow correctly.<br> <br> basically just adds another field into the form and use a hook to add or remove it on update",
        "fileAttachments": [],
        "authorID": "1072674585197166633",
        "authorName": "work",
        "authorAvatar": "58f7a3fd0703e50b4d6210b3ac597b70",
        "createdAtDate": 1676423800529
      }
    ],
    "messageCount": 5,
    "slug": "form-builder-create-other-field-for-select-custom-type"
  },
  {
    "info": {
      "name": "Selecting one element in Select field changes the image shown in the media field?",
      "id": "1079486959166181386",
      "guildId": "967097582721572934",
      "createdAt": 1677440146963
    },
    "intro": {
      "content": "Is it possible somehow, maybe with filters or relationship between select type and media type to connect them in a way that when I select one element from the dropdown list, then in the media field the image changes.<br><br>E.g. i select the word &#x27;Cat&#x27; in the Select field then in the media field I get an image of a cat, that is already uploaded",
      "fileAttachments": [],
      "authorID": "537385969230413846",
      "authorName": "Arskeliss",
      "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
      "createdAtDate": 1677440146963
    },
    "messages": [
      {
        "content": "you can probably use field hooks<br> <br> <a href=\"https://payloadcms.com/docs/hooks/fields\">https://payloadcms.com/docs/hooks/fields</a>",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677453596755
      },
      {
        "content": "I&#x27;ll give it a try,thanks<br> <br> I cant really get hold of the concept of using hooks.<br>Is it possible to read data from one field inside of a hook of another field?",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677481695171
      },
      {
        "content": "Yes you can access the full document data from a hook, here is a list of the properties you can use: <a href=\"https://payloadcms.com/docs/hooks/fields#arguments-and-return-values\">https://payloadcms.com/docs/hooks/fields#arguments-and-return-values</a><br><br>Here is one way you can achieve this (screenshot), using a relationship field and hook that returns a different media based on the select field and the tags on the media item. I&#x27;ve used an <code>afterRead</code> hook here but you could use a different hook. Also the relationship field won&#x27;t display the image, but you could add a custom component to this field that renders the image.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1079486959166181386/1079885090919821342/Screen_Shot_2023-02-27_at_9.52.10_PM.png",
            "name": "Screen_Shot_2023-02-27_at_9.52.10_PM.png",
            "id": "1079885090919821342",
            "size": 473563,
            "url": "https://cdn.discordapp.com/attachments/1079486959166181386/1079885090919821342/Screen_Shot_2023-02-27_at_9.52.10_PM.png",
            "proxyURL": "https://media.discordapp.net/attachments/1079486959166181386/1079885090919821342/Screen_Shot_2023-02-27_at_9.52.10_PM.png",
            "height": 1958,
            "width": 2918,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1677535068917
      },
      {
        "content": "Thank you @jesschow, i will try it out soon, i&#x27;m sure that it will work this way. Thank you enormously. <br><br>Also, sorry about being such a noob, I still have to understand Payload, to put the puzzle pieces together. <br><br>Looks like a great opportunity as well to exercise writing custom components. Sweet. 🙌🙌🙌<br><br> By the way, can I use  something like Next&#x27;s Image component to render the image inside Payload?<br> <br> It&#x27;s working as expected, I changed the hook to afterChange and it changes the Media right after I hit the Save button. Neat. Thank you so much",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677570404715
      }
    ],
    "messageCount": 7,
    "slug": "selecting-one-element-in-select-field-changes-the-image-shown-in-the-media-field"
  },
  {
    "info": {
      "name": "Validation Passes When Returning a String",
      "id": "1083040823924494388",
      "guildId": "967097582721572934",
      "createdAt": 1678287454349
    },
    "intro": {
      "content": "I&#x27;m trying to write a validation function for this breadcrumb array field and I can verify via console logs that it gets to the <code>return &quot;&lt;error message&gt;&quot;</code> step, but even though it&#x27;s returning a string it still passes validation and updates correctly when saved.<br><br>This is the validation function...<br><br><pre><code class=\"hljs typescript\"><span class=\"hljs-attr\">validate</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">value, siblingData</span>) =&gt;</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`value: <span class=\"hljs-subst\">${value}</span>`</span>, value);\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`siblingData: <span class=\"hljs-subst\">${siblingData}</span>`</span>, siblingData);\n    <span class=\"hljs-keyword\">if</span> (siblingData?.<span class=\"hljs-property\">data</span>?.<span class=\"hljs-property\">variant</span> === <span class=\"hljs-string\">&#x27;blogPost&#x27;</span>) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`variant is blogPost`</span>);\n        <span class=\"hljs-keyword\">if</span> (value?.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">1</span>) {\n            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">warn</span>(<span class=\"hljs-string\">`more than one breadcrumb`</span>);\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Blog posts shouldn&#x27;t have more than one breadcrumb&quot;</span>;\n        } <span class=\"hljs-comment\">// there&#x27;s another clause here but it&#x27;s irrelevant</span>\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n},</code></pre><br><br>Attached is the console output.<br><br>To be clear, in the Admin UI I&#x27;m seeing this update successfully even though it should be failing validation.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1083040823924494388/1083040824260047049/ConsoleOutput",
          "name": "ConsoleOutput",
          "id": "1083040824260047049",
          "size": 57156,
          "url": "https://cdn.discordapp.com/attachments/1083040823924494388/1083040824260047049/ConsoleOutput",
          "proxyURL": "https://media.discordapp.net/attachments/1083040823924494388/1083040824260047049/ConsoleOutput",
          "height": null,
          "width": null,
          "contentType": null,
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "408784184765710337",
      "authorName": "TheDunco",
      "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
      "createdAtDate": 1678287454349
    },
    "messages": [
      {
        "content": "a string return is a truthy value. maybe you actually have to throw an error?<br><pre><code class=\"hljs\">throw new Error(&quot;Blog posts shouldn&#x27;t have more than one breadcrumb&quot;)</code></pre>",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1678287612226
      },
      {
        "content": "In theory it&#x27;s truthy but the way Payload validation should work when returning a string is that it should show that error next to the relevant field, as explained here: <a href=\"https://payloadcms.com/docs/fields/overview#validation\">https://payloadcms.com/docs/fields/overview#validation</a><br> <br> I have other examples that are currently working that utilize this and it&#x27;s showing the correct behavior, but not for this one which is confusing me.",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678287705148
      },
      {
        "content": "ah ok, my bad. that was just an initial thought I had purely looking at your code example.",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1678287904020
      },
      {
        "content": "No problem!<br> <br> I was also able to verify that other forms of validation do work on that field (Making the properties required) which I didn&#x27;t have before but should have. Either way the custom validation function above is not working either way<br> <br> I&#x27;m running Payload v1.16.11 btw, but plan to update to 1.16.17 later today so I will see if it&#x27;s still a problem after that",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678288071159
      },
      {
        "content": "Is it just this field type? Could you troubleshoot by adding custom validation to a simple text field?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678333478556
      },
      {
        "content": "@Jarrod It does seem to just be for this field type. Validation seems to correctly fail for a simple test text field in the same collection like this...<br><pre><code class=\"hljs typescript\">{\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text&#x27;</span>,\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;testValidation&#x27;</span>,\n    <span class=\"hljs-attr\">validate</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">value</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">if</span> (value === <span class=\"hljs-string\">&#x27;test&#x27;</span>) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;You cannot use the word &quot;test&quot; in this field&#x27;</span>;\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n    },\n},</code></pre><br> <br> I have opened a GitHub issue detailing this here: <a href=\"https://github.com/payloadcms/payload/issues/2281\">https://github.com/payloadcms/payload/issues/2281</a>",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678377388341
      },
      {
        "content": "Perfect, thank you 🙏",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678399296979
      }
    ],
    "messageCount": 11,
    "slug": "validation-passes-when-returning-a-string"
  },
  {
    "info": {
      "name": "can I build this with payload?",
      "id": "1075619687318159430",
      "guildId": "967097582721572934",
      "createdAt": 1676518117504
    },
    "intro": {
      "content": "I want to know if this flow can be built with Payload or if someone has suggestions on how to create this. <br><br>I have some collections: users, activities, and visits [image with example in comment]. Right now I can create visits for those activities in Front, the visit is a collection with a relationship between users and activities. <br><br>For some visits we need some extra info from the user, I was thinking of creating a collection called forms that has the block field to be able to create different forms and add a relationship to the form in activities. Then in Front, pull those fields and create the form.<br><br>I don&#x27;t know the right way to save this data.<br><br>Can I add these new and random fields directly to a collection?  (maybe the user or another like the visit collection)<br> <br> I think this can be done with the form plugin.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1075619687318159430/1075619687511105608/collections.png",
          "name": "collections.png",
          "id": "1075619687511105608",
          "size": 35732,
          "url": "https://cdn.discordapp.com/attachments/1075619687318159430/1075619687511105608/collections.png",
          "proxyURL": "https://media.discordapp.net/attachments/1075619687318159430/1075619687511105608/collections.png",
          "height": 873,
          "width": 1996,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1075619687318159430/1075619687737593886/flow.png",
          "name": "flow.png",
          "id": "1075619687737593886",
          "size": 51492,
          "url": "https://cdn.discordapp.com/attachments/1075619687318159430/1075619687737593886/flow.png",
          "proxyURL": "https://media.discordapp.net/attachments/1075619687318159430/1075619687737593886/flow.png",
          "height": 1516,
          "width": 1198,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "706208036439588934",
      "authorName": "akacronos",
      "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
      "createdAtDate": 1676518117504
    },
    "messages": [],
    "messageCount": 1,
    "slug": "can-i-build-this-with-payload"
  },
  {
    "info": {
      "name": "Checkbox control",
      "id": "1081034100141477908",
      "guildId": "967097582721572934",
      "createdAt": 1677809014116
    },
    "intro": {
      "content": "We just have that control in our code: import { Text, Checkbox, Select } from &#x27;payload/components/forms&#x27;;<br>&lt;Checkbox name={controlName} label={label} required={isRequired} /&gt;  Could we use some additional attribute to set that checked initially?<br> <br> @jacobsfletch",
      "fileAttachments": [],
      "authorID": "956827460975083550",
      "authorName": "agolovan",
      "authorAvatar": null,
      "createdAtDate": 1677809014116
    },
    "messages": [
      {
        "content": "Is this a custom field component? In that case you could use <code>defaultValue: true</code> in your config as described here <a href=\"https://payloadcms.com/docs/fields/checkbox#config\">https://payloadcms.com/docs/fields/checkbox#config</a><br> <br> Otherwise if you&#x27;re importing Payload&#x27;s checkbox for another use, it&#x27;s not quite setup for that yet. This is a roadmap item described here <a href=\"https://github.com/payloadcms/payload/discussions/293\">https://github.com/payloadcms/payload/discussions/293</a> which we plan on tackling with moderate priority.<br> <br> Basically we need to allow the checkbox to be externally controlled. Right now it ties into form state but we need to detach it. We&#x27;ve already done this for the <code>Text</code>, <code>Textarea</code>, and <code>Upload</code> fields, just need to get to the rest.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677815785037
      },
      {
        "content": "This checkbox is in AdminView that is invoked with some url that is that in config file. I could use defaultValue, but to what value to set that?<br> <br> Yes we are setting using initial values for form when state is saved into database. But when started to create, it is set to false.<br> <br> Not a huge deal, we could just allow the user to click and check. When submitted, state is saved into database.",
        "fileAttachments": [],
        "authorID": "956827460975083550",
        "authorName": "agolovan",
        "authorAvatar": null,
        "createdAtDate": 1677817232698
      },
      {
        "content": "Ok then you should be able to use <code>defaultValue: true</code> in your checkbox config",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677818595501
      },
      {
        "content": "Not really - I don’t know name of this field when config is created. When we are selecting property required, for example, check box is created but the user need to click that checkbox, not a huge deal.",
        "fileAttachments": [],
        "authorID": "956827460975083550",
        "authorName": "agolovan",
        "authorAvatar": null,
        "createdAtDate": 1677833353956
      },
      {
        "content": "Ok so it does sound like this falls under the latter, which means we just need to allow support for external control of the checkbox field",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677893463400
      },
      {
        "content": "I think we just need to export the checkbox input, like we do for the text field",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677947809796
      },
      {
        "content": "We have to detach it from form context to allow to be controlled via props.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677950338978
      },
      {
        "content": "This is not a huge deal at all - it is ok for user to select checkbox to be added under the form and click to be checked.<br> <br> Yes, checkbox input has checked property, but it is inside checkbox and does not work under the form. I mean when we press submit, fields and data have the state of all controls, so we are using checkbox for that to work properly.<br> <br> What do you mean related to text field? Could text field to be controlled via properties?",
        "fileAttachments": [],
        "authorID": "956827460975083550",
        "authorName": "agolovan",
        "authorAvatar": null,
        "createdAtDate": 1678016773413
      },
      {
        "content": "I was thinking you were trying to render a custom field component, but I’m not sure if you are",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678021715422
      },
      {
        "content": "We could use initialData, for form, but may be there is a different way, like to use property by text field.",
        "fileAttachments": [],
        "authorID": "956827460975083550",
        "authorName": "agolovan",
        "authorAvatar": null,
        "createdAtDate": 1678049286656
      }
    ],
    "messageCount": 17,
    "slug": "checkbox-control"
  },
  {
    "info": {
      "name": "SMTP email / gmail",
      "id": "1085454791200755772",
      "guildId": "967097582721572934",
      "createdAt": 1678862988997
    },
    "intro": {
      "content": "I&#x27;m trying to send emails using gmail smtp, I already create a pass for my smtp account (setting 2step verification and pass). Do I need to do something else? 😅 <br><br>This is my config<br><pre><code class=\"hljs\">payload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGODB_URI,\n  express: app,\n  onInit: () =&gt; {\n    payload.logger.info(`Payload Admin URL: ${payload.getAdminURL()}`);\n  },\n  email: {\n    transportOptions: {\n      host: process.env.SMTP_HOST,\n      auth: {\n        user: process.env.SMTP_USER,\n        pass: process.env.SMTP_PASS,\n      },\n      port: 587,\n      secure: true, // use TLS\n      tls: {\n        // do not fail on invalid certs\n        rejectUnauthorized: false,\n      },\n    },\n    fromName: &#x27;hello&#x27;,\n    fromAddress: process.env.SMTP_FROM,\n  },\n});</code></pre><br><br>I&#x27;m getting this errors:<br><pre><code class=\"hljs\">There is an error with the email configuration you have provided. Error: 4041A9DD01000000:error:0A00010B:SSL routines:ssl3_get_record:wrong version number:../deps/openssl/openssl/ssl/record/ssl3_record.c:355:</code></pre>",
      "fileAttachments": [],
      "authorID": "706208036439588934",
      "authorName": "akacronos",
      "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
      "createdAtDate": 1678862988997
    },
    "messages": [
      {
        "content": "add service gmail, set secure to false and remove tls <pre><code class=\"hljs\">  transportOptions: {\n      service: &quot;gmail&quot;,\n      host: process.env.SMTP_HOST,\n      auth: {\n        user: process.env.SMTP_USER,\n        pass: process.env.EMAIL_APP_PASS,\n      },\n      port: 587,\n      secure: false,\n    }, </code></pre>",
        "fileAttachments": [],
        "authorID": "122444319054495746",
        "authorName": "SKRY",
        "authorAvatar": "5b54bd085cab964c72bce21dcfe04638",
        "createdAtDate": 1678866525692
      },
      {
        "content": "Google requires SSL on email going out of gmail:<br><br>If you connect using SSL or TLS, you can send email to anyone inside or outside of your organization using smtp.gmail.com as your SMTP server. This option requires you to authenticate with your Gmail or Google Workspace account and passwords",
        "fileAttachments": [],
        "authorID": "507730080642891776",
        "authorName": "thiccaxe",
        "authorAvatar": "3eb001f11bae75cf146e45a7a39a198c",
        "createdAtDate": 1678889604675
      }
    ],
    "messageCount": 2,
    "slug": "smtp-email-gmail"
  },
  {
    "info": {
      "name": "Is it possible to override scss vars?",
      "id": "1075154570147270787",
      "guildId": "967097582721572934",
      "createdAt": 1676407224929
    },
    "intro": {
      "content": "I&#x27;m trying to update <code>$baseline-body-size</code> but it doesn&#x27;t affect the existing scss.<br> <br> Seems that only CSS variables can be overridden",
      "fileAttachments": [],
      "authorID": "476523795251855360",
      "authorName": "thgh",
      "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
      "createdAtDate": 1676407224929
    },
    "messages": [
      {
        "content": "We should likely convert the scss variables into css variables...",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676477798958
      }
    ],
    "messageCount": 2,
    "slug": "is-it-possible-to-override-scss-vars"
  },
  {
    "info": {
      "name": "Why does the afterRead hook run multiple times for just one page load?",
      "id": "1070703179420930171",
      "guildId": "967097582721572934",
      "createdAt": 1675345930677
    },
    "intro": {
      "content": "It&#x27;s run a total of 15 (!!) times for just one page reload, even though I have attached that afterRead hook to just one single field. Is it supposed to work that way?<br><br>The collection I&#x27;m using: <a href=\"https://paste.gg/p/anonymous/6ba997cb994d4a32bbe29d0f75bb87b9\">https://paste.gg/p/anonymous/6ba997cb994d4a32bbe29d0f75bb87b9</a><br><br>First 5 times siblingdata works as usual. Last 10 times siblingdata is empty.",
      "fileAttachments": [],
      "authorID": "360823574644129795",
      "authorName": "Alessio 🍣",
      "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
      "createdAtDate": 1675345930677
    },
    "messages": [
      {
        "content": "Hey @Alessio 🍣 , I just tried this out and got 6 times... which seems a lot, all of them had siblingData however",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678374944228
      },
      {
        "content": "hey hey, is there a reason why it runs multiple times? Or should it only run one time.<br><br>Will test it out later again - maybe it got better in a newer version of payload",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1678375156850
      },
      {
        "content": "Okay I&#x27;ve done a bit of learning from the team - if you are reloading the page in the admin UI it is not  unexpected behavior, this is because there are many other variables that can cause it to run extra times including versions, preferences, access control, doc relationships etc.<br><br>If you hit the api route directly, you should see it only run once (which I found to be the case when I tested it).<br><br>If you get a chance to test again let me know what you find",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678378657367
      }
    ],
    "messageCount": 3,
    "slug": "why-does-the-afterread-hook-run-multiple-times-for-just-one-page-load"
  },
  {
    "info": {
      "name": "cyclic.sh deployment",
      "id": "1078874025280950272",
      "guildId": "967097582721572934",
      "createdAt": 1677294012137
    },
    "intro": {
      "content": "has anyone deployed payload cms to cyclic.sh? I have been trying for couple of hours without any luck",
      "fileAttachments": [],
      "authorID": "944284724824801302",
      "authorName": "generator101",
      "authorAvatar": null,
      "createdAtDate": 1677294012137
    },
    "messages": [
      {
        "content": "This is the first I&#x27;ve heard of this platform. Could you provide more detail on what you&#x27;re running into? We may be able to help.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677591893034
      },
      {
        "content": "yeah, I recently heard about this when I was trying to test different platforms for running payload cms. I cant remember what was the issue I faced, but I decided not to deploy the cms to this platform so we can close this issue.",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677600665068
      }
    ],
    "messageCount": 2,
    "slug": "cyclicsh-deployment"
  },
  {
    "info": {
      "name": "Auth issues",
      "id": "1080347758940135485",
      "guildId": "967097582721572934",
      "createdAt": 1677645377622
    },
    "intro": {
      "content": "via postman i can login and get responses like expected, but when trying to fetch the /Me endpoint from my front-end, i always get { users : none } back, even if called directly after passing login. when i try to logout i get a &quot;no user&quot; error. <br><br>i have seen <br><pre><code class=\"hljs\">credentials : &#x27;include&#x27;</code></pre><br>i tried adding it to the request but i get cors errors even though both urls (localhost with ports) are whitelisted <br><br>does anyone have an idea what i am doing wrong here?",
      "fileAttachments": [],
      "authorID": "277050857852370944",
      "authorName": "Nog",
      "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
      "createdAtDate": 1677645377622
    },
    "messages": [
      {
        "content": "To make authentication work across domains you need to set cors, csrf, and the cookie domain. Our official auth example demonstrates this pretty simply, check it out; <a href=\"https://github.com/payloadcms/payload/tree/master/examples/auth/cms#readme\">https://github.com/payloadcms/payload/tree/master/examples/auth/cms#readme</a><br> <br> The <code>credentials: include</code> line in your front-end fetch will automatically attach Payload&#x27;s http-only cookie to the request, but Payload will only respect that request and cookie if the settings are configured.<br> <br> If you&#x27;re still seeing a cors error after setting the config, double check that the values are correct. You may be using environment variables that are not loaded. This has tripped me up more times than I&#x27;m willing to admit.<br> <br> Also note that Postman will not trigger cors errors because it makes the request server-side and cors is a browser-only concept.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677649862600
      },
      {
        "content": "thanks for the quick response! <br><br>the cookie domain i had not set but the cors and csrf configs are like in the example with the exception of using strings directly<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> clientUrls = [<span class=\"hljs-string\">&#x27;http://localhost:5173&#x27;</span>, <span class=\"hljs-string\">&#x27;http://localhost:3000&#x27;</span>];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">buildConfig</span>({\n  <span class=\"hljs-attr\">serverURL</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PAYLOAD_PUBLIC_SERVER_URL</span>,\n  <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">user</span>: <span class=\"hljs-title class_\">Admins</span>.<span class=\"hljs-property\">slug</span>,\n  },\n  <span class=\"hljs-attr\">cors</span>: clientUrls,\n  <span class=\"hljs-attr\">csrf</span>: clientUrls,\n  <span class=\"hljs-attr\">collections</span>: [<span class=\"hljs-title class_\">Admins</span>, players],\n  <span class=\"hljs-attr\">typescript</span>: {\n    <span class=\"hljs-attr\">outputFile</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;payload-types.ts&quot;</span>),\n  },\n  <span class=\"hljs-attr\">graphQL</span>: {\n    <span class=\"hljs-attr\">schemaOutputFile</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;generated-schema.graphql&quot;</span>),\n  },\n});</code></pre><br><br>the cors errors persists",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677650971842
      },
      {
        "content": "Can you paste the error here? And possibly your request as well.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677652157923
      },
      {
        "content": "<a href=\"https://i.imgur.com/tGYWsVZ.png\">https://i.imgur.com/tGYWsVZ.png</a><br> <br> <pre><code class=\"hljs\">Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at http://localhost:3000/api/players/login. (Reason: expected ‘true’ in CORS header ‘Access-Control-Allow-Credentials’).</code></pre><br> <br> <a href=\"https://i.imgur.com/0F5TVjw.png\">https://i.imgur.com/0F5TVjw.png</a><br> <br> <pre><code class=\"hljs ts\"> <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">&#x27;http://localhost:3000/api/players/login&#x27;</span>, {\n      <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;POST&#x27;</span>,\n      <span class=\"hljs-attr\">credentials</span>: <span class=\"hljs-string\">&#x27;include&#x27;</span>,\n      <span class=\"hljs-attr\">headers</span>: {\n        <span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>: <span class=\"hljs-string\">&#x27;application/json&#x27;</span>,\n      },\n      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>({\n        <span class=\"hljs-attr\">email</span>: username,\n        <span class=\"hljs-attr\">password</span>: password,\n      }),\n      });</code></pre>",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677653327372
      },
      {
        "content": "Weird, your response headers indicate that <code>http://localhost:5173</code> is whitelisted as expected<br> <br> <code>http://localhost:5173</code> is the address of your front-end right?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677679467095
      },
      {
        "content": "Yes",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677682928796
      },
      {
        "content": "Are you able to hit any other endpoints with success? Like <code>/api/players</code>?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677683797969
      },
      {
        "content": "when i leave out the credentials : &#x27;include&#x27;<br>i can log in , get the correct user info and token<br> <br> but in the same function, after the user token retrieval, when fetching /me again, it shows not logged in, when using not the credential line (it goes through) but with the line, the cors errors appear<br> <br> so nothing with the credential line included goes through, everything without goes through, works but as expected when your not logged in",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677683878414
      },
      {
        "content": "Ok this is making more sense<br> <br> The reason you are logging in the first time with success, but do not remain logged in, is because of the cookie domain settings<br> <br> You need to whitelist <code>localhost</code> as seen here: <a href=\"https://github.com/payloadcms/payload/blob/master/examples/auth/cms/src/collections/Users.ts#L14\">https://github.com/payloadcms/payload/blob/master/examples/auth/cms/src/collections/Users.ts#L14</a><br> <br> This will allow Payload to attach the http-only cookie to your browser and read it back on every <code>/me</code> request",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677684114850
      },
      {
        "content": "<a href=\"https://i.imgur.com/w7leWko.png\">https://i.imgur.com/w7leWko.png</a><br> <br> i tried swapping secure to false since it did not work the first time i tried, ignore that pls",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677684257977
      },
      {
        "content": "Can you verify your cookie settings by inspecting the cookie in your browser?<br> <br> In Chrome, Inspector &gt; Application &gt; Cookies<br> <br> You can see what domain, etc is being attached",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677684462225
      },
      {
        "content": "hmm might need to swap browsers here 😄<br> <br> nothing appears there but just to be clear , i cannot log in with &#x27;credentials : &quot;include&quot;&#x27; right",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677684734799
      },
      {
        "content": "Right and that is because <code>credentials: include</code> attaches that cookie to the request<br> <br> But all signs are pointing to a bad cookie",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677684966156
      },
      {
        "content": "yea , that seems to be missing , there is nothing i have specifically do right?<br> <br> im not experienced at all with web development to be honest, sorry if im being stupid here, usually doing more c++ or gamedev stuff ^^",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677685023771
      },
      {
        "content": "It&#x27;s all good! Happy to help. I think we&#x27;re close.<br> <br> Do you have any custom hooks that might be manipulating the user in the response?",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677685175515
      },
      {
        "content": "there are some hooks, but they dont do anything as far as i can tell<br> <br> <a href=\"https://i.imgur.com/U98Gm0Y.png\">https://i.imgur.com/U98Gm0Y.png</a><br> <br> <a href=\"https://i.imgur.com/fpgHnuz.png\">https://i.imgur.com/fpgHnuz.png</a>",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677685296264
      },
      {
        "content": "Try commenting those out temporarily",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677685439532
      },
      {
        "content": "no effect<br> <br> what about <br><pre><code class=\"hljs ts\">  app.<span class=\"hljs-title function_\">use</span>(payload.<span class=\"hljs-property\">authenticate</span>);</code></pre> <br>? i seen it somewhere, had commented it out bc it did not seem to be required<br> <br> <a href=\"https://i.imgur.com/Pn3ThPS.png\">https://i.imgur.com/Pn3ThPS.png</a><br> <br> here is a login response btw<br> <br> maybe there is some useful info",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677685679696
      },
      {
        "content": "@Nog can you paste what your most recent Players auth config looks like?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677720452819
      },
      {
        "content": "i was able to fix this issue 20 min ago , the essential parts i was missing was setting cookie settings in the user collection, jacob pointed that out, and lastly correctly setting the cookie.",
        "fileAttachments": [],
        "authorID": "277050857852370944",
        "authorName": "Nog",
        "authorAvatar": "3e5fb878dd53777e469ed9f0f2821c9a",
        "createdAtDate": 1677720630826
      },
      {
        "content": "Amazing, happy to hear it 👍",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677720867612
      },
      {
        "content": "@jacobsfletch Do you know why <a href=\"https://payloadcms.com/docs/authentication/using-middleware\">https://payloadcms.com/docs/authentication/using-middleware</a> adding an express route, req.user is always undefined<br> <br> Can confirm im including credentials in the request<br> <br> also, the docs mention payload.authenticate as middleware, but it always returns undefined",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678904167281
      }
    ],
    "messageCount": 49,
    "slug": "auth-issues"
  },
  {
    "info": {
      "name": "Question about payload serverless using Nextjs",
      "id": "1078891668859797558",
      "guildId": "967097582721572934",
      "createdAt": 1677298218694
    },
    "intro": {
      "content": "I saw that you guys are building this project<br><a href=\"https://github.com/payloadcms/next-payload-demo#readme\">https://github.com/payloadcms/next-payload-demo#readme</a><br><br>I wanted to know how advanced this project is, I know it says there that until it reaches 1.0 it is not stable, but I don&#x27;t know how far you have gotten or if we can help with something",
      "fileAttachments": [],
      "authorID": "391293587922485252",
      "authorName": "Hyra10",
      "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
      "createdAtDate": 1677298218694
    },
    "messages": [
      {
        "content": "Cool to see people watching some of our repos! This repo is still being working on, and will be ready for consumption in the coming weeks.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677512035654
      },
      {
        "content": "I&#x27;m looking forward to this as well.",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677513512535
      },
      {
        "content": "thank you Elliot, I discovered a bug while playing with it, I added an issue on github, looking forward to this release",
        "fileAttachments": [],
        "authorID": "391293587922485252",
        "authorName": "Hyra10",
        "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
        "createdAtDate": 1677642616226
      }
    ],
    "messageCount": 3,
    "slug": "question-about-payload-serverless-using-nextjs"
  },
  {
    "info": {
      "name": "Collection sidebar (right side)",
      "id": "1084836470470230186",
      "guildId": "967097582721572934",
      "createdAt": 1678715569847
    },
    "intro": {
      "content": "Is it possible to remove the right sidebar from the collection view and move the save button to the center view?",
      "fileAttachments": [],
      "authorID": "473343795782615060",
      "authorName": "damnstaychill",
      "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
      "createdAtDate": 1678715569847
    },
    "messages": [
      {
        "content": "Hey @damnstaychill - you can definitely move the save button with some custom CSS. However, removing the sidebar may be problematic due to some of the admin config properties, such as the <code>position</code> property - which specifies if a field should be rendered in the sidebar or not. <br><br>You could even keep some fields and just remove some of the other meta fields below.<br><br>Does this make sense? Let me know if you have any other questions!",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1678730128021
      },
      {
        "content": "Makes sense, there are a few areas where I wanted it gone completely such as in the account view. I used CSS and can continue using it. Thanks 🙏🏽",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1678740190588
      }
    ],
    "messageCount": 2,
    "slug": "collection-sidebar-right-side"
  },
  {
    "info": {
      "name": "Enabling version.drafts on existing collection results in having no documents despite ...",
      "id": "1082222063604994070",
      "guildId": "967097582721572934",
      "createdAt": 1678092246677
    },
    "intro": {
      "content": "Having set <code>return true</code> or <br><br><pre><code class=\"hljs\">return {\n  or: [\n    {\n      _status: {\n        equals: &quot;published&quot;,\n      },\n    },\n    {\n      _status: {\n        exists: false,\n      },\n    },\n  ],\n};</code></pre><br><br>If I enable it, no documents are visible. I also set <code>_status</code> manually to <code>published</code> or <code>draft</code>  but I have a feeling that a relation is required in <code>_{collection-slug}_versions</code> otherwise it&#x27;s not visible?",
      "fileAttachments": [],
      "authorID": "525819893333884938",
      "authorName": "wiesson",
      "authorAvatar": "45ae35ecb8e0d89dd1c9a726cf793568",
      "createdAtDate": 1678092246677
    },
    "messages": [
      {
        "content": "hi @wiesson - what version of payload are you on?",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678102172294
      },
      {
        "content": "Latest if I’m correct, 1.6.X 🤔",
        "fileAttachments": [],
        "authorID": "525819893333884938",
        "authorName": "wiesson",
        "authorAvatar": "45ae35ecb8e0d89dd1c9a726cf793568",
        "createdAtDate": 1678102613576
      },
      {
        "content": "We had a breaking change in 1.6.1 that required migration of document versions, however if your project was created after this release you should not need to migrate. <br><br>Here is more info and the migration script:<br><a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-versions-may-need-to-be-migrate\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-versions-may-need-to-be-migrate</a> <br><br>And if this isn&#x27;t applicable, then it may be a bug if we can reproduce it",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678208395333
      },
      {
        "content": "Thank you! The project has been created with 0.18.5 and I&#x27;m upgrading regularly and I did run the migration script. But let me check again!",
        "fileAttachments": [],
        "authorID": "525819893333884938",
        "authorName": "wiesson",
        "authorAvatar": "45ae35ecb8e0d89dd1c9a726cf793568",
        "createdAtDate": 1678217813050
      }
    ],
    "messageCount": 4,
    "slug": "enabling-versiondrafts-on-existing-collection-results-in-having-no-documents-despite"
  },
  {
    "info": {
      "name": "`listSearchableFields` for relationship picker?",
      "id": "1079423062597971968",
      "guildId": "967097582721572934",
      "createdAt": 1677424912834
    },
    "intro": {
      "content": "Does anyone know of a way that you can search by a field other than the title when selecting a record from a relationship field select dropdown?<br><br>In my example, I want to associate related &quot;Fixtures&quot; to one another, but I&#x27;d like the ability to search not only by the <code>title</code>, but also by the <code>partNumber</code> field.  I can make this happen on the collection list page (by way of <code>listSearchableFields</code> in my collection declaration, but this doesn&#x27;t seem to carry over to the select dropdown. <br><br>Any ideas?<br> <br> <br> <br> ",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1079423062597971968/1079423062711222332/image.png",
          "name": "image.png",
          "id": "1079423062711222332",
          "size": 53076,
          "url": "https://cdn.discordapp.com/attachments/1079423062597971968/1079423062711222332/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1079423062597971968/1079423062711222332/image.png",
          "height": 858,
          "width": 938,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "398939985773854742",
      "authorName": "see.ess",
      "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
      "createdAtDate": 1677424912834
    },
    "messages": [
      {
        "content": "Currently that is not possible. This would be a great feature to add.<br> <br> I would make it so that the relationship field has an <code>admin</code> property called <code>searchField</code> or similar that would take the path of the thing to search on.<br> <br> Then the relationship field input could use that instead of the <code>useAstitle</code> field when the config option is present.<br> <br> One thing that complexifies this a bit is that having multiple <code>relationTo</code> for different collection would need their own search fields. That leaves a lot of room for error, so maybe better to have it on the collection as a sibling to <code>listSearchableFields</code>. I&#x27;m thinking out loud. <br>The next step is to create a Github discussion for a new feature request where these details are figured out and somebody can go on to code it.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677521595730
      }
    ],
    "messageCount": 6,
    "slug": "listsearchablefields-for-relationship-picker"
  },
  {
    "info": {
      "name": "Global setting for pagination?",
      "id": "1082691181076557904",
      "guildId": "967097582721572934",
      "createdAt": 1678204092998
    },
    "intro": {
      "content": "It looks like I can&#x27;t set the pagination globally despite the types allow it.<br><br>I&#x27;d like to add:<br><pre><code class=\"hljs\">pagination: {\n    defaultLimit: 100,\n    limits: [100, 250, 500, 1000],\n},</code></pre><br>but somehow it doesn&#x27;t work:<br><pre><code class=\"hljs\">[15:47:44] ERROR (payload): There were 1 errors validating your Payload config\n[15:47:44] ERROR (payload): 1: &quot;admin.pagination&quot; is not allowed\n[nodemon] app crashed - waiting for file changes before starting...</code></pre>",
      "fileAttachments": [],
      "authorID": "525819893333884938",
      "authorName": "wiesson",
      "authorAvatar": "45ae35ecb8e0d89dd1c9a726cf793568",
      "createdAtDate": 1678204092998
    },
    "messages": [
      {
        "content": "Hey @wiesson! After some digging, we realized the type is wrong for the top level admin config. However, pagination should still work on a collection basis. We will keep this in mind and fix the type issue soon. If you want to open a feature request on Github - to allow for pagination in a global setting - we will get to it as soon as we can.<br><br>Thank you for bringing this up!",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1678379375075
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/issues/2282\">https://github.com/payloadcms/payload/issues/2282</a> 🤗",
        "fileAttachments": [],
        "authorID": "525819893333884938",
        "authorName": "wiesson",
        "authorAvatar": "45ae35ecb8e0d89dd1c9a726cf793568",
        "createdAtDate": 1678392623394
      }
    ],
    "messageCount": 2,
    "slug": "global-setting-for-pagination"
  },
  {
    "info": {
      "name": "Depth when locale: \"all\" is set seems to be ignored",
      "id": "1078038887605223424",
      "guildId": "967097582721572934",
      "createdAt": 1677094899799
    },
    "intro": {
      "content": "Is there a trick when querying the Local API with the locale parameter set to &quot;all&quot; and requesting a specific depth? I can&#x27;t seem to get it to work to resolve all nested fields with the depth I&#x27;m passing.",
      "fileAttachments": [],
      "authorID": "190191205907169280",
      "authorName": "altan",
      "authorAvatar": "6fe697550cadb7d4199a44e5bb05839d",
      "createdAtDate": 1677094899799
    },
    "messages": [
      {
        "content": "Can you provide an example with code?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677595534619
      }
    ],
    "messageCount": 1,
    "slug": "depth-when-locale-all-is-set-seems-to-be-ignored"
  },
  {
    "info": {
      "name": "Item is being removed on save",
      "id": "1084982267799162931",
      "guildId": "967097582721572934",
      "createdAt": 1678750330639
    },
    "intro": {
      "content": "We have a weird issue with payload where our slider component in the CMS is being removed when we save/publish the page.<br><br>Below is what our home page slider looks like.<br><br>But when we click publish, we get the updated is successful message  but the slider disappears.<br><br>Has anyone experienced this before? Is there any way to fix it?",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1084982267799162931/1084982268059197525/image.png",
          "name": "image.png",
          "id": "1084982268059197525",
          "size": 80498,
          "url": "https://cdn.discordapp.com/attachments/1084982267799162931/1084982268059197525/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1084982267799162931/1084982268059197525/image.png",
          "height": 844,
          "width": 1354,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1084982267799162931/1084982268365389864/image.png",
          "name": "image.png",
          "id": "1084982268365389864",
          "size": 28969,
          "url": "https://cdn.discordapp.com/attachments/1084982267799162931/1084982268365389864/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1084982267799162931/1084982268365389864/image.png",
          "height": 260,
          "width": 1613,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "178109250806087680",
      "authorName": "MRL",
      "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
      "createdAtDate": 1678750330639
    },
    "messages": [
      {
        "content": "Can you show a screenshot of the the network request body and response?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678752983511
      },
      {
        "content": "@Jarrod managed to sort it. We have a condition in there that was resetting the slider value to be null and it was copied to components where it should not have been copied to.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1678912382741
      }
    ],
    "messageCount": 2,
    "slug": "item-is-being-removed-on-save"
  },
  {
    "info": {
      "name": "Populate richText internal link with REST API",
      "id": "1076278103489396767",
      "guildId": "967097582721572934",
      "createdAt": 1676675096152
    },
    "intro": {
      "content": "Found a similar question for graphql : <a href=\"https://discord.com/channels/967097582721572934/1037832607292989580\">https://discord.com/channels/967097582721572934/1037832607292989580</a><br><br>Adding  the parameter <code>?depth=5</code> doesn&#x27;t populate the internal link with the linked post, I get this in the response :<br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;link&quot;</span>,\n  <span class=\"hljs-string\">&quot;linkType&quot;</span>: <span class=\"hljs-string\">&quot;internal&quot;</span>,\n  <span class=\"hljs-string\">&quot;doc&quot;</span>: {\n    <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;63bb4f907576e702327e1c29&quot;</span>,\n    <span class=\"hljs-string\">&quot;relationTo&quot;</span>: <span class=\"hljs-string\">&quot;post&quot;</span>\n  },\n  <span class=\"hljs-string\">&quot;newTab&quot;</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-string\">&quot;children&quot;</span>: [\n    {\n      <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;My great text&quot;</span>\n    }\n  ]\n}</code></pre><br><br>Don&#x27;t know if it&#x27;s relevant but my <code>WYSIWYG</code> is inside a <code>tabs</code> field.",
      "fileAttachments": [],
      "authorID": "280062818890547200",
      "authorName": "ElliotYoYo",
      "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
      "createdAtDate": 1676675096152
    },
    "messages": [
      {
        "content": "do you have open access control to your <code>post</code> collection?<br> <br> depth should work out of the box, and it might be access control that&#x27;s tripping you up?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676769747278
      },
      {
        "content": "Everything is public for the read operation.<br>Btw, I&#x27;m using the latest payload version.<br> <br> If it should work I will try to make a reproduction<br> <br> @jmikrut I think it&#x27;s a bug from payload, made a ticket on github. <br><a href=\"https://github.com/payloadcms/payload/issues/2134\">https://github.com/payloadcms/payload/issues/2134</a>",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1676770072216
      }
    ],
    "messageCount": 5,
    "slug": "populate-richtext-internal-link-with-rest-api"
  },
  {
    "info": {
      "name": "Show thumbnail in collection",
      "id": "1081033446115250287",
      "guildId": "967097582721572934",
      "createdAt": 1677808858184
    },
    "intro": {
      "content": "I think I have seen some images with a thumbnail on collections pages, is this possible and how can I enable this? I just see the link or filename.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1081033446115250287/1081033446295601242/Screenshot_2023-03-02_at_7.58.35_p.m..png",
          "name": "Screenshot_2023-03-02_at_7.58.35_p.m..png",
          "id": "1081033446295601242",
          "size": 64870,
          "url": "https://cdn.discordapp.com/attachments/1081033446115250287/1081033446295601242/Screenshot_2023-03-02_at_7.58.35_p.m..png",
          "proxyURL": "https://media.discordapp.net/attachments/1081033446115250287/1081033446295601242/Screenshot_2023-03-02_at_7.58.35_p.m..png",
          "height": 561,
          "width": 1305,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "706208036439588934",
      "authorName": "akacronos",
      "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
      "createdAtDate": 1677808858184
    },
    "messages": [
      {
        "content": "You can render a custom cell component for that field, in that component you can grab the link and render a thumbnail image",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677812679137
      }
    ],
    "messageCount": 1,
    "slug": "show-thumbnail-in-collection"
  },
  {
    "info": {
      "name": "Hide options from select",
      "id": "1074911821569458176",
      "guildId": "967097582721572934",
      "createdAt": 1676349349158
    },
    "intro": {
      "content": "is there any way to hide certain &quot;options&quot; from &quot;select &quot; field depending on the user&#x27;s rol?<br><br>for example, i&#x27;d like to display less options for a normal user.",
      "fileAttachments": [],
      "authorID": "629766588492677131",
      "authorName": "LuisLopezlg",
      "authorAvatar": "34c04cc9816e77b82120e46fcb360d69",
      "createdAtDate": 1676349349158
    },
    "messages": [
      {
        "content": "This is not possible currently. We have some similar functionality for relationships with a <code>filterOptions</code> function, so this is something we might be able to do in the future.<br><br>Feel free to submit a feature request, so we can discuss/prioritize with everyone.<br><br><a href=\"https://github.com/payloadcms/payload/discussions\">https://github.com/payloadcms/payload/discussions</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677597863095
      }
    ],
    "messageCount": 1,
    "slug": "hide-options-from-select"
  },
  {
    "info": {
      "name": "afterDelete hook error",
      "id": "1077545186357415967",
      "guildId": "967097582721572934",
      "createdAt": 1676977192249
    },
    "intro": {
      "content": "Hi - I&#x27;m having a problem running this hook.<br><br><br>Here&#x27;s the complete hook:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">orderAfterDelete</span>: <span class=\"hljs-title class_\">AfterDeleteHook</span> = <span class=\"hljs-keyword\">async</span> ({\n  req,\n  id,\n  doc,\n}: {\n  <span class=\"hljs-attr\">req</span>: <span class=\"hljs-title class_\">PayloadRequest</span>;\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">doc</span>: <span class=\"hljs-title class_\">Omit</span>&lt;<span class=\"hljs-title class_\">OrderType</span>, <span class=\"hljs-string\">&#x27;customerRelationship&#x27;</span>&gt; &amp; {\n    <span class=\"hljs-attr\">customerRelationship</span>: <span class=\"hljs-built_in\">string</span>;\n  };\n}) =&gt; {\n  <span class=\"hljs-keyword\">const</span> { payload } = req;\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">customerOrders</span>: <span class=\"hljs-title class_\">CustomerType</span>[<span class=\"hljs-string\">&#x27;orders&#x27;</span>] = <span class=\"hljs-keyword\">await</span> payload\n    .<span class=\"hljs-title function_\">findByID</span>({\n      <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;customers&#x27;</span>,\n      <span class=\"hljs-attr\">id</span>: doc.<span class=\"hljs-property\">customerRelationship</span>,\n    })\n    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">customer</span>) =&gt;</span> customer.<span class=\"hljs-property\">orders</span>)\n    .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">error</span>) =&gt;</span> {\n      payload.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">`orderAfterDelete: <span class=\"hljs-subst\">${error.message}</span>`</span>);\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;\n    })\n\n  <span class=\"hljs-keyword\">if</span> (customerOrders.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">0</span>) {\n    payload.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">info</span>(<span class=\"hljs-string\">`orderAfterDelete: Customer has no orders`</span>);\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// Remove order from customer</span>\n    <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">update</span>({\n      <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;customers&#x27;</span>,\n      <span class=\"hljs-attr\">id</span>: doc?.<span class=\"hljs-property\">customerRelationship</span>,\n      <span class=\"hljs-attr\">data</span>: {\n        <span class=\"hljs-attr\">orders</span>: customerOrders\n          .<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">order</span>) =&gt;</span> order?.<span class=\"hljs-property\">id</span> !== id)\n          .<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">order</span>) =&gt;</span> order?.<span class=\"hljs-property\">id</span>),\n      },\n    });\n    payload.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">info</span>(<span class=\"hljs-string\">`orderAfterDelete: Removed order from customer`</span>);\n  }\n\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>({ id, doc, customerOrders });\n  payload.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">info</span>(<span class=\"hljs-string\">`orderAfterDelete: finished`</span>);\n};</code></pre><br> <br> I get this error in my console when trying to delete the record from the admin ui:<br><br><pre><code class=\"hljs shell\">[10:50:03] ERROR (payload): NotFound: The requested resource was not found.\n    at new ExtendableError (/Users/jake/Development/personal/elkli-and-hart/node_modules/payload/src/errors/APIError.ts:26:11)\n    at new APIError (/Users/jake/Development/personal/elkli-and-hart/node_modules/payload/src/errors/APIError.ts:43:5)\n    at new NotFound (/Users/jake/Development/personal/elkli-and-hart/node_modules/payload/src/errors/NotFound.ts:7:5)\n    at findByID (/Users/jake/Development/personal/elkli-and-hart/node_modules/payload/src/collections/operations/findByID.ts:113:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at runNextTicks (node:internal/process/task_queues:64:3)\n    at processImmediate (node:internal/timers:442:9)\n    at async findByIDHandler (/Users/jake/Development/personal/elkli-and-hart/node_modules/payload/src/collections/requestHandlers/findByID.ts:13:17)</code></pre><br> <br> When I run this logic inside my test env (the <code>getServerSideProps</code> which I use as a playground for sanity checking) it successfully run and removes the order from the customer.<br> <br> Please can you help shine a light on what I&#x27;m doing wrong?<br> <br> Logging the <code>id</code> and <code>doc</code> inside the afterDelete hook I get this... so all the data I need is there:<br><br><pre><code class=\"hljs js\">{\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;63f4a1e2c0a1587558cb5afc&#x27;</span>,\n  <span class=\"hljs-attr\">doc</span>: {\n    <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;63f4a1e2c0a1587558cb5afc&#x27;</span>,\n    <span class=\"hljs-attr\">customer</span>: {\n      <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">&#x27;jake@hopking.io&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Jake Hopking&#x27;</span>,\n      <span class=\"hljs-attr\">address</span>: [<span class=\"hljs-title class_\">Object</span>]\n    },\n    <span class=\"hljs-attr\">customerRelationship</span>: <span class=\"hljs-string\">&#x27;63ed08df3b7466e4b53c3676&#x27;</span>,\n    <span class=\"hljs-attr\">dates</span>: {\n      <span class=\"hljs-attr\">created</span>: <span class=\"hljs-string\">&#x27;2023-02-21T00:47:13.007Z&#x27;</span>,\n      <span class=\"hljs-attr\">paid</span>: <span class=\"hljs-string\">&#x27;2023-02-21T00:47:16.896Z&#x27;</span>\n    },\n    <span class=\"hljs-attr\">payment</span>: {\n      <span class=\"hljs-attr\">currency</span>: <span class=\"hljs-string\">&#x27;gbp&#x27;</span>,\n      <span class=\"hljs-attr\">paymentMethod</span>: <span class=\"hljs-string\">&#x27;card&#x27;</span>,\n      <span class=\"hljs-attr\">priceTotal</span>: <span class=\"hljs-number\">12000</span>,\n      <span class=\"hljs-attr\">priceVat</span>: <span class=\"hljs-number\">2000</span>,\n      <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">&#x27;payment_success&#x27;</span>,\n      <span class=\"hljs-attr\">vatRate</span>: <span class=\"hljs-number\">20</span>\n    },\n    <span class=\"hljs-attr\">products</span>: [ [<span class=\"hljs-title class_\">Object</span>] ],\n    <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">&#x27;order_paid&#x27;</span>,\n    <span class=\"hljs-attr\">stripe</span>: { <span class=\"hljs-attr\">payment_intent</span>: [<span class=\"hljs-title class_\">Object</span>] },\n    <span class=\"hljs-attr\">statusValidation</span>: {\n      <span class=\"hljs-attr\">hasOrderReadyToDispatchCompleted</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">hasOrderShippedCompleted</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">createdAt</span>: <span class=\"hljs-string\">&#x27;2023-02-21T10:50:10.332Z&#x27;</span>,\n    <span class=\"hljs-attr\">updatedAt</span>: <span class=\"hljs-string\">&#x27;2023-02-21T10:50:10.332Z&#x27;</span>\n  }\n}</code></pre><br> <br> Also, logging the <code>customerOrders</code> - I can see that the customer has been found from the <code>doc.customerRelationship</code><br><br><pre><code class=\"hljs js\"><span class=\"hljs-attr\">customerOrders</span>: [\n    {\n      <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;63eaaeba288a86128622d103&#x27;</span>,\n      <span class=\"hljs-attr\">customer</span>: [<span class=\"hljs-title class_\">Object</span>],\n      <span class=\"hljs-attr\">dates</span>: [<span class=\"hljs-title class_\">Object</span>],\n      <span class=\"hljs-attr\">payment</span>: [<span class=\"hljs-title class_\">Object</span>],\n      <span class=\"hljs-attr\">products</span>: [<span class=\"hljs-title class_\">Array</span>],\n      <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">&#x27;order_paid&#x27;</span>,\n      <span class=\"hljs-attr\">stripe</span>: [<span class=\"hljs-title class_\">Object</span>],\n      <span class=\"hljs-attr\">createdAt</span>: <span class=\"hljs-string\">&#x27;2023-02-13T21:42:18.727Z&#x27;</span>,\n      <span class=\"hljs-attr\">updatedAt</span>: <span class=\"hljs-string\">&#x27;2023-02-19T16:58:23.603Z&#x27;</span>,\n      <span class=\"hljs-attr\">tracking</span>: [<span class=\"hljs-title class_\">Object</span>],\n      <span class=\"hljs-attr\">customerRelationship</span>: [<span class=\"hljs-title class_\">Object</span>],\n      <span class=\"hljs-attr\">statusValidation</span>: {}\n    },\n    {\n      <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;63f41257628f2726b98d35e3&#x27;</span>,\n      <span class=\"hljs-attr\">customer</span>: [<span class=\"hljs-title class_\">Object</span>],\n      <span class=\"hljs-attr\">customerRelationship</span>: [<span class=\"hljs-title class_\">Object</span>],\n      <span class=\"hljs-attr\">dates</span>: [<span class=\"hljs-title class_\">Object</span>],\n      <span class=\"hljs-attr\">payment</span>: [<span class=\"hljs-title class_\">Object</span>],\n      <span class=\"hljs-attr\">products</span>: [<span class=\"hljs-title class_\">Array</span>],\n      <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">&#x27;order_paid&#x27;</span>,\n      <span class=\"hljs-attr\">stripe</span>: [<span class=\"hljs-title class_\">Object</span>],\n      <span class=\"hljs-attr\">statusValidation</span>: [<span class=\"hljs-title class_\">Object</span>],\n      <span class=\"hljs-attr\">createdAt</span>: <span class=\"hljs-string\">&#x27;2023-02-21T00:37:43.269Z&#x27;</span>,\n      <span class=\"hljs-attr\">updatedAt</span>: <span class=\"hljs-string\">&#x27;2023-02-21T00:47:16.900Z&#x27;</span>,\n      <span class=\"hljs-attr\">tracking</span>: {}\n    },\n    <span class=\"hljs-string\">&#x27;63f4a7d151729824a8a93b3e&#x27;</span>\n  ]</code></pre><br> <br> actually - now i see that the order id is all that remains... (two full objects, and a string.... which makes sense because this runs <strong>after</strong> delete). So maybe I need to filter based on type before mapping the ids back in?<br> <br> -<br><br>Tried this and it works....<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">update</span>({\n  <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;customers&#x27;</span>,\n  <span class=\"hljs-attr\">id</span>: doc?.<span class=\"hljs-property\">customerRelationship</span>,\n  <span class=\"hljs-attr\">data</span>: {\n    <span class=\"hljs-attr\">orders</span>: customerOrders\n      .<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">order</span>) =&gt;</span> <span class=\"hljs-keyword\">typeof</span> order !== <span class=\"hljs-string\">&#x27;string&#x27;</span> &amp;&amp; order?.<span class=\"hljs-property\">id</span> !== id)\n      .<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">order</span>) =&gt;</span> order?.<span class=\"hljs-property\">id</span>),\n  },\n});</code></pre><br> <br> -<br><br>Is there a better way of doing this?<br> <br> Could be a nice feature to add to collections.... option of automatically removing the stale id from an array of defined collections (which share this relationship) upon record deletion",
      "fileAttachments": [],
      "authorID": "357456032454410240",
      "authorName": "jakehopking",
      "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
      "createdAtDate": 1676977192249
    },
    "messages": [
      {
        "content": "Hi @jakehopking - that would definitely be a great feature. A similar discussion about checking relationships to a doc before deleting was had here: <a href=\"https://github.com/payloadcms/payload/discussions/558\">https://github.com/payloadcms/payload/discussions/558</a><br><br>The way you have filtered the orders looks good to me 👍",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678105491964
      },
      {
        "content": "Thanks for replying and for the link @jesschow 👍",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1678149428568
      }
    ],
    "messageCount": 11,
    "slug": "afterdelete-hook-error"
  },
  {
    "info": {
      "name": "Transpile ESM only package",
      "id": "1077933544573239407",
      "guildId": "967097582721572934",
      "createdAt": 1677069784063
    },
    "intro": {
      "content": "Has anyone transpiled ESM-only package to cjs to use in PayloadCMS?<br><br>I need suggestions how to implement this thing. Thank you in advance.<br> <br> I&#x27;ve tried rollup, but seems cant work, I got <code>window is not defined</code> on the package when build",
      "fileAttachments": [],
      "authorID": "946373741175267329",
      "authorName": "rrums",
      "authorAvatar": "6a019fb818dd1274398027f152b5294b",
      "createdAtDate": 1677069784063
    },
    "messages": [
      {
        "content": "I have tried to combine Payload with Astro and came across the same issue",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677071603860
      },
      {
        "content": "Trying to integrate the Lit components, same issue after building Lit component from ESM to CJS. Not sure if it will work, but in compiled CJS code to create condition not to use window if it is not available?",
        "fileAttachments": [],
        "authorID": "715553367547707473",
        "authorName": "vladi",
        "authorAvatar": "2dbf611240f41b12c9c03eec9ddf2d5a",
        "createdAtDate": 1677072054323
      },
      {
        "content": "@rrums Does it work better if Rollup outputs UMD instead of CJS?<br><br>Another suggestion: if you are using <code>window</code> variable to access global scope and it must work in back-end (Node.js) and front-end (Browser)  try using <code>globalThis</code> instead.",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1677078535670
      },
      {
        "content": "@Jesse Sivonen <code>window</code> variable is in compiled CJS, just tried UMD output. But still the same.<br><br>Error:<br><pre><code class=\"hljs\">/path/Sites/payload/build/lit.js:5\n})(this, (function (exports) { &#x27;use strict&#x27;;\n  ^\nReferenceError: window is not defined\n    at /path/Sites/payload/build/lit.js:12:12\n    at /path/Sites/payload/build/lit.js:2:65\n    at Object.&lt;anonymous&gt; (/path/Sites/payload/build/lit.js:5:3)\n    at Module._compile (node:internal/modules/cjs/loader:1155:14)\n    at Module.m._compile (/path/Sites/payload/node_modules/ts-node/src/index.ts:1056:23)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1209:10)\n    at Object.require.extensions.&lt;computed&gt; [as .js] (/path/Sites/payload/node_modules/ts-node/src/index.ts:1059:12)\n    at Module.load (node:internal/modules/cjs/loader:1033:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:868:12)\n    at Module.require (node:internal/modules/cjs/loader:1057:19)</code></pre>",
        "fileAttachments": [],
        "authorID": "946373741175267329",
        "authorName": "rrums",
        "authorAvatar": "6a019fb818dd1274398027f152b5294b",
        "createdAtDate": 1677079336686
      },
      {
        "content": "@rrums Aa, I see. You can to import it only to front-end, maybe using dynamic import.  Or try to replace window with globalThis using @rollup/plugin-replace: <a href=\"https://github.com/rollup/plugins/tree/master/packages/replace\">https://github.com/rollup/plugins/tree/master/packages/replace</a>",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1677081458844
      },
      {
        "content": "@Jesse Sivonen I&#x27;m trying to implement lit+react to swap payload component or for ui field. I think payload do SSR in this case.<br><br>Tried to replace window with globalThis, then got another one, <code>HTMLelement is not defined</code><br> <br> use <code>rollup</code> along with <code>@rollup/plugin-node-resolve</code> and set <code>exportConditions</code> to <code>node</code> solve my problem",
        "fileAttachments": [],
        "authorID": "946373741175267329",
        "authorName": "rrums",
        "authorAvatar": "6a019fb818dd1274398027f152b5294b",
        "createdAtDate": 1677083157511
      }
    ],
    "messageCount": 8,
    "slug": "transpile-esm-only-package"
  },
  {
    "info": {
      "name": "Issue with preview",
      "id": "1063306442234404885",
      "guildId": "967097582721572934",
      "createdAt": 1673582411107
    },
    "intro": {
      "content": "Lets say you have Payload on port 8000 and a NextJS site on port 3000. The end goal is to get preview working for a &quot;pages&quot; collection. What would you add for the preview function? I know that the docs outline a function here: <a href=\"https://payloadcms.com/docs/configuration/collections#preview\">https://payloadcms.com/docs/configuration/collections#preview</a> but it doesn&#x27;t work for me in this case. How do you handle preview when Payload&#x27;s backend on a separate server from it&#x27;s frontend?",
      "fileAttachments": [],
      "authorID": "1055071772585771178",
      "authorName": "samtietjen",
      "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
      "createdAtDate": 1673582411107
    },
    "messages": [
      {
        "content": "Hi @samtietjen, the payload website does exactly what you&#x27;re looking for (has the backend / frontend on different servers and uses the preview feature) and would be a good example for you. Take a look at how we do it here: <a href=\"https://github.com/payloadcms/website-cms/blob/f44cc077dfd85d3e3941df39b6ce13f4baee7fb4/src/utilities/formatPreviewURL.ts#L3\">https://github.com/payloadcms/website-cms/blob/f44cc077dfd85d3e3941df39b6ce13f4baee7fb4/src/utilities/formatPreviewURL.ts#L3</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673603681707
      },
      {
        "content": "Thanks for the reply! This is exactly what I was referencing. process.env.PAYLOAD_PUBLIC_APP_URL would be localhost:8000 right? If I do that then I get a &quot;cannot get&quot;. If I do 3000 (Next) it 404s me. I did notice the following commits <a href=\"https://github.com/payloadcms/website/search?q=preview&amp;type=commits\">https://github.com/payloadcms/website/search?q=preview&amp;type=commits</a>. This made sense because I didn&#x27;t have anything configured in Next for preview; however, looking at the site&#x27;s current front end all of this was removed and the word preview isn&#x27;t found anywhere in the source code.<br><br>Still a newbie to Payload, so I appreciate your help!",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1673617638687
      },
      {
        "content": "Wow that is because it is broken on our site oh dear 😂<br> <br> You definitely need a preview API route (pages/api/preview.tsx) that should be your missing piece. The nextjs docs will help here: <a href=\"https://nextjs.org/docs/advanced-features/preview-mode\">https://nextjs.org/docs/advanced-features/preview-mode</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673636546892
      },
      {
        "content": "Ahhhh, that makes me feel less crazy! Thank you! I&#x27;m guessing those old commits I sent you probably work for reference. Think this&#x27;ll be documented in the future?",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1673658586480
      },
      {
        "content": "@samtietjen the &quot;preview&quot; button in Payload is just meant to point to your front-end, whatever it might be. In our case we tied it into Next&#x27;s preview so we could view drafts—but this is all extra. We&#x27;ve since migrated to Next 13&#x27;s <code>app</code> directory which did not support preview or ISR at the time although we left our code in place.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673710846618
      },
      {
        "content": "Was just chatting on GitHub discussions about this. Makes more sense now. So preview is really just the ability to add a button to your admin UI that can generate a URL. It’s up to you to do the rest. In the case of the Payload website it’s more of a “draft view”.",
        "fileAttachments": [],
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1673711306878
      },
      {
        "content": "Spot on<br> <br> <a href=\"https://github.com/payloadcms/payload/tree/master/examples/preview\">https://github.com/payloadcms/payload/tree/master/examples/preview</a><br> <br> Just merged in a preview example if you wanna take a look! It includes an example Next.js app running on the <em>pages</em> directory.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673711373150
      }
    ],
    "messageCount": 10,
    "slug": "issue-with-preview"
  },
  {
    "info": {
      "name": "Collection not being shown in admin panel",
      "id": "1075062125875175586",
      "guildId": "967097582721572934",
      "createdAt": 1676385184497
    },
    "intro": {
      "content": "Hi all, something very strange in my production deployment. When I try to view a collection in the admin panel none is being displayed and I see this error message. Any pointer or ideas to what might be the issue?",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1075062125875175586/1075062126277840977/image.png",
          "name": "image.png",
          "id": "1075062126277840977",
          "size": 445339,
          "url": "https://cdn.discordapp.com/attachments/1075062125875175586/1075062126277840977/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1075062125875175586/1075062126277840977/image.png",
          "height": 790,
          "width": 2880,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "372021382789332993",
      "authorName": "liorix",
      "authorAvatar": null,
      "createdAtDate": 1676385184497
    },
    "messages": [
      {
        "content": "Oh, wait, what Payload version are you on?<br> <br> toObjectId was used in an older version that is not compatible with some mongo &quot;compliant&quot; hosting options like documentDB and azure cosmos db<br> <br> those implementations are missing a bunch of aggregates so we re-wrote them. That error should go away when you upgrade Payload to latest.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676386606738
      },
      {
        "content": "&quot;payload&quot;: &quot;^1.5.9&quot;,<br> <br> mongodb<br> <br> db hosted by us<br> <br> the admin tries to fetch the following url: serverurl/api/home-pages?locale=en&amp;depth=0&amp;draft=true<br> <br> if we remove the draft=true, it works but the admin sends draft=true<br> <br> this is the error we&#x27;re getting if we take the url and try to fetch it via the browser url field:<br> <br> {<br>&quot;errors&quot;: [<br>{<br>&quot;message&quot;: &quot;Unrecognized expression &#x27;$toObjectId&#x27;&quot;<br>}<br>]<br>}",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390752497
      },
      {
        "content": "There were a lot of changes to versions since 1.5.9 so you&#x27;re going to want to upgrade. I&#x27;m pretty certain that will solve this for you.<br> <br> There were some breaking changes and a migration script will be needed if you have data on versioned collections already<br> <br> <a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-breaking-changes\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-breaking-changes</a>",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676395431835
      },
      {
        "content": "Hi Dan, we had an old version of mongodb, once we upgraded it worked. I will take your advice and upgrade to the latest payload version. many thanks for your help!",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676552104810
      }
    ],
    "messageCount": 14,
    "slug": "collection-not-being-shown-in-admin-panel"
  },
  {
    "info": {
      "name": "How to add justify, left, center and right to text inside RichText?",
      "id": "1075209037647446137",
      "guildId": "967097582721572934",
      "createdAt": 1676420210993
    },
    "intro": {
      "content": "I want to position my text inside richtext, how do I do that? I checked the types of richtext elements and I do not see any type for these.",
      "fileAttachments": [],
      "authorID": "950202910095081473",
      "authorName": "johnmadrigal_",
      "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
      "createdAtDate": 1676420210993
    },
    "messages": [
      {
        "content": "Hi @johnmadrigal_! This is currently not implemented into Payload&#x27;s core but it is on our radar and part of our roadmap! You can see that here: <a href=\"https://github.com/payloadcms/payload/discussions/1218\">https://github.com/payloadcms/payload/discussions/1218</a><br><br>You can definitely build this yourself if you&#x27;d like but we believe it should be a core feature - here is an example of this feature shown by SlateJS:<br><a href=\"https://www.slatejs.org/examples/richtext\">https://www.slatejs.org/examples/richtext</a><br><br>And the code for the above example:<br><a href=\"https://github.com/ianstormtaylor/slate/blob/main/site/examples/richtext.tsx\">https://github.com/ianstormtaylor/slate/blob/main/site/examples/richtext.tsx</a><br><br>Lat me know if you have any other questions!",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1676913267563
      }
    ],
    "messageCount": 1,
    "slug": "how-to-add-justify-left-center-and-right-to-text-inside-richtext"
  },
  {
    "info": {
      "name": "Where does admin/collections/pages get page list from?",
      "id": "1075255773178900570",
      "guildId": "967097582721572934",
      "createdAt": 1676431353612
    },
    "intro": {
      "content": "I deleted a page manually through mongo shell and page itself was deleted successfully but somehow admin/collections/pages still show the deleted page on the list. Is there any cache I can delete? or where does admin/collections/pages looking? Thanks is advance!<br> <br> I deleted a record from _pages_versions collection and it&#x27;s gone now. thanks!",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1075255773178900570/1075255773342466068/Group.jpg",
          "name": "Group.jpg",
          "id": "1075255773342466068",
          "size": 52741,
          "url": "https://cdn.discordapp.com/attachments/1075255773178900570/1075255773342466068/Group.jpg",
          "proxyURL": "https://media.discordapp.net/attachments/1075255773178900570/1075255773342466068/Group.jpg",
          "height": 427,
          "width": 1115,
          "contentType": "image/jpeg",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "478284978610896926",
      "authorName": "kouohhashi",
      "authorAvatar": "16e98dd652c9a6090ce554f5f9f8bc13",
      "createdAtDate": 1676431353612
    },
    "messages": [],
    "messageCount": 1,
    "slug": "where-does-admin-collections-pages-get-page-list-from"
  },
  {
    "info": {
      "name": "Can you explain the benefits of so much granularity of data?",
      "id": "1075956342537330718",
      "guildId": "967097582721572934",
      "createdAt": 1676598382363
    },
    "intro": {
      "content": "Can someone kindly enlighten me about the benefits of a system with so much granularity, when it comes to the data? I&#x27;m not use to seeing JSON right down to a p tag, a ul tag, then an li tag with a bunch of children etc. I know it was suggested this is a pro (vs a con) versus other similar CMS, this on one of the videos I watched (if I remember correctly), but I&#x27;m trying to understand how to manage it, without it become unwieldy on the frontend; I&#x27;m not implying it is or isn&#x27;t, just that it&#x27;s new to me and new things take time to understand; time to see them as a benefit versus a lot more work; how such things should be best used, or in this case, how to best consume it on the frontend etc.<br> <br> Admittedly, I may have to get use to a managing more complex data structures, but a simple Post structure kind of &quot;overwhelmed&quot; me lol",
      "fileAttachments": [],
      "authorID": "374759691810766849",
      "authorName": "Natetronn",
      "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
      "createdAtDate": 1676598382363
    },
    "messages": [
      {
        "content": "You can see here how we use a serialize function to consume the rich text and output it. The reason we use rich text is because it allows us to do things like, embed documents and other custom elements directly into the rich text editor.<br><br>In the example, ignore the customRenderers for now and just look at the serialize function, it calls itself recursively to loop over all nodes in the json tree.<br><br><a href=\"https://github.com/payloadcms/website/blob/main/src/components/RichText/index.tsx\">https://github.com/payloadcms/website/blob/main/src/components/RichText/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676602467799
      },
      {
        "content": "@Jarrod thanks for sharing! Okay, I see what you&#x27;re doing here: <a href=\"https://github.com/payloadcms/website/blob/main/src/components/RichText/Serialize/index.tsx\">https://github.com/payloadcms/website/blob/main/src/components/RichText/Serialize/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676604462216
      },
      {
        "content": "The granularity is because not all mediums that might consume the content are websites. <br><br>Content modelling in headless for true omnichannel delivery needs a completely different approach and mental model. <br><br>For example, voice assistants, printers, meta verse, etc. have no use for html. <br><br>Native app UIs can use the RichText json to natively render the content rather than relying on buggy web views, etc.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676619299474
      },
      {
        "content": "That and it allows you to actually process the data better if you need to, rather than have to try and read long strings of HTML (or alternatives)",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676619674247
      },
      {
        "content": "I love the granularity",
        "fileAttachments": [],
        "authorID": "714771241063546970",
        "authorName": "klauss",
        "authorAvatar": "584dc50d65913cccc1676e6cbc6655e9",
        "createdAtDate": 1676648294868
      },
      {
        "content": "Ah okay, makes sense.<br> <br> Thanks for sharing everyone 😀<br> <br> @Jarrod @Kyr @noheadphones @klauss is it possible to have granularity for the times one needs it or something more simple for those times when one doesn&#x27;t need it? For example, say I just want to get back a few fields with their key being the name of the field (that I&#x27;ve assigned to it) and the value being the value of the field and nothing more. Is that possible with Payload?",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676737030985
      },
      {
        "content": "Sounds like youre describing graphql?",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676741481998
      },
      {
        "content": "Yes... just make a field of a different type. text, number, etc.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676741492910
      },
      {
        "content": "Is the granularity more of a RichText specific thing?<br> <br> Possibly, but even that seems like an extra layer of complexity in my mind.",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676741527858
      },
      {
        "content": "It is. The richText field splits all the elements into JSON ... most good headless CMS do this in one way or another.<br><br>If you need what I would call &quot;structured content&quot; (i.e. plain data rather than rich text) then just use normal fields.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676741825631
      },
      {
        "content": "Ah okay, maybe that&#x27;s where the disconnect was coming from. Structured content, yes, that&#x27;s more of what I was looking for.",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676741876964
      },
      {
        "content": "Each field you define on your collection of global will return as <code>{ fieldName: fieldValue }</code> ... i.e. a normal <code>&#x27;text&#x27;</code> field might be <code>{ title: &#x27;My awesome title&#x27; }</code><br><br>The richText field type is just the value as a JSON object that describes the rich text data in a way that is easier to programmatically process then HTML is.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676741999305
      },
      {
        "content": "Great, makes more sense now. Appreciate everyone&#x27;s help!",
        "fileAttachments": [],
        "authorID": "374759691810766849",
        "authorName": "Natetronn",
        "authorAvatar": "f640e7efd11f84abb0c10b171f21ab17",
        "createdAtDate": 1676742082998
      }
    ],
    "messageCount": 17,
    "slug": "can-you-explain-the-benefits-of-so-much-granularity-of-data"
  },
  {
    "info": {
      "name": "Setting up magic link with payload auth",
      "id": "1073356002101035108",
      "guildId": "967097582721572934",
      "createdAt": 1675978412891
    },
    "intro": {
      "content": "I am running into an issue with integrating <a href=\"https://magic.link/\">https://magic.link/</a> with payloads custom auth strategy. I was able to add the strategy and trigger the e-mail magic link flow. <br><br>To get it to work I have to configure the webpack server alias,  set <code>disableLocalStrategy: true,</code> on the collection and then create a custom <code>/login</code> endpoint for the collection. Everything is flowing correctly <br><br>but whenever I try to either <code>payload.create</code> or <code>payload.login</code> with the required fields, I get the type error <code>Model.findByUsername is not a function</code> other functions like <code>payload.find</code> work as expected.<br><br>The goal at this point is based on the lookup to either<br>A. create a new user and have it set access token/cookie etc..<br>or B. login the user and set the access token/cookie etc...<br><br>Any insight into why this error could be happening?<br> <br> Is this issue caused because I disabled the local strategy?<br><br>If so I can create and login users through the custom strategy<br> <br> So looking at the DB it looks like the user <em>is created</em> on <code>payload.create</code> but the server still throws this error hmm<br> <br> The issue self resolved for create but not login. Likely won’t work anyway because it also expects a password and that does not get generated with magic. <br><br>Based on this discussion, I’m not sure how likely / worth it is to continue down this path <br><br><a href=\"https://github.com/payloadcms/payload/discussions/1555#discussioncomment-4276115\">https://github.com/payloadcms/payload/discussions/1555#discussioncomment-4276115</a><br><br>Will probably abandon it for the built in Auth. I don’t want to have to manage creating the token, lifecycle, refreshing etc… <br><br>I want to ideally just layer magic on top of payloads Auth and only use payload for the portions that magic couldn’t do ie generating and managing tokens after I determine if it’s a valid login or sign up<br> <br> Hmm I think I actually got it... I can login and see the admin...working but i&#x27;m nervous that it&#x27;ll break down the line when I add other collections/access<br> <br> For future reference, based on what I can tell/learned<br><br>If you’re going the set your own strategy route, specifically magic link. Some of the below is expended further in various docs, discord and GitHub threads. <br><br>1. Server code needs to be in its own file and aliased by webpack, not the package but the file  itself.<br>2. On the collection that is being used to auth the admin panel, pass in the passport strategy as documented by payload<br>3. Set <code>disableLocalStrategy= true</code> <strong>This turns off all payload Auth functionality for that collection (login etc…)</strong><br>4. Using the endpoints property on the collection you can create a custom route. For example you can recreate /login <br>5. On the UI pass in a custom component using before or after dashboard. This component should be the form to post login/sign up info to your route. <br>6. Order of operations are <br>     - your strategy function is called. whatever is returned will be accessible by the endpoint route<br>     - endpoint api route is called in req.user there is the data previously returned by the strategy.<br>7. In the endpoint api route you can access your payload instance to do look ups, create etc<br>    - for example… for login, I do a lookup based on email… since it’s password less flow (magic link)<br>8. Then create the session yourself using a JWT. The shape of the cookie needs to be an object with the fields collection, e-mail and payload ID set as a httponly. The discussion I linked about has useful sudo code. You also have to set res.user to have the same object as the cookie.<br>9. The cookie name must be the same payload expects. The payload instance has the prefix -&gt; <code>${payload.config.cookiePrefix}-token</code><br>10. Visit admin and 🚀 <br><br>Lastly remember to recreate logout, refresh, etc… for your cookie synced with your strategy provider<br> <br> Setting up magic link with payload auth",
      "fileAttachments": [],
      "authorID": "473343795782615060",
      "authorName": "damnstaychill",
      "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
      "createdAtDate": 1675978412891
    },
    "messages": [
      {
        "content": "hey @damnstaychill do you have a example repository for the final implementation?",
        "fileAttachments": [],
        "authorID": "770657092800741377",
        "authorName": "tomsvogel",
        "authorAvatar": "033a54556e448758a1bb8eb77e9d9105",
        "createdAtDate": 1677246477659
      },
      {
        "content": "Yeah let me share something this afternoon when I have a minute",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1677257440664
      },
      {
        "content": "that would be very nice, thanks.",
        "fileAttachments": [],
        "authorID": "770657092800741377",
        "authorName": "tomsvogel",
        "authorAvatar": "033a54556e448758a1bb8eb77e9d9105",
        "createdAtDate": 1677430202283
      },
      {
        "content": "@tomsvogel  this is an example repo, just change the name of example.env to .env and provide those values<br> <br> <a href=\"https://github.com/TatisLois/payload-magic-eample\">https://github.com/TatisLois/payload-magic-eample</a><br> <br> I quickly threw it together so if you have any questions feel free to ask, sorry that its a little slapped together",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1677525286662
      },
      {
        "content": "thank you very much, this is the first thing I will try tomorrow morning! Thank you!<br> <br> Hey @damnstaychill thanks for the repo! i needed to check a few Times what my mistake was.... thanks for your help.",
        "fileAttachments": [],
        "authorID": "770657092800741377",
        "authorName": "tomsvogel",
        "authorAvatar": "033a54556e448758a1bb8eb77e9d9105",
        "createdAtDate": 1677528801430
      },
      {
        "content": "Glad it helped! 🚀  let&#x27;s keep building cool shit",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1677686300023
      }
    ],
    "messageCount": 15,
    "slug": "setting-up-magic-link-with-payload-auth"
  },
  {
    "info": {
      "name": "Render content from CMS or from MongoDB?",
      "id": "1078048850566184980",
      "guildId": "967097582721572934",
      "createdAt": 1677097275154
    },
    "intro": {
      "content": "Hey everyone,<br><br>I&#x27;m enquiring which approach is more straight-forward or more efficient? Should i render my content directly with NextJS from the CMS or should i bypass this and read my content directly from the mongo db?<br>Which requires less coding or best approach?",
      "fileAttachments": [],
      "authorID": "537385969230413846",
      "authorName": "Arskeliss",
      "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
      "createdAtDate": 1677097275154
    },
    "messages": [
      {
        "content": "definitely go through the CMS. you can use the REST or GraphQL API, and with a little extra configuration you can use the Local API <br><br><a href=\"https://payloadcms.com/docs/rest-api/overview\">https://payloadcms.com/docs/rest-api/overview</a><br><br><a href=\"https://payloadcms.com/docs/graphql/overview\">https://payloadcms.com/docs/graphql/overview</a><br><br><a href=\"https://payloadcms.com/docs/local-api/overview\">https://payloadcms.com/docs/local-api/overview</a>",
        "fileAttachments": [],
        "authorID": "190191205907169280",
        "authorName": "altan",
        "authorAvatar": "6fe697550cadb7d4199a44e5bb05839d",
        "createdAtDate": 1677098177302
      }
    ],
    "messageCount": 1,
    "slug": "render-content-from-cms-or-from-mongodb"
  },
  {
    "info": {
      "name": "Does anyone know if the Payload API can return multiple items in one request?",
      "id": "1075519296349945876",
      "guildId": "967097582721572934",
      "createdAt": 1676494182432
    },
    "intro": {
      "content": "E.g. If I want to fetch all pages and all users. Could that be done with one API call?",
      "fileAttachments": [],
      "authorID": "178109250806087680",
      "authorName": "MRL",
      "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
      "createdAtDate": 1676494182432
    },
    "messages": [
      {
        "content": "👍<br> <br> ok so there are a few options<br> <br> short answer, Payload doesn&#x27;t do anything like that out of the box<br> <br> but longer answer - you could open up a custom endpoint and use a MongoDB <code>aggregate</code> query that merges content from multiple collections into a single result set<br> <br> OR, you could build some type of &quot;search&quot; collection<br> <br> take a look at hope network&#x27;s search functionality:<br> <br> <a href=\"https://hopenetwork.org/\">https://hopenetwork.org/</a><br> <br> this site uses a collection called <code>Search</code>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494190009
      },
      {
        "content": "Ok thanks. I will investigate the custom endpoint route with MongoDb.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676494260360
      },
      {
        "content": "and then every collection that we want to search across has an <code>afterChange</code> hook, that syncs it to the <code>search</code> collection<br> <br> so then the frontend of the hope site just queries against the <code>search</code> collection, and then documents from like 6 collections all get returned<br> <br> in a very fast / performant way<br> <br> this is good if you just need a quick solution. but another thing to look into, if you are going to be doing heavy searches, and you need it to scale with thousands of docs, is to use Algolia or similar",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676494277111
      },
      {
        "content": "Cool, cheers @jmikrut",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676494774101
      }
    ],
    "messageCount": 14,
    "slug": "does-anyone-know-if-the-payload-api-can-return-multiple-items-in-one-request"
  },
  {
    "info": {
      "name": "cloud-storage error",
      "id": "1080613915207143494",
      "guildId": "967097582721572934",
      "createdAt": 1677708834221
    },
    "intro": {
      "content": "Getting the following error after installing and configuring <code>@payloadcms/plugin-cloud-storge</code>.<br><br><pre><code class=\"hljs\">ERROR in ./node_modules/@payloadcms/plugin-cloud-storage/dist/adapters/s3/handleUpload.js 43:27-40\nModule not found: Error: Can&#x27;t resolve &#x27;fs&#x27; in &#x27;/usr/src/app/node_modules/@payloadcms/plugin-cloud-storage/dist/adapters/s3&#x27;</code></pre><br><br>I saw in another community post that maybe I need to setup an alias to <code>fs</code> in the webpack config. The README for this plugin doesn&#x27;t state that however. I&#x27;m going to give it a go but if that&#x27;s unintended, I&#x27;d like to know.<br><br>Thanks!<br> <br> Adding the alias seems to have worked, though I think (if possible) it&#x27;d be better if the package could avoid requiring <code>fs</code> if it&#x27;s being compiled client side.<br><br>Here&#x27;s what I did in case someone searches in here to find an answer and missed it on the website:<br><br>mocks/emptyObject.js<br><pre><code class=\"hljs\">export default {}</code></pre><br><br>payload.config.ts<br><pre><code class=\"hljs\">import path from &#x27;path&#x27;\nconst mockModulePath = path.resolve(__dirname, &#x27;mocks/emptyObject.js&#x27;)\n\nexport default buildConfig({\n    serverURL: &#x27;http://localhost:3000&#x27;,\n    admin: {\n        webpack: (config) =&gt; {\n            return {\n                ...config,\n                resolve: {\n                    ...config.resolve,\n                    alias: {\n                        ...config.resolve.alias,\n                        &#x27;fs&#x27;: mockModulePath,\n                    }\n                }\n            };\n        },\n...</code></pre><br><br>Then it compiled just fine. I also had to add a <code>region</code> property to the s3 config. That wasn&#x27;t immediately called out in the readme.<br><br>Hope this is helpful to someone!",
      "fileAttachments": [],
      "authorID": "214419801039175682",
      "authorName": "Jakey",
      "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
      "createdAtDate": 1677708834221
    },
    "messages": [],
    "messageCount": 1,
    "slug": "cloud-storage-error"
  },
  {
    "info": {
      "name": "How does one handle syncing uploads between environments?",
      "id": "1078691140942970952",
      "guildId": "967097582721572934",
      "createdAt": 1677250409113
    },
    "intro": {
      "content": "I&#x27;ve noticed that if you just copy an asset into the corresponding upload folder, it doesn&#x27;t change anything in the CMS to allow you to see it / use it. <br><br>This makes me wonder how the use case of syncing your local images up to a remote host should be handled. Is there a &quot;sync-to-remote&quot; functionality in Payload I&#x27;m not aware of? Or will I have to write up a script that also merges in the data from local to remote?<br><br>Any feedback welcome, thank you.<br> <br> So far the most common response I&#x27;m getting is to utilize a CDN instead of relying on local storage, which is probably why this use case isn&#x27;t accounted for in Payload?",
      "fileAttachments": [],
      "authorID": "214419801039175682",
      "authorName": "Jakey",
      "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
      "createdAtDate": 1677250409113
    },
    "messages": [
      {
        "content": "You may be looking for <a href=\"https://github.com/payloadcms/plugin-cloud-storage\">https://github.com/payloadcms/plugin-cloud-storage</a>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677401812548
      },
      {
        "content": "Are you talking uploading media in a local vs remote environment? Or are you asking for a way for Payload to detect you&#x27;ve copied a <code>.jpg</code> into your uploads folder and create a record for it?",
        "fileAttachments": [],
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1677441460405
      },
      {
        "content": "at my company, it&#x27;s common to have a local, qa, and prod environment. local for code changes, qa for review of code changes, then prod is typically left for content management. We never sync data to prod since its data is most up to date. So as you might imagine that&#x27;s an annoying scenario to deal with at times. <br><br>In this workflow, we&#x27;ll typically sync our media (images/videos/etc) to the media folder on the other two environments (since typically they don&#x27;t override existing data, just add on). However, in both Payload and WP, the db state doesn&#x27;t recognize the new images that were synced up and thus you can&#x27;t just pick the new items for future content up dates either. <br><br>I&#x27;m definitely in favor of instead relying on a CDN solution like that which @thgh  shared. I was just curious if Payload had some way of addressing this since it is one of those annoying things that happens in WP for instance.",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677441996123
      },
      {
        "content": "Yeah, kinda figured that&#x27;s what you&#x27;re referring to... and I agree it&#x27;s a pain (especially when building first-class features that depend on the presence of a database record). I&#x27;ve dealt with it in WordPress pretty easily with some abhorrent hacks... not as easy when you&#x27;re trying to do things the right way. I&#x27;m working towards v1 of a site for my client now and am getting close to having to deal with this issue on Payload. <br><br>Not sure if a more general mongo diff/migration tool would help? <a href=\"https://github.com/datacoon/diffmongo\">https://github.com/datacoon/diffmongo</a><br> <br> or here&#x27;s a gist of something relatively simple that you might be able to build on: <a href=\"https://gist.github.com/niccottrell/3ff2efc2146090aa8c5b73c1eb75ba2c\">https://gist.github.com/niccottrell/3ff2efc2146090aa8c5b73c1eb75ba2c</a>",
        "fileAttachments": [],
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1677447889742
      },
      {
        "content": "Interesting…. This seems like it’ll be useful anyway for comparing environment differences. Thanks!!",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677448651934
      },
      {
        "content": "fwiw, I managed to hack together this typescript version of the above gist... <a href=\"https://gist.github.com/marpstar/b257ceb628a428ec66aabde72c0cdbc4\">https://gist.github.com/marpstar/b257ceb628a428ec66aabde72c0cdbc4</a><br><br>it runs on the entire collection, not just a sample. Also allows you to specify different DB names for each environment. I&#x27;ve included instructions for launching (and debugging) for <code>ts-node</code>",
        "fileAttachments": [],
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1677453440189
      },
      {
        "content": "much appreciated!",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677453500280
      }
    ],
    "messageCount": 9,
    "slug": "how-does-one-handle-syncing-uploads-between-environments"
  },
  {
    "info": {
      "name": "How do you handle nested taxonomies?",
      "id": "1075415421567643701",
      "guildId": "967097582721572934",
      "createdAt": 1676469416754
    },
    "intro": {
      "content": "Wordpress has this pretty well covered.",
      "fileAttachments": [],
      "authorID": "476523795251855360",
      "authorName": "thgh",
      "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
      "createdAtDate": 1676469416754
    },
    "messages": [
      {
        "content": "Enable the nested docs plugin <a href=\"https://github.com/payloadcms/plugin-nested-docs\">https://github.com/payloadcms/plugin-nested-docs</a> on a <code>categories</code> collection then use a relationship field to reference the category<br> <br> Here&#x27;s an example <code>categories</code> collection<br><pre><code class=\"hljs ts\">{\n    <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;categories&#x27;</span>,\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Categories&#x27;</span>,\n    <span class=\"hljs-attr\">fields</span>: [\n        {\n            <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;name&#x27;</span>,\n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text&#x27;</span>,\n        }\n    ]\n}</code></pre><br> <br> Then in your Payload config, call the plugin<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> nestedDocs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@payloadcms/plugin-nested-docs&#x27;</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">buildConfig</span>({\n  ...\n  <span class=\"hljs-title function_\">nestedDocs</span>({\n    <span class=\"hljs-attr\">collections</span>: [<span class=\"hljs-string\">&#x27;categories&#x27;</span>],\n  }),\n})</code></pre><br> <br> Then in a <code>posts</code> collection, use a relationship field<br><br><pre><code class=\"hljs ts\">{\n    <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;posts&#x27;</span>,\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Posts&#x27;</span>,\n    <span class=\"hljs-attr\">fields</span>: [\n        {\n            <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;title&#x27;</span>,\n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text&#x27;</span>,\n        },\n        {\n            <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;categories&#x27;</span>,\n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;relationship&#x27;</span>,\n            <span class=\"hljs-attr\">hasMany</span>: <span class=\"hljs-literal\">true</span>,\n            <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-string\">&#x27;categories&#x27;</span>,\n        }\n    ]\n}</code></pre><br> <br> This would enable something like <code>News &gt; Politics &gt; United States</code>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678136615385
      },
      {
        "content": "Oh lol, I thought docs stood for documentation, unfortunate naming 😛<br> <br> Thanks, will check it out!",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1678581542644
      },
      {
        "content": "Ahh makes sense. The original concept was actually “nested pages” but since this pattern applies to collections of any type “nested docs” made the most sense",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678587644238
      }
    ],
    "messageCount": 8,
    "slug": "how-do-you-handle-nested-taxonomies"
  },
  {
    "info": {
      "name": "Trying to create a production build with Payload CMS Error",
      "id": "1077011979790725190",
      "guildId": "967097582721572934",
      "createdAt": 1676850065897
    },
    "intro": {
      "content": "So i have been experimenting a lot with payload CMS, i am trying to produce a production build where i can inject environment variables<br><br>I stated with the blog template <br><br>Sorry i am not that familiar with GraphQL to dive into this but definitely feels like a schema issue or some component i am missing this is my logs error, anyone encountered this<br><pre><code class=\"hljs\">cms-payload-1  | [23:39:01] INFO (payload): Connected to Mongo server successfully!\ncms-payload-1  | [23:39:01] INFO (payload): Starting Payload...\ncms-payload-1  | /home/node/node_modules/payload/node_modules/graphql/jsutils/devAssert.js:12\ncms-payload-1  |     throw new Error(message);\ncms-payload-1  |           ^\ncms-payload-1  |\ncms-payload-1  | Error: Expected JSON to be a GraphQL type.\ncms-payload-1  |     at devAssert (/home/node/node_modules/payload/node_modules/graphql/jsutils/devAssert.js:12:11)\ncms-payload-1  |     at new GraphQLList (/home/node/node_modules/payload/node_modules/graphql/type/definition.js:349:32)\ncms-payload-1  |     at /home/node/node_modules/payload/dist/graphql/schema/withOperators.js:18:27\ncms-payload-1  |     at Array.reduce (&lt;anonymous&gt;)\ncms-payload-1  |     at withOperators (/home/node/node_modules/payload/dist/graphql/schema/withOperators.js:15:27)\ncms-payload-1  |     at buildWhereInputType (/home/node/node_modules/payload/dist/graphql/schema/buildWhereInputType.js:48:43)\ncms-payload-1  |     at /home/node/node_modules/payload/dist/collections/graphql/init.js:126:79\ncms-payload-1  |     at Array.forEach (&lt;anonymous&gt;)\ncms-payload-1  |     at initCollectionsGraphQL (/home/node/node_modules/payload/dist/collections/graphql/init.js:60:38)\ncms-payload-1  |     at registerSchema (/home/node/node_modules/payload/dist/graphql/registerSchema.js:58:24)\ncms-payload-1  |\ncms-payload-1  | Node.js v18.14.1</code></pre><br><br>Any insights or help would be greatly appreciated",
      "fileAttachments": [],
      "authorID": "746341310322966588",
      "authorName": "callistusa",
      "authorAvatar": "e550c9b615e55b4da767d9e356b0a3ff",
      "createdAtDate": 1676850065897
    },
    "messages": [
      {
        "content": "I haven&#x27;t been able to reproduce your issue.<br>If you have some reproduction steps I&#x27;d like to try them to see what is going.<br>Assuming you don&#x27;t need GraphQL at all, you can set <code>graphQL.disable: true</code> in your Payload config which should prevent this from happening if you just want to be unblocked.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676950010949
      },
      {
        "content": "Hi @dribbens this is my <code>payload-config.ts</code><br><pre><code class=\"hljs\">import { buildConfig } from &#x27;payload/config&#x27;;\nimport path from &#x27;path&#x27;;\nimport Categories from &#x27;./collections/Categories&#x27;;\nimport Posts from &#x27;./collections/Posts&#x27;;\nimport Tags from &#x27;./collections/Tags&#x27;;\nimport Users from &#x27;./collections/Users&#x27;;\nimport Media from &#x27;./collections/Media&#x27;;\n\nexport default buildConfig({\n  serverURL: &#x27;http://localhost:3000&#x27;,\n  admin: {\n    user: Users.slug,\n  },\n  collections: [\n    Categories,\n    Posts,\n    Tags,\n    Users,\n    Media,\n  ],\n  typescript: {\n    outputFile: path.resolve(__dirname, &#x27;payload-types.ts&#x27;)\n  },\n  graphQL: {\n    schemaOutputFile: path.resolve(__dirname, &#x27;generated-schema.graphql&#x27;),\n  },\n});</code></pre><br> <br> This is my dockerfile<br><pre><code class=\"hljs\"># syntax=docker/dockerfile:1\nFROM node:18-alpine as base\n\nFROM base as builder\n\nWORKDIR /home/node\nCOPY package*.json ./\n\nCOPY . .\nRUN npm ci\nRUN npm run build\n\nFROM base as runtime\n\nENV NODE_ENV=production\n\nWORKDIR /home/node\nCOPY package*.json  ./\n\nRUN npm i --omit dev\nCOPY --from=builder /home/node/dist ./dist\nCOPY --from=builder /home/node/build ./build\nCOPY --from=builder /home/node/src/generated-schema.graphql ./dist/generated-schema.graphql\nEXPOSE 3000\n\nCMD [&quot;node&quot;, &quot;dist/server.js&quot;]</code></pre><br> <br> After taking that <code>graphQL</code> piece of configuration then i get a different error<br><pre><code class=\"hljs\">cms-payload-1  | [23:42:11] INFO (payload): Connected to Mongo server successfully!\ncms-payload-1  | [23:42:11] INFO (payload): Starting Payload...\ncms-payload-1  | /home/node/node_modules/payload/node_modules/graphql/jsutils/devAssert.js:12\ncms-payload-1  |     at /home/node/node_modules/payload/dist/graphql/schema/withOperators.js:18:27\ncms-payload-1  |     at Array.reduce (&lt;anonymous&gt;)\ncms-payload-1  |     at withOperators (/home/node/node_modules/payload/dist/graphql/schema/withOperators.js:15:27)\ncms-payload-1  |     at buildWhereInputType (/home/node/node_modules/payload/dist/graphql/schema/buildWhereInputType.js:48:43)\ncms-payload-1  |     at /home/node/node_modules/payload/dist/collections/graphql/init.js:126:79cms-payload-1  |     at Array.forEach (&lt;anonymous&gt;)cms-payload-1  |     at initCollectionsGraphQL (/home/node/node_modules/payload/dist/collections/graphql/init.js:60:38)cms-payload-1  |     at registerSchema (/home/node/node_modules/payload/dist/graphql/registerSchema.js:58:24)\ncms-payload-1  |\ncms-payload-1  | Node.js v18.14.1</code></pre><br> <br> Do you think it could be the node version? might give that a try, but seems like when registering the schema if falls over",
        "fileAttachments": [],
        "authorID": "746341310322966588",
        "authorName": "callistusa",
        "authorAvatar": "e550c9b615e55b4da767d9e356b0a3ff",
        "createdAtDate": 1677022442849
      },
      {
        "content": "We had some issues recently due to some version issues with some incompatibilities of different GraphQL dependencies. I think that is what you are up against here.<br> <br> I don&#x27;t think it is your node version. Switching to <code>yarn</code> might fix this in the short term.<br> <br> This is the thread that makes me think it could be related <a href=\"https://github.com/payloadcms/payload/discussions/1856\">https://github.com/payloadcms/payload/discussions/1856</a>. Without digging in more I&#x27;m not sure.<br> <br> Feel free to open an issue on our Github too, we do bugfixes on Mondays each week and if this is anyone using npm for Payload then we need to address it.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677078510413
      },
      {
        "content": "Ok will do, wouldnt have expected it to be an NPM issue but hopefully you can figure it out<br> <br> <pre><code class=\"hljs\">    &quot;overrides&quot;: {\n        &quot;graphql&quot;: &quot;&gt;15.7.0 &lt;16.7.0&quot;\n     }</code></pre><br> <br> That block and rebuilding the <code>package-lock.json</code> solved it<br> <br> There must be something in the dependency tree that is lower than 15.7.0 and is causing that incorrect string parsing",
        "fileAttachments": [],
        "authorID": "746341310322966588",
        "authorName": "callistusa",
        "authorAvatar": "e550c9b615e55b4da767d9e356b0a3ff",
        "createdAtDate": 1677109493097
      }
    ],
    "messageCount": 13,
    "slug": "trying-to-create-a-production-build-with-payload-cms-error"
  },
  {
    "info": {
      "name": "v1.6.4 - failing to build in production mode - multiple version of GraphQL",
      "id": "1072507736241229864",
      "guildId": "967097582721572934",
      "createdAt": 1675776170550
    },
    "intro": {
      "content": "I am trying to build payload using the generated Dockerfile by the <code>create-payload-app</code> script. It tries to build application using the build script which generates a bundle folder that is including multiple versions of GraphQL as shown with this error:<br><code>Error: Cannot use GraphQLScalarType &quot;DateTime&quot; from another module or realm.</code><br>But fixing it by forcing the latest version of graphql with a resolution block in package.json breaks the admin interface as they are expected older versions.<br><pre><code class=\"hljs\">&quot;resolutions&quot;: {\n    &quot;graphql&quot;: &quot;16.6.0&quot;,\n    &quot;**/graphql&quot;: &quot;16.6.0&quot;\n  },</code></pre><br><br>So what versions should satisfy both, server and admin interface?",
      "fileAttachments": [],
      "authorID": "1072442754455588884",
      "authorName": "jayzai",
      "authorAvatar": null,
      "createdAtDate": 1675776170550
    },
    "messages": [
      {
        "content": "Hey @jayzai , I&#x27;m taking a look into this now. Let me try to recreate.<br> <br> I&#x27;m not able to recreate this. Which template did you choose? Did you perform any modifications?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675872239417
      },
      {
        "content": "There is a related thread on github, <a href=\"https://github.com/payloadcms/payload/discussions/1856\">https://github.com/payloadcms/payload/discussions/1856</a> about this problem while using npm. What package manager are you using?<br>We&#x27;re going to look into this more today.<br> <br> I <strong>was</strong> able to recreate the graphql error from the steps in the thread on github ^<br>That should give us more to look into.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675955322914
      },
      {
        "content": "Interesting, @jayzai does your Dockerfile contain npm commands or yarn commands? (This is generated by create-payload-app based upon what you have installed on your machine)",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675958879063
      },
      {
        "content": "Hello, got almost this problem today, Error: Expected DateTime to be a GraphQL nullable type.<br><br>Using PNPM, working in build in local, but crash in railway ,,,<br><br>The worse thing is i don&#x27;t even use GraphQL, it would be really great to dissociate GraphQL and import it as a subpackage for people wanting to use it",
        "fileAttachments": [],
        "authorID": "204263616013139970",
        "authorName": "HSWMK",
        "authorAvatar": null,
        "createdAtDate": 1677212154961
      },
      {
        "content": "We definitely have had this conversation and have plans to abstract out certain pieces from the core of Payload if it makes sense.<br><br>In the meantime, you could disable graphql by putting this in your config<br><pre><code class=\"hljs\">graph: {\n  disable: true\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677272373267
      },
      {
        "content": "My bad didn’t saw this configuration option, thank you ! But yeah it would be great to have it only if wanted 🙏",
        "fileAttachments": [],
        "authorID": "204263616013139970",
        "authorName": "HSWMK",
        "authorAvatar": null,
        "createdAtDate": 1677272455012
      }
    ],
    "messageCount": 8,
    "slug": "v164-failing-to-build-in-production-mode-multiple-version-of-graphql"
  },
  {
    "info": {
      "name": "Updating to 1.6.17 and `title` has vanished from the list view",
      "id": "1082462155233841162",
      "guildId": "967097582721572934",
      "createdAt": 1678149488982
    },
    "intro": {
      "content": "Screenshots will explain better.<br>-<br> <br> My collections no longer show the title here since I updated from 1.6.15 &gt; 1.6.17<br> <br> -<br><br>And I have this set in all of my collections which have a <code>title</code> field (this isn&#x27;t even available as an option in the &#x27;columns&#x27; list now... something is off!)<br><br>-<br> <br> -<br><br>Pages is even worse...<br><br>-<br> <br> -<br> <br> I can get some way back by selecting slug in the columns, but why&#x27;s the title not being used anymore?<br><br>-<br> <br> It&#x27;s not only the <code>title</code> that&#x27;s not being read, it&#x27;s also <code>subtitle</code> and a seemingly random set of fields (comparing my <code>defaultColumns</code>  to those now available in admin ui)<br><br>-<br> <br> -<br><br>My orders collection is ok for instance (and why i say it&#x27;s seemingly random).<br><br>-<br> <br> ",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1082462155233841162/1082462346359873606/Screenshot_2023-03-07_at_00.32.57.png",
          "name": "Screenshot_2023-03-07_at_00.32.57.png",
          "id": "1082462346359873606",
          "size": 293427,
          "url": "https://cdn.discordapp.com/attachments/1082462155233841162/1082462346359873606/Screenshot_2023-03-07_at_00.32.57.png",
          "proxyURL": "https://media.discordapp.net/attachments/1082462155233841162/1082462346359873606/Screenshot_2023-03-07_at_00.32.57.png",
          "height": 2074,
          "width": 3298,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "357456032454410240",
      "authorName": "jakehopking",
      "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
      "createdAtDate": 1678149488982
    },
    "messages": [
      {
        "content": "I am also missing collection columns as of this afternoon. @jakehopking did you find a solution to this?",
        "fileAttachments": [],
        "authorID": "981053249098498138",
        "authorName": "itsjustchris",
        "authorAvatar": "8bcf6c6d38b39c1383a12f2088deb6ba",
        "createdAtDate": 1678164449724
      },
      {
        "content": "@itsjustchris unfortunately not yet. Hopeful the @payloadcms team will reply soon with a fix 🙏",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1678176150275
      },
      {
        "content": "@jakehopking I figured out what happened to me; my fields were added to rows, which removes their ability to be used as columns. Which sucks because locally I was using 1.3something but my production was running 1.6something. It was working in on dev but production had column issues. Sure enough, I removed the row and the columns were enabled again. I don’t know if that helps you at all, but hopefully it does.",
        "fileAttachments": [],
        "authorID": "981053249098498138",
        "authorName": "itsjustchris",
        "authorAvatar": "8bcf6c6d38b39c1383a12f2088deb6ba",
        "createdAtDate": 1678177518776
      },
      {
        "content": "Thanks for the suggestion @itsjustchris - if there&#x27;s no response from the payload team, then I&#x27;ll give this a try. I don&#x27;t feel I should need to have to restructure my collection configs to support what seems to be bug on payload&#x27;s part. The <code>row</code> and <code>tab</code> fields are supposed to be only ui wrappers, and don&#x27;t affect the data structure of the api response (which the admin ui uses). My <code>title</code> etc are still root level fields after you take the row/tab nesting into account.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1678179462182
      },
      {
        "content": "@jakehopking  It does bizarre to have lost functionality that was once there. Maybe I missed something during the latest releases. Anyway, I discovered my solution based on this discussion <a href=\"https://github.com/payloadcms/payload/discussions/1617\">https://github.com/payloadcms/payload/discussions/1617</a> <br>I’ll follow this thread because I too don’t enjoy having to reconfigure my collections.",
        "fileAttachments": [],
        "authorID": "981053249098498138",
        "authorName": "itsjustchris",
        "authorAvatar": "8bcf6c6d38b39c1383a12f2088deb6ba",
        "createdAtDate": 1678179853355
      },
      {
        "content": "I think this is a regression from the merging of sortable columns. Could either of you open an issue on GitHub describing how to recreate? Sounds like rows/tabs are the culprit here.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678191123989
      },
      {
        "content": "I can confirm this bug. It used to work perfectly, now not being able to get the Title in the list view. Also applies to nesting the Title inside of Tabs.",
        "fileAttachments": [],
        "authorID": "930428018546049024",
        "authorName": "jankocian",
        "authorAvatar": "a2eb9a4ddee5f4f66f64d16c26144b21",
        "createdAtDate": 1678200031999
      },
      {
        "content": "@jakehopking @itsjustchris @jankocian thank you all for the details here. I am able to recreate this and will have a fix out shortly along with a test to prevent future regression. No changes to your config are necessary, just bump to latest once released—I&#x27;ll post updates to this thread as they come through<br> <br> @Jarrod I opened that ticket just now <a href=\"https://github.com/payloadcms/payload/issues/2255\">https://github.com/payloadcms/payload/issues/2255</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678200255284
      },
      {
        "content": "Oh... good to hear @jacobsfletch  - I&#x27;ve also just created a ticket before seeing your response 👍 <br><a href=\"https://github.com/payloadcms/payload/issues/2257\">https://github.com/payloadcms/payload/issues/2257</a>",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1678202333244
      },
      {
        "content": "Even better, I will reference yours<br> <br> I just opened a PR for this <a href=\"https://github.com/payloadcms/payload/pull/2258\">https://github.com/payloadcms/payload/pull/2258</a><br> <br> Once CI passes we&#x27;ll merge this in and get a release out asap",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678202496925
      }
    ],
    "messageCount": 21,
    "slug": "updating-to-1617-and-title-has-vanished-from-the-list-view"
  },
  {
    "info": {
      "name": "Custom Admin Panel",
      "id": "1084757091786432514",
      "guildId": "967097582721572934",
      "createdAt": 1678696644494
    },
    "intro": {
      "content": "What would be best way to approach to build a custom admin panel but use the underlying application framework to build apps/mobile apps",
      "fileAttachments": [],
      "authorID": "848957152085016608",
      "authorName": "octalpixel",
      "authorAvatar": null,
      "createdAtDate": 1678696644494
    },
    "messages": [
      {
        "content": "Use the provided API...for rolling something internally, the graphql API is probably the easiest, as you can very quickly generate your queries and fetch hooks from it<br> <br> the API will remain extendable, plus it still uses all the hooks and access permissions provided by payload",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678697686540
      },
      {
        "content": "Swapping  components one by one is one way to go about it",
        "fileAttachments": [],
        "authorID": "643912278244065292",
        "authorName": "dumbledore",
        "authorAvatar": "94cbc64f03bcd57381f79c521bc221ea",
        "createdAtDate": 1678698102458
      },
      {
        "content": "I fear that maintenance could be an issue there, if more components are added or something else changes<br> <br> Far less stable than just using the API",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678699130990
      },
      {
        "content": "You are correct, but I think the generate the react ui by parsing the config at build time, do we have access to the config schema to create the dynamic ui? I do think its possible but not so sure if there is a straight forward to so.",
        "fileAttachments": [],
        "authorID": "643912278244065292",
        "authorName": "dumbledore",
        "authorAvatar": "94cbc64f03bcd57381f79c521bc221ea",
        "createdAtDate": 1678699338156
      },
      {
        "content": "You have access to the generated types and if you use graphql you could easily generate more than enough of the code..but it depends entirely on OP&#x27;s use case<br> <br> you can also fill in the gaps with custom endpoints",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678699418122
      },
      {
        "content": "Yeah that work.",
        "fileAttachments": [],
        "authorID": "643912278244065292",
        "authorName": "dumbledore",
        "authorAvatar": "94cbc64f03bcd57381f79c521bc221ea",
        "createdAtDate": 1678699551899
      },
      {
        "content": "Thanks for answers @noheadphones @dumbledore . Seems like its going to be bit of a task to get it up and running. I will looking into with your pointers.",
        "fileAttachments": [],
        "authorID": "848957152085016608",
        "authorName": "octalpixel",
        "authorAvatar": null,
        "createdAtDate": 1678900601969
      }
    ],
    "messageCount": 10,
    "slug": "custom-admin-panel"
  },
  {
    "info": {
      "name": "How to generate JWT token for a user without calling .login(email, password)?",
      "id": "1071806386037604352",
      "guildId": "967097582721572934",
      "createdAt": 1675608955631
    },
    "intro": {
      "content": "I am using Google OAuth to authenticate my users. When I receive google id token, I would verify it and then find the user with the corresponding email. However, I don&#x27;t know how to generate the JWT for that specific user via local API without specifying email and password (especially since there&#x27;s no password)<br> <br> Or is it not supported at the moment?",
      "fileAttachments": [],
      "authorID": "275258786388639744",
      "authorName": "bombnp",
      "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
      "createdAtDate": 1675608955631
    },
    "messages": [
      {
        "content": "Hey, there is a lot that goes into making your auth strategy. It is tough to explain the details, but you&#x27;ll need to sign your own JWT in a new custom endpoint route and use the <code>disableLocalStrategy</code> auth option as that will turn off the built-in email + password fields along with other auth features you won&#x27;t want under your strategy.<br> <br> This was a really good write up on what you need in another community-help post that could help: <a href=\"https://discord.com/channels/967097582721572934/1073356002101035108/1073672246503166022\">https://discord.com/channels/967097582721572934/1073356002101035108/1073672246503166022</a>",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676385543792
      },
      {
        "content": "oh my that really is extensive. I&#x27;ve implemented it like that as well. Thanks for reply!",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1676442354757
      }
    ],
    "messageCount": 4,
    "slug": "how-to-generate-jwt-token-for-a-user-without-calling-loginemail-password"
  },
  {
    "info": {
      "name": "Error deploying with Dockerfile / Azure App Services / DevOps",
      "id": "1081159708792074270",
      "guildId": "967097582721572934",
      "createdAt": 1677838961552
    },
    "intro": {
      "content": "I&#x27;ve got a DevOps pipeline configured to deploy Payload to a Linux Azure App Service.<br><br>The deployment completes successfully and I can see the application files on the app-service, including <code>node_modules</code>, <code>dist</code> and <code>build</code> folders.<br><br>I get the error <code>error: cannot find module &#x27;express&#x27;</code> when the app service tries to run <code>npm run serve</code>.<br><br>If I add the environment variable <code>SCM_DO_BUILD_DURING_DEPLOYMENT=true</code> to the app service I then get a different error, <code>error: cannot find module &#x27;..&#x27;</code> from <code>cross-env</code>.<br><br>Any ideas?<br> <br> Ok, so it seems to be an issue with Azure App Service deployments.<br><br>There are two issues I’m having. <br><br>1. Because I’m building in DevOps and then using ZipDeploy, the <code>PAYLOAD_PUBLIC</code> environment variables from the App Service aren’t available to the admin. This is impacting being able to load the admin at all because I’m using such a variable for the server url. <br><br>2. App Service deployments seem to break the symlinks that <code>npm install</code> creates in the <code>node_modules/.bin</code> folder. This means that I can’t re-run the <code>npm run build</code> command as part of the App Service start command. <br><br>3. Setting the public env vars in the build script on DevOps has no effect. <br><br>4. <code>npm rebuild</code> on the app service fails due to permissions errors <br><br>Has anyone managed to get Payload working on Azure App Service at all?",
      "fileAttachments": [],
      "authorID": "365498720726286349",
      "authorName": "Kyr",
      "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
      "createdAtDate": 1677838961552
    },
    "messages": [
      {
        "content": "Trying aswell, no luck as of now.",
        "fileAttachments": [],
        "authorID": "279998686669570049",
        "authorName": "danielmlr",
        "authorAvatar": null,
        "createdAtDate": 1678039243709
      },
      {
        "content": "<a href=\"https://tenor.com/view/fml-sylvester-cat-annoyed-head-bang-gif-13045781\">https://tenor.com/view/fml-sylvester-cat-annoyed-head-bang-gif-13045781</a><br> <br> I&#x27;ve made progress.... I&#x27;m using DevOps to build &amp; publish the docker image to Azure Container Registry and booting the app service from the created docker image.<br><br>This has bypassed all of the symlink nonsense but now when I go to <code>/admin</code> I get the following error in my browser console:<br><br><pre><code class=\"hljs\">Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons: 1. You might have mismatching versions of React and the renderer (such as React DOM) 2. You might be breaking the Rules of Hooks 3. You might have more than one copy of React in the same app See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.</code></pre><br> <br> Error deploying with Dockerfile<br> <br> I think I finally solved it... Adding the following to my package.json fixed the react error. It seems that the default dependencies that Payload comes with have some differing versions of react dependencies within them 😦<br><br><pre><code class=\"hljs json\"><span class=\"hljs-attr\">&quot;overrides&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;react&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;18.2.0&quot;</span>\n<span class=\"hljs-punctuation\">}</span></code></pre><br> <br> Error deploying with Dockerfile / Azure App Services / DevOps<br> <br> @danielmlr FYI",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1678111050266
      }
    ],
    "messageCount": 8,
    "slug": "error-deploying-with-dockerfile-azure-app-services-devops"
  },
  {
    "info": {
      "name": "How to do dot notation on graphql where?",
      "id": "1077554723336499260",
      "guildId": "967097582721572934",
      "createdAt": 1676979466042
    },
    "intro": {
      "content": "Is it possible to create a gql query with where clause same as the where on REST like post.image.alt on <a href=\"https://localhost:9000/api/posts?where[post.image.alt][equals]=test%20image\">https://localhost:9000/api/posts?where[post.image.alt][equals]=test%20image</a>",
      "fileAttachments": [],
      "authorID": "950202910095081473",
      "authorName": "johnmadrigal_",
      "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
      "createdAtDate": 1676979466042
    },
    "messages": [
      {
        "content": "Not currently, but it’s on our roadmap. The REST endpoints can do this (once the open issue is resolved).<br><br>Roadmap item: <a href=\"https://github.com/payloadcms/payload/discussions/761\">https://github.com/payloadcms/payload/discussions/761</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676983215457
      }
    ],
    "messageCount": 1,
    "slug": "how-to-do-dot-notation-on-graphql-where"
  },
  {
    "info": {
      "name": "How to set expiration limit for forgotpassword token ?",
      "id": "1077161947851669544",
      "guildId": "967097582721572934",
      "createdAt": 1676885821069
    },
    "intro": {
      "content": "How  to change expiration limit for forgot password token from 1 hour ?",
      "fileAttachments": [],
      "authorID": "943144613689065502",
      "authorName": "Veera26",
      "authorAvatar": null,
      "createdAtDate": 1676885821069
    },
    "messages": [
      {
        "content": "@Veera26 According to the source, the options for forgotPassword are as follows:<br><pre><code class=\"hljs\">export type Arguments = {\n  collection: Collection\n  data: {\n    email: string\n    [key: string]: unknown\n  }\n  disableEmail?: boolean\n  expiration?: number\n  req: PayloadRequest\n}</code></pre><br> <br> reference: <a href=\"https://github.com/payloadcms/payload/blob/master/src/auth/operations/forgotPassword.ts\">https://github.com/payloadcms/payload/blob/master/src/auth/operations/forgotPassword.ts</a><br> <br> Lucky for you, the default is one hour<br> <br> <pre><code class=\"hljs\">  user.resetPasswordExpiration = expiration || Date.now() + 3600000; // 1 hour</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676899893472
      },
      {
        "content": "OKay thanks<br> <br> I will look into it",
        "fileAttachments": [],
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1677565982020
      }
    ],
    "messageCount": 6,
    "slug": "how-to-set-expiration-limit-for-forgotpassword-token"
  },
  {
    "info": {
      "name": "Increase max upload size?",
      "id": "1085945208828608552",
      "guildId": "967097582721572934",
      "createdAt": 1678979913671
    },
    "intro": {
      "content": "Hello everyone,<br><br>I&#x27;m building an app that requires files with the size of around 10GB to be uploaded, after clicking &quot;Save&quot; I get this error message <code>Your request was too large to submit successfully.</code><br><br>How can I increase the max file upload size?<br><br>Also I use the <code>plugin-cloud-storage</code> plugin to store files on S3.<br><br>Thank you very much for your time!",
      "fileAttachments": [],
      "authorID": "1014197588670558258",
      "authorName": "Luciano",
      "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
      "createdAtDate": 1678979913671
    },
    "messages": [
      {
        "content": "<a href=\"https://payloadcms.com/docs/upload/overview#payload-wide-upload-options\">https://payloadcms.com/docs/upload/overview#payload-wide-upload-options</a><br> <br> This bit explains how it works<br> <br> Now depending on how you&#x27;re doing your hosting, you might need to configure apache/nginx etc to allow higher size limits too",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678987621707
      },
      {
        "content": "This is perfect thank you!",
        "fileAttachments": [],
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1678987909432
      }
    ],
    "messageCount": 4,
    "slug": "increase-max-upload-size"
  },
  {
    "info": {
      "name": "Custom UI on admin",
      "id": "1035232304324415538",
      "guildId": "967097582721572934",
      "createdAt": 1666889015037
    },
    "intro": {
      "content": "Hello there! I am wondering if anyone here has done a complete custom UI on the admin panel for managing collections and how that turned out.",
      "fileAttachments": [],
      "authorID": "435590980838621194",
      "authorName": "Cerize",
      "authorAvatar": null,
      "createdAtDate": 1666889015037
    },
    "messages": [
      {
        "content": "Hey @Cerize you can customize just about everything, including swapping in your own entire custom routes<br> <br> I don&#x27;t know that anyone has had any public examples posted just yet, but I like the question",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666898699284
      },
      {
        "content": "Well I am also going through it and so far couldn&#x27;t achieve what I really want to. <br>I would love to have an example as well. It would be really good if we can have an example of simple form submission and it saves the data in mongoDB with customUI.",
        "fileAttachments": [],
        "authorID": "802507136939589662",
        "authorName": "H.A",
        "authorAvatar": null,
        "createdAtDate": 1666906311684
      },
      {
        "content": "OK<br> <br> I will put that on the list of content to produce",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666961278796
      },
      {
        "content": "That would be great. A simple steps would be enough for most of us I guess. Just to give you an idea that what approach I am using right now. Entire customised form page for admin panel and which can store data in the database and we are still intact with payload completely.<br>Tried using useForm, useField but i must be missing something that it doesn&#x27;t work properly. Moreover, the project we are working on is quite a big one and it will have GrapesJS page builder in it with most of tailwind and bootstrap components in it. I guess it would be a good addition.",
        "fileAttachments": [],
        "authorID": "802507136939589662",
        "authorName": "H.A",
        "authorAvatar": null,
        "createdAtDate": 1666977931603
      },
      {
        "content": "Hi, I&#x27;m also trying to replace several admin components but for some cases it&#x27;s all or nothing. For example for editing: the save button, the title, the right column. These can only be replaced by replacing the whole Edit component. I&#x27;m aware that all components are importable so I can sift through the source code and copy the edit page file by file, replacing components where needed. @jmikrut  Just wondering if that&#x27;s how you would approach this too?",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667033539634
      },
      {
        "content": "@thgh we actually want to build in some features that make it possible to more granularly replace <em><strong>only</strong></em> the Publish button, Save Draft button, etc. @zubricks can you open a Discussion and add the info necessary to a <code>planned</code> feature?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667222384437
      },
      {
        "content": "that&#x27;s awesome @jmikrut, looking forward to see your example, it will be super helpful!",
        "fileAttachments": [],
        "authorID": "435590980838621194",
        "authorName": "Cerize",
        "authorAvatar": null,
        "createdAtDate": 1667234092185
      },
      {
        "content": "hy there<br>any news on this question? <br>I&#x27;m looking for a way to customize the preview button, without having to replace the edit component alltogether...",
        "fileAttachments": [],
        "authorID": "1002213674926215350",
        "authorName": "DU DA",
        "authorAvatar": null,
        "createdAtDate": 1678114731122
      },
      {
        "content": "For anyone interested - we did log this on our Roadmap <a href=\"https://github.com/payloadcms/payload/discussions/1324\">https://github.com/payloadcms/payload/discussions/1324</a> and you can keep an eye on it there!",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1678119916683
      },
      {
        "content": "Wow, this sounds awesome, as I would like to use the Approve button to approve newly registered users.",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1678120758000
      }
    ],
    "messageCount": 12,
    "slug": "custom-ui-on-admin"
  },
  {
    "info": {
      "name": "is it possible to use custom authentication",
      "id": "1081280581213622313",
      "guildId": "967097582721572934",
      "createdAt": 1677867779783
    },
    "intro": {
      "content": "s there anyway to change authentication main field from email to phone number and can i use fully custom authentication ?<br> <br> @jmikrut 👀",
      "fileAttachments": [],
      "authorID": "281291275615862795",
      "authorName": "Bakry",
      "authorAvatar": "93df8929e9bae6f22ec31e6cda934835",
      "createdAtDate": 1677867779783
    },
    "messages": [
      {
        "content": "hey there - you can certainly build you own authentication patterns<br> <br> <code>disableLocalStrategy: true</code><br> <br> and then you are free to use any Passport-compatible auth strategy, or you can create your own",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677869654421
      },
      {
        "content": "can you elaborate further to how can i do this exactly?<br> <br> and thank you very much",
        "fileAttachments": [],
        "authorID": "281291275615862795",
        "authorName": "Bakry",
        "authorAvatar": "93df8929e9bae6f22ec31e6cda934835",
        "createdAtDate": 1677916738841
      },
      {
        "content": "@Bakry could this be of any help to you? <a href=\"https://github.com/watscho/express-mongodb-rest-api-boilerplate\">https://github.com/watscho/express-mongodb-rest-api-boilerplate</a>",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677925696852
      },
      {
        "content": "the thing is<br> <br> im making a phone number/ password auth",
        "fileAttachments": [],
        "authorID": "281291275615862795",
        "authorName": "Bakry",
        "authorAvatar": "93df8929e9bae6f22ec31e6cda934835",
        "createdAtDate": 1677926280983
      },
      {
        "content": "Or maybe this because this is react based <a href=\"https://github.com/ederssouza/reactjs-auth-boilerplate\">https://github.com/ederssouza/reactjs-auth-boilerplate</a>",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677926295428
      },
      {
        "content": "and i&#x27;m not sure how to do make a passport auth work with payload",
        "fileAttachments": [],
        "authorID": "281291275615862795",
        "authorName": "Bakry",
        "authorAvatar": "93df8929e9bae6f22ec31e6cda934835",
        "createdAtDate": 1677926328588
      },
      {
        "content": "Ahm, sorry but me neither, never needed it<br> <br> But<br> <br> It&#x27;s surely possible to change the default with you own component<br> <br> @Bakry <a href=\"https://github.com/payloadcms/next-auth-frontend\">https://github.com/payloadcms/next-auth-frontend</a><br> <br> Take a look at this and maybe you could rewrite it<br> <br> If you are using next as frontend<br> <br> Oh no wait, i don&#x27;t know whether it will work with this",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677926396803
      },
      {
        "content": "i am not unfortunately<br> <br> tyty<br> <br> idk how to implement it in the backend tbh",
        "fileAttachments": [],
        "authorID": "281291275615862795",
        "authorName": "Bakry",
        "authorAvatar": "93df8929e9bae6f22ec31e6cda934835",
        "createdAtDate": 1677926916362
      },
      {
        "content": "It needs quite of an aexperience as a developer to implement your own PassportJS auth strategies as it is stated in the docs as well, but it doesnt seem that difficult looking at PassportJS documentation to do so",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677927004207
      },
      {
        "content": "yea it isn&#x27;t that hard to make but the thing is<br> <br> idk how to make it work with payload and payload admin",
        "fileAttachments": [],
        "authorID": "281291275615862795",
        "authorName": "Bakry",
        "authorAvatar": "93df8929e9bae6f22ec31e6cda934835",
        "createdAtDate": 1677927028207
      },
      {
        "content": "you&#x27;d just inject your own components into the login screen and make sure that your middleware properly authenticates a user via an HTTP-only cookie. If authenticated, you add the user to the <code>req.user</code> and then you&#x27;re golden!",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678124513429
      },
      {
        "content": "so if i make a token using jwt.sign<br> <br> then set it in a cookie using setTokenCookie<br> <br> and save my req.user as the current user",
        "fileAttachments": [],
        "authorID": "281291275615862795",
        "authorName": "Bakry",
        "authorAvatar": "93df8929e9bae6f22ec31e6cda934835",
        "createdAtDate": 1678124613449
      },
      {
        "content": "yep<br> <br> that&#x27;s basically all that Passport does really",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678124650113
      },
      {
        "content": "the payload middleware authenticates my jwt automatically ?",
        "fileAttachments": [],
        "authorID": "281291275615862795",
        "authorName": "Bakry",
        "authorAvatar": "93df8929e9bae6f22ec31e6cda934835",
        "createdAtDate": 1678124665798
      },
      {
        "content": "it&#x27;s just middleware that looks out for a cookie or a JWT header, and then decodes the JWT, and sets it to <code>req.user</code><br> <br> No, if you are using a custom JWT, then Payload will not know to use it. It will be up to you to do that",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678124672788
      },
      {
        "content": "what if i hook it up with ${payload.config.cookiePrefix}<br> <br> as the token name",
        "fileAttachments": [],
        "authorID": "281291275615862795",
        "authorName": "Bakry",
        "authorAvatar": "93df8929e9bae6f22ec31e6cda934835",
        "createdAtDate": 1678124740694
      },
      {
        "content": "you will still need to make sure you use the same encryption that the passport-local-mongoose package uses<br> <br> but it could be done",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678124759121
      },
      {
        "content": "hmm can you elaborate more<br> <br> yours truly is new to nodejs<br> <br> aight i got some ideas i will try to implement and let you know if i run into any problems<br> <br> I copied the strategy from the official payload repo<br> <br> and in /login i made my own jwt using payload.secret<br> <br> and set the cookie with payload.config.cookiePrefix-token<br> <br> and set the req.user to the data i got<br> <br> and its working somehow lmao",
        "fileAttachments": [],
        "authorID": "281291275615862795",
        "authorName": "Bakry",
        "authorAvatar": "93df8929e9bae6f22ec31e6cda934835",
        "createdAtDate": 1678124786184
      }
    ],
    "messageCount": 45,
    "slug": "is-it-possible-to-use-custom-authentication"
  },
  {
    "info": {
      "name": "Cell component with first column \"WrapElement\" link",
      "id": "1080099407044808715",
      "guildId": "967097582721572934",
      "createdAt": 1677586165916
    },
    "intro": {
      "content": "Hello,<br>I created a cell component link in the doc (<a href=\"https://payloadcms.com/docs/admin/components#cell-component\">https://payloadcms.com/docs/admin/components#cell-component</a>)<br>When the cell is in the first position the &quot;WrapElement&quot; (<a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/Cell/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/Cell/index.tsx</a>) with the link to the document is not added.<br>Is this a bug or is there something to be implemented?<br><br>Thank you",
      "fileAttachments": [],
      "authorID": "340889215304728577",
      "authorName": "febba",
      "authorAvatar": null,
      "createdAtDate": 1677586165916
    },
    "messages": [
      {
        "content": "You will need to implement your own wrap element component. You have everything you need to do that since the link prop is passed to your custom component. You are looking at the default cell component in that file, but you are rendering a custom cell component",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677588543888
      },
      {
        "content": "Ok thank you",
        "fileAttachments": [],
        "authorID": "340889215304728577",
        "authorName": "febba",
        "authorAvatar": null,
        "createdAtDate": 1677594303864
      }
    ],
    "messageCount": 2,
    "slug": "cell-component-with-first-column-wrapelement-link"
  },
  {
    "info": {
      "name": "useAsTitle a field (not id) from a relationship",
      "id": "1078251117735059476",
      "guildId": "967097582721572934",
      "createdAt": 1677145499405
    },
    "intro": {
      "content": "Hello guys, I was wondering if there is any built-in way to do this:<br><br>I have 2 collections, UserCourses and Courses. <code>UserCourses</code> has a relationship to <code>Courses</code>.<br><br>I wanted to use as the title for each <code>UserCourses</code> record, the title of the course it has a relationship for (example: <code>Course.title</code> instead of the ID of the <code>Course</code>). <br><br>I uploaded a couple of screenshots to explain better what I&#x27;m trying to do. Thank you!",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1078251117735059476/1078251117894451281/2023-02-23_10-43.png",
          "name": "2023-02-23_10-43.png",
          "id": "1078251117894451281",
          "size": 102000,
          "url": "https://cdn.discordapp.com/attachments/1078251117735059476/1078251117894451281/2023-02-23_10-43.png",
          "proxyURL": "https://media.discordapp.net/attachments/1078251117735059476/1078251117894451281/2023-02-23_10-43.png",
          "height": 517,
          "width": 1244,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1078251117735059476/1078251118229979156/2023-02-23_10-44.png",
          "name": "2023-02-23_10-44.png",
          "id": "1078251118229979156",
          "size": 39833,
          "url": "https://cdn.discordapp.com/attachments/1078251117735059476/1078251118229979156/2023-02-23_10-44.png",
          "proxyURL": "https://media.discordapp.net/attachments/1078251117735059476/1078251118229979156/2023-02-23_10-44.png",
          "height": 557,
          "width": 1222,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "765140200438366209",
      "authorName": "Lloyd",
      "authorAvatar": null,
      "createdAtDate": 1677145499405
    },
    "messages": [
      {
        "content": "Hi @Lloyd useAsTitle does not support nested fields currently, we will commonly use a virtual field to get specific data for your document title. For example:<br><br><pre><code class=\"hljs\">    {\n      name: &#x27;title&#x27;,\n      type: &#x27;text&#x27;,\n      admin: {\n        hidden: true,\n      },\n      hooks: {\n        beforeChange: [\n          ({ data }) =&gt; {\n            return data.course.title;\n          }\n        ],\n      },\n    },</code></pre><br><br>Then you would set <code>useAsTitle: &#x27;title&#x27;</code>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1677175154008
      },
      {
        "content": "Hi, it seems like a really good solution, thanks a lot!<br><br>I&#x27;ve encountered only one problem, in my case <code>data.course.title</code> did not contain the title of the course, here&#x27;s the output of <code>data</code>:<br><pre><code class=\"hljs\">{\n  tier: &#x27;base&#x27;,\n  user: &#x27;63c66090c20a548b1c0a325b&#x27;,\n  title: &#x27;&#x27;,\n  course: &#x27;63f4835d1c09415657bfccff&#x27;\n}</code></pre><br>But I fetched it like this<br><pre><code class=\"hljs\">    {\n      name: &#x27;title&#x27;,\n      type: &#x27;text&#x27;,\n      admin: {\n        hidden: true\n      },\n      hooks: {\n        beforeChange: [\n          async ({data}) =&gt; {\n            const req = await fetch(`${process.env.URL}/api/courses/${data.course}`)\n              .then(res =&gt; res.json())\n              .then(data =&gt; {\n                return data.title\n              })\n            return req\n          }\n        ]\n      }\n    }</code></pre><br><br>And now everything works well",
        "fileAttachments": [],
        "authorID": "765140200438366209",
        "authorName": "Lloyd",
        "authorAvatar": null,
        "createdAtDate": 1677223674174
      }
    ],
    "messageCount": 2,
    "slug": "useastitle-a-field-not-id-from-a-relationship"
  },
  {
    "info": {
      "name": "Using a custom domain to point to cloud run instance hosting payload server not allowing auth",
      "id": "1072062939051339838",
      "guildId": "967097582721572934",
      "createdAt": 1675670122636
    },
    "intro": {
      "content": "Hey Payload team,<br><br>I&#x27;m currently hosting my payload server on a google cloud run instance, i am using firebase hosting to point a custom domain to the end point, upon login in with an admin account I get the error &quot;Unauthorized, you must be logged in to make this request. You are not allowed to access this page&quot;. <br><br>When i use the direct url for the endpoint provided from google cloud run with the same payload admin account it works.<br> <br> @allanc<br> <br> My investigation so far... does the <pre><code class=\"hljs\">serverURL</code></pre> need to be the exact domain and not a hosted url? docs found here <a href=\"https://payloadcms.com/docs/configuration/overview#using-environment-variables-in-your-config\">https://payloadcms.com/docs/configuration/overview#using-environment-variables-in-your-config</a><br> <br> @jmikrut hey sorry for the tag, just needed some help here since the threads going stale 🙂",
      "fileAttachments": [],
      "authorID": "274520005175934976",
      "authorName": "andΞ | scalene",
      "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
      "createdAtDate": 1675670122636
    },
    "messages": [
      {
        "content": "yes, the serverURL needs to be the actual URL (with https) that you access the Payload admin with<br> <br> you should also be able to leave it undefined if you don&#x27;t know the serverURL - BUT if you do leave it undefined, then you need to whitelist the domains you&#x27;ll be using in the <code>csrf</code> property of the Payload config<br> <br> because we only accept auth cookies from either serverURL or explicitly whitelisted domains in csrf array<br> <br> for security reasons",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675902558660
      },
      {
        "content": "cc: @allanc<br> <br> thank you and appreciate you getting to this question",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675994875426
      },
      {
        "content": "Thanks @jmikrut, that helped me out also.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676004398632
      },
      {
        "content": "of course! 💸",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676040820690
      },
      {
        "content": "@jmikrut hey adding in the serverURL didn&#x27;t work, do we have to add it both to <code>serverURL</code> and the <code>csrf</code><br> <br> @MRL did it work for you?",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446214103
      },
      {
        "content": "All I had to do was add the serverURL in and make sure that matches the URL where you are hosting the application.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446290919
      },
      {
        "content": "do you know if it supports the subdomain<br> <br> or the actual base domain @MRL",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446301865
      },
      {
        "content": "It supports subdomains. So if your url is <a href=\"https://cms.mywebsite.com\">https://cms.mywebsite.com</a> then that is what you need to enter into the serverURL",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446352781
      },
      {
        "content": "ah thank you @MRL it still doesnt work for us - maybe it might be something to do with firebase hosting a cloud run instance",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446450760
      },
      {
        "content": "Do you have the url set in the .env files?",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446474636
      },
      {
        "content": "yep - set in the .env files on cloud run",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446517175
      },
      {
        "content": "I&#x27;m not super clued up on Firebase hosting but if you can access the logs when it is building, you should be able to see where the serverUrl is pointing to. Or you can check the browser console to see where the API calls are being made to",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446531600
      },
      {
        "content": "sweet, for now i just redirected it to the main url on the firebase hosting<br> <br> so atleast its friendly to remember<br> <br> that works for now<br> <br> @MRL thanks",
        "fileAttachments": [],
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446724486
      },
      {
        "content": "All good 🙂",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446751055
      }
    ],
    "messageCount": 26,
    "slug": "using-a-custom-domain-to-point-to-cloud-run-instance-hosting-payload-server-not-allowing-auth"
  },
  {
    "info": {
      "name": "Payload Nextjs error only nextjs working not payload",
      "id": "1080137835870421073",
      "guildId": "967097582721572934",
      "createdAt": 1677595328062
    },
    "intro": {
      "content": "I have a nextjs and payload cms server running together. nextjs is the latest version 13 while payload is also the latest version, when i try to run the app, it starts payload cms and connects it to mongo db, then proceeds to run nextjs app which runs perfectly, but even after connecting to mongo db the payload does not load the payload config hence payload only starts but cannot be loaded in the browser",
      "fileAttachments": [],
      "authorID": "956872258574495745",
      "authorName": "JustineNext",
      "authorAvatar": null,
      "createdAtDate": 1677595328062
    },
    "messages": [
      {
        "content": "<blockquote>payload does not load the payload config<br></blockquote>How are you determining this? Are there any errors in terminal or browser console?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677598028794
      },
      {
        "content": "its not showing any errors, it just starts payload, connects to mongo db but its not progressing to next step which is starting nextjs server  here are my package.json, server.js and payload config files<br> <br> initially when i added payload to nextjs, it had Media and users collections, it was working fine, but when i added one more collection, its not working anymore, when i remove the collection, its working, the collection does not have any errors, and there are errors being shown",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080137835870421073/1080396227826434090/image.png",
            "name": "image.png",
            "id": "1080396227826434090",
            "size": 81599,
            "url": "https://cdn.discordapp.com/attachments/1080137835870421073/1080396227826434090/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080137835870421073/1080396227826434090/image.png",
            "height": 592,
            "width": 961,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080137835870421073/1080396228128407612/image.png",
            "name": "image.png",
            "id": "1080396228128407612",
            "size": 37526,
            "url": "https://cdn.discordapp.com/attachments/1080137835870421073/1080396228128407612/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080137835870421073/1080396228128407612/image.png",
            "height": 353,
            "width": 671,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080137835870421073/1080396228442984489/image.png",
            "name": "image.png",
            "id": "1080396228442984489",
            "size": 45260,
            "url": "https://cdn.discordapp.com/attachments/1080137835870421073/1080396228442984489/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080137835870421073/1080396228442984489/image.png",
            "height": 444,
            "width": 522,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080137835870421073/1080396228807901205/image.png",
            "name": "image.png",
            "id": "1080396228807901205",
            "size": 42660,
            "url": "https://cdn.discordapp.com/attachments/1080137835870421073/1080396228807901205/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080137835870421073/1080396228807901205/image.png",
            "height": 247,
            "width": 1125,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "956872258574495745",
        "authorName": "JustineNext",
        "authorAvatar": null,
        "createdAtDate": 1677656933793
      },
      {
        "content": "Can you show the code for the problematic collection?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677679595803
      }
    ],
    "messageCount": 4,
    "slug": "payload-nextjs-error-only-nextjs-working-not-payload"
  },
  {
    "info": {
      "name": "Field hook for creating slug",
      "id": "1070026227273973820",
      "guildId": "967097582721572934",
      "createdAt": 1675184532708
    },
    "intro": {
      "content": "I am trying to use a hook for generating slug based on title<br><br><pre><code class=\"hljs\">{\n            name: &#x27;title&#x27;,\n            required: true,\n            type: &#x27;text&#x27;,\n            localized: true,\n        },\n        {\n            name: &#x27;slug&#x27;,\n            required: true,\n            type: &#x27;text&#x27;,\n            unique: true,\n            localized: true,\n            hooks: {\n                beforeValidate: [slugify(&#x27;title&#x27;)],\n            },\n        },</code></pre><br><br>but I get this error: <br><pre><code class=\"hljs\"> Field &quot;slug&quot; &gt; &quot;value&quot; does not match any of the allowed types</code></pre><br><br>I want to generate the slug from the title. I took a look at the website on GitHub (<a href=\"https://github.com/payloadcms/website-cms/blob/b130b43cc1cf7a0ac1ba4c71ba7db90627f7a444/src/fields/slug.ts#L7\">https://github.com/payloadcms/website-cms/blob/b130b43cc1cf7a0ac1ba4c71ba7db90627f7a444/src/fields/slug.ts#L7</a>) and that is how I got the hook but I dont want to create another field called slug and etc, I just want to use it inside the collection file",
      "fileAttachments": [],
      "authorID": "944284724824801302",
      "authorName": "generator101",
      "authorAvatar": null,
      "createdAtDate": 1675184532708
    },
    "messages": [
      {
        "content": "is it because you don&#x27;t want the field to show up in the admin UI?<br> <br> i.e. = you just want the data to be in the API response, and not be editable<br> <br> to do that, you can set <code>admin.disabled</code> to <code>true</code> on your slug field<br> <br> and it will be hidden in admin UI",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675189568474
      },
      {
        "content": "@jmikrut yes, the idea is to auto generate the slug value from the title automatically when post is saved<br> <br> but the issue is Field &quot;slug&quot; &gt; &quot;value&quot; does not match any of the allowed types error",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675215420283
      },
      {
        "content": "that means you don&#x27;t have your field config for the <code>slug</code> field correct<br> <br> can you copy / paste your <code>slug</code> field config here?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215886527
      },
      {
        "content": "hum, I am not sure, I added it as a text field<br> <br> <pre><code class=\"hljs\">{\n            name: &#x27;slug&#x27;,\n            required: true,\n            type: &#x27;text&#x27;,\n            unique: true,\n            localized: true,\n            hooks: {\n                beforeValidate: [slugify(&#x27;title&#x27;)],\n            },\n        },</code></pre><br> <br> slugify <a href=\"https://www.npmjs.com/package/slugify\">https://www.npmjs.com/package/slugify</a> is this library I want to use<br> <br> to convert the title",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675220728799
      },
      {
        "content": "the error is because you are not writing your <code>beforeValidate</code> hook properly<br> <br> in that snippet, you&#x27;re <em><strong>calling</strong></em> the function, which will likely return a string. The <code>beforeValidate</code> property can only accept an array of functions<br> <br> so you need to write your beforeValidate hook itself as a function, and not call it",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675221544207
      },
      {
        "content": "oh I see, thank you<br> <br> I will give it a shot tomorrow morning<br> <br> @jmikrut I managed to get this working and use title automatically as a slug<br> <br> Thank you for your help",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675226677153
      },
      {
        "content": "@generator101 could you kindly post your solution here? I&#x27;m also having issues working dynamically between different field selections.",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676347528135
      },
      {
        "content": "sure<br> <br> @KasparTr here you go<br> <br> <pre><code class=\"hljs\">{\n    name: &#x27;slug&#x27;,\n    type: &#x27;text&#x27;,\n    unique: true,\n    localized: true,\n    index: true,\n    admin: {\n        readOnly: true\n    },\n    hooks: {\n        beforeValidate: [\n            ({ req: { payload }, data }) =&gt; {\n                if (payload) {\n                    return slugify(data.title)\n                }\n            },\n        ],\n    },\n},</code></pre><br> <br> I used this library <a href=\"https://www.npmjs.com/package/slugify\">https://www.npmjs.com/package/slugify</a><br> <br> to convert title to slug",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676425897722
      }
    ],
    "messageCount": 25,
    "slug": "field-hook-for-creating-slug"
  },
  {
    "info": {
      "name": "React Console errors",
      "id": "1080345190583250995",
      "guildId": "967097582721572934",
      "createdAt": 1677644765278
    },
    "intro": {
      "content": "Hey folks, when I run the admin portal on my express server, I&#x27;m getting some react errors when I get to the admin page. Any ideas where I should start for a fix?",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1080345190583250995/1080345190792962150/image.png",
          "name": "image.png",
          "id": "1080345190792962150",
          "size": 323262,
          "url": "https://cdn.discordapp.com/attachments/1080345190583250995/1080345190792962150/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1080345190583250995/1080345190792962150/image.png",
          "height": 759,
          "width": 669,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "201094837066399744",
      "authorName": "badjab326",
      "authorAvatar": "ba2d52761439e0f4254f4daa5bd91be7",
      "createdAtDate": 1677644765278
    },
    "messages": [
      {
        "content": "This is very likely due to reason number 3 from that error message. You probably have more than one copy of React. Do you have React installed as a dependency in your project? Or do you have Payload linked locally? These are two common causes.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677650493541
      },
      {
        "content": "Thanks a ton! Turns out there are multiple react dependencies in my project, so I added react to my overrides to fix it.<br><br><pre><code class=\"hljs\">&quot;overrides&quot;: {\n    &quot;graphql&quot;: &quot;15.8.0&quot;,\n    &quot;react&quot;: &quot;18.2.0&quot;\n  }</code></pre>",
        "fileAttachments": [],
        "authorID": "201094837066399744",
        "authorName": "badjab326",
        "authorAvatar": "ba2d52761439e0f4254f4daa5bd91be7",
        "createdAtDate": 1677719345453
      }
    ],
    "messageCount": 2,
    "slug": "react-console-errors"
  },
  {
    "info": {
      "name": "How do I upload in-memory files via the the local API?",
      "id": "1076195533598769182",
      "guildId": "967097582721572934",
      "createdAt": 1676655409956
    },
    "intro": {
      "content": "I want to upload a buffer via the local API. But I cannot find anything regarding that in the docs. can someone point me into the right direction?<br> <br> How do I upload in-memory files via the the local API?<br> <br> nevermind, found it in the docs!",
      "fileAttachments": [],
      "authorID": "814899246540914698",
      "authorName": "moritz",
      "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
      "createdAtDate": 1676655409956
    },
    "messages": [],
    "messageCount": 2,
    "slug": "how-do-i-upload-in-memory-files-via-the-the-local-api"
  },
  {
    "info": {
      "name": "defaultValue for a collection",
      "id": "1080683293323821186",
      "guildId": "967097582721572934",
      "createdAt": 1677725375253
    },
    "intro": {
      "content": "I&#x27;m trying to set a relationship field with a default value, but I don&#x27;t know what exactly I have to pass.<br><br><br><pre><code class=\"hljs\">// This is the field\n{\n      name: &#x27;format&#x27;,\n      type: &#x27;relationship&#x27;,\n      relationTo: &#x27;categories&#x27;,\n      label: &#x27;Formato&#x27;,\n      defaultValue: { category: &#x27;Artículo&#x27; }, // use the text field of the relationship.\n      admin: {\n        // readOnly: true,\n        position: &#x27;sidebar&#x27;,\n      },\n    },\n\n// Relationship\nfields: [\n    {\n      name: &#x27;collectionFor&#x27;,\n      type: &#x27;select&#x27;,\n      label: &#x27;Colección&#x27;,\n      required: true,\n      hasMany: true,\n      index: true,\n      options: [\n        {\n          label: &#x27;Actividades&#x27;,\n          value: &#x27;activities&#x27;,\n        },\n        {\n          label: &#x27;Convocatorias&#x27;,\n          value: &#x27;calls&#x27;,\n        },\n        {\n          label: &#x27;Comunidades&#x27;,\n          value: &#x27;communities&#x27;,\n        },\n        {\n          label: &#x27;Proyectos&#x27;,\n          value: &#x27;projects&#x27;,\n        },\n        {\n          label: &#x27;Blog&#x27;,\n          value: &#x27;blog&#x27;,\n        },\n        {\n          label: &#x27;Formato&#x27;,\n          value: &#x27;format&#x27;,\n        },\n      ],\n    },\n    {\n      name: &#x27;category&#x27;,\n      type: &#x27;text&#x27;,\n      label: &#x27;Categoría&#x27;,\n      required: true,\n      unique: true,\n      index: true,\n    },\n  ],</code></pre>",
      "fileAttachments": [],
      "authorID": "706208036439588934",
      "authorName": "akacronos",
      "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
      "createdAtDate": 1677725375253
    },
    "messages": [
      {
        "content": "It&#x27;s the id of the category:<br><code>defaultValue: &quot;abc123...&quot;</code><br>You will probably want to fetch a category each time that relationship is rendered and the value is empty. Then set the value. Maybe defaultValue takes an async function, would have to check the typing",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677742438397
      },
      {
        "content": "Hi, I&#x27;ve had to implement this myself and this is how I did it:<br><pre><code class=\"hljs javascript\">{\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;categories&#x27;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;relationship&#x27;</span>,\n      <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-string\">&#x27;categories&#x27;</span>,\n      <span class=\"hljs-attr\">hasMany</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-keyword\">async</span> () =&gt; {\n        <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">`/api/categories`</span>);\n        <span class=\"hljs-keyword\">const</span> { docs } = <span class=\"hljs-keyword\">await</span> response.<span class=\"hljs-title function_\">json</span>();\n        <span class=\"hljs-keyword\">const</span> categories = docs.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">category</span>) =&gt;</span> category.<span class=\"hljs-property\">id</span>);\n        <span class=\"hljs-keyword\">return</span> categories;\n      },\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "212928763103674368",
        "authorName": "ccz82",
        "authorAvatar": "bd61f5d9d9646617c3c061ad4afc7284",
        "createdAtDate": 1677752158169
      },
      {
        "content": "Thanks, I&#x27;m going to try this, I need to set a default and set to read only because thats the only category for that collection type.<br> <br> Thanks, this is how I did it: <br><pre><code class=\"hljs\">defaultValue: async () =&gt; {\n  const response = await fetch(`/api/categories?where[category][equals]=Artículo`);\n  const { docs } = await response.json();\n  const category = docs[0].id;\n\n  return category;\n},</code></pre>",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1677808909822
      }
    ],
    "messageCount": 4,
    "slug": "defaultvalue-for-a-collection"
  },
  {
    "info": {
      "name": "Switching between s3 and local media files",
      "id": "1076569813092155504",
      "guildId": "967097582721572934",
      "createdAt": 1676744645141
    },
    "intro": {
      "content": "hey 👋  I am currently using plugin-cloud-storage and searched for an answer in docs, issues and here, but can&#x27;t find a solution to switch on using local media files when I am working on my local machine. Did anyone solved this?",
      "fileAttachments": [],
      "authorID": "386056031102304256",
      "authorName": "dragos.nedelcu",
      "authorAvatar": "c3cb755639223adfcf37dddacb9b0d64",
      "createdAtDate": 1676744645141
    },
    "messages": [
      {
        "content": "The easiest way to do this would be to have an environment variables that is referenced inside your payload config, then conditionally use the plugin. Something similar can be seen here: <a href=\"https://github.com/payloadcms/plugin-cloud-storage/blob/master/dev/src/payload.config.ts\">https://github.com/payloadcms/plugin-cloud-storage/blob/master/dev/src/payload.config.ts</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677594592485
      },
      {
        "content": "tried that, unfortunately it doesn&#x27;t work 😦 ended up using minio to replicate s3 on my local machine. It works okay like that.",
        "fileAttachments": [],
        "authorID": "386056031102304256",
        "authorName": "dragos.nedelcu",
        "authorAvatar": "c3cb755639223adfcf37dddacb9b0d64",
        "createdAtDate": 1677595106434
      },
      {
        "content": "Interesting, I don&#x27;t see any reason why that wouldn&#x27;t work. Glad you were able to find a solution 👍",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677597291068
      },
      {
        "content": "We managed to have S3 on production and local files on dev simply with this; basically it’ll send an empty object on dev so the plugin doesn’t throw an error<br><br><pre><code class=\"hljs\">cloudStorage({\n    collections: process.env.NODE_ENV !== &#x27;development&#x27; &amp;&amp; {\n        media: {\n            adapter,\n        },\n    },\n}),</code></pre>",
        "fileAttachments": [],
        "authorID": "157199103921618944",
        "authorName": "Migu",
        "authorAvatar": "7c40c98d2393a326cea0da98f91966d2",
        "createdAtDate": 1677601815755
      },
      {
        "content": "yep<br> <br> @Migu that is the move",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677601902762
      }
    ],
    "messageCount": 6,
    "slug": "switching-between-s3-and-local-media-files"
  },
  {
    "info": {
      "name": "invalid email",
      "id": "1082933993009315920",
      "guildId": "967097582721572934",
      "createdAt": 1678261983874
    },
    "intro": {
      "content": "not sure what is the problem here. I can add the first one, but this error show up trying to create another",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1082933993009315920/1082933993181302794/Screenshot_from_2023-03-08_14-47-30.png",
          "name": "Screenshot_from_2023-03-08_14-47-30.png",
          "id": "1082933993181302794",
          "size": 21556,
          "url": "https://cdn.discordapp.com/attachments/1082933993009315920/1082933993181302794/Screenshot_from_2023-03-08_14-47-30.png",
          "proxyURL": "https://media.discordapp.net/attachments/1082933993009315920/1082933993181302794/Screenshot_from_2023-03-08_14-47-30.png",
          "height": 831,
          "width": 1644,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1082933993009315920/1082933993432952872/Screenshot_from_2023-03-08_14-52-33.png",
          "name": "Screenshot_from_2023-03-08_14-52-33.png",
          "id": "1082933993432952872",
          "size": 52195,
          "url": "https://cdn.discordapp.com/attachments/1082933993009315920/1082933993432952872/Screenshot_from_2023-03-08_14-52-33.png",
          "proxyURL": "https://media.discordapp.net/attachments/1082933993009315920/1082933993432952872/Screenshot_from_2023-03-08_14-52-33.png",
          "height": 693,
          "width": 457,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "845702067292078130",
      "authorName": "ativeretalbe",
      "authorAvatar": null,
      "createdAtDate": 1678261983874
    },
    "messages": [
      {
        "content": "it can happens to me sometimes, i just had to refresh the tab",
        "fileAttachments": [],
        "authorID": "309065921547468811",
        "authorName": "Britik",
        "authorAvatar": "44be353bc015debb8c4976cdb27fad99",
        "createdAtDate": 1678272662906
      },
      {
        "content": "same",
        "fileAttachments": [],
        "authorID": "281291275615862795",
        "authorName": "Bakry",
        "authorAvatar": "93df8929e9bae6f22ec31e6cda934835",
        "createdAtDate": 1678296627353
      },
      {
        "content": "@ativeretalbe  You likely created the collection with <code>auth: true</code> and then later changed it to false. <br> <br>TLDR; delete the email index from your collection in mongodb.<br><br>The reason this happens is bc <code>auth: true</code> adds the field <code>email</code> behind the scenes, this field is created with a unique index. Payload will not remove old indexes, you will have to do that manually.<br><br>The reason you can create 1 user, is because they have no email, then the second user creation is attempted with the same blank email, not unique and it fails. Delete the index on the email field in mongodb and it should resolve your issues.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678332632568
      }
    ],
    "messageCount": 3,
    "slug": "invalid-email"
  },
  {
    "info": {
      "name": "Conditional verification email",
      "id": "1080479762524422225",
      "guildId": "967097582721572934",
      "createdAt": 1677676849729
    },
    "intro": {
      "content": "Is there a way to conditionally send verification emails upon account creation? <br>I&#x27;m currently creating a plugin for Google Authentication and I&#x27;d like to not send verification emails if a user signs up with Google. As the default Email / Password auth is still active, verification emails should be send here.<br><br>Also, it looks like I can not create a new already verified account. It takes two steps: create an account and then update _verified: true.<br><br>As I can see I can only pass &#x27;true&#x27; or &#x27;generateEmailHTML&#x27; for ´´´verify´´´ option in a collection config.",
      "fileAttachments": [],
      "authorID": "1041438496285532170",
      "authorName": "TheFrontend",
      "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
      "createdAtDate": 1677676849729
    },
    "messages": [
      {
        "content": "@TheFrontend You cant alter the _verified prop once they auth with Google?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677677030452
      },
      {
        "content": "I can, but not before the email is sent.<br><br><pre><code class=\"hljs\"> const registered = await payload.create({\n          collection: &#x27;users&#x27;,\n          showHiddenFields: true,\n          data: {\n            email: user.email,\n            name: user?.name,\n            password: pw,\n            oauth: pw,\n            loginMethod: &#x27;google&#x27;,\n          },\n        })</code></pre><br>          <br>Now the email is sent, before I can update the _verified. I can login directly but the email is still sent.<br><br><pre><code class=\"hljs\">await payload.update({\n              id: registered.id,\n              collection: &#x27;users&#x27;,\n              data: {\n                  _verified: true,\n              },\n          });</code></pre>",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677677226044
      },
      {
        "content": "@TheFrontend Unless there is a better way..<br> <br> How about disabling email<br> <br> And then manually calling <pre><code class=\"hljs\">payload.sendEmail(message)</code></pre><br> <br> on creation of a user with the type you want",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677678935121
      },
      {
        "content": "We&#x27;ve done something similar in the past by using a <code>beforeOperation</code> hook that contains the conditional logic for setting <code>disableVerificationEmail</code>. Let me post a snippet<br> <br> This used a previous Payload version, but still should be good.<br><br><pre><code class=\"hljs\">import type { CollectionBeforeOperationHook } from &#x27;payload/types&#x27;;\n\nconst skipVerificationEmail: CollectionBeforeOperationHook = ({ args, operation }) =&gt; {\n  if (operation === &#x27;create&#x27; &amp;&amp; args.req.query &amp;&amp; typeof args.req.query.checkout !== &#x27;undefined&#x27;) {\n    return {\n      ...args,\n      disableVerificationEmail: true,\n    };\n  }\n\n  return args;\n};</code></pre><br> <br> Just change up the conditional. You <em>should</em> have access to the user off of req",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677680594648
      },
      {
        "content": "Works perfectly, thanks!",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677705108572
      }
    ],
    "messageCount": 10,
    "slug": "conditional-verification-email"
  },
  {
    "info": {
      "name": "Field tags?",
      "id": "1077252662237605949",
      "guildId": "967097582721572934",
      "createdAt": 1676907449064
    },
    "intro": {
      "content": "How could I tag a question?<br>At present, &quot;Question Set 05&quot; is my indication for Q5. It could show more information (in a collapsed view) about what that field contains. If this doesn&#x27;t exist, it would be a nice to have in the elipsis menu in the attached screenshot, or within the expanded field, that displays in the collapsed view.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1077252662237605949/1077252662917079131/Screenshot_2023-02-20_at_15.27.21.png",
          "name": "Screenshot_2023-02-20_at_15.27.21.png",
          "id": "1077252662917079131",
          "size": 17477,
          "url": "https://cdn.discordapp.com/attachments/1077252662237605949/1077252662917079131/Screenshot_2023-02-20_at_15.27.21.png",
          "proxyURL": "https://media.discordapp.net/attachments/1077252662237605949/1077252662917079131/Screenshot_2023-02-20_at_15.27.21.png",
          "height": 230,
          "width": 569,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "536888652257558538",
      "authorName": "remy",
      "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
      "createdAtDate": 1676907449064
    },
    "messages": [
      {
        "content": "If you are looking to customize the row label (&quot;Question Set 05&quot;) you can pass a React component to <code>arrayField.admin.components.RowLabel</code>. That way you can show information contained in the array item instead of the generated label. See documentation here: <a href=\"https://payloadcms.com/docs/fields/array#admin-config\">https://payloadcms.com/docs/fields/array#admin-config</a>",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1676912359374
      },
      {
        "content": "Awesome, thanks Jesse!",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676912437271
      }
    ],
    "messageCount": 2,
    "slug": "field-tags"
  },
  {
    "info": {
      "name": "Images showing as strings and not the image information",
      "id": "1077087054187483156",
      "guildId": "967097582721572934",
      "createdAt": 1676867965028
    },
    "intro": {
      "content": "Hi all<br>I have a block that returns some items and one of which is an image. <br>I can&#x27;t however get the actual image to return, it just returns me the image id. Is there any way to get the actual image to be returned with all the data?<br><br>I can see the image data in the API URL so I believe it is probably related to the image being of type <code>string | Media</code> ?<br>Do I need to query the images separately?<br> <br> I&#x27;m also using the REST API by the way.<br> <br> Ahh figured out the issue, I didn&#x27;t have the right access set on the Media collection!<br><pre><code class=\"hljs\">access: {\n  read: () =&gt; true\n}</code></pre>",
      "fileAttachments": [],
      "authorID": "178109250806087680",
      "authorName": "MRL",
      "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
      "createdAtDate": 1676867965028
    },
    "messages": [
      {
        "content": "You need to set/increase the <code>depth</code> parameter in your request. Payload doesn&#x27;t populate nested document by default and only gives you the <code>id</code> of it.<br><a href=\"https://payloadcms.com/docs/getting-started/concepts#depth\">https://payloadcms.com/docs/getting-started/concepts#depth</a><br> <br> Well you were too fast 😀",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1676877414115
      },
      {
        "content": "Ah haha sorry mate, we were right on the same submit time. Thanks for your reply though. I was checking the depth but could see I was getting the data back in the API. I just couldn’t access it. Then when querying the media by itself, I realised that it wasn’t working which is when I tested the access.",
        "fileAttachments": [],
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676913242307
      }
    ],
    "messageCount": 5,
    "slug": "images-showing-as-strings-and-not-the-image-information"
  },
  {
    "info": {
      "name": "Webpack error when updating document in collection with payload.update",
      "id": "1075501371039682663",
      "guildId": "967097582721572934",
      "createdAt": 1676489908705
    },
    "intro": {
      "content": "I am trying to to update a field in my collection with the following code;<br><br><pre><code class=\"hljs\"> await payload.update({\n        collection: &#x27;clients&#x27;,\n        id,\n        data: {\n            status: &#x27;meetingInviteSent&#x27;\n        },\n        depth: 2,\n    });</code></pre><br><br>However this gives me the following error in the console;<br><br><pre><code class=\"hljs\">TypeError: payload__WEBPACK_IMPORTED_MODULE_2__.default.update</code></pre><br><br>The collection doesn&#x27;t update however the toast still displays saying that the collection updated successfully.<br><br>I created this document using the JSON API from my Next.js app;<br><br><pre><code class=\"hljs\">        var result = await fetch(`${process.env.NEXT_PUBLIC_CMS_URL}/api/clients`, { \n          method: &#x27;POST&#x27;,\n          headers: {\n            &#x27;Content-Type&#x27;: &#x27;application/json&#x27;\n          },\n          body: JSON.stringify({\n            clientInformation: {\n              name: `${firstName} ${lastName}`,\n              email,\n              company \n            },\n            name: `${firstName} ${lastName}`,\n            email,\n            company,\n            lastContacted: new Date(),\n            services: services.join(&#x27;, &#x27;),\n            message\n          })});</code></pre><br><br>This adds the document to Payload. But updating it using the local API fails",
      "fileAttachments": [],
      "authorID": "191776538205618177",
      "authorName": "Mark | Omniux",
      "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
      "createdAtDate": 1676489908705
    },
    "messages": [
      {
        "content": "@Mark | Omniux do you have update access defined on your clients collection?",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676915555928
      },
      {
        "content": "Hey @jesschow, I do, yeah, I have it set using a Permissions check, I can try it without. I did use a workaround for the time being and did an update using the useFormFields hook, but it is quite a tenuous solution i&#x27;ll be honest haha<br> <br> I should probably mention I am using a custom UI field with a custom button that calls payload.update",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676915785759
      },
      {
        "content": "@Mark | Omniux glad you found a workaround 💥  still curious what is causing this, do you get the same typeError if you explicitly set the type? i.e. <br><pre><code class=\"hljs\">data: {\n  status: &#x27;meetingInviteSent&#x27; \n} as any, </code></pre>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676916688225
      },
      {
        "content": "Afraid that&#x27;s not working either. console logging the &#x27;payload&#x27; object is returning an empty object, so the update function doesn&#x27;t exist. I am possibly misunderstanding how payload.update is meant to function. I am trying to use it inside of a custom React component that is being displayed via a UI field<br> <br> I&#x27;m doing <code>import payload from payload</code> and using it like this;<br><br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\nimport { useForm, useFormFields } from &#x27;payload/components/forms&#x27;;\nimport { Data } from &#x27;payload/dist/admin/components/forms/Form/types&#x27;;\nimport React, { useEffect, useState } from &#x27;react&#x27;\n\nexport const ClientInfo = () =&gt; {\n    const [prevState, setPrevState] = useState&lt;Data | null&gt;(null)\n    const { getData, submit } = useForm();\n    const { email, name, company, services, id } = getData();\n    const [status, setStatus]: [string, (value: string) =&gt; void] = useFormFields(([fields, dispatch]) =&gt; [\n        fields.status.value as string, (value: string) =&gt; dispatch({ type: &#x27;UPDATE&#x27;, path: &#x27;status&#x27;, value: value })\n    ]);\n\n    const dropClient = () =&gt; {\n        setStatus(&#x27;lost&#x27;);\n    }\n\n    const onboardClient = async () =&gt; {\n        //setStatus(&#x27;meetingInviteSent&#x27;);\n        await payload.update({\n            collection: &#x27;clients&#x27;,\n            id,\n            data: {\n                status: &#x27;meetingInviteSent&#x27;\n            } as any,\n            depth: 2,\n        });\n    }\n\n    return (&lt;div&gt; ... &lt;button type=&#x27;button&#x27; onClick={async () =&gt; await onboardClient()}&gt;Onboard Client&lt;/button&gt; &lt;/div&gt;)\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676922968959
      },
      {
        "content": "Payload is a Node-only class, and it can&#x27;t be run in the browser<br> <br> you need to make fetches to your API within the admin panel code",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676923384271
      },
      {
        "content": "gotcha, I was starting to figure that out as I was pasting my code snippets 😄  Would it maybe be possible to fetch this payload instance and hold it in a provider? Not so much for my use case but for future use cases? Having a usePayload hook could be really useful for a situation like this",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676924048169
      },
      {
        "content": "nope can&#x27;t do that, because you can&#x27;t serialize functions / methods as JSON<br> <br> BUT what we could do is &quot;mock&quot; payload as a hook so that it ships all the same methods, similar API, but written for browser instead<br> <br> this is something that we have on our radar",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676924304979
      },
      {
        "content": "Yup totally makes sense. My brain definently stopped working with this one haha. Thanks!",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676934203528
      }
    ],
    "messageCount": 13,
    "slug": "webpack-error-when-updating-document-in-collection-with-payloadupdate"
  },
  {
    "info": {
      "name": "Email configuration error setting up smtp",
      "id": "1077963232838426714",
      "guildId": "967097582721572934",
      "createdAt": 1677076862297
    },
    "intro": {
      "content": "Getting the following error setting up smtp:<br><pre><code class=\"hljs\">ERROR (payload): There is an error with the email configuration you have provided. Error: 140223476000704:error:1408F10B:SSL routines:ssl3_get_record:wrong version number:../deps/openssl/openssl/ssl/record/ssl3_record.c:332:</code></pre><br><br>Not sure where to start solving this.",
      "fileAttachments": [],
      "authorID": "1063867100231389324",
      "authorName": "alexdev",
      "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
      "createdAtDate": 1677076862297
    },
    "messages": [
      {
        "content": "@alexdev <a href=\"https://stackoverflow.com/questions/50840101/curl-35-error1408f10bssl-routinesssl3-get-recordwrong-version-number\">https://stackoverflow.com/questions/50840101/curl-35-error1408f10bssl-routinesssl3-get-recordwrong-version-number</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677161224717
      },
      {
        "content": "Cheers 😄 I think it was an Apache issue in the end, was posting for my coworker",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1677161737853
      }
    ],
    "messageCount": 2,
    "slug": "email-configuration-error-setting-up-smtp"
  },
  {
    "info": {
      "name": "plugin-form-builder implementation",
      "id": "1075986888076300371",
      "guildId": "967097582721572934",
      "createdAt": 1676605664987
    },
    "intro": {
      "content": "I&#x27;m trying the plugin and have some questions:<br>1. I set up the plugin but a can&#x27;t create form submissions from the admin, for some reason the form select is disabled. Should I be able to create submissions from the admin? <br>2. Does someone has a simpler demo for the front form? I don&#x27;t understand how should I send the data for the submission post.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1075986888076300371/1075987014157082685/Screenshot_2023-02-16_at_9.48.04_p.m..png",
          "name": "Screenshot_2023-02-16_at_9.48.04_p.m..png",
          "id": "1075987014157082685",
          "size": 30557,
          "url": "https://cdn.discordapp.com/attachments/1075986888076300371/1075987014157082685/Screenshot_2023-02-16_at_9.48.04_p.m..png",
          "proxyURL": "https://media.discordapp.net/attachments/1075986888076300371/1075987014157082685/Screenshot_2023-02-16_at_9.48.04_p.m..png",
          "height": 465,
          "width": 946,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "706208036439588934",
      "authorName": "akacronos",
      "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
      "createdAtDate": 1676605664987
    },
    "messages": [
      {
        "content": "Have you looked at how we submit forms on the payload website? It might be handy to compare! <a href=\"https://github.com/payloadcms/website/blob/main/src/components/CMSForm/index.tsx\">https://github.com/payloadcms/website/blob/main/src/components/CMSForm/index.tsx</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676641084096
      },
      {
        "content": "@akacronos form submissions are meant to be created via Payload APIs (like a website, for instance). This is because form submissions made by content editors doesn&#x27;t provide much value—you want real data from real users. We have example repos to demonstrate this <a href=\"https://github.com/payloadcms/form-builder-example-cms\">https://github.com/payloadcms/form-builder-example-cms</a> <a href=\"https://github.com/payloadcms/form-builder-example-website\">https://github.com/payloadcms/form-builder-example-website</a>. Both of these will soon be moved directly into our Payload repo in the <code>/examples</code> folder so heads up for future readers.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676642758423
      },
      {
        "content": "thanks, I think this example is easier to understand, I was struggling with the payload website implementation.",
        "fileAttachments": [],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676668759993
      }
    ],
    "messageCount": 3,
    "slug": "plugin-form-builder-implementation"
  },
  {
    "info": {
      "name": "How to create first admin user?",
      "id": "1083145885929705483",
      "guildId": "967097582721572934",
      "createdAt": 1678312503083
    },
    "intro": {
      "content": "Hi - I&#x27;m following the documentation, have done npx create-payload-app and setup mongo etc. I can run the app at <a href=\"http://localhost:3000/admin\">http://localhost:3000/admin</a> <br><br>The documentation says &quot;After it starts, you can go to <a href=\"http://localhost:3000/admin\">http://localhost:3000/admin</a> to create your first Payload user&quot;...... how do I create the first user? I get a logon screen which wants a user and password and a forgot password option. Do I need to configure email to get a new password sent to me?",
      "fileAttachments": [],
      "authorID": "973872398787047444",
      "authorName": "MarcusR",
      "authorAvatar": "6c54437b20ff8c50872b746ee657a2d3",
      "createdAtDate": 1678312503083
    },
    "messages": [
      {
        "content": "my experience is you just create the first user when you first hit that link. not sure why you wouldn&#x27;t get a user creation form",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1678312617827
      },
      {
        "content": "Same here. If you are just starting, I&#x27;m not sure why you&#x27;d have to but you could try clearing out your Mongo instance and it should ask you to create your first user",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678312669341
      },
      {
        "content": "Thanks for quick responses - issue with my Mongo connection string 🤦‍♂️. No error through which confused me!",
        "fileAttachments": [],
        "authorID": "973872398787047444",
        "authorName": "MarcusR",
        "authorAvatar": "6c54437b20ff8c50872b746ee657a2d3",
        "createdAtDate": 1678313419294
      }
    ],
    "messageCount": 3,
    "slug": "how-to-create-first-admin-user"
  },
  {
    "info": {
      "name": "Update document field while its creating (afterChange hook, \"create\" operation)",
      "id": "1075912550430027847",
      "guildId": "967097582721572934",
      "createdAt": 1676587941511
    },
    "intro": {
      "content": "I need to update field in afterChange hook in &quot;create&quot; operation.<br>There is 2 documents, 1 relates to another, like this.<br><pre><code class=\"hljs\">const Tyres: CollectionConfig = {\nfields: [\n {\n      name: &quot;tyreSize&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &#x27;tyreSizes&#x27;,\n      hasMany: false,\n    },\n]\n}</code></pre><br><br>And i wanted when im creating a new <em>tyre</em> document to checks whether there is alredy created *tyreSize * with those same parameters (so why u&#x27;ve used afterChange &quot;create&quot; operation). If same *tyreSize * is created before then i should link it via <em>tyreSize.id</em> to tyre itself, but how can i do it? because im tried<br><br><pre><code class=\"hljs\">const previouslyCreatedSize = await payload.find({\n            collection: tyreSizesCollection,\n            where: {\n              width: { equals: 100 },\n              height: { equals: 50 },\n              diskDiameter: { equals: 25 },\n            },\n          });\nif(its created){\n args.doc.tyreSize = previouslyCreatedSize.docs[0].id;\n}\nelse.....</code></pre><br><br>It find correct <em>tyreSize</em> but wont link it to tyre. I&#x27;ve tried to <br><br><pre><code class=\"hljs\">payload.update(\ncurrent tyre with new data\n)</code></pre><br>but its crashing the server. <br>So is there any possibility to update my <em>tyre</em> with previously created <em>tyreSize</em> while creating it?<br> <br> Update document field while its creating (afterChange hook, &quot;create&quot; operation)",
      "fileAttachments": [],
      "authorID": "215833081158959105",
      "authorName": "Daniq",
      "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
      "createdAtDate": 1676587941511
    },
    "messages": [
      {
        "content": "On the tyreSize collection you could make a text field that has <code>unique: true</code>. Then with a beforeValidate hook (on operation === create) you can use the submitted data to generate the value for your unique field.<br><br>That will solve the &quot;no duplication&quot; issue, but that will not solve the auto-selection you are looking for.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676641718746
      },
      {
        "content": "Thank you for answering, im was close after a few more hours trying. For me it will fix the problem and no <em>tyreSize</em> will be created if there is already <em>tyreSize</em> with same parameters.",
        "fileAttachments": [],
        "authorID": "215833081158959105",
        "authorName": "Daniq",
        "authorAvatar": "f25eb1ea60f9c5b561fe3bc6ab380049",
        "createdAtDate": 1676665187285
      }
    ],
    "messageCount": 3,
    "slug": "update-document-field-while-its-creating-afterchange-hook-create-operation"
  },
  {
    "info": {
      "name": "How to add an automatic slug base on the title for a collection content?",
      "id": "1062672401462214676",
      "guildId": "967097582721572934",
      "createdAt": 1673431244007
    },
    "intro": {
      "content": "For example I have News Collection and it has a content with the title &quot;Content Sample&quot;.<br><br>Is it possible to have a automatic slug from its api that has a value &quot;content-sample&quot;?",
      "fileAttachments": [],
      "authorID": "950202910095081473",
      "authorName": "johnmadrigal_",
      "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
      "createdAtDate": 1673431244007
    },
    "messages": [
      {
        "content": "Absolutely - you could achieve this with a field hook and a function to format your title to a slug. <br><br>For example: <br><pre><code class=\"hljs\">{\n  name: &#x27;slug&#x27;,\n  type: &#x27;text&#x27;,\n  hooks: {\n    beforeValidate: [\n      formatSlug(&#x27;title&#x27;),\n    ],\n  },\n}</code></pre><br><br><pre><code class=\"hljs\">const formatSlug = (): FieldHook =&gt; ({ value }) =&gt; {\n  const slugify = (val: string): string =&gt; val.replace(/ /g, &#x27;-&#x27;).replace(/[^\\w-]+/g, &#x27;&#x27;).toLowerCase();\n\n  if (typeof value === &#x27;string&#x27;) {\n    return slugify(value);\n  }\n};</code></pre>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673433146277
      },
      {
        "content": "I just tried this, thanks!<br>but i&#x27;m getting <code>Expected 0 arguments, but got 1</code> on formatSlug(&#x27;title&#x27;). Is the type declaration for formatSlug correct?",
        "fileAttachments": [],
        "authorID": "329095202335621122",
        "authorName": "Adroit",
        "authorAvatar": "2607692e6209351e45ed31e0756a2231",
        "createdAtDate": 1678600174699
      },
      {
        "content": "Ah looking at it now the <code>formatSlug</code> function is incomplete, that part will slugify any value you manually type in but to automatically populate it with another field we need to add more:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> formatSlug = (<span class=\"hljs-attr\">fallback</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-function\"><span class=\"hljs-params\">FieldHook</span> =&gt;</span> <span class=\"hljs-function\">(<span class=\"hljs-params\">{ operation, data, originalDoc, value }</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> slugify = (<span class=\"hljs-attr\">val</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-function\"><span class=\"hljs-params\">string</span> =&gt;</span> val.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/ /g</span>, <span class=\"hljs-string\">&#x27;-&#x27;</span>).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/[^\\w-]+/g</span>, <span class=\"hljs-string\">&#x27;&#x27;</span>).<span class=\"hljs-title function_\">toLowerCase</span>();\n\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> value === <span class=\"hljs-string\">&#x27;string&#x27;</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">slugify</span>(value);\n  }\n\n  <span class=\"hljs-keyword\">if</span> (operation === <span class=\"hljs-string\">&#x27;create&#x27;</span>) {\n    <span class=\"hljs-keyword\">const</span> fallbackData = data?.[fallback] || originalDoc?.[fallback];\n\n    <span class=\"hljs-keyword\">if</span> (fallbackData &amp;&amp; <span class=\"hljs-keyword\">typeof</span> fallbackData === <span class=\"hljs-string\">&#x27;string&#x27;</span>) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">slugify</span>(fallbackData);\n    }\n  }\n};</code></pre><br><br>That will use the field you pass through but also allow you to manually enter a value (see screen recording) also this will take care of your error.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1062672401462214676/1084612008395157504/Screen_Recording_2023-03-12_at_10.58.25_PM.mov",
            "name": "Screen_Recording_2023-03-12_at_10.58.25_PM.mov",
            "id": "1084612008395157504",
            "size": 538000,
            "url": "https://cdn.discordapp.com/attachments/1062672401462214676/1084612008395157504/Screen_Recording_2023-03-12_at_10.58.25_PM.mov",
            "proxyURL": "https://media.discordapp.net/attachments/1062672401462214676/1084612008395157504/Screen_Recording_2023-03-12_at_10.58.25_PM.mov",
            "height": 1198,
            "width": 2820,
            "contentType": "video/quicktime",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678662053978
      }
    ],
    "messageCount": 3,
    "slug": "how-to-add-an-automatic-slug-base-on-the-title-for-a-collection-content"
  },
  {
    "info": {
      "name": "How is gonna Payload work out for me vs. Sanity?",
      "id": "1075567629491773550",
      "guildId": "967097582721572934",
      "createdAt": 1676505705951
    },
    "intro": {
      "content": "Hi, I made a website in Next.js using Sanity as headless CMS. In Sanity, I made reusable components, that client can choose and change content on page that way. Sometimes, I nested components a lot. Meaning I had container nested into container, and the container also had some components inside of it. It was working, I would say kinda nicely, however, because Sanity is not self hosted and you can&#x27;t populate references easily, I had to run a JavaScript function, that would walk through object from CMS and find references and then populate them with another query (another 50 API calls, each reference 1 API call). This would invocate a huge number of API calls, and I&#x27;m currently almost hitting the limit. Sanity has lowest limit from all cloudhosted CMS I believe.<br><br>Now, I suppose that Payload, is or has:<br>1. Gonna work with 5 level nesting of blocks just fine in terms of UI<br>2. An option to invoke a query that would populate references even 5 levels deep easily<br><br>Am I right? Thanks<br><br>---<br>I&#x27;m choosing  a good CMS candidate and I have trouble with really choosing the right one. Because Strapi in my opinion sucks in terms of nesting (can&#x27;t nest an array of components into component). And most of the CMS don&#x27;t suit me too.",
      "fileAttachments": [],
      "authorID": "217360281309806593",
      "authorName": "Marťafiixek",
      "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
      "createdAtDate": 1676505705951
    },
    "messages": [
      {
        "content": "Hey @Marťafiixek , welcome! You are correct, Payload can handle the level of nesting you describe.<br><br>We did some performance testing related to this a while ago that you can look over.<br><br><a href=\"https://payloadcms.com/blog/performance-benchmarks\">https://payloadcms.com/blog/performance-benchmarks</a><br><a href=\"https://github.com/payloadcms/speed-test\">https://github.com/payloadcms/speed-test</a><br> <br> Though Sanity is not listed in there, from what you describe, we would be infinitely faster.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676506164448
      },
      {
        "content": "In Sanity it wasn&#x27;t about speed though, more like about the API limits when static building the app or doing incremental static generation. Thanks for the article. One question also, I saw in the demo, that there&#x27;s a columns block, which can contain one or more column. Each column has a width. Is there an option to write validation on the columns block, that does a sum of the each column width, and checks if the value is equal to 1? Thanks",
        "fileAttachments": [],
        "authorID": "217360281309806593",
        "authorName": "Marťafiixek",
        "authorAvatar": "54ec644d7bdf2aff2a45080a6834e80f",
        "createdAtDate": 1676508449907
      },
      {
        "content": "The big draw foe me was being in control of where my content and data is stored and not being beholden to the cms company for storage",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676532666702
      }
    ],
    "messageCount": 4,
    "slug": "how-is-gonna-payload-work-out-for-me-vs-sanity"
  },
  {
    "info": {
      "name": "Why forgot password email url doesn't have the root url?",
      "id": "1084414779348754442",
      "guildId": "967097582721572934",
      "createdAt": 1678615030849
    },
    "intro": {
      "content": "",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1084414779348754442/1084414779499745290/Screenshot_2023-03-12_at_4.26.23_PM.png",
          "name": "Screenshot_2023-03-12_at_4.26.23_PM.png",
          "id": "1084414779499745290",
          "size": 43423,
          "url": "https://cdn.discordapp.com/attachments/1084414779348754442/1084414779499745290/Screenshot_2023-03-12_at_4.26.23_PM.png",
          "proxyURL": "https://media.discordapp.net/attachments/1084414779348754442/1084414779499745290/Screenshot_2023-03-12_at_4.26.23_PM.png",
          "height": 224,
          "width": 1553,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "950202910095081473",
      "authorName": "johnmadrigal_",
      "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
      "createdAtDate": 1678615030849
    },
    "messages": [
      {
        "content": "you need to assign serverURL on your paylod config <a href=\"https://payloadcms.com/docs/configuration/overview#options\">https://payloadcms.com/docs/configuration/overview#options</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678623230001
      }
    ],
    "messageCount": 1,
    "slug": "why-forgot-password-email-url-doesnt-have-the-root-url"
  },
  {
    "info": {
      "name": "Recommended platforms to deploy a Payload app",
      "id": "1084878463166582846",
      "guildId": "967097582721572934",
      "createdAt": 1678725581686
    },
    "intro": {
      "content": "What platforms do you recommend me to deploy a Payload and NextJS app based on the <code>nextjs-custom-server</code> template from this repo: <a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a> ?<br><br>I tried Vercel but I don&#x27;t know why everything related to Payload is not working...",
      "fileAttachments": [],
      "authorID": "258416232506589186",
      "authorName": "Juan Sebastián Mendoza",
      "authorAvatar": "78fac381d403a54a57fd2a062c07e19a",
      "createdAtDate": 1678725581686
    },
    "messages": [
      {
        "content": "Hey Juan - our team and a number of our community members use Digital Ocean to host Payload, and then Vercel for the frontend, but there are a number of different combinations you could use. It&#x27;s whatever works best for your specific situation.<br> <br> If you look through the threads there are quite a few discussions about this as well",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1678729792300
      },
      {
        "content": "I see but one thing that still confuses me is, in my case I have both my frontend code and my server code in the same repo. How do I deploy only the server code on Digital Ocean? should I just target the repo and Digital Ocean will do the magic? 👀",
        "fileAttachments": [],
        "authorID": "258416232506589186",
        "authorName": "Juan Sebastián Mendoza",
        "authorAvatar": "78fac381d403a54a57fd2a062c07e19a",
        "createdAtDate": 1678736272239
      },
      {
        "content": "@Juan Sebastián Mendoza What you are experiencing is to be expected. That example uses a custom server (the server.ts file) to boot up Next, when you use a custom server with Next you cannot deploy on Vercel. <br><br>That being said, we normally split the two out, backend (Payload) and frontend (Next) and deploy the backend to Digital Ocean or similar - and then the frontend to Vercel or similar. This workflow works really well.<br><br>Maybe we should call this out explicitly in the Readme of this repo to avoid confusion down the road. <br><br>Splitting your frontend and backend should be fairly easy to do, lmk if you have questions!",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678741294739
      },
      {
        "content": "I got it now. And calling this out in the Readme would definitely be very helpful for beginners. And a quick YouTube tutorial showing all this procedure would be much appreciated as well, just in case :D",
        "fileAttachments": [],
        "authorID": "258416232506589186",
        "authorName": "Juan Sebastián Mendoza",
        "authorAvatar": "78fac381d403a54a57fd2a062c07e19a",
        "createdAtDate": 1678744504611
      },
      {
        "content": "+1 for more beginner tutorials.",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678803692290
      },
      {
        "content": "Alternatively, @Alessio 🍣 recently made a very nice video tutorial for hosting Payload on Northflank and Railway (I use Railway and it&#x27;s fantastic; you can provision a Mongo instance right beside it and it automatically adds all the Mongo env vars -- great for a development environment or smaller projects).<br><br><a href=\"https://discord.com/channels/967097582721572934/967105150068092968/1082037639395422351\">https://discord.com/channels/967097582721572934/967105150068092968/1082037639395422351</a><br><br>But yes, I&#x27;d recommend either Netlify or Vercel to host the frontend, whatever it may be.",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678808090204
      },
      {
        "content": "@Juan Sebastián Mendoza I would split the project into backend and frontend. Makes its much easier to deploy. Then you can deploy the front end on Vercel as @Jarrod suggested. I have deployed a couple of backend projects to a AWS Lightsail instances running Plesk through a bitbucket pipeline using rsync. Bit of a process to set up, but once done deploying updates to staging/production is as easy committing to staging/production branch",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1678855896759
      }
    ],
    "messageCount": 8,
    "slug": "recommended-platforms-to-deploy-a-payload-app"
  },
  {
    "info": {
      "name": "Versions page doesn't show and errors",
      "id": "1080935323250475080",
      "guildId": "967097582721572934",
      "createdAt": 1677785463870
    },
    "intro": {
      "content": "I just tried to create a collection with versions and drafts enabled. While drafts seem to work perfectly fine and the edit page tells me that versions are being saved, I get an error when I try to navigate to the versions page of that collection which prevents the entire page from showing.<br><br>This is the error:<br><pre><code class=\"hljs\">Uncaught TypeError: Cannot read properties of undefined (reading &#x27;filter&#x27;)\n    at Table (index.js:13:1)\n    at renderWithHooks (react-dom.development.js:16305:1)\n    at mountIndeterminateComponent (react-dom.development.js:20074:1)\n    at beginWork (react-dom.development.js:21587:1)\n    at HTMLUnknownElement.callCallback (react-dom.development.js:4164:1)\n    at Object.invokeGuardedCallbackDev (react-dom.development.js:4213:1)\n    at invokeGuardedCallback (react-dom.development.js:4277:1)\n    at beginWork$1 (react-dom.development.js:27451:1)\n    at performUnitOfWork (react-dom.development.js:26560:1)\n    at workLoopSync (react-dom.development.js:26466:1)</code></pre><br><br>Any help with this would be much appreciated. If you need any more information, please do not hesitate to reach out :) <br><br>PS: Absolutely love Payload, the idea and the people behind it! I&#x27;m trying Payload out in a couple of different settings at the moment and getting versions to work would be a major plus :)",
      "fileAttachments": [],
      "authorID": "252520518945603585",
      "authorName": "MichaelBOOM",
      "authorAvatar": "c332a63449b4311dc59675b9bd6a45d1",
      "createdAtDate": 1677785463870
    },
    "messages": [
      {
        "content": "I have heard this from a couple folks yesterday/today, I will spin some up today and see if I can recreate.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677851348824
      },
      {
        "content": "Great, thank you. If you need anything from me, just let me know :)",
        "fileAttachments": [],
        "authorID": "252520518945603585",
        "authorName": "MichaelBOOM",
        "authorAvatar": "c332a63449b4311dc59675b9bd6a45d1",
        "createdAtDate": 1677883680837
      },
      {
        "content": "Same for me - couldn&#x27;t find the +1",
        "fileAttachments": [],
        "authorID": "963584523218595841",
        "authorName": "user2249",
        "authorAvatar": null,
        "createdAtDate": 1677885875809
      },
      {
        "content": "@MichaelBOOM @user2249 this was fixed with <a href=\"https://github.com/payloadcms/payload/pull/2235\">https://github.com/payloadcms/payload/pull/2235</a> and will go out in the next release!",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677893678832
      },
      {
        "content": "Awesome - TY!",
        "fileAttachments": [],
        "authorID": "963584523218595841",
        "authorName": "user2249",
        "authorAvatar": null,
        "createdAtDate": 1677894638515
      },
      {
        "content": "Great, thanks for the quick help!",
        "fileAttachments": [],
        "authorID": "252520518945603585",
        "authorName": "MichaelBOOM",
        "authorAvatar": "c332a63449b4311dc59675b9bd6a45d1",
        "createdAtDate": 1677926542880
      }
    ],
    "messageCount": 6,
    "slug": "versions-page-doesnt-show-and-errors"
  },
  {
    "info": {
      "name": "Connecting Payload to NextJS frontend using the GraphQL query generator based on Schema",
      "id": "1080864568869400596",
      "guildId": "967097582721572934",
      "createdAt": 1677768594711
    },
    "intro": {
      "content": "My project is based on the PayloadCMS site and Server <br>These 2 repos<br>- <a href=\"https://github.com/payloadcms/website\">https://github.com/payloadcms/website</a><br>- <a href=\"https://github.com/payloadcms/website-cms\">https://github.com/payloadcms/website-cms</a><br><br><br>I need to generate the frontend GraphQL queries from the Schema generated in the backend as I haven’t been able to get my queries to work. @noheadphones  do let me know if you can help. I haven’t added any new packages other than graphql-codegen and everything is running versions as per package.json",
      "fileAttachments": [],
      "authorID": "149873958760480769",
      "authorName": "roac",
      "authorAvatar": null,
      "createdAtDate": 1677768594711
    },
    "messages": [
      {
        "content": "I&#x27;ll try to see if I can help...<br><br>my package.json deps:<br><pre><code class=\"hljs\">@tanstack/react-query\ngraphql\ngraphql-request</code></pre><br><br>dev deps:<br><pre><code class=\"hljs\">typescript\n@graphql-codegen/cli\n@graphql-codegen/client-preset\n@graphql-codegen/introspection\n@graphql-codegen/typescript-react-query</code></pre><br><br>in the root dir i have a codegen.ts file with<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-keyword\">type</span> { <span class=\"hljs-title class_\">CodegenConfig</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@graphql-codegen/cli&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">config</span>: <span class=\"hljs-title class_\">CodegenConfig</span> = {\n  <span class=\"hljs-attr\">overwrite</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">schema</span>: <span class=\"hljs-string\">&#x27;&lt;api url with `/api/graph` ending&gt;&#x27;</span>,\n  <span class=\"hljs-attr\">documents</span>: <span class=\"hljs-string\">&#x27;graphql/**/*.graphql&#x27;</span>,\n  <span class=\"hljs-attr\">generates</span>: {\n    <span class=\"hljs-string\">&#x27;graphql/generated/client.ts&#x27;</span>: {\n      <span class=\"hljs-attr\">plugins</span>: [<span class=\"hljs-string\">&#x27;typescript&#x27;</span>, <span class=\"hljs-string\">&#x27;typescript-operations&#x27;</span>, <span class=\"hljs-string\">&#x27;typescript-react-query&#x27;</span>],\n      <span class=\"hljs-attr\">config</span>: {\n        <span class=\"hljs-attr\">exposeQueryKeys</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">exposeFetcher</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">withHooks</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">dedupeFragments</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">fetcher</span>: {\n          <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&#x27;&lt;api url with `/api/graph` ending&gt;&#x27;</span>,\n          <span class=\"hljs-attr\">fetchParams</span>: {\n            <span class=\"hljs-attr\">headers</span>: {\n              <span class=\"hljs-string\">&#x27;content-type&#x27;</span>: <span class=\"hljs-string\">&#x27;application/json&#x27;</span>,\n            },\n          },\n        },\n      },\n    },\n  },\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> config</code></pre><br><br>package.json has this script as well<br><pre><code class=\"hljs\">&quot;gen:graphql&quot;: &quot;graphql-codegen --config codegen.ts&quot;</code></pre><br> <br> then i have a graphql folder, inside it theres a generated folder (empty initially)<br>then a queries folder where i put my queries in files <code>.graphql</code>...eg:<br><pre><code class=\"hljs graphql\"><span class=\"hljs-keyword\">query</span> GetGlobal <span class=\"hljs-punctuation\">{</span>\n  Global <span class=\"hljs-punctuation\">{</span>\n    title\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span></code></pre><br>a named query and inside a valid query to my API<br> <br> i have a query client ts file<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">QueryClient</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@tanstack/react-query&#x27;</span>\n\n<span class=\"hljs-keyword\">const</span> queryClient = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">QueryClient</span>()\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> queryClient</code></pre><br> <br> i then import that <code>queryClient</code> in _app.tsx and wrap my page components with it<br><br><pre><code class=\"hljs tsx\"><span class=\"hljs-keyword\">import</span> queryClient <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@utilities/queryClient&#x27;</span>\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">QueryClientProvider</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@tanstack/react-query&#x27;</span>\n\n<span class=\"hljs-comment\">//..</span>\n&lt;<span class=\"hljs-title class_\">QueryClientProvider</span> client={queryClient}&gt;\n<span class=\"hljs-comment\">//... add your children here, eg. the default &lt;Component </span>\n&lt;/<span class=\"hljs-title class_\">QueryClientProvider</span>&gt;</code></pre><br> <br> lastly just run <code>yarn gen:graphql</code> and if you have a query you should get a successful output<br> <br> ",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1677772237391
      }
    ],
    "messageCount": 6,
    "slug": "connecting-payload-to-nextjs-frontend-using-the-graphql-query-generator-based-on-schema"
  },
  {
    "info": {
      "name": "Third-party translation automation",
      "id": "1085026266450772120",
      "guildId": "967097582721572934",
      "createdAt": 1678760820735
    },
    "intro": {
      "content": "Heya payloaders! <br><br>Do you know if anyone has already built an automated translation system for Payload, or maybe something similar like some kind of data synchronization with a third party?<br><br>Alternatively, any thoughts or recommendations on how to go about building something like this? 👀 <br><br>From what I gathered from the documentation (I&#x27;ve only just started playing with a local environment), it looks like the <code>afterChange</code> (to send strings to a loc provider) and <code>beforeRead</code> (to get translations back from the loc provider) hooks alongside some kind of  <code>translationStatus</code> field (to manage these hooks and do things like prevent users to edit content that&#x27;s actively being translated) might be a good place to start for a very simple MVP? 🤔",
      "fileAttachments": [],
      "authorID": "233209174069084161",
      "authorName": "Tinouti",
      "authorAvatar": "93bc00441e597b312b56079702a22275",
      "createdAtDate": 1678760820735
    },
    "messages": [
      {
        "content": "I’m not aware of any automated translation solutions but I think this is a great idea and you could build this out as a plugin quite nicely. The description you provided would work just fine, but if your provider supports “webhooks” of some sort it would be better to fire an update directly from your service in real-time using Payload’s API. This way the translations are saved in <em>Payload</em> so that requests to your third-party service are limited to only the <code>update</code> operation. This will avoid unnecessary network requests and potential API quotas. If your translations are instant, you could alternatively use a <code>beforeChange</code> hook to update the translations of your document in one pass before it’s saved. Give it a shot!!",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678764117420
      },
      {
        "content": "Ah, some good food for thought in there, thank you! 🙌 <br><br>Our provider&#x27;s a bit... outdated when it comes to their tech and their APIs so I don&#x27;t believe they have a webhook system, but that would definitely be a better to do it, so I&#x27;ll double check!<br><br>This feature is a must-have for us if we want to be able to adopt Payload so I&#x27;m definitely gonna try to put together a PoC, but being super new to both Payload and Typescript, I have a feeling I&#x27;ll be back for help at some point during that process. 😄<br> <br> I&#x27;m also curious and excited to see what these changes (<a href=\"https://github.com/payloadcms/payload/discussions/1234\">https://github.com/payloadcms/payload/discussions/1234</a>) will look like! 👀",
        "fileAttachments": [],
        "authorID": "233209174069084161",
        "authorName": "Tinouti",
        "authorAvatar": "93bc00441e597b312b56079702a22275",
        "createdAtDate": 1678765307626
      },
      {
        "content": "Right on! Well there&#x27;s a lot of people in here ready and willing to support you where needed, myself included, so I think you should go for it. As far as language handling display goes, we&#x27;ve got a lot in store here but nothing to show quite yet. We work directly from community feedback so we should be able to knock out quite a few pain-points at once. If you have any suggestions we&#x27;re all ears, throw it up on that GitHub discussion if you think of anything.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678765985759
      },
      {
        "content": "Are the mentioned language handling you have in store breaking changes, as I am currently implementing languages in my site? 😅",
        "fileAttachments": [],
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1678775577752
      },
      {
        "content": "No breaking changes, core translation functionality is unchanging, that roadmap item is specifically UI",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678796321567
      }
    ],
    "messageCount": 6,
    "slug": "third-party-translation-automation"
  },
  {
    "info": {
      "name": "Populate relationship field on click",
      "id": "1064065679952723991",
      "guildId": "967097582721572934",
      "createdAt": 1673763427485
    },
    "intro": {
      "content": "Hello!<br><br>I have a relationship field with countries. I need to implement some logic to it. For example, click on a button and select all countries from the EU.<br><br>What is the best way to do it? <br><br>I see that there is a UI field where I can create custom react components, but I would like just to add this button with logic to native relationship component.<br><br>Thanks in advance!",
      "fileAttachments": [],
      "authorID": "752838213781028884",
      "authorName": "Invest_it",
      "authorAvatar": "2ef618f2bc6b4024c6eecc6f32519ef3",
      "createdAtDate": 1673763427485
    },
    "messages": [
      {
        "content": "Hey @Invest_it ! You could implement this with a UI field if you&#x27;d like however a better alternative could be the following - using 3 fields:<br>- Add a radio button to determine how to populate the field <code>[&quot;byGroup&quot;, &quot;bySelection&quot;]</code><br>- When <code>byGroup</code> is selected - conditionally render a select with groups. Then you&#x27;d need to wire up a <code>beforeChange</code> hook to fetch and fill the relationship field with the ids of the ones in that group.<br>- When an individual is selected: show the relationship field.<br><br>What do you think?",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1674679815558
      },
      {
        "content": "Great ideas! How do you create a filed hook that is reactively triggered based on the selection of another field tho? I can&#x27;t seem get the field hooks to trigger when the same field is edited not to talk about when another field is updated.",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676348207339
      },
      {
        "content": "@KasparTr you would have to use a custom component and update it based on the value of another field. We have some docs that go into detail describing our react hooks so you can tie into the state of the form and update the state of fields. Check em out here and let me know if you run into anything!<br><br><a href=\"https://payloadcms.com/docs/admin/hooks\">https://payloadcms.com/docs/admin/hooks</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676478190618
      }
    ],
    "messageCount": 3,
    "slug": "populate-relationship-field-on-click"
  },
  {
    "info": {
      "name": "Import posts from Wordpress",
      "id": "1068171728028700802",
      "guildId": "967097582721572934",
      "createdAt": 1674742385633
    },
    "intro": {
      "content": "Which is the best way to import post from Wordpress?<br>Thank you!<br>Cheers",
      "fileAttachments": [],
      "authorID": "928376918804430868",
      "authorName": "stfn",
      "authorAvatar": null,
      "createdAtDate": 1674742385633
    },
    "messages": [
      {
        "content": "Currently, we don&#x27;t have a way to do this that doesn&#x27;t involve scripting with the Local API. However, I think this is something that we may look into in the future.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674858204094
      },
      {
        "content": "Ok ok thank you",
        "fileAttachments": [],
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1675071853532
      },
      {
        "content": "@denolfe do you have an example of how to do that",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1675077345565
      },
      {
        "content": "Sure, you would do something like this:<br><br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\n\nrequire(&quot;dotenv&quot;).config();\n\nconst { PAYLOAD_SECRET_KEY, MONGO_URL } = process.env;\n\n// This function ensures that there is at least one corresponding version for any document\n// within each of your draft-enabled collections.\n\nconst migratePosts = async () =&gt; {\n  // Initialize Payload\n  // IMPORTANT: make sure your ENV variables are filled properly here\n  // as the below variable names are just for reference.\n  await payload.init({\n    secret: PAYLOAD_SECRET_KEY,\n    mongoURL: MONGO_URL,\n    local: true,\n  });\n\n  // Read data from WordPress, you&#x27;ll need to figure this part out\n  const wpPosts = await getPostsFromWordPress();\n\n  for (const wpPost of wpPosts) {\n    await payload.create({\n      collection: &quot;posts&quot;,\n      // data to be saved\n      data: {\n        title: wpPost.title,\n        description: wpPost.description,\n      },\n  });\n};\n\nmigratePosts();</code></pre><br><br>Local API docs here: <a href=\"https://payloadcms.com/docs/local-api/overview#local-api\">https://payloadcms.com/docs/local-api/overview#local-api</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675106252140
      },
      {
        "content": "<pre><code class=\"hljs\">const payload = require(&#x27;payload&#x27;);\nconst path = require(&#x27;path&#x27;);\nconst slateSerializers = require(&#x27;slate-serializers&#x27;)\n\nconst { htmlToSlate, payloadHtmlToSlateConfig } = slateSerializers\nrequire(&#x27;dotenv&#x27;).config();\n\nconst {PAYLOAD_SECRET, MONGODB_URI} = process.env;\n\n\nconst authorId = &#x27;&#x27; // Payload Author ID\nconst websiteUrl = &#x27;&#x27; // WordPress website url \n\nconst transformWordPressData = ( data ) =&gt; {\n    return {\n        title: data.title.rendered,\n        slug: data.slug,\n        excerpt: data.excerpt.rendered,\n        updatedAt: data.modified, // might actually be  data.modified_gmt\n        publishedOn: data.date, // might actually be  data.date_gmt,\n        _status: data.status === &#x27;publish&#x27; ? &#x27;published&#x27; : &#x27;draft&#x27;,\n        author: authorId,\n        layout: [\n            {\n                blockType: &#x27;content&#x27;,\n                contentFields: {\n                    richText: htmlToSlate(data.content.rendered, payloadHtmlToSlateConfig)\n                }\n            }\n        ]\n    }\n}</code></pre><br> <br> <pre><code class=\"hljs\">// This function ensures that there is at least one corresponding version for any document\n// within each of your draft-enabled collections.\nconst importFromWordPress = async () =&gt; {\n\n    const baseUrl = `${websiteUrl}/wp-json/wp/v2/posts?per_page=100`\n    const defaultOptions = {\n        method: &#x27;GET&#x27;,\n        headers: {\n            &#x27;Content-Type&#x27;: &#x27;application/json&#x27;,\n        }\n    }\n\n    try {\n\n        await payload.init({\n            secret: PAYLOAD_SECRET,\n            mongoURL: MONGODB_URI,\n            local: true,\n        });\n\n        const wpPosts = []\n\n        const getTotalPagesReq = await fetch(baseUrl, defaultOptions)\n        // Get&#x27;s the total number of post pages \n        const getTotalPagesRes = getTotalPagesReq.headers.get(&#x27;x-WP-TotalPages&#x27;)\n\n\n        for (let i = 0; i &lt; getTotalPagesRes; i++) {\n           const wpPostReq = await fetch( `${baseUrl}&amp;page=${i+1}`, defaultOptions)\n           const wpPostRes = await wpPostReq.json()\n           wpPosts.push(wpPostRes)\n        }\n\n\n        for (const wpPost of wpPosts.flat()) {\n\n            await payload.create({\n                collection: &#x27;news&#x27;,\n                // data to be saved\n                data: transformWordPressData(wpPost),\n            })\n        }\n\n\n    } catch (err) {\n        console.log(&#x27;Unable to import posts into payload from WordPress&#x27;);\n        console.error(err);\n        process.exit(0);\n    }\n\n    console.log(&#x27;WordPress import completed!&#x27;);\n    process.exit(0);\n};\n\nimportFromWordPress();</code></pre><br> <br> @stfn above is a simple example of using WordPress rest api to import post content into Payload<br> <br> I then have a simple package.json script I run - <code>&quot;import&quot;: &quot;PAYLOAD_CONFIG_PATH=dist/payload.config.js node ./importFromWordPress.js&quot;</code><br> <br> @denolfe above is a pretty crud example on how to import from WordPress to Payload using the WordPress Rest API",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677561984708
      },
      {
        "content": "Woow thank you, it works! And have you found a solution also for convert Gutemberg blocks?",
        "fileAttachments": [],
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1677575095136
      },
      {
        "content": "This is awesome, thanks for sharing! 🙏",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677591164967
      },
      {
        "content": "At the moment It just works with the WordPress content. Eventually I will look at importing media. @stfn do you have an example api endpoint using Gutenberg?<br> <br> If you have access to the theme or able to add plugins you could write a custom rest api endpoint with all the data you need to import into Payload. If you use ACF flexible content it would probably be pretty easy to match flexible content blocks with Payload blocks<br> <br> I think it would be tricker to import data from a WordPress website that is using a Page builder<br> <br> @denolfe I noticed that there is a filePath property in the local API - <a href=\"https://payloadcms.com/docs/local-api/overview\">https://payloadcms.com/docs/local-api/overview</a>. How do I specify which field I want to add that media too",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677628861438
      },
      {
        "content": "That is specifically for if you have <code>upload</code> enabled for the collection. Payload will handle storing it accordingly.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677679717901
      },
      {
        "content": "Ok. Is there way to add images to blocks or other fields",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1677794927449
      }
    ],
    "messageCount": 17,
    "slug": "import-posts-from-wordpress"
  },
  {
    "info": {
      "name": "Is there a global login by rest api?",
      "id": "1085173632134819890",
      "guildId": "967097582721572934",
      "createdAt": 1678795955452
    },
    "intro": {
      "content": "Hello community. I want my application that uses payload to have a global login and not by collection. This login should return me a token which would give me access to query all collections.",
      "fileAttachments": [],
      "authorID": "934105872794267648",
      "authorName": "Iván Dominguez (Domi)",
      "authorAvatar": "db7493461daaa81a09b1936ec4c00255",
      "createdAtDate": 1678795955452
    },
    "messages": [
      {
        "content": "Authentication is always per-collection but it sounds like you might want to implement basic access control. If you give your auth-enabled collection a <code>roles</code> field then controlled access based on its value, you could provide some users with “super-admin” capabilities while restricting the others",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678796603169
      },
      {
        "content": "hi @jacobsfletch !<br>Thanks for your quick response.<br><br>That sounds really good. Do you know where I can configure the collections so that they restrict their access based on a user role?",
        "fileAttachments": [],
        "authorID": "934105872794267648",
        "authorName": "Iván Dominguez (Domi)",
        "authorAvatar": "db7493461daaa81a09b1936ec4c00255",
        "createdAtDate": 1678797172400
      },
      {
        "content": "Use the <code>access</code> property on your collection config, here’s an example <a href=\"https://github.com/payloadcms/payload/blob/master/examples/auth/cms/src/collections/Users.ts\">https://github.com/payloadcms/payload/blob/master/examples/auth/cms/src/collections/Users.ts</a> and then here’s the doc for reference <a href=\"https://payloadcms.com/docs/access-control/overview#access-control\">https://payloadcms.com/docs/access-control/overview#access-control</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678797444089
      },
      {
        "content": "Thank you very much for the info!!",
        "fileAttachments": [],
        "authorID": "934105872794267648",
        "authorName": "Iván Dominguez (Domi)",
        "authorAvatar": "db7493461daaa81a09b1936ec4c00255",
        "createdAtDate": 1678798385118
      }
    ],
    "messageCount": 4,
    "slug": "is-there-a-global-login-by-rest-api"
  },
  {
    "info": {
      "name": "Conditional group defaultValues being saved to document object even if condition isn't true.",
      "id": "1084011115266191360",
      "guildId": "967097582721572934",
      "createdAt": 1678518789832
    },
    "intro": {
      "content": "I have a few groups in a collection that appear conditionally based on checkboxes, and within those groups, I have some text fields with default values. I expected to see either no group saved to the document or, at most, an empty group object if the condition wasn&#x27;t met when I added a new document to the collection.<br><br>Even though conditionally, the groups are not active when I save a document, is it expected behaviour for the group &amp; default values to be saved on the document object?",
      "fileAttachments": [],
      "authorID": "981053249098498138",
      "authorName": "itsjustchris",
      "authorAvatar": "8bcf6c6d38b39c1383a12f2088deb6ba",
      "createdAtDate": 1678518789832
    },
    "messages": [
      {
        "content": "Yes, this is expected behavior because conditional logic is for representation in the admin interface only. It does not affect or alter data in any way - so default values behave normally.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1678651672967
      },
      {
        "content": "I understand, thank you for clarifying.",
        "fileAttachments": [],
        "authorID": "981053249098498138",
        "authorName": "itsjustchris",
        "authorAvatar": "8bcf6c6d38b39c1383a12f2088deb6ba",
        "createdAtDate": 1678658858345
      }
    ],
    "messageCount": 2,
    "slug": "conditional-group-defaultvalues-being-saved-to-document-object-even-if-condition-isnt-true"
  },
  {
    "info": {
      "name": "Querying nested-docs",
      "id": "1080202425585106964",
      "guildId": "967097582721572934",
      "createdAt": 1677610727450
    },
    "intro": {
      "content": "What is the recommended way of querying nested-docs when you know the path?<br><br>Given the following paths:<br><pre><code class=\"hljs\">/parent-page\n/parent-page/child-page\n/parent-page/child-page/grandchild-page</code></pre><br><br><code>/api/pages?where[breadcrumbs.url][equals]=/parent-page/child-page</code> <br><br>This query returns both the child-page document, and the grandchild-page document ... <br><br>I&#x27;m having trouble figuring out how to retrieve only the page that matches this path exactly.  I am temporarily using a hidden auto-generated field, that takes the last breadcrumb and stores it&#x27;s <code>url</code> into a <code>path</code> field at the document root ... so I can query <code>where[path][equals]=/parent-page/child-page</code> but this seems awkward, and I&#x27;m assuming there&#x27;s a proper way to query nested-docs?",
      "fileAttachments": [],
      "authorID": "131800639293358080",
      "authorName": "David",
      "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
      "createdAtDate": 1677610727450
    },
    "messages": [
      {
        "content": "That url probably fails because the forward slashes in your <code>where</code> query are not encoded, which would look like this: <code>/api/pages?where[breadcrumbs.url][equals]=%2Fparent-page%2Fchild-page</code><br> <br> But this may match on multiple docs instead of just one, because the breadcrumb may appear across more than one document, especially within the same tree.<br> <br> You may want to query by <em>slug</em> then find the document whose <em>last</em> breadcrumb matches your url",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677651639190
      },
      {
        "content": "thanks - I think that helped.  I just added the slug to the query and that seems to have resolved it ... <br><br>I now have something like this ... <br><br><pre><code class=\"hljs\">?where[breadcrumbs.url][equals]=/new-page/child-page/grandchild-page&amp;where[slug][equals]=grandchild-page</code></pre><br><br>The URL does get encoded by the browser before sending, I&#x27;m just showing the decoded version for readability.",
        "fileAttachments": [],
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1677681693720
      }
    ],
    "messageCount": 4,
    "slug": "querying-nested-docs"
  },
  {
    "info": {
      "name": "Best way to handle many-to-many relationship?",
      "id": "1034836636686626897",
      "guildId": "967097582721572934",
      "createdAt": 1666794680521
    },
    "intro": {
      "content": "Say, I have two collections: <code>Books</code> and <code>Tags</code>. A book can have many tags, and a tag can be assigned to multiple books. When a book is tagged via relationship field (<code>tags</code>), I want the tag&#x27;s relationship field (<code>books</code>) to be updated accordingly (create/update/delete). Im not sure to do that as of now. Any ideas?",
      "fileAttachments": [],
      "authorID": "275258786388639744",
      "authorName": "bombnp",
      "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
      "createdAtDate": 1666794680521
    },
    "messages": [
      {
        "content": "Hey @bombnp check the #plugins channel— the community has built a plugin to do exactly this for you!",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666801897715
      },
      {
        "content": "is it <a href=\"https://github.com/TimHal/pcms-backpop\">https://github.com/TimHal/pcms-backpop</a> ?",
        "fileAttachments": [],
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1666803039838
      },
      {
        "content": "yes!",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666807227892
      },
      {
        "content": "Are there plans to officially support this? The repo states it&#x27;s not ready for production (and in pre-alpha), but I would really like to use this feature in a production application",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676319265674
      },
      {
        "content": "yes it will be officially supported<br> <br> we have to tackle additional database support before diving in here much more deeply",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676389596877
      },
      {
        "content": "Cool! For now I&#x27;ve gotten it working but had to do some custom modifications and clean-up",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676668589684
      }
    ],
    "messageCount": 7,
    "slug": "best-way-to-handle-many-to-many-relationship"
  },
  {
    "info": {
      "name": "PNPM issue with a monorepo setup",
      "id": "1054524188670578789",
      "guildId": "967097582721572934",
      "createdAt": 1671488558691
    },
    "intro": {
      "content": "I&#x27;ve just wanted to ask about this here and I figured it out after Googling the solution for a 100th time tonight.<br><br>I&#x27;ve had the following error pop up after I&#x27;ve migrated our Payload project to a spankin&#x27; new PNPM powered monorepo:<br><pre><code class=\"hljs\">ERROR in ./src/payload.config.ts 17:13-20\nModule not found: Error: Can&#x27;t resolve &#x27;process/browser&#x27; in &#x27;C:\\Working\\codecrew\\cms-monorepo\\services\\cms\\src&#x27;\n\nERROR in ./src/payload.config.ts\nCannot read properties of undefined (reading &#x27;module&#x27;)</code></pre><br><br>The solution was add the following package to the dependencies:<br> <code>pnpm add--save-dev process</code>",
      "fileAttachments": [],
      "authorID": "173189757873029120",
      "authorName": "DoctorDoc",
      "authorAvatar": "2bfe8b1a62f9fa988c83aa59741a44c9",
      "createdAtDate": 1671488558691
    },
    "messages": [],
    "messageCount": 0,
    "slug": "pnpm-issue-with-a-monorepo-setup"
  },
  {
    "info": {
      "name": "Best place to deploy payloadcms?",
      "id": "1080336938915070033",
      "guildId": "967097582721572934",
      "createdAt": 1677642797927
    },
    "intro": {
      "content": "I know there are lots of ways to deploy it, but I wanted to know you guys favorite options, I didn&#x27;t want to use aws EC3 mostly because I think for what I have it is too much <br><br>I love how vercel or amplify works while deploying apps and  how it connects to github actions, do you know if there is something similar that you can deploy payloadcms that is as easy as that ?",
      "fileAttachments": [],
      "authorID": "391293587922485252",
      "authorName": "Hyra10",
      "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
      "createdAtDate": 1677642797927
    },
    "messages": [
      {
        "content": "Payload Cloud 🌥️ <a href=\"https://github.com/payloadcms/payload/discussions/583\">https://github.com/payloadcms/payload/discussions/583</a><br> <br> This is marked as roadmap priority 1 and is being actively developed. I&#x27;ve deployed on Digital Ocean dozens of times, which works well but requires all the manual setup. We have some helpful tutorials for this listed in our docs here: <a href=\"https://payloadcms.com/docs/production/deployment#digitalocean-tutorials\">https://payloadcms.com/docs/production/deployment#digitalocean-tutorials</a>. You can also leverage Docker if you&#x27;re doing this often or want to make standardize things, more on that here: <a href=\"https://payloadcms.com/docs/production/deployment#docker\">https://payloadcms.com/docs/production/deployment#docker</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677650644738
      },
      {
        "content": "I can highly recommend digitalOcean. But instead of spinning up a droplet (as in the documentation) you can simply deploy it as an „App“. Only very little configutration needed, autmatic deploys from your Github repository 🙏",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677654305406
      },
      {
        "content": "i would suggest google cloud run, this will surely help <a href=\"https://discord.com/channels/967097582721572934/1075750048924708865\">https://discord.com/channels/967097582721572934/1075750048924708865</a>",
        "fileAttachments": [],
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1677660822838
      },
      {
        "content": "for anyone finding this through the search, I&#x27;m currently using Railway and this is my setup (I&#x27;m using it inside a turborepo but you can replace it with simple yarn build &amp; yarn start if you don’t).<br><br>The experience is ok, will definitely go for the upcoming official platform once it&#x27;s available though",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1080336938915070033/1080467146234146856/image.png",
            "name": "image.png",
            "id": "1080467146234146856",
            "size": 523666,
            "url": "https://cdn.discordapp.com/attachments/1080336938915070033/1080467146234146856/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1080336938915070033/1080467146234146856/image.png",
            "height": 2368,
            "width": 1948,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "157199103921618944",
        "authorName": "Migu",
        "authorAvatar": "7c40c98d2393a326cea0da98f91966d2",
        "createdAtDate": 1677673841796
      },
      {
        "content": "For me the best place is railway, but I also deploy to my vps with coolify and work really well (Better when you need more resources because it&#x27;s more cheap).",
        "fileAttachments": [],
        "authorID": "284940321966522368",
        "authorName": "Franco",
        "authorAvatar": "13a1a45b12155816a4867b39bc4e1d13",
        "createdAtDate": 1677678187691
      },
      {
        "content": "I&#x27;m using render.com but it&#x27;s extra paid",
        "fileAttachments": [],
        "authorID": "803037652894482442",
        "authorName": "kosmo",
        "authorAvatar": "f054fc1ce7516d4903c0712698fc5eb1",
        "createdAtDate": 1677678680191
      },
      {
        "content": "I use Digital Ocean App platform for Payload. To me, it feels very similar to deploying on Vercel (which I use to deploy my frontend)",
        "fileAttachments": [],
        "authorID": "783701636165402624",
        "authorName": "tylandavis",
        "authorAvatar": "f93cd3cba7ccab13bbb14a2f41ffd5a5",
        "createdAtDate": 1677679849401
      },
      {
        "content": "thank you for your suggestions 🙇‍♂️",
        "fileAttachments": [],
        "authorID": "391293587922485252",
        "authorName": "Hyra10",
        "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
        "createdAtDate": 1677713113272
      },
      {
        "content": "What have you entered for your base and publish directory",
        "fileAttachments": [],
        "authorID": "149873958760480769",
        "authorName": "roac",
        "authorAvatar": null,
        "createdAtDate": 1678308774634
      },
      {
        "content": "<blockquote>coolify<br></blockquote>Fuck I should have known about that earlier - would have saved me SO much money.<br><br>Any reason why you&#x27;d use railway over that? And is Coolify really just that one command, or do you still need to do boilerplate stuff like hardening the server for security, auto-updates etc?",
        "fileAttachments": [],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1678310161708
      },
      {
        "content": "I use railway when on a really low demand to payloadCMS when I can use the free credit. Otherwise, coolify for me is the absolute way to go. <br><br>Just one command and deploy is super easy, also have autoupdates. You don&#x27;t need to care of nothing else than deploy.<br> <br> Base directory and configure the build commands. Less than 10 min for sure.",
        "fileAttachments": [],
        "authorID": "284940321966522368",
        "authorName": "Franco",
        "authorAvatar": "13a1a45b12155816a4867b39bc4e1d13",
        "createdAtDate": 1678331027186
      },
      {
        "content": "damn, coolify looks amazing, thanks!",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678344802042
      },
      {
        "content": "I&#x27;ve deployed to Railway for low demand instances. I&#x27;ve also recently deployed to an Azure App Service which is a little more involved but works well once you figure out all the quirks.<br><br>For Azure App Services the main things you&#x27;ll need are:<br><br>- An Azure Container Registry<br>- A DevOps pipeline (to build and publish the dockerfile to the registry)<br>- An Azure App Service set to deploy the docker image from the registry<br><br>The main &quot;gotcha&quot; I hit was that the Dockerfile needed to have any <code>PAYLOAD_PUBLIC_*</code> environment variables added to it before the build command so that they are compiled in for the admin ui.<br><br>I use a <code>PAYLOAD_PUBLIC_*</code> variable to set the serverUrl on the payload config so I can have multiple environments.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1678354858770
      },
      {
        "content": "The free instance works as well, but it&#x27;s pretty annoying because the instance shuts down and it takes a couple of seconds to &quot;wake up&quot;.",
        "fileAttachments": [],
        "authorID": "525819893333884938",
        "authorName": "wiesson",
        "authorAvatar": "45ae35ecb8e0d89dd1c9a726cf793568",
        "createdAtDate": 1678393638177
      },
      {
        "content": "I just got cheapest VPS hosting on Hetzner, installed docker, made deploy docker image and run the container there. $3.5 a month plus backup options.. makes it around $5 monthly for 2Gb 2vCPU virtual server. Runs like a charm.",
        "fileAttachments": [],
        "authorID": "940888194193424394",
        "authorName": "PegasusFJ",
        "authorAvatar": null,
        "createdAtDate": 1678527268230
      }
    ],
    "messageCount": 17,
    "slug": "best-place-to-deploy-payloadcms"
  },
  {
    "info": {
      "name": "Random error after updating Collection",
      "id": "1084848899442868264",
      "guildId": "967097582721572934",
      "createdAt": 1678718533145
    },
    "intro": {
      "content": "Hello all, just started seeing this issue after updating my page collection. I simply cleaned up my block imports, but now I get this every 2-3 page loads.<br><br>Those paths seems very weird. No idea what&#x27;s happening.<br> <br> @jesschow This came out of nowhere really, not sure even how to debug it<br> <br> <br> <br> some files load, some don&#x27;t because of our load balancer<br> <br> wondering if that may be causing the issues with chunked names<br> <br> The weird thing is this started happening randomly<br> <br> I moved my block imports to separate files in a folder &quot;blocks&quot; within collections<br> <br> Then I restarted payload and started getting these errors<br> <br> I reset the changes I made, but the errors persist<br> <br> Made a bug report here: <a href=\"https://github.com/payloadcms/payload/issues/2305\">https://github.com/payloadcms/payload/issues/2305</a><br> <br> Currently unable to edit our collections<br> <br> @jmikrut Sorry for the ping, this issue is making it so we cant access the Admin panel (or we can but only when the load balancer hits our second machine). Really cant figure out what I might have changed. I tried deleting the .cache directory in node_modules in case it was a webpack thing, but this just started happening almost out of nowhere",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1084848899442868264/1084848899648393290/image.png",
          "name": "image.png",
          "id": "1084848899648393290",
          "size": 150943,
          "url": "https://cdn.discordapp.com/attachments/1084848899442868264/1084848899648393290/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1084848899442868264/1084848899648393290/image.png",
          "height": 671,
          "width": 1381,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "1049775120559898725",
      "authorName": "thisisnotchris",
      "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
      "createdAtDate": 1678718533145
    },
    "messages": [
      {
        "content": "ah hello<br> <br> i don&#x27;t know why i didn&#x27;t see this one before<br> <br> ok so when your load balancer hits the second machine, it works, but not for the first machine?<br> <br> has anything changed with your load balancer config?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678725553046
      },
      {
        "content": "I don&#x27;t think so, I came into work today, made a couple of edits to our &quot;Pages&quot; collection, noticed the issues (not sure if related), reverted the file, issue persisting<br> <br> I can see the error doesn&#x27;t happen on Server 2<br> <br> But it&#x27;s happening on the primary<br> <br> Which is odd, because they should have the same config<br> <br> I&#x27;ll check nginx to confirm<br> <br> Yeah the nginx configs are identical<br> <br> Also nothing has changed AFAIK with the load balancer, I can ask, but I doubt it<br> <br> The weird thing is that I&#x27;m seeing files generated like &#x27;<a href=\"https://beta.safsonline.com/payload/adminvendors-node_modules_payload_dist_admin_components_forms_field-types_Relationship_AddNew_Moda-90d816.js\">https://beta.safsonline.com/payload/adminvendors-node_modules_payload_dist_admin_components_forms_field-types_Relationship_AddNew_Moda-90d816.js</a>&#x27;<br> <br> I would normally just say &quot;Let me try disabling chunking&quot; in the WP config<br> <br> But i swear it was working perfectly the other day<br> <br> ",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678725785639
      },
      {
        "content": "do you have the proper files in your <code>/build</code> folder that you need?<br> <br> like, those files should all exist in the <code>/build</code> folder<br> <br> maybe you need to run <code>yarn build</code> on both your load balanced servers<br> <br> and maybe also, you might have some caching in place that is telling your browser to load old files that no longer exist<br> <br> do you have a CDN? can you purge caches?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678727257985
      },
      {
        "content": "hmm<br> <br> @jmikrut im actually running dev rn on both servers for testing, is that bad?<br> <br> And in addition, dont those urls look weird?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678727809451
      },
      {
        "content": "well, webpack dev mode does all sorts of chunking craziness<br> <br> so i wouldn&#x27;t expect rationality out of the URLs that webpack in dev mode produces",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678728330018
      },
      {
        "content": "ahhhh<br> <br> OK that&#x27;s fair<br> <br> But I guess im worried about when i build, wont the filenames not line up if I have two instances of Payload?<br> <br> Server 1 has payload + mongo<br> <br> Server 2 has payload + mongo (replication set for mongo)<br> <br> When i go to build both, the load balancer will have a hard time with the generated assets right?<br> <br> I suppose ill try the build now",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678728423924
      },
      {
        "content": "i think the only time that would be a problem is if you have some sort of caching in place that caches the HTML of the admin UI, which would then cache only the filenames of <em><strong>one build</strong></em><br> <br> so then when you go to visit the other build, say server B, you&#x27;d be getting the cached HTML of server A and they might not line up",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678811151277
      },
      {
        "content": "@jmikrut We ended up only pushing build/dist to prod, instead of running dev for tests<br> <br> Then we didnt have issues with chunked names etc<br> <br> and then the file names aligned",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678817301686
      },
      {
        "content": "nice!",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678887185535
      }
    ],
    "messageCount": 49,
    "slug": "random-error-after-updating-collection"
  },
  {
    "info": {
      "name": "password encryption",
      "id": "1080630054486294558",
      "guildId": "967097582721572934",
      "createdAt": 1677712682125
    },
    "intro": {
      "content": "I have created my own user table, but how do I encrypt the password field, I have seen that bcrypt is used, but I don&#x27;t know how to implement it.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1080630054486294558/1080630054645682297/Captura_de_pantalla_2023-03-01_181730.png",
          "name": "Captura_de_pantalla_2023-03-01_181730.png",
          "id": "1080630054645682297",
          "size": 49548,
          "url": "https://cdn.discordapp.com/attachments/1080630054486294558/1080630054645682297/Captura_de_pantalla_2023-03-01_181730.png",
          "proxyURL": "https://media.discordapp.net/attachments/1080630054486294558/1080630054645682297/Captura_de_pantalla_2023-03-01_181730.png",
          "height": 427,
          "width": 1130,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "898767999287320607",
      "authorName": "Porfirio",
      "authorAvatar": "d66ff8314c6b768bd32c2a3dd7e54771",
      "createdAtDate": 1677712682125
    },
    "messages": [
      {
        "content": "hi @Porfirio you can export the encrypt and decrypt functions directly from payload, check out Dan&#x27;s answer here which has an example of usage: <a href=\"https://github.com/payloadcms/payload/discussions/1435#discussioncomment-4173265\">https://github.com/payloadcms/payload/discussions/1435#discussioncomment-4173265</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678209590488
      },
      {
        "content": "thank you @jesschow",
        "fileAttachments": [],
        "authorID": "898767999287320607",
        "authorName": "Porfirio",
        "authorAvatar": "d66ff8314c6b768bd32c2a3dd7e54771",
        "createdAtDate": 1678678959796
      }
    ],
    "messageCount": 2,
    "slug": "password-encryption"
  },
  {
    "info": {
      "name": "How to use near in a query?",
      "id": "1082900904858099712",
      "guildId": "967097582721572934",
      "createdAt": 1678254095044
    },
    "intro": {
      "content": "Does anyone have an example of how to use near in a query? I am getting the following error: &quot;near must be first in: { $near: null }&quot;. It is requiring Float instead of coordinates and distance.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1082900904858099712/1082900905013293187/Captura_de_tela_2023-03-08_023851.jpg",
          "name": "Captura_de_tela_2023-03-08_023851.jpg",
          "id": "1082900905013293187",
          "size": 101000,
          "url": "https://cdn.discordapp.com/attachments/1082900904858099712/1082900905013293187/Captura_de_tela_2023-03-08_023851.jpg",
          "proxyURL": "https://media.discordapp.net/attachments/1082900904858099712/1082900905013293187/Captura_de_tela_2023-03-08_023851.jpg",
          "height": 664,
          "width": 781,
          "contentType": "image/jpeg",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "611775132754640896",
      "authorName": "Rafael Nepomuceno",
      "authorAvatar": "8e55c0c11e6ce22de6d200d1d33255ce",
      "createdAtDate": 1678254095044
    },
    "messages": [
      {
        "content": "Haven&#x27;t used the points field yet but you might need to update the where query to use <code>and</code><br><br>so a bit like this<br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">where</span>: {\n  <span class=\"hljs-attr\">and</span>: [\n{\n<span class=\"hljs-attr\">status</span>: {<span class=\"hljs-attr\">equals</span>: <span class=\"hljs-string\">&#x27;ON&#x27;</span> }\n},\n{\n<span class=\"hljs-attr\">near</span>: <span class=\"hljs-comment\">//...logic</span>\n}\n]\n}</code></pre><br> <br> excuse the formatting 😅",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678263265164
      },
      {
        "content": "Hey @Rafael Nepomuceno I have used em a bunch, just format em like this:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">coordinates</span>: {\n  <span class=\"hljs-attr\">near</span>: [\n    lng,\n    lat,\n    meters,\n  ],\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678333297969
      },
      {
        "content": "Wow! And that. I quickly tested it in graphql playground and it worked. Thank you very much. I was already connecting directly to mongo to solve this. 🤷‍♂️",
        "fileAttachments": [],
        "authorID": "611775132754640896",
        "authorName": "Rafael Nepomuceno",
        "authorAvatar": "8e55c0c11e6ce22de6d200d1d33255ce",
        "createdAtDate": 1678334064971
      },
      {
        "content": "Awesome, happy to help. Have fun!",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678334250801
      }
    ],
    "messageCount": 5,
    "slug": "how-to-use-near-in-a-query"
  },
  {
    "info": {
      "name": "Format the doc response from hooks, only for the API request.",
      "id": "1078326363884363897",
      "guildId": "967097582721572934",
      "createdAt": 1677163439485
    },
    "intro": {
      "content": "Hello, I have a question about the capability to format the <code>doc</code> response in <code>afterRead</code> hook, only on the API request, not when I load the admin. Is there a way to do this? <br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">hooks</span>: {\n  <span class=\"hljs-attr\">afterRead</span>: [\n    <span class=\"hljs-function\">(<span class=\"hljs-params\">{ doc }</span>) =&gt;</span> {\n      doc.<span class=\"hljs-property\">title</span> = doc.<span class=\"hljs-property\">title</span> + <span class=\"hljs-string\">&quot;foo&quot;</span>\n      <span class=\"hljs-keyword\">return</span> doc\n    }\n  ],\n},</code></pre><code>In this example, I need to format the</code>title<code>only on the api call response. For sur I can create a</code>customTitle` object key on doc but it&#x27;s seems to be strange to keep and return unformatted data on the api response. Maybe it&#x27;s a paradigm problem?<br> <br> I found a workaround using query param to check &quot;when&quot; the api is called.<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">hooks</span>: {\n    <span class=\"hljs-attr\">afterRead</span>: [\n      <span class=\"hljs-function\">(<span class=\"hljs-params\">{ doc, req }</span>) =&gt;</span> {\n\n        <span class=\"hljs-comment\">// if &quot;?api&quot; doesn&#x27;t exist on request URL, return non formatted doc</span>\n        <span class=\"hljs-keyword\">if</span> (req.<span class=\"hljs-property\">query</span>.<span class=\"hljs-property\">api</span> == <span class=\"hljs-literal\">null</span>)\n          <span class=\"hljs-keyword\">return</span> doc\n\n        <span class=\"hljs-comment\">// with &quot;?api&quot; on api request, we want to get formatted doc</span>\n        <span class=\"hljs-comment\">//ex: http://localhost:3000/api/posts/63f727b53a255a9683223236?api</span>\n        <span class=\"hljs-comment\">// format...</span>\n\n       doc.<span class=\"hljs-property\">title</span> = doc.<span class=\"hljs-property\">title</span> + <span class=\"hljs-string\">&quot;foo&quot;</span>\n       <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;doc.title&quot;</span>,doc.<span class=\"hljs-property\">title</span>)\n       <span class=\"hljs-keyword\">return</span> doc\n      }\n    ],\n  },</code></pre>",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1078326363884363897/1078326364110860330/Capture_decran_2023-02-23_a_15.38.34.png",
          "name": "Capture_decran_2023-02-23_a_15.38.34.png",
          "id": "1078326364110860330",
          "size": 7267,
          "url": "https://cdn.discordapp.com/attachments/1078326363884363897/1078326364110860330/Capture_decran_2023-02-23_a_15.38.34.png",
          "proxyURL": "https://media.discordapp.net/attachments/1078326363884363897/1078326364110860330/Capture_decran_2023-02-23_a_15.38.34.png",
          "height": 208,
          "width": 145,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1078326363884363897/1078326364354134077/Capture_decran_2023-02-23_a_15.39.56.png",
          "name": "Capture_decran_2023-02-23_a_15.39.56.png",
          "id": "1078326364354134077",
          "size": 13985,
          "url": "https://cdn.discordapp.com/attachments/1078326363884363897/1078326364354134077/Capture_decran_2023-02-23_a_15.39.56.png",
          "proxyURL": "https://media.discordapp.net/attachments/1078326363884363897/1078326364354134077/Capture_decran_2023-02-23_a_15.39.56.png",
          "height": 102,
          "width": 360,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "783679384434901012",
      "authorName": "Willy Brownhair",
      "authorAvatar": "85a20ab2579ed3b510b52a674348fcea",
      "createdAtDate": 1677163439485
    },
    "messages": [],
    "messageCount": 1,
    "slug": "format-the-doc-response-from-hooks-only-for-the-api-request"
  },
  {
    "info": {
      "name": "RichText field not handling proper list-styles?",
      "id": "1085554712906051614",
      "guildId": "967097582721572934",
      "createdAt": 1678886812188
    },
    "intro": {
      "content": "I would expect to see something along the lines of this or something of this nature where the symbols change per indent level...<br><pre><code class=\"hljs\">No Indent Level\n    1. Indent Level 1\n        A. Indent Level 2\n            i. Indent Level 3</code></pre><br>Is this something I would be doing wrong? I&#x27;m not seeing this when I&#x27;m rendering it out on my frontend either, where I&#x27;m setting the list style property on the lists.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1085554712906051614/1085554713119969320/image.png",
          "name": "image.png",
          "id": "1085554713119969320",
          "size": 35640,
          "url": "https://cdn.discordapp.com/attachments/1085554712906051614/1085554713119969320/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1085554712906051614/1085554713119969320/image.png",
          "height": 548,
          "width": 556,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "408784184765710337",
      "authorName": "TheDunco",
      "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
      "createdAtDate": 1678886812188
    },
    "messages": [
      {
        "content": "this is actually just a CSS thing that payload could do<br> <br> but you&#x27;d have to do it on your frontend as well i believe<br> <br> worth looking into it for sure",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678887213780
      },
      {
        "content": "I am using a modified version of the serialization found in the documentation (and Tailwind for styling 🙏 ), and am applying this list style to the <code>&lt;ol&gt;</code>s and <code>&lt;ul&gt;</code>s so i&#x27;d assume that would do it but perhaps I&#x27;m wrong<br> <br> @jmikrut Is this something that Slate supports by default? Or do you know how do people normally handle this in their frontends? For now I plan on doing this with CSS and having it apply the styles to nested lists, but if there&#x27;s a better way I&#x27;d love to know. I think Tailwind is overriding the default user agent styles in my case which is usually where these sorts of styles come from",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1085554712906051614/1085557224178471002/image.png",
            "name": "image.png",
            "id": "1085557224178471002",
            "size": 52710,
            "url": "https://cdn.discordapp.com/attachments/1085554712906051614/1085557224178471002/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1085554712906051614/1085557224178471002/image.png",
            "height": 354,
            "width": 1046,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678887410990
      },
      {
        "content": "this is just straight CSS<br> <br> <a href=\"https://www.w3schools.com/cssref/pr_list-style-type.php\">https://www.w3schools.com/cssref/pr_list-style-type.php</a><br> <br> you&#x27;d want to define a different list-style-type for each one of your nested li levels<br> <br> this should / could also totally be done within payload, but it wouldn&#x27;t help you on the frontend<br> <br> as far as the output HTML is concerned, they&#x27;re all just <code>li</code>&#x27;s - from there, it&#x27;s up to you to style it<br> <br> it&#x27;s not a slate thing at all really",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678907263017
      },
      {
        "content": "Yeah, I did figure out how to do this with Tailwind but I have other styles elsewhere that are overriding them so I&#x27;ll have to sort that out<br> <br> This is the sort of thing I had to do in Tailwind... <code>[&amp;_ol_ol_ol]:list-[lower-roman] [&amp;_ol_ol]:list-[lower-alpha] [&amp;_ol]:list-decimal [&amp;_ul_ul_ul]:list-[square] [&amp;_ul_ul]:list-[circle] [&amp;_ul]:list-disc</code>",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678907534874
      },
      {
        "content": "being not familiar with tailwind, this looks like hieroglyphics for me, but i&#x27;m happy that you resolved it!<br> <br> 😏",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678907753236
      },
      {
        "content": "Hahaha, yeah this is the UGLIEST Tailwind I&#x27;ve ever written 🤣<br> <br> It&#x27;s because I&#x27;m using non-default selectors and non-default styles, and the syntax becomes messy when you break out of the standard utility classes",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678908800645
      }
    ],
    "messageCount": 17,
    "slug": "richtext-field-not-handling-proper-list-styles"
  },
  {
    "info": {
      "name": "Compound indexes",
      "id": "1080470661971066891",
      "guildId": "967097582721572934",
      "createdAt": 1677674679988
    },
    "intro": {
      "content": "Is there a way to describe compound index for collection?<br><br>Use case: <br>Collection has two fields <code>title</code> and <code>value</code><br>Collection should have only unique pairs of title and value<br>Like:<br>title        | value<br>------------|--------------<br>email     | google<br>------------|--------------<br>email     | yahoo",
      "fileAttachments": [],
      "authorID": "351983077423185921",
      "authorName": "Ysione",
      "authorAvatar": "f612bad72951735200e85f09988732ec",
      "createdAtDate": 1677674679988
    },
    "messages": [
      {
        "content": "Not out of the box currently. An option would be to make an additional field that is readOnly, then write a beforeValidate hook that populates it with the 2 values concatenated.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677686049605
      },
      {
        "content": "I see, thank you",
        "fileAttachments": [],
        "authorID": "351983077423185921",
        "authorName": "Ysione",
        "authorAvatar": "f612bad72951735200e85f09988732ec",
        "createdAtDate": 1677754193675
      }
    ],
    "messageCount": 2,
    "slug": "compound-indexes"
  },
  {
    "info": {
      "name": "Generating Types Error with Azure",
      "id": "1067549631904493638",
      "guildId": "967097582721572934",
      "createdAt": 1674594066359
    },
    "intro": {
      "content": "Good Afternoon fellow Payloaders,<br><br>For some reason when running command <code>payload generate:types</code> (yarn payload...),  I get an error relating to the Azure Storage Blob, this error is resolved when I hard code storageAdapter.ts, which for obvious reasons, cannot be left as the solution as it would pose a glaring security vulnerability.<br><br>Storage Adapter.ts<br><pre><code class=\"hljs\">import { azureBlobStorageAdapter } from &quot;@payloadcms/plugin-cloud-storage/azure&quot;;\n\n\nconst storageAdapter = azureBlobStorageAdapter({\n  connectionString: process.env.AZURE_STORAGE_CONNECTION_STRING,\n  containerName: process.env.AZURE_STORAGE_CONTAINER_NAME,\n  allowContainerCreate:\n    process.env.AZURE_STORAGE_ALLOW_CONTAINER_CREATE === &quot;true&quot;,\n  baseURL: process.env.AZURE_STORAGE_ACCOUNT_BASEURL,\n});\n\nexport default storageAdapter;</code></pre><br>Has anyone encountered a problem like this ?<br> <br> Ok so adding <pre><code class=\"hljs\">import dotenv from &quot;dotenv/config&quot;</code></pre> in payload.config and adding <pre><code class=\"hljs\">require(&#x27;dotenv&#x27;).config()</code></pre> in storageAdapter.ts solves the issue<br><br>incase anyone has the issue later<br><pre><code class=\"hljs\">/node_modules/@azure/storage-blob/dist/index.js:13642\n    if (connectionString.startsWith(&quot;UseDevelopmentStorage=true&quot;)) {\n                         ^\n\nTypeError: Cannot read property &#x27;startsWith&#x27; of undefined\n    at extractConnectionStringParts (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:13642:26)\n    at Function.fromConnectionString (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:24600:32)\n    at Object.adapter (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/adapters/azure/index.js:14:66)\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js:42:43\n    at Array.map (&lt;anonymous&gt;)\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js:38:164\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/config/build.js:15:84\n    at Array.reduce (&lt;anonymous&gt;)\n    at buildConfig (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/config/build.js:15:50)\n    at Object.&lt;anonymous&gt; (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/payload.config.js:17:44)\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.</code></pre><br> <br> <pre><code class=\"hljs\">TypeError: Cannot read property &#x27;startsWith&#x27; of undefined\n    at extractConnectionStringParts (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:13642:26)\n    at Function.fromConnectionString (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:24600:32)\n    at Object.adapter (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/adapters/azure/index.js:14:66)\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js:42:43\n    at Array.map (&lt;anonymous&gt;)\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js:38:164\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/config/build.js:15:84\n    at Array.reduce (&lt;anonymous&gt;)\n    at buildConfig (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/config/build.js:15:50)\n    at Object.&lt;anonymous&gt; (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/src/payload.config.ts:23:40)\n(node:96745) UnhandledPromiseRejectionWarning: Error: Error: can&#x27;t find the configuration file located at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/src/payload.config.ts.\n    at build (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/bin/build.js:35:15)\n    at Object.&lt;anonymous&gt; (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/bin/index.js:16:9)\n    at Module._compile (internal/modules/cjs/loader.js:1085:14)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1114:10)\n    at Module.load (internal/modules/cjs/loader.js:950:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:790:12)\n    ...\n\n    </code></pre><br><br>So that will be more easily searchable by others<br> <br> If this is a &#x27;bad&#x27; or &#x27;hacky&#x27; solution, please lmk<br> <br> update: so the app builds, but does not serve (I run yarn build often during my development process when making potentiall breaking-changes)<br><br>if anyone gets why this might happen any and all feedback/assistance would be fantastic",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1067549631904493638/1067549632512655410/on_yarn_payload_generate_types.png",
          "name": "on_yarn_payload_generate_types.png",
          "id": "1067549632512655410",
          "size": 256280,
          "url": "https://cdn.discordapp.com/attachments/1067549631904493638/1067549632512655410/on_yarn_payload_generate_types.png",
          "proxyURL": "https://media.discordapp.net/attachments/1067549631904493638/1067549632512655410/on_yarn_payload_generate_types.png",
          "height": 864,
          "width": 2010,
          "contentType": "image/png",
          "description": "error that is thrown",
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1067549631904493638/1067549632848216134/package_json.png",
          "name": "package_json.png",
          "id": "1067549632848216134",
          "size": 321032,
          "url": "https://cdn.discordapp.com/attachments/1067549631904493638/1067549632848216134/package_json.png",
          "proxyURL": "https://media.discordapp.net/attachments/1067549631904493638/1067549632848216134/package_json.png",
          "height": 1124,
          "width": 1900,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1067549631904493638/1067549633225687040/on_yarn_build.png",
          "name": "on_yarn_build.png",
          "id": "1067549633225687040",
          "size": 464083,
          "url": "https://cdn.discordapp.com/attachments/1067549631904493638/1067549633225687040/on_yarn_build.png",
          "proxyURL": "https://media.discordapp.net/attachments/1067549631904493638/1067549633225687040/on_yarn_build.png",
          "height": 1422,
          "width": 2010,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "741147904017956896",
      "authorName": "FireGuy_42",
      "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
      "createdAtDate": 1674594066359
    },
    "messages": [
      {
        "content": "I’m not sure you need the dotenv import in the adapter file, but try adding it to your server.ts file (also keep it in your payload config file)<br> <br> @FireGuy_42 did you give this a shot?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674648647466
      },
      {
        "content": "@Jarrod Hey Jarrod, yeah so without the <code>// require(&#x27;dotenv&#x27;).config()</code> in storageAdapter.ts file. the build errors out<br><br><code>TypeError: Cannot read property &#x27;startsWith&#x27; of undefined\n    at extractConnectionStringParts (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:13642:26)</code><br> <br> Server.ts<br><br><code>import express from &quot;express&quot;;\nimport payload from &quot;payload&quot;;\n\nrequire(&quot;dotenv&quot;).config();\nconst app = express();\n\n\n// Initialize Payload\npayload.init({\n  secret: process.env.PAYLOAD_SECRET,\n  mongoURL: process.env.MONGODB_URI,\n  express: app,\n  onInit: () =&gt; {\n    payload.logger.info(</code>Payload Admin URL: ${payload.getAdminURL()}<code>);\n  },\n});\n\n// Add your own express routes here\n// Redirect root to Admin panel\napp.get(&quot;/&quot;, (_, res) =&gt; {\n  res.redirect(&quot;/admin&quot;);\n});\n\napp.listen(3001);</code><br> <br> still on 1.5.9",
        "fileAttachments": [],
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1677187202075
      }
    ],
    "messageCount": 9,
    "slug": "generating-types-error-with-azure"
  },
  {
    "info": {
      "name": "GraphQL Error on Startup",
      "id": "1063869037970464868",
      "guildId": "967097582721572934",
      "createdAt": 1673716544383
    },
    "intro": {
      "content": "My docker container gives me the following logs on startup:<br><br><pre><code class=\"hljs\">[17:05:31] INFO (payload): Starting Payload...\n/home/node/app/node_modules/payload/node_modules/graphql/jsutils/devAssert.js:12\n    throw new Error(message);\n    ^\n\nError: Expected DateTime to be a GraphQL nullable type.\n    at devAssert (/home/node/app/node_modules/payload/node_modules/graphql/jsutils/devAssert.js:12:11)\n    at new GraphQLNonNull (/home/node/app/node_modules/payload/node_modules/graphql/type/definition.js:395:32)\n    at /home/node/app/node_modules/payload/dist/collections/graphql/init.js:101:23\n    at Array.forEach (&lt;anonymous&gt;)\n    at initCollectionsGraphQL (/home/node/app/node_modules/payload/dist/collections/graphql/init.js:60:38)\n    at registerSchema (/home/node/app/node_modules/payload/dist/graphql/registerSchema.js:58:24)\n    at init (/home/node/app/node_modules/payload/dist/init.js:79:38)\n    at initSync (/home/node/app/node_modules/payload/dist/init.js:143:22)\n    at Payload.init (/home/node/app/node_modules/payload/dist/index.js:154:29)\n    at Object.&lt;anonymous&gt; (/home/node/app/dist/server.js:15:19)</code></pre><br><br><br>My docker compose file looks like this (some parts redacted):<br><pre><code class=\"hljs\">payload:\n    image: node:18-alpine\n    ports:\n      - &#x27;3001:3001&#x27;\n    volumes:\n      - ./payload:/home/node/app\n    working_dir: /home/node/app/\n    command: sh -c &quot;npm run serve&quot;\n    depends_on:\n      - mongo\n    environment:\n      MONGODB_URI: mongodb://mongo:27017/payload\n      PORT: 3001\n      PAYLOAD_SECRET: TESTING\n    networks:\n      - main\n\n  mongo:\n    image: mongo:latest\n    ports:\n      - &#x27;27017:27017&#x27;\n    command:\n      - --storageEngine=wiredTiger\n    volumes:\n      - data:/data/db\n    logging:\n      driver: none\n    networks:\n      - main</code></pre><br><br>and the <code>./payload</code> directory I mount to my docker container contains a payload project I have already run <code>npm run build</code> on",
      "fileAttachments": [],
      "authorID": "1063867100231389324",
      "authorName": "alexdev",
      "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
      "createdAtDate": 1673716544383
    },
    "messages": [
      {
        "content": "It seems the npm based installation workflow is broken.<br><br>Can you try deleting your <code>node_modules</code> folder and <code>package-lock.json</code>. Then run <code>yarn install</code> and check again?",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673727884338
      },
      {
        "content": "this is plausible, I am using npm<br> <br> I am currently building in an ubuntu worker and then transferring the whole directory over to the host, including node_modules into the ./payload directory mentioned above",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1673886118415
      },
      {
        "content": "that makes sense, I had a similar setup. After switching to yarn you should be fine I think 🙂",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673886209460
      },
      {
        "content": "so rework the whole workflow to use yarn?<br> <br> i&#x27;ll give it a go now<br> <br> switched to yarn, deploys perfectly!<br> <br> although this is now the only component of the project that utilises yarn over npm, not world ending but I wonder what is cauting the issue?",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1673886228025
      },
      {
        "content": "The problem seems that there are 2 different versions of the GraphQL engine being used (one directly and another as a dependency). With yarn this is no problem, as you can write rules for how to handle that (overrides.json) but npm is a bit more strict. <br>Same for me, usually it is npm everywhere, once the dependencies are fixed we can switch back 🙂<br> <br> oh btw, if everything works, please close this thread unless you need more help, this helps to keep things organized 🙂<br><br>@jmikrut another occurrence of this bug, I think I commented yesterday on a related github issue (which I can&#x27;t find right now) but the npm workflow is quite broken as of now 😦",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673887132753
      },
      {
        "content": "ahhh is this related to <code>express-graphql</code>?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673887551866
      },
      {
        "content": "Yes I think so 🙂<br> <br> should be reproducable with the minimal setup, but I did not try yet",
        "fileAttachments": [],
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673888058636
      },
      {
        "content": "ok i&#x27;ll put this on the radar. I hear that <code>express-graphql</code> is no longer supported so it&#x27;s probably just that we need to move to a package that uses our graphql version",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673889035030
      },
      {
        "content": "Thanks for all the help guys, will close the thread now",
        "fileAttachments": [],
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1673945702130
      },
      {
        "content": "still got the problem, using pnpm on railway, working on local",
        "fileAttachments": [],
        "authorID": "204263616013139970",
        "authorName": "HSWMK",
        "authorAvatar": null,
        "createdAtDate": 1677212343282
      }
    ],
    "messageCount": 16,
    "slug": "graphql-error-on-startup"
  },
  {
    "info": {
      "name": "Sorting relationship items",
      "id": "1080817423311187988",
      "guildId": "967097582721572934",
      "createdAt": 1677757354334
    },
    "intro": {
      "content": "Hey guys, I have problem when I want to swap field component of relationship, and use <code>useField</code> hook to update the field. To add the items it works, but somehow I can&#x27;t change the order of items.<br><br>I use setValue with an array, i.e. <br>initialValue -&gt; <code>[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]</code><br>then <code>setValue([&#x27;c&#x27;, &#x27;b&#x27;, &#x27;a&#x27;])</code><br>then refresh page still <code>[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]</code><br><br>it is works when i add item, i.e <code>[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;]</code><br> <br> Is there another way to set item&#x27;s order?",
      "fileAttachments": [],
      "authorID": "946373741175267329",
      "authorName": "rrums",
      "authorAvatar": "6a019fb818dd1274398027f152b5294b",
      "createdAtDate": 1677757354334
    },
    "messages": [
      {
        "content": "hi @rrums - where are you getting the array of data from? as you can sort on requests <a href=\"https://payloadcms.com/docs/queries/overview#sort\">https://payloadcms.com/docs/queries/overview#sort</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678119521790
      },
      {
        "content": "not to querying, but to store data (array of IDs)<br>because i swapped the field component, but i can&#x27;t change order of the IDs<br> <br> like this -&gt; i log the <code>value</code>, it has correct arrays, the order is set as I drag the item. But it wasn&#x27;t stored with correct order.<br> <br> FYI, the field on collection<br><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n  name<span class=\"hljs-punctuation\">:</span> &#x27;items&#x27;<span class=\"hljs-punctuation\">,</span>\n  type<span class=\"hljs-punctuation\">:</span> &#x27;relationship&#x27;<span class=\"hljs-punctuation\">,</span>\n  relationTo<span class=\"hljs-punctuation\">:</span> &#x27;menuItems&#x27;<span class=\"hljs-punctuation\">,</span>\n  hasMany<span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n  required<span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n  admin<span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    components<span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n      Field<span class=\"hljs-punctuation\">:</span> MenuSelect <span class=\"hljs-comment\">// custom component</span>\n    <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n    isSortable<span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span></code></pre>",
        "fileAttachments": [],
        "authorID": "946373741175267329",
        "authorName": "rrums",
        "authorAvatar": "6a019fb818dd1274398027f152b5294b",
        "createdAtDate": 1678174045433
      },
      {
        "content": "Curious, what does the network panel look like for this request?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678332858744
      },
      {
        "content": "ouch found the problem, because I fetch not from initialValue. My bad.",
        "fileAttachments": [],
        "authorID": "946373741175267329",
        "authorName": "rrums",
        "authorAvatar": "6a019fb818dd1274398027f152b5294b",
        "createdAtDate": 1678366189011
      }
    ],
    "messageCount": 7,
    "slug": "sorting-relationship-items"
  },
  {
    "info": {
      "name": "Why does relationship return null in a custom GraphQL query?",
      "id": "1075724798019260466",
      "guildId": "967097582721572934",
      "createdAt": 1676543177848
    },
    "intro": {
      "content": "This is what my query returns <br><pre><code class=\"hljs graphql\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-string\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-string\">&quot;GetCustomerOrders&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n      <span class=\"hljs-string\">&quot;docs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n        <span class=\"hljs-punctuation\">{</span>\n          <span class=\"hljs-string\">&quot;id&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;63edd88930491a91de039454&quot;</span>,\n          <span class=\"hljs-string\">&quot;createdAt&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;2023-02-16T07:17:29.488Z&quot;</span>,\n          <span class=\"hljs-string\">&quot;paid&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\">true</span>,\n          <span class=\"hljs-string\">&quot;product&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\">null</span>,\n          <span class=\"hljs-string\">&quot;amount&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">24000</span>,\n          <span class=\"hljs-string\">&quot;status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;IN_PROGRESS&quot;</span>\n        <span class=\"hljs-punctuation\">}</span>\n      <span class=\"hljs-punctuation\">]</span>\n    <span class=\"hljs-punctuation\">}</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span></code></pre><br><br>This is the logic, basically inside my resolver<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> orders = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">find</span>({\n    <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;orders&#x27;</span>,\n    <span class=\"hljs-attr\">depth</span>: <span class=\"hljs-number\">3</span>,\n    <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-number\">100</span>,\n    <span class=\"hljs-attr\">sort</span>: <span class=\"hljs-string\">&#x27;-createdAt&#x27;</span>,\n    <span class=\"hljs-attr\">where</span>: {\n      <span class=\"hljs-string\">&#x27;customer.value&#x27;</span>: {\n        <span class=\"hljs-attr\">equals</span>: customer.<span class=\"hljs-property\">id</span>,\n      },\n    },\n    <span class=\"hljs-attr\">overrideAccess</span>: <span class=\"hljs-literal\">true</span>,\n  })\n\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;orders&#x27;</span>, orders.<span class=\"hljs-property\">docs</span>)\n\n  <span class=\"hljs-keyword\">return</span> orders</code></pre><br><br>And this is how my query is declared<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">GetCustomerOrders</span> = (<span class=\"hljs-params\">GraphQL: <span class=\"hljs-keyword\">typeof</span> ImportedGraphQL, payload: Payload</span>) =&gt; {\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">args</span>: {},\n    <span class=\"hljs-attr\">resolve</span>: <span class=\"hljs-title class_\">GetCustomerOrdersResolver</span>,\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-title function_\">buildPaginatedListType</span>(<span class=\"hljs-string\">&#x27;CustomerOrders&#x27;</span>, payload.<span class=\"hljs-property\">collections</span>[<span class=\"hljs-string\">&#x27;orders&#x27;</span>].<span class=\"hljs-property\">graphQL</span>?.<span class=\"hljs-property\">type</span>),\n  }\n}</code></pre><br><br>Product for some reason is returning <code>null</code> however in the console log, I can see that it&#x27;s properly fetched via the local API.<br><br><pre><code class=\"hljs console\">product: { value: [Object], relationTo: &#x27;products&#x27; },</code></pre><br><br>This is a custom query for the <code>orders</code> collection type, if I use the generated query then it works fine so I&#x27;m struggling to figure out why this won&#x27;t work.<br><br>Here&#x27;s the query I&#x27;m testing in the playground:<br><br><pre><code class=\"hljs graphql\"><span class=\"hljs-keyword\">query</span> <span class=\"hljs-punctuation\">{</span>\n  GetCustomerOrders <span class=\"hljs-punctuation\">{</span>\n    docs <span class=\"hljs-punctuation\">{</span>\n      id\n      createdAt\n      paid\n    product <span class=\"hljs-punctuation\">{</span>\n      value <span class=\"hljs-punctuation\">{</span>\n        <span class=\"hljs-punctuation\">...</span> <span class=\"hljs-keyword\">on</span> Product <span class=\"hljs-punctuation\">{</span>\n          title\n        <span class=\"hljs-punctuation\">}</span>\n      <span class=\"hljs-punctuation\">}</span>\n    <span class=\"hljs-punctuation\">}</span>\n    amount\n    status\n    <span class=\"hljs-punctuation\">}</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span></code></pre><br>^ this is same query works for the generated one 😫",
      "fileAttachments": [],
      "authorID": "858693520012476436",
      "authorName": "noheadphones",
      "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
      "createdAtDate": 1676543177848
    },
    "messages": [
      {
        "content": "so<br> <br> i am guessing this is because even though you are using the local API for your top-level query, and passing <code>overrideAccess: true</code>, you are still using the default <code>orders</code> GraphQL type that Payload builds<br> <br> and when you are querying on the field <code>product</code>, that is actually using Payload&#x27;s internal GraphQL population method for retrieving the <code>product</code> field<br> <br> and that internal population method <em><strong>requires authentication</strong></em><br> <br> basically even if your top-level resolver returns that data, because you are using an internal Payload GraphQL type, GraphQL will use <em><strong>Payload&#x27;s internal field resolvers for relationship fields, requiring authentication</strong></em>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667648759
      },
      {
        "content": "Interesting, the request is via authentication only. I basically want to recreate the generated &quot;get orders&quot; query but instead of having to pass a customer id into the query, I retrieve it from the req object so that 1. devex is easier and 2. theres no way to accidentally query other customer&#x27;s orders even though in theory access control should handle that<br><br>the product in this case is publically readable as well, i get customer id from req object and check a few details and then return the orders<br> <br> this is the full resolver <br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">ResolverArgs</span> {}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">GetCustomerOrdersResolver</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">obj, args: ResolverArgs, { req }, info</span>) =&gt; {\n  <span class=\"hljs-keyword\">const</span> customer = req.<span class=\"hljs-property\">user</span>\n\n  <span class=\"hljs-keyword\">if</span> (!customer.<span class=\"hljs-property\">id</span>) {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">&#x27;Invalid user id&#x27;</span>)\n  }\n\n  <span class=\"hljs-keyword\">if</span> (customer.<span class=\"hljs-property\">collection</span> !== <span class=\"hljs-string\">&#x27;customers&#x27;</span> || !customer.<span class=\"hljs-property\">_verified</span>) {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">&#x27;User could not be verified.&#x27;</span>)\n  }\n\n  <span class=\"hljs-keyword\">const</span> orders = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">find</span>({\n    <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;orders&#x27;</span>,\n    <span class=\"hljs-attr\">depth</span>: <span class=\"hljs-number\">3</span>,\n    <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-number\">100</span>,\n    <span class=\"hljs-attr\">sort</span>: <span class=\"hljs-string\">&#x27;-createdAt&#x27;</span>,\n    <span class=\"hljs-attr\">where</span>: {\n      <span class=\"hljs-string\">&#x27;customer.value&#x27;</span>: {\n        <span class=\"hljs-attr\">equals</span>: customer.<span class=\"hljs-property\">id</span>,\n      },\n    },\n    <span class=\"hljs-attr\">overrideAccess</span>: <span class=\"hljs-literal\">true</span>,\n  })\n\n  <span class=\"hljs-keyword\">return</span> orders\n}</code></pre><br> <br> but like you say it sounds like the resolver is not the issue<br> <br> in my request in the playground i&#x27;m passing a valid jwt token<br> <br> so when you say<br><br><blockquote>Payload&#x27;s internal field resolvers for relationship fields, requiring authentication<br></blockquote> <br> I played around with this more to try and figure it out but unfortunately I&#x27;m still stuck, @jmikrut any ideas for a solution?",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676683397632
      },
      {
        "content": "you should try passing the <code>req</code> or the <code>user</code> through to your <code>payload.find</code><br> <br> it&#x27;s still the resolver for sure. basically, you&#x27;re saying give me orders with <code>depth: 3</code><br> <br> but in reality, GraphQL doesn&#x27;t care about if you ask for <code>depth: 3</code> or not, because it will handle population for each relationship itself<br> <br> so you should only do <code>depth: 0</code> there<br> <br> and let GraphQL handle the populations that you need for you via the built-in resolvers<br> <br> it may be due to <code>depth: 3</code> actually",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676900264178
      },
      {
        "content": "🤦<br> <br> that was totally it, thanks a lot for the explanation<br> <br> the whole context ^ helps a lot for future issues as well",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676907904947
      }
    ],
    "messageCount": 20,
    "slug": "why-does-relationship-return-null-in-a-custom-graphql-query"
  },
  {
    "info": {
      "name": "Payload richtext editor blockquote doesn't work",
      "id": "1079876635387498577",
      "guildId": "967097582721572934",
      "createdAt": 1677533053014
    },
    "intro": {
      "content": "According to the intellisense I get, Payload&#x27;s default rich text editor is supposed to have a blockquote option, but when set it doesn&#x27;t show up in the UI<br> <br> ",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1079876635387498577/1079876635618197504/image.png",
          "name": "image.png",
          "id": "1079876635618197504",
          "size": 32654,
          "url": "https://cdn.discordapp.com/attachments/1079876635387498577/1079876635618197504/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1079876635387498577/1079876635618197504/image.png",
          "height": 386,
          "width": 694,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1079876635387498577/1079876635932774410/image.png",
          "name": "image.png",
          "id": "1079876635932774410",
          "size": 10860,
          "url": "https://cdn.discordapp.com/attachments/1079876635387498577/1079876635932774410/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1079876635387498577/1079876635932774410/image.png",
          "height": 273,
          "width": 932,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "521690392983371776",
      "authorName": "hypersonic.dev",
      "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
      "createdAtDate": 1677533053014
    },
    "messages": [
      {
        "content": "@hypersonic.dev your placeholder text made me lol irl. I&#x27;ll get with the team and get you an answer here. Hold tight!",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1677537018163
      },
      {
        "content": "@zubricks try to recreate this on latest using create payload app",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677588116906
      },
      {
        "content": "Hello again 😅 <br>Are there any plans to fix this issue soon? It wasn&#x27;t fixed in the <code>1.6.16</code> update",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1677780891271
      },
      {
        "content": "@hypersonic.dev I actually think the intellisense is incorrect. RichTexts can currently render <em>pasted</em> blockquotes but there is no toggle/button to format on/off of blockquote. We should be able to add this will low effort. @zubricks can you throw this on our roadmap",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677851282960
      },
      {
        "content": "Thanks for the clarification!<br> <br> I&#x27;m looking forward to it!",
        "fileAttachments": [],
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1677853208549
      },
      {
        "content": "I actually wrote a similar message yesterday but apparently closed discord before I hit send - we&#x27;ll get this on the roadmap for sure.",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1677858082690
      }
    ],
    "messageCount": 8,
    "slug": "payload-richtext-editor-blockquote-doesnt-work"
  },
  {
    "info": {
      "name": "Next.js Auth Guard inside getServerSideProps",
      "id": "1081080402946576394",
      "guildId": "967097582721572934",
      "createdAt": 1677820053565
    },
    "intro": {
      "content": "Started using Payload with Next.js and i&#x27;m interested in implementing an auth guard during SSR that makes a request to the <code>/api/users/me</code> endpoint from within <code>getServerSideProps</code> to verify if the user is authenticated or else they will get redirected.<br> <br> Would something like this work?<br><br><pre><code class=\"hljs\">export async function getServerSideProps(context: GetServerSidePropsContext) {\n  const res = await fetch(&quot;http://localhost:8080/api/users/me&quot;, {\n    credentials: &quot;include&quot;,\n  });\n  const { user, errors } = await res.json();\n\n  if (!user) {\n    return {\n      redirect: {\n        destination: &quot;/&quot;,\n        permanent: false,\n      },\n    };\n  }\n\n  return {\n    props: {\n      user: user,\n    },\n  };\n}</code></pre>",
      "fileAttachments": [],
      "authorID": "520438276964876298",
      "authorName": "Thinh Nguyen",
      "authorAvatar": "52f75597b2219461addc26b187e16dd9",
      "createdAtDate": 1677820053565
    },
    "messages": [
      {
        "content": "Hi @Thinh Nguyen ! I don&#x27;t think any kind of SSR will work for this, because this code won&#x27;t run in the user&#x27;s browser. It will run in the server, so the authentication cookies will not be present to be validated. Therefore, your code will always return a redirect to &quot;/&quot;",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1677820970144
      },
      {
        "content": "Thanks @arielarial for making this distinction clear!",
        "fileAttachments": [],
        "authorID": "520438276964876298",
        "authorName": "Thinh Nguyen",
        "authorAvatar": "52f75597b2219461addc26b187e16dd9",
        "createdAtDate": 1677825083799
      },
      {
        "content": "I know in the app folder you can get the cookies off the request, and then you can make that same <code>/me</code> fetch with:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-comment\">// you will need to get cookies from req (Context?) and then look for the payload-token cookie</span>\n\n<span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">&quot;http://localhost:8080/api/users/me&quot;</span>, {\n  <span class=\"hljs-attr\">headers</span>: {\n    <span class=\"hljs-title class_\">Authorization</span>: <span class=\"hljs-string\">`JWT <span class=\"hljs-subst\">${jwt <span class=\"hljs-keyword\">from</span> cookie on req}</span>`</span>,\n  }\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1677851840014
      },
      {
        "content": "^ @Thinh Nguyen what @Jarrod describes is the right pattern here. You just need to manually inject the token into the <code>Authorization</code> header within your server-side request. There&#x27;s a demonstration of this in our official preview example, check it out <a href=\"https://github.com/payloadcms/payload/blob/master/examples/preview/nextjs/pages/%5Bslug%5D.tsx#L74\">https://github.com/payloadcms/payload/blob/master/examples/preview/nextjs/pages/%5Bslug%5D.tsx#L74</a> . It uses <code>getStaticProps</code> but the same principle applies.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1677857776654
      },
      {
        "content": "@jacobsfletch @Jarrod this is awesome, thank you 🙏",
        "fileAttachments": [],
        "authorID": "520438276964876298",
        "authorName": "Thinh Nguyen",
        "authorAvatar": "52f75597b2219461addc26b187e16dd9",
        "createdAtDate": 1677858246520
      }
    ],
    "messageCount": 6,
    "slug": "nextjs-auth-guard-inside-getserversideprops"
  },
  {
    "info": {
      "name": "Testing api-key access in postman",
      "id": "1082271764073173022",
      "guildId": "967097582721572934",
      "createdAt": 1678104096192
    },
    "intro": {
      "content": "I added an apiUser collection to my app with the goal of setting up api-key authentication. I would like to test my setup in postman, at the url: <a href=\"http://localhost:3000/api/access\">http://localhost:3000/api/access</a> with api key authentication.  Does anyone know how to implement<br>an authorization format like this: <code>${User.slug} API-Key ${YOUR_API_KEY}</code>, in postman?<br> <br> If you ever run into this issue, the solution is to use as key &quot;Authorization&quot; and value &quot;{your_collection.slug} API-Key {Your_API_Key}&quot;🤩",
      "fileAttachments": [],
      "authorID": "915584690604359691",
      "authorName": "taongaB",
      "authorAvatar": null,
      "createdAtDate": 1678104096192
    },
    "messages": [
      {
        "content": "For anyone else stumbling upon this thread, see <a href=\"https://payloadcms.com/docs/authentication/overview#token-based-auth\">https://payloadcms.com/docs/authentication/overview#token-based-auth</a> and especially <a href=\"https://payloadcms.com/docs/authentication/config#doc\">https://payloadcms.com/docs/authentication/config#doc</a> under the &quot;Authenticating via API Key&quot; heading",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678218004590
      }
    ],
    "messageCount": 2,
    "slug": "testing-api-key-access-in-postman"
  },
  {
    "info": {
      "name": "Steps to work with Payload CMS",
      "id": "1084938665098223688",
      "guildId": "967097582721572934",
      "createdAt": 1678739934945
    },
    "intro": {
      "content": "The question is what are correct steps that most people are working with Payload CMS. As I understand, you do your development process locally. When you are changing collection in typescript, nodemon restartd local server and you see you changes on left nav menu, you see you new collection and etc. When you finish your local work - you updated and tested all your collections in typescript - you committed your changes to version control.<br><br>Production server is running by yarn serve, so you update collections (ts) at production, rebuild production, run yarn serve at production and it is ready to enter data. <br>note: production does not have nodemon, so server should be restarted there to see all recent changes.<br><br>Is that correct process?",
      "fileAttachments": [],
      "authorID": "956827460975083550",
      "authorName": "agolovan",
      "authorAvatar": null,
      "createdAtDate": 1678739934945
    },
    "messages": [
      {
        "content": "Yeah that is the gist, you can use a process manager on your server, like PM2 - just an easier way to manage the start/stop/restart of processes (i.e. yarn serve)",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678741049974
      },
      {
        "content": "thank you",
        "fileAttachments": [],
        "authorID": "956827460975083550",
        "authorName": "agolovan",
        "authorAvatar": null,
        "createdAtDate": 1678742383576
      }
    ],
    "messageCount": 2,
    "slug": "steps-to-work-with-payload-cms"
  },
  {
    "info": {
      "name": "Conditionally render fields based on a field value in a relationship",
      "id": "1077299720411689020",
      "guildId": "967097582721572934",
      "createdAt": 1676918668607
    },
    "intro": {
      "content": "For example, lets assume I have 2 collections that are related; <code>Items</code> and <code>ItemTypes</code>.<br><br><code>ItemTypes</code> has a <code>name</code> text field and a <code>sellable</code> checkbox field:<br><pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">ItemTypes</span>: <span class=\"hljs-title class_\">CollectionConfig</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&quot;itemTypes&quot;</span>,\n  <span class=\"hljs-attr\">access</span>: {\n    <span class=\"hljs-attr\">read</span>: <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-literal\">true</span>,\n  },\n  <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">useAsTitle</span>: <span class=\"hljs-string\">&quot;name&quot;</span>,\n    <span class=\"hljs-attr\">group</span>: <span class=\"hljs-string\">&quot;Items&quot;</span>,\n  },\n  <span class=\"hljs-attr\">fields</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;name&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;sellable&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;checkbox&quot;</span>,\n      <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n    },\n  ],\n};</code></pre><br><br><code>Items</code> has a <code>name</code> text field, a <code>type</code> relation and a <code>sellPrice</code> field which I want to make only render when <code>type.sellable === true</code>:<br><pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Items</span>: <span class=\"hljs-title class_\">CollectionConfig</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&quot;items&quot;</span>,\n  <span class=\"hljs-attr\">access</span>: {\n    <span class=\"hljs-attr\">read</span>: <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-literal\">true</span>,\n  },\n  <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">useAsTitle</span>: <span class=\"hljs-string\">&quot;name&quot;</span>,\n    <span class=\"hljs-attr\">group</span>: <span class=\"hljs-string\">&quot;Items&quot;</span>,\n  },\n  <span class=\"hljs-attr\">fields</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;name&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;type&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;relationship&quot;</span>,\n      <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-title class_\">ItemTypes</span>.<span class=\"hljs-property\">slug</span>,\n      <span class=\"hljs-attr\">hasMany</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;sellPrice&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;number&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">admin</span>: {\n        <span class=\"hljs-attr\">condition</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> data.<span class=\"hljs-property\">type</span>?.<span class=\"hljs-property\">sellable</span>,\n      },\n    },\n  ],\n};</code></pre><br><br>How could I do this? In the <code>condition</code> of <code>sellPrice</code>, all I get is the id of the type rather than any of the info, and it doesn&#x27;t accept an async function in order to lookup the id in the related collection.",
      "fileAttachments": [],
      "authorID": "93699784942034944",
      "authorName": "itsjxck",
      "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
      "createdAtDate": 1676918668607
    },
    "messages": [
      {
        "content": "Related and answered here:<br> <br> <a href=\"https://discord.com/channels/967097582721572934/1074901824785625149\">https://discord.com/channels/967097582721572934/1074901824785625149</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676926435597
      }
    ],
    "messageCount": 2,
    "slug": "conditionally-render-fields-based-on-a-field-value-in-a-relationship"
  },
  {
    "info": {
      "name": "Localized blocks?",
      "id": "1080200454018977902",
      "guildId": "967097582721572934",
      "createdAt": 1677610257392
    },
    "intro": {
      "content": "I&#x27;m exploring localization and I have an upcoming project that would ideally utilize localized sets of blocks. For instance, a page my contain one set of blocks for English and then another set of blocks for Spanish. <br><br>Is this supported or is it possible to support?<br> <br> I&#x27;m being silly, was trying to put the localize property on a tab definition<br> <br> my exact use-case does completely work. even allows you to fallback to the default language.",
      "fileAttachments": [],
      "authorID": "214419801039175682",
      "authorName": "Jakey",
      "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
      "createdAtDate": 1677610257392
    },
    "messages": [],
    "messageCount": 2,
    "slug": "localized-blocks"
  },
  {
    "info": {
      "name": "Preview example with app directory",
      "id": "1075079909053059203",
      "guildId": "967097582721572934",
      "createdAt": 1676389424337
    },
    "intro": {
      "content": "I&#x27;m struggling to get preview functionality working in the app directory.<br><br>I&#x27;m using the payload website + cms as a template but don&#x27;t appear to be able to get previewing, even a clean copy - I assume it works for you guys?<br><br>I&#x27;ve seen the following: <br><a href=\"https://github.com/payloadcms/payload/pull/1950\">https://github.com/payloadcms/payload/pull/1950</a>. This appears to rely on a <code>payloadToken</code> from <code>GetStaticPropsContext</code> .<br><br>How can this be accomplished within the app directory on the server?<br><br>I can only see <code>import { previewData } from &#x27;next/headers&#x27;;</code>  but this appears to only work on the client.<br><br>What I&#x27;ve implemented:<br>CMS:<br><pre><code class=\"hljs\">slug: &#x27;page&#x27;,\n  admin: {\n    useAsTitle: &#x27;Page&#x27;,\n    defaultColumns: [&#x27;title&#x27;, &#x27;slug&#x27;, &#x27;updatedAt&#x27;],\n    preview: (doc) =&gt; {\n      return `${process.env.PAYLOAD_PUBLIC_APP_URL}/api/preview?url=${formatAppURL(doc.slug)}`\n    },\n  versions: {\n    drafts: true\n  },\n  access: {\n    read: () =&gt; true,\n  },\n  },</code></pre><br>Website:<br><pre><code class=\"hljs\">export async function generateStaticParams(props) {\n  const pages = await fetchPages()\n  return pages.map((page) =&gt; {\n    return ({\n      slug: page.map(data =&gt; data?.slug),\n    })\n  })\n}</code></pre>",
      "fileAttachments": [],
      "authorID": "536888652257558538",
      "authorName": "remy",
      "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
      "createdAtDate": 1676389424337
    },
    "messages": [
      {
        "content": "@remy  afaik Next.js app directory does not yet support preview, but we&#x27;ll be the first to implement it as soon as it ships! That example uses the pages directory and will be merged within a day or two.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676389721052
      },
      {
        "content": "The woes of life of the bleeding edge 🗡️🩸<br> <br> Does this mean your website cms doesn&#x27;t have a functioning preview?",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676389945397
      },
      {
        "content": "Correct 🩸<br> <br> Livin on the edge<br> <br> It had preview for ~2 weeks until we decided to migrate to Next.js 13 beta",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676390095072
      },
      {
        "content": "For my future self and anyone else that looks this up, I believe this constitutes <em>Preview mode</em>: <a href=\"https://beta.nextjs.org/docs/app-directory-roadmap\">https://beta.nextjs.org/docs/app-directory-roadmap</a>",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676392276442
      },
      {
        "content": "Just merged in a preview example in you wanna take a look: <a href=\"https://github.com/payloadcms/payload/tree/master/examples/preview\">https://github.com/payloadcms/payload/tree/master/examples/preview</a><br> <br> It includes an example Next.js app running Next 13 <em>pages</em> directory.<br> <br> Once that Next.js roadmap item is complete we can throw an <em>app</em> directory example in there too",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676490285665
      },
      {
        "content": "Nice one, thanks @jacobsfletch. I&#x27;ve come to the end of my spike but will likely be picking this up again soon",
        "fileAttachments": [],
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676560822362
      }
    ],
    "messageCount": 11,
    "slug": "preview-example-with-app-directory"
  },
  {
    "info": {
      "name": "Nested Docs UI improvement",
      "id": "1082323786801631233",
      "guildId": "967097582721572934",
      "createdAt": 1678116499377
    },
    "intro": {
      "content": "Hey all and @jacobsfletch, I&#x27;ve added the official Nested Docs plugin to my Payload instance. It works perfectly fine, though there is a significant UI deficiency I think.<br><br>In the list view of collection docs,  there is no visual indicator of the relationships.<br><br>The minimal implementation would probably consist of 2 features:<br>- add a dash or other indicator in front of the children doc&#x27;s title<br>- alter the sorting so that children are getting properly ordered right after their parent<br>...aka WP&#x27;s default behavior<br><br>Ver. #2 - recreate what Nested Pages WP plugin does.<br><br>Any chance of getting this in? 🙂<br><br>Thanks!",
      "fileAttachments": [],
      "authorID": "930428018546049024",
      "authorName": "jankocian",
      "authorAvatar": "a2eb9a4ddee5f4f66f64d16c26144b21",
      "createdAtDate": 1678116499377
    },
    "messages": [
      {
        "content": "👍  you can add a <code>fullTitle</code> field to your collection with a <code>beforeChange</code> field hook to populate based on your breadcrumbs, something like this:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> populateFullTitle = (<span class=\"hljs-attr\">breadcrumbs</span>: <span class=\"hljs-built_in\">unknown</span>): <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-function\"><span class=\"hljs-params\">undefined</span> =&gt;</span> {\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">isArray</span>(breadcrumbs)) {\n    <span class=\"hljs-keyword\">return</span> breadcrumbs.<span class=\"hljs-title function_\">reduce</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">title, breadcrumb, i</span>) =&gt;</span> {\n      <span class=\"hljs-keyword\">if</span> (i === <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${breadcrumb.label}</span>`</span>;\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${title}</span> &gt; <span class=\"hljs-subst\">${breadcrumb.label}</span>`</span>;\n    }, <span class=\"hljs-string\">&#x27;&#x27;</span>);\n  }\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">undefined</span>;\n};</code></pre><br>And here&#x27;s your field config:<br><pre><code class=\"hljs ts\"> {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;fullTitle&#x27;</span>,\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text&#x27;</span>,\n    <span class=\"hljs-attr\">hooks</span>: {\n    <span class=\"hljs-attr\">beforeChange</span>: [\n        populateFullTitle,\n    ],\n  },\n    <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">components</span>: {\n        <span class=\"hljs-title class_\">Field</span>: <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-literal\">null</span>,\n    },\n  },\n},</code></pre><br> <br> Then you can put this field in your <code>defaultColumns</code> so that it displays in the table view by default: <br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">defaultColumns</span>: [\n  <span class=\"hljs-string\">&#x27;fullTitle&#x27;</span>,\n]</code></pre><br> <br> And now you can also sort by this field in your queries<br> <br> <code>?sort=fullTitle</code>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678116956230
      },
      {
        "content": "Hi @jacobsfletch, thank a lot for your suggestion! 🙂 And how do I make the collection list sorted by fullTitle by default for all the users?<br><br>Also, if anyone stumbles upon this one, I&#x27;ll just clarify that the Field Hook gets passed args and within these, there are breadcrumbs in <code>args.data.breadcrumbs</code>.",
        "fileAttachments": [],
        "authorID": "930428018546049024",
        "authorName": "jankocian",
        "authorAvatar": "a2eb9a4ddee5f4f66f64d16c26144b21",
        "createdAtDate": 1678203978929
      },
      {
        "content": "I <em>think</em> if you set <code>fullTitle</code> as your <code>useAsTitle</code> then include it in <code>defaultColumns</code>, the list view will automatically sort by this field although I have not tested this<br> <br> Default sort would be a great feature to add",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678204205543
      }
    ],
    "messageCount": 7,
    "slug": "nested-docs-ui-improvement"
  },
  {
    "info": {
      "name": "FilterOptions for Array contains Array",
      "id": "1075322184697925702",
      "guildId": "967097582721572934",
      "createdAt": 1676447187352
    },
    "intro": {
      "content": "Hi,<br><br>I have the following Issue: <br><br>I have a category collection and a module collection, both of these have a technologies field (relationship field with hasMany option for a different collection). In my module field, I want to have a category field which automatically filters the available categories by the technologies of the module. <br><br>My main idea is to write a custom function that maps over the technologies of the module and checks if the technology is in the array of the categories&#x27; technology field and combine it with the OR clause. <br><br>I am honestly not sure if that is a viable solution and maybe there is something simpler, so if anybody has an idea it would be cool to hear it. Thanks in advance",
      "fileAttachments": [],
      "authorID": "381079209197699083",
      "authorName": "Dave Damage",
      "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
      "createdAtDate": 1676447187352
    },
    "messages": [
      {
        "content": "Have you seen the filterOptions property on relationship fields? It might be just what you are looking for <a href=\"https://payloadcms.com/docs/fields/relationship#filtering-relationship-options\">https://payloadcms.com/docs/fields/relationship#filtering-relationship-options</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676464167250
      },
      {
        "content": "Yeah, that&#x27;s what I am using. Sorry for not mentioning that<br> <br> <pre><code class=\"hljs\">    {\n      name: &#x27;category&#x27;,\n      label: &#x27;Themenblock&#x27;,\n      type: &#x27;relationship&#x27;,\n      required: true,\n      relationTo: &#x27;categories&#x27;,\n      filterOptions: ({ data }) =&gt; {\n        const query = data?.technologies?.map((id) =&gt; ({\n          technologies: {\n            in: id,\n          },\n        }));\n        return {\n          or: query,\n        };\n      },\n    },</code></pre>",
        "fileAttachments": [],
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1676532403186
      },
      {
        "content": "hi @Dave Damage - I think you&#x27;re on the right path here. I would expect the filterOptions query to look something like this:<br><br><pre><code class=\"hljs\">      filterOptions: ({ data }) =&gt; {\n        return {\n          technologies: { in: data.technologies },\n        };\n      },</code></pre>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678101445394
      },
      {
        "content": "Thanks that solved it",
        "fileAttachments": [],
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1678102196067
      }
    ],
    "messageCount": 5,
    "slug": "filteroptions-for-array-contains-array"
  },
  {
    "info": {
      "name": "Is it possible to create a data collection as an array of strings instead of an array of objects wit",
      "id": "1085590384614322337",
      "guildId": "967097582721572934",
      "createdAt": 1678895316986
    },
    "intro": {
      "content": "Is there a way to generate a data collection that is an array of strings, for example:<br><br><code>interests: [&quot;interest one&quot;, &quot;interest two&quot;, ...]</code> instead of an array of objects as it currently is:<br><br><code>interests: [{&quot;id&quot;: &quot;1234&quot;, &quot;value&quot;: &quot;interest one&quot;}, {&quot;id&quot;: &quot;1235&quot;, &quot;value&quot;: &quot;interest two&quot;}, ...]</code>?",
      "fileAttachments": [],
      "authorID": "410868850712903681",
      "authorName": "JulianDM1995",
      "authorAvatar": "220555b59e76db93ef81b5a96e6ecc4c",
      "createdAtDate": 1678895316986
    },
    "messages": [
      {
        "content": "How about JSON? <a href=\"https://payloadcms.com/docs/fields/json\">https://payloadcms.com/docs/fields/json</a><br> <br> There may be a better way than JSON<br> <br> But alternatively, you could hook into the field hooks<br> <br> <a href=\"https://payloadcms.com/docs/hooks/fields\">https://payloadcms.com/docs/hooks/fields</a><br> <br> And either format the field, or save to a field that is formatted as you want",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678895617408
      },
      {
        "content": "Is there a reason to not just use<br><pre><code class=\"hljs ts\">interests.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">i</span> =&gt;</span> i.<span class=\"hljs-property\">value</span>);</code></pre><br>in your frontend to receive an array of strings?",
        "fileAttachments": [],
        "authorID": "312222695553105931",
        "authorName": "linus",
        "authorAvatar": "41162e67c4d55d8e5bdbf2e70821c7c8",
        "createdAtDate": 1678903673268
      },
      {
        "content": "i agree with everything above, but one other note, we are planning to add <code>hasMany: true</code> to the <code>text</code> field at some point in the future as well, which will allow for an array of strings<br> <br> but right now we don&#x27;t support that",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678907986283
      }
    ],
    "messageCount": 8,
    "slug": "is-it-possible-to-create-a-data-collection-as-an-array-of-strings-instead-of-an-array-of-objects-wit"
  },
  {
    "info": {
      "name": "Error using payload generate graphQLSchema",
      "id": "1069809115544694805",
      "guildId": "967097582721572934",
      "createdAt": 1675132769238
    },
    "intro": {
      "content": "Recently, started getting this error when trying to run <code>payload generate:graphQLSchema</code>:<br><br><pre><code class=\"hljs\">payload/node_modules/graphql/utilities/printSchema.js:54\n  const directives = schema.getDirectives().filter(directiveFilter);\n                            ^\n\nTypeError: Cannot read properties of undefined (reading &#x27;getDirectives&#x27;)</code></pre><br><br>The full command I&#x27;m using is <code>dotenv payload generate:graphQLSchema</code>, and <code>PAYLOAD_CONFIG_PATH</code> is defined in .env, though I have also tried running it with <code>-v PAYLOAD_CONFIG_PATH=src/payload.config.ts</code> just to be sure.<br><br>I have generated the GraphQL schema successfully recently, so wondering if this looks familiar to anyone.",
      "fileAttachments": [],
      "authorID": "1033006865661050921",
      "authorName": "\\ ឵឵឵",
      "authorAvatar": null,
      "createdAtDate": 1675132769238
    },
    "messages": [
      {
        "content": "Fixed in 1.6.3 <a href=\"https://github.com/payloadcms/payload/releases/tag/v1.6.3\">https://github.com/payloadcms/payload/releases/tag/v1.6.3</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675438399285
      },
      {
        "content": "@denolfe Thanks!",
        "fileAttachments": [],
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675441298530
      },
      {
        "content": "@denolfe I am getting a different error<br> <br> const err = new MongooseError(message);<br>                      ^<br><br>MongooseError: Operation <code>users.countDocuments()</code> buffering timed out after 10000ms<br> <br> I updated to version 1.6.12",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676688654279
      },
      {
        "content": "That typically indicates a connectivity issue to your mongo server<br> <br> or a permissions issue",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676860760014
      }
    ],
    "messageCount": 7,
    "slug": "error-using-payload-generate-graphqlschema"
  },
  {
    "info": {
      "name": "Please fix the pagination UX/UI issue",
      "id": "1083393797406326784",
      "guildId": "967097582721572934",
      "createdAt": 1678371609785
    },
    "intro": {
      "content": "Users shouldn&#x27;t have to move their mouse when clicking <code>&gt;</code> <code>&lt;</code> buttons to continue forward or backwards. It&#x27;s a terrible user experience, and a simple one to address.<br><br>Please fix.<br><br>Here&#x27;s a video of the issue I&#x27;m describing: <a href=\"https://www.dropbox.com/s/hd1tzu9ueutk5n3/Screen%20Recording%202023-03-09%20at%2008.47.39.mov?dl=0\">https://www.dropbox.com/s/hd1tzu9ueutk5n3/Screen%20Recording%202023-03-09%20at%2008.47.39.mov?dl=0</a>",
      "fileAttachments": [],
      "authorID": "357456032454410240",
      "authorName": "jakehopking",
      "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
      "createdAtDate": 1678371609785
    },
    "messages": [
      {
        "content": "Go ahead and open an issue with this info. We can take a look 👍<br> <br> We&#x27;re also always open to PRs for things like this.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1678374082581
      },
      {
        "content": "Would love to. However I barely have enough time for my own project 😦<br> <br> Created a bug report on github for you",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1678378302326
      }
    ],
    "messageCount": 4,
    "slug": "please-fix-the-pagination-ux-ui-issue"
  },
  {
    "info": {
      "name": "Bug Report payload 1.6.19-20",
      "id": "1085455127076409414",
      "guildId": "967097582721572934",
      "createdAt": 1678863069076
    },
    "intro": {
      "content": "Enabling versioning in old collection.  Does  not show data on dashboard. but the data exist in db. If new data is add it is shown in dashboard.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1085455127076409414/1085455127202234388/image.png",
          "name": "image.png",
          "id": "1085455127202234388",
          "size": 24214,
          "url": "https://cdn.discordapp.com/attachments/1085455127076409414/1085455127202234388/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1085455127076409414/1085455127202234388/image.png",
          "height": 523,
          "width": 1395,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1085455127076409414/1085455127437127740/image.png",
          "name": "image.png",
          "id": "1085455127437127740",
          "size": 62433,
          "url": "https://cdn.discordapp.com/attachments/1085455127076409414/1085455127437127740/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1085455127076409414/1085455127437127740/image.png",
          "height": 608,
          "width": 1166,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1085455127076409414/1085455127701360650/image.png",
          "name": "image.png",
          "id": "1085455127701360650",
          "size": 49024,
          "url": "https://cdn.discordapp.com/attachments/1085455127076409414/1085455127701360650/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1085455127076409414/1085455127701360650/image.png",
          "height": 608,
          "width": 1166,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "707015513825345537",
      "authorName": "Ronok",
      "authorAvatar": null,
      "createdAtDate": 1678863069076
    },
    "messages": [
      {
        "content": "I have the same issue, i had data in the collection and after enabling versions it dissappeared, but the data was still in my db. Also, took new data without problem.",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1678865832841
      },
      {
        "content": "Yeah so this is to be expected when flipping the switch on versions. <br><br>Let me do my best to explain the issue here, and then how to resolve it.<br><br>With versions enabled, a new collection will be created for the main collection - in your case it would be <code>_tests_versions</code>. When a document is saved, updated, deleted the corresponding versions collection will have a copy of the document created there. 5 separate updates to the main document means 5 versions will be created.<br><br>Now, the admin panel dashboard always fetches from the versions collection so it can display the most up-to-date document. In your case, your documents were created before the versions table existed so it did not save any there. The admin panel goes to query the versions table and returns only the ones that you have recently saved after enabling versions.<br><br>To resolve this, you can run the script in the following release notes that will loop over documents in your main collection and  ensure every doc has at least 1 version doc. This way when you go to the admin panel you will see them all there. You will only need to run this script once for this collection, since it will create the first version for each doc that does not already have a version saved.<br><br>Jump to the &quot;Versions may need to be migrated&quot; section here: <a href=\"https://github.com/payloadcms/payload/releases/tag/v1.6.1\">https://github.com/payloadcms/payload/releases/tag/v1.6.1</a>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678883160533
      },
      {
        "content": "Thanks it worked..",
        "fileAttachments": [],
        "authorID": "707015513825345537",
        "authorName": "Ronok",
        "authorAvatar": null,
        "createdAtDate": 1678947262785
      }
    ],
    "messageCount": 3,
    "slug": "bug-report-payload-1619-20"
  },
  {
    "info": {
      "name": "Migrate from KeystoneJS v4 (Keystone Classic)",
      "id": "1070191210834182194",
      "guildId": "967097582721572934",
      "createdAt": 1675223867854
    },
    "intro": {
      "content": "Ive got a number of older sites running keystone v4... Lately been wondering if i&#x27;ts possible to migrate these over to Payload. Seems doable, but does anybody have any insight to how challenging/possible this would be or have any ideas, pointers, experience doing something similar?",
      "fileAttachments": [],
      "authorID": "958604809215283250",
      "authorName": "joephuz",
      "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
      "createdAtDate": 1675223867854
    },
    "messages": [
      {
        "content": "I haven&#x27;t used keystone for quite some time, but really what this comes down to is massaging data from keystone into the right form in order to put into Payload. That will determine how difficult of a task this is. You&#x27;d use the Payload local API for this inside of a script.<br> <br> Here is some pseudo-code for you:<br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\n\nrequire(&#x27;dotenv&#x27;).config();\n\nconst { PAYLOAD_SECRET, MONGODB_URI } = process.env;\n\nconst migratePosts = async () =&gt; {\n  await payload.init({\n    secret: PAYLOAD_SECRET,\n    mongoURL: MONGODB_URI,\n    local: true,\n  });\n\n  // Retrieve &#x27;Posts&#x27; from keystone&#x27;\n  // Modify data accordingly\n  const postsToMigrate = [];\n  const adjustedPostData = adjust(postsToMigrate);\n\n  // Create new &#x27;Posts&#x27; in Payload\n  adjustedPostData.map(async post =&gt; {\n    const newPost = await payload.create({ collection: &#x27;posts&#x27;, data: post });\n  })\n\n};\n\nmigratePosts();</code></pre><br> <br> Also, here is a more advanced example migrating csv data which might be good to look at: <a href=\"https://github.com/payloadcms/payload/discussions/1660#discussioncomment-4485387\">https://github.com/payloadcms/payload/discussions/1660#discussioncomment-4485387</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675441025988
      },
      {
        "content": "Thanks for your feedback @denolfe … I’ve been working on this and it’s coming along great. I actually just started running the payload and keystone in tandem on different ports. Then in the keystone just make myself a temporary endpoint to hit payloads REST api after transforming the data to to the format for payload. Mostly straightforward but the trickiest part is the media files since those are handled drastically different (better) in payload. But overall got all of my tests working, just in the grunt work phase. Finally my front end should drop in pretty painlessly just tweaking all the queries over with payloads local Api! 👍<br> <br> Another side note for the media files.. the original app is using S3 storage. I found the payload plugin which is AMAZING, but I had to trick it to port over my existing files/links. i did this by createing a basic, “not upload enabled” collection that mirrors the payload  media collection schema just using text and numbers etc. because payload would error if you hit the api without a file to upload. Once I run my script to inject all the existing docs I swap the collection slugs for the temporary “not upload” collection and the real upload collection and boom! Got all the s3 files ready to go!",
        "fileAttachments": [],
        "authorID": "958604809215283250",
        "authorName": "joephuz",
        "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
        "createdAtDate": 1675918663747
      },
      {
        "content": "Nice, this script might be somewhat relevant as well: <a href=\"https://github.com/payloadcms/payload/discussions/1834\">https://github.com/payloadcms/payload/discussions/1834</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675958523350
      },
      {
        "content": "Yes! I needed this thanks so much🙏",
        "fileAttachments": [],
        "authorID": "958604809215283250",
        "authorName": "joephuz",
        "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
        "createdAtDate": 1676095682747
      },
      {
        "content": "I get the this error running that script<br><br>Unable to find documents with payload<br>APIError: The collection with slug media can&#x27;t be found.",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1676501749251
      },
      {
        "content": "Are you trying to regenerate the media sizes like that script is designed for? I linked to that script as an example of how to interact w/ the Payload local API via script.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676505621625
      },
      {
        "content": "Yeah, I just trying regenerate all my images on the server<br> <br> @denolfe I resolved my issue and added a github comment here <a href=\"https://github.com/payloadcms/payload/discussions/1834#discussioncomment-4989249\">https://github.com/payloadcms/payload/discussions/1834#discussioncomment-4989249</a> of how I resolved the issue",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1676506841387
      },
      {
        "content": "@christopher.nowlan Great, thanks for doing that 👍",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676554605137
      },
      {
        "content": "No worries.  I am happy to assist",
        "fileAttachments": [],
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1676589626859
      }
    ],
    "messageCount": 13,
    "slug": "migrate-from-keystonejs-v4-keystone-classic"
  },
  {
    "info": {
      "name": "How to setup row of image inside rich text?",
      "id": "1075195583108755556",
      "guildId": "967097582721572934",
      "createdAt": 1676417003181
    },
    "intro": {
      "content": "I want to implement multiple image in one row, does anybody know how to do this?",
      "fileAttachments": [],
      "authorID": "950202910095081473",
      "authorName": "johnmadrigal_",
      "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
      "createdAtDate": 1676417003181
    },
    "messages": [
      {
        "content": "hi @johnmadrigal_ - this would require a custom rich text element. I haven&#x27;t seen an example for multiple images in a row but checkout this thread with an awesome custom element example <a href=\"https://discord.com/channels/967097582721572934/1075704321238368296/1076154967204823110\">https://discord.com/channels/967097582721572934/1075704321238368296/1076154967204823110</a>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678099910405
      }
    ],
    "messageCount": 1,
    "slug": "how-to-setup-row-of-image-inside-rich-text"
  },
  {
    "info": {
      "name": "Local API usage",
      "id": "1083405494154170389",
      "guildId": "967097582721572934",
      "createdAt": 1678374398507
    },
    "intro": {
      "content": "Is the Local API not intended for use by FE applications?<br>Or am I just holding it wrong?<br><br>The listed common use cases don&#x27;t include it but the &quot;tip&quot; on the documentation page says <code>The Local API is incredibly powerful when used with server-side rendering app frameworks like NextJS.</code> <br><br>I&#x27;m running the following inside of the <code>getServerSideProps</code> of a page:<br><pre><code class=\"hljs\">await payload.init({\n    secret: process.env.PAYLOAD_SECRET ?? &#x27;&#x27;,\n    mongoURL: process.env.MONGODB_URI ?? &#x27;&#x27;,\n    local: true,\n  });</code></pre><br>And I&#x27;m getting a <code>cannot find Payload config.</code><br><br>Edit: my payload code and fe/next code are in separate repos so the config isn&#x27;t &quot;near by&quot;",
      "fileAttachments": [],
      "authorID": "1024707084224307272",
      "authorName": "kariyngva",
      "authorAvatar": "a803115435eececf5847786b617b739f",
      "createdAtDate": 1678374398507
    },
    "messages": [
      {
        "content": "You will need the config in order to boot up payload. So if you <em>really</em> wanted to use the local api you would have to copy it over. The docs are mainly referring to scenarios where the FE/BE are colocated. <br><br>In your case though, I would probably save myself the hassle of copying configs, and make fetch requests to your hosted payload api endpoints.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678375616660
      },
      {
        "content": "Yeah it makes sense, kinda figured I&#x27;d need to provide the collections/globals at the very least. Thanks 😄",
        "fileAttachments": [],
        "authorID": "1024707084224307272",
        "authorName": "kariyngva",
        "authorAvatar": "a803115435eececf5847786b617b739f",
        "createdAtDate": 1678375871365
      }
    ],
    "messageCount": 2,
    "slug": "local-api-usage"
  },
  {
    "info": {
      "name": "After fresh install (npx create-payload-app), npm run dev is not working",
      "id": "1077548706536099911",
      "guildId": "967097582721572934",
      "createdAt": 1676978031525
    },
    "intro": {
      "content": "I have done a fresh install on my mac (verson 10.15.7) with node version 18. when i run npm run dev, it throw this error  <pre><code class=\"hljs\">[nodemon] 2.0.20\n[nodemon] to restart at any time, enter `rs`\n[nodemon] watching path(s): *.*\n[nodemon] watching extensions: ts\n[nodemon] starting `ts-node src/server.ts`\ndyld: lazy symbol binding failed: Symbol not found: _pthread_jit_write_protect_supported_np\n  Referenced from: /Users/mac/work/RnD/CMS/payload/coddle-cms/node_modules/payload/node_modules/sharp/build/Release/../.././vendor/8.13.3/darwin-x64/lib/libvips-cpp.42.dylib\n  Expected in: /usr/lib/libSystem.B.dylib\n\ndyld: Symbol not found: _pthread_jit_write_protect_supported_np\n  Referenced from: /Users/mac/work/RnD/CMS/payload/coddle-cms/node_modules/payload/node_modules/sharp/build/Release/../.././vendor/8.13.3/darwin-x64/lib/libvips-cpp.42.dylib\n  Expected in: /usr/lib/libSystem.B.dylib\n\n[nodemon] app crashed - waiting for file changes before starting...</code></pre>",
      "fileAttachments": [],
      "authorID": "273835182979678221",
      "authorName": "Villain Behind Glasses",
      "authorAvatar": "7ab84e77693b708d385126f23ed19cf1",
      "createdAtDate": 1676978031525
    },
    "messages": [
      {
        "content": "Hey @Villain Behind Glasses! Happy to get to the bottom of this issue with you! After some further research, I would take a look at this link below. The issue at hand may be more related to your mac version in connection with the Sharp dependency.<br><br><a href=\"https://github.com/lovell/sharp/issues/3438\">https://github.com/lovell/sharp/issues/3438</a><br><br>Let me know if you need anything else!",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1677274438908
      },
      {
        "content": "You can also run it in Docker if you have it installed by issuing <code>docker-compose up</code>. That way you don&#x27;t need to also have MongoDB installed.",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1677412354359
      },
      {
        "content": "@patrikkozak thank you.<br> <br> @Jesse Sivonen i will try it with the docker",
        "fileAttachments": [],
        "authorID": "273835182979678221",
        "authorName": "Villain Behind Glasses",
        "authorAvatar": "7ab84e77693b708d385126f23ed19cf1",
        "createdAtDate": 1677566824422
      }
    ],
    "messageCount": 4,
    "slug": "after-fresh-install-npx-create-payload-app-npm-run-dev-is-not-working"
  },
  {
    "info": {
      "name": "Remove unpublished pages from Page list in the Menu",
      "id": "1084820663841337364",
      "guildId": "967097582721572934",
      "createdAt": 1678711801253
    },
    "intro": {
      "content": "I need to filter the pagelist, which has list of pages that are only published! If the page is saved as a draft, I do not want that page to be in the page list.<br>Is this possible?<br>As far as I understand, the page list is rendered based on the <strong>Page Slug </strong> from which I cannot figure out to filter the pages",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1084820663841337364/1084820663979757658/image.png",
          "name": "image.png",
          "id": "1084820663979757658",
          "size": 15093,
          "url": "https://cdn.discordapp.com/attachments/1084820663841337364/1084820663979757658/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1084820663841337364/1084820663979757658/image.png",
          "height": 376,
          "width": 1071,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "1070298006605279282",
      "authorName": "Akt771",
      "authorAvatar": null,
      "createdAtDate": 1678711801253
    },
    "messages": [
      {
        "content": "<a href=\"https://payloadcms.com/docs/fields/relationship#filtering-relationship-options\">https://payloadcms.com/docs/fields/relationship#filtering-relationship-options</a><br><br>You can add filter options on relationship fields<br> <br> so you can just return _status { equals: &#x27;published&#x27; }",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678712196876
      },
      {
        "content": "Thank you! This worked",
        "fileAttachments": [],
        "authorID": "1070298006605279282",
        "authorName": "Akt771",
        "authorAvatar": null,
        "createdAtDate": 1678717558070
      }
    ],
    "messageCount": 3,
    "slug": "remove-unpublished-pages-from-page-list-in-the-menu"
  },
  {
    "info": {
      "name": "Unable to view a collection",
      "id": "1085826482145865778",
      "guildId": "967097582721572934",
      "createdAt": 1678951607024
    },
    "intro": {
      "content": "Hi. I&#x27;ve created a collection called PortfolioItems.ts in the collections folder and added it to the Payload config file. I&#x27;ve restarted the Payload server. It&#x27;s not displaying in the Payload admin page? What am I doing wrong?<br>Repo: <a href=\"https://github.com/taunhealy/PayloadHotel2\">https://github.com/taunhealy/PayloadHotel2</a><br> <br> PortfolioItems collection is registered in the MongoDB database<br> <br> It&#x27;s not displaying in Payload admin panel",
      "fileAttachments": [],
      "authorID": "479030528084017165",
      "authorName": "Taun",
      "authorAvatar": "d683047f752adb18431194752086132e",
      "createdAtDate": 1678951607024
    },
    "messages": [
      {
        "content": "are the other types showing in the admin panel? @Taun",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678961156149
      },
      {
        "content": "Pages, Media and User",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678961280257
      },
      {
        "content": "are you running the correct project? right port and db creds? cause you dont have a <code>User</code> declared in this ^ config",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678961417875
      },
      {
        "content": "Does this look right?<br><br>MONGO_URL=mongodb+srv://taunhealy:&lt;password&gt;@cluster0.zpesqyk.mongodb.net/?retryWrites=true&amp;w=majority<br><br>With my password inserted<br> <br> The cluster on  Mongo contains the PortfolioItems<br> <br> With no query items yet as I haven&#x27;t submitted from Payload<br> <br> When i nav to localhost:3000 it used to return 404 error message, now it returns errror:<br><br>&quot;missing required error components, refreshing...&quot;<br><br>Maybe that is related<br> <br> ",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678961559319
      },
      {
        "content": "Did you configure your localhosts for payload and next properly in the .env?<br> <br> As per the instructions to copy the .env.example",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678962225569
      },
      {
        "content": "I think I renamed the env.example to env. <br><br>Is this fine? NEXT_PUBLIC_SERVER_URL=<a href=\"http://localhost:3000\">http://localhost:3000</a><br>PAYLOAD_PUBLIC_SERVER_URL=<a href=\"http://localhost:3000\">http://localhost:3000</a><br> <br> .env *<br> <br> PORT=3000 and my secret key is there<br> <br> <pre><code class=\"hljs\"> import { buildConfig } from &#x27;payload/config&#x27;;\nimport dotenv from &#x27;dotenv&#x27;;\nimport Page from &#x27;./collections/Page&#x27;;\nimport Media from &#x27;./collections/Media&#x27;;\nimport PortfolioItems from &#x27;./collections/PortfolioItems&#x27;;\n\ndotenv.config();\n\nexport default buildConfig({\n  serverURL: process.env.PAYLOAD_PUBLIC_SERVER_URL,\n  collections: [\n    Page,\n    Media,\n    PortfolioItems,\n  ],\n});\n </code></pre>",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678962320903
      },
      {
        "content": "put them on different ports<br> <br> like next on 3001 and try again",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678962505834
      },
      {
        "content": "as well as PORT:3001?<br> <br> Putting those 3 on 3001 returned no errors wihtin VScode, though browser returned &quot;This site can’t be reachedlocalhost refused to connect.&quot;",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678962583552
      },
      {
        "content": "oh actually i just read the original docs better, whats your output from <code>yarn dev</code>?",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678962700365
      },
      {
        "content": "<pre><code class=\"hljs\"> \n\nnpm run dev\n\n&gt; payload-nextjs-server@0.0.1 dev\n&gt; ts-node server.ts\n\n[10:30:56] INFO (payload): Connected to Mongo server successfully!\n[10:30:56] INFO (payload): Starting Payload...\ninfo  - Loaded env from C:\\git\\2160\\PayloadHotel1\\.env\nwebpack built a9cb4e3b94061ca113e9 in 10522ms\nWARNING in ./node_modules/slate-react/dist/index.es.js 457:70-88\nexport &#x27;Scrubber&#x27; (imported as &#x27;Scrubber&#x27;) was not found in &#x27;slate&#x27; (possible exports: Editor, Element, Location, Node, Operation, Path, PathRef, Point, PointRef, Range, RangeRef, Span, Text, Transforms, createEditor)\n\nWARNING in ./node_modules/slate-react/dist/index.es.js 602:75-93\nexport &#x27;Scrubber&#x27; (imported as &#x27;Scrubber&#x27;) was not found in &#x27;slate&#x27; (possible exports: Editor, Element, Location, Node, Operation, Path, PathRef, Point, PointRef, Range, RangeRef, Span, Text, Transforms, createEditor)\n\nWARNING in ./node_modules/slate-react/dist/index.es.js 674:77-95\nexport &#x27;Scrubber&#x27; (imported as &#x27;Scrubber&#x27;) was not found in &#x27;slate&#x27; (possible exports: Editor, Element, Location, Node, Operation, Path, PathRef, Point, PointRef, Range, RangeRef, Span, Text, Transforms, createEditor)\n\nWARNING in ./node_modules/slate-react/dist/index.es.js 4662:95-113\nexport &#x27;Scrubber&#x27; (imported as &#x27;Scrubber&#x27;) was not found in &#x27;slate&#x27; (possible exports: Editor, Element, Location, Node, Operation, Path, PathRef, Point, PointRef, Range, RangeRef, Span, Text, Transforms, createEditor)\n\nWARNING in ./node_modules/slate-react/dist/index.es.js 4666:71-89\nexport &#x27;Scrubber&#x27; (imported as &#x27;Scrubber&#x27;) was not found in &#x27;slate&#x27; (possible exports: Editor, Element, Location, Node, Operation, Path, PathRef, Point, PointRef, Range, RangeRef, Span, Text, Transforms, createEditor)\n\nwebpack compiled with 5 warnings\n&lt;w&gt; [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: No serializer registered for ConcatSource\n&lt;w&gt; while serializing webpack/lib/util/registerExternalSerializer.webpack-sources/ConcatSource -&gt; Array { 2 items } -&gt; ConcatSource </code></pre><br> <br> I used npm",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678962739015
      },
      {
        "content": "i would actually recommend yarn, there are subtle differences in peer dependency resolutions where npm struggles<br><br>that said run a <code>yarn install</code> again see if it changes this output, although none of it is an error",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678963020971
      },
      {
        "content": "<pre><code class=\"hljs\"> PS C:\\git\\2160\\PayloadHotel1&gt; yarn install\nyarn install v1.22.19\nwarning package-lock.json found. Your project contains lock files generated by tools other than Yarn. It is advised not to mix package managers in order to avoid resolution inconsistencies caused by unsynchronized lock files. To clear this warning, remove package-lock.json.\n[1/4] Resolving packages...\n[2/4] Fetching packages...\n[3/4] Linking dependencies...\n( some warnings were here)\n\nerror An unexpected error occurred: &quot;EPERM: operation not permitted, copyfile &#x27;C:\\\\Users\\\\taunh\\\\AppData\\\\Local\\\\Yarn\\\\Cache\\\\v6\\\\npm-ansi-regex-5.0.1-integrity\\\\node_modules\\\\ansi-regex\\\\package.json&#x27; -&gt; &#x27;C:\\\\git\\\\2160\\\\PayloadHotel1\\\\node_modules\\\\ansi-regex\\\\package.json&#x27;&quot;.\ninfo If you think this is a bug, please open a bug report with the information provided in &quot;C:\\\\git\\\\2160\\\\PayloadHotel1\\\\yarn-error.log&quot;.\ninfo Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.\nPS C:\\git\\2160\\PayloadHotel1&gt; </code></pre>",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678963376730
      },
      {
        "content": "Also might be worth trying to make a GET request to <code>/api/access</code> to see if the collection shows up there<br> <br> <a href=\"https://payloadcms.com/docs/authentication/operations\">https://payloadcms.com/docs/authentication/operations</a>",
        "fileAttachments": [],
        "authorID": "312222695553105931",
        "authorName": "linus",
        "authorAvatar": "41162e67c4d55d8e5bdbf2e70821c7c8",
        "createdAtDate": 1678963410186
      },
      {
        "content": "Thanks, I&#x27;ll try that<br> <br> 3001 isn&#x27;t working",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678963461838
      },
      {
        "content": "nah reverse the port to the initial, cause i think the setup in this case is meant to be a little different with the monorepo<br> <br> though I never tried running payload in a monorepo myself so idk of the caveats yet",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678963553520
      },
      {
        "content": "It&#x27;s back to returning this error. Strange because the first time i tried Payload it worked locally. I don&#x27;t remember change those server URLs. What should they be?<br> <br> I&#x27;m going to start a fresh project",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1085826482145865778/1085876903262552145/image.png",
            "name": "image.png",
            "id": "1085876903262552145",
            "size": 202840,
            "url": "https://cdn.discordapp.com/attachments/1085826482145865778/1085876903262552145/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1085826482145865778/1085876903262552145/image.png",
            "height": 994,
            "width": 2557,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678963628423
      },
      {
        "content": "I recommend you try a separate approach tbh, it&#x27;ll make hosting easier for you as well<br><a href=\"https://github.com/payloadcms/website\">https://github.com/payloadcms/website</a><br><a href=\"https://github.com/payloadcms/website-cms\">https://github.com/payloadcms/website-cms</a><br> <br> Sorta ^ complex templates but maybe it&#x27;ll help you structure your codebase better from the start",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678963831514
      },
      {
        "content": "Thanks, are these for Nextjs?<br> <br> Is this the right repo for a Nextjs project or is it adding server complexity? <a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a><br> <br> After setting up a new project it&#x27;s not displaying the PortfolioItems collection. <br><br>I&#x27;ve gettting this error in the terminal:<br><br><pre><code class=\"hljs\">PS C:\\git\\2160\\PayloadHotel2&gt; yarn dev\nyarn run v1.22.19\n$ ts-node server.ts\n[11:09:00] INFO (payload): Connected to Mongo server successfully!\n[11:09:00] INFO (payload): Starting Payload...\ninfo  - Loaded env from C:\\git\\2160\\PayloadHotel2\\.env\nevent - compiled client and server successfully in 3.3s (160 modules)\nuncaughtException [Error: EPERM: operation not permitted, open &#x27;C:\\git\\2160\\PayloadHotel2\\.next\\trace&#x27;] {\n  errno: -4048,\n  code: &#x27;EPERM&#x27;,\n  syscall: &#x27;open&#x27;,\n  path: &#x27;C:\\\\git\\\\2160\\\\PayloadHotel2\\\\.next\\\\trace&#x27;\n}\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.</code></pre>",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678963958143
      },
      {
        "content": "This one is for running nextjs and payload on the same express server, which I think is a pretty <em>niche</em> setup<br> <br> I&#x27;d do them separately and just communicate between them via the APIs",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678965972486
      },
      {
        "content": "Ok cool, so I can use this repo? <a href=\"https://github.com/payloadcms/website-cms\">https://github.com/payloadcms/website-cms</a>",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678966031675
      },
      {
        "content": "Yeah even if just for an example, but it&#x27;s quite fully featured and has a strict adherence to good coding standards<br> <br> following the default getting started steps is also a good option <a href=\"https://payloadcms.com/docs/getting-started/installation\">https://payloadcms.com/docs/getting-started/installation</a><br> <br> you can choose a starter like todo or blog<br> <br> but it will be more bare than the example above ^",
        "fileAttachments": [],
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1678966245521
      },
      {
        "content": "Thanks for the help. Later today I&#x27;ll create a Next app and then install Payload via <pre><code class=\"hljs\">npm install --save --legacy-peer-deps payload</code></pre><br> <br> yarn*<br> <br> I haven&#x27;t resolved the issue yet. I&#x27;m curious as to what the problem is if anyone has experienced it?<br> <br> Resolved now - I created a fresh project, it returned some strange error missing Next trace or something, I restarted vscode and the server and it&#x27;s working fine.",
        "fileAttachments": [],
        "authorID": "479030528084017165",
        "authorName": "Taun",
        "authorAvatar": "d683047f752adb18431194752086132e",
        "createdAtDate": 1678967086824
      }
    ],
    "messageCount": 49,
    "slug": "unable-to-view-a-collection"
  },
  {
    "info": {
      "name": "access control - user missing in req",
      "id": "1083363379961401364",
      "guildId": "967097582721572934",
      "createdAt": 1678364357701
    },
    "intro": {
      "content": "help-&gt; I have setup access control in my app according to the documentation. Everything seem to work fine on my machine. However, when I deploy, anywhere I implementation access control produces an error ( you are not allowed to ...) . I.e.<br><br>for example: <br>----------------<br>const Instruments: CollectionConfig = {<br>  slug: &#x27;instruments&#x27;,<br>  admin: {<br>    useAsTitle: &#x27;name&#x27;,<br>    defaultColumns:[&#x27;name&#x27;]<br>  },<br>  access: {<br>    read: () =&gt; true,<br>    create:()=&gt;true,<br>    update: ({ req: { user } }) =&gt;{<br>        return Boolean(user)<br>    },<br>    delete:isAdmin<br>  },<br>  fields: [<br>    {<br>      name: &#x27;name&#x27;,<br>      type: &#x27;text&#x27;,<br>      required:true<br>    },<br>  ],<br>  timestamps: false,<br>}<br><br>export default Instruments;<br><br><br>------------<br><br>read works, create works, but neither do update and delete",
      "fileAttachments": [],
      "authorID": "915584690604359691",
      "authorName": "taongaB",
      "authorAvatar": null,
      "createdAtDate": 1678364357701
    },
    "messages": [
      {
        "content": "What does your update request/fetch look like?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678364660053
      },
      {
        "content": "response -&gt; from ssh: Forbidden: You are not allowed to perform this action.<br>    at new ExtendableError (/home/jelastic/ROOT/node_modules/payload/src/errors/APIError.ts:26:11)<br>    at new APIError (/home/jelastic/ROOT/node_modules/payload/src/errors/APIError.ts:43:5)<br>    at new Forbidden (/home/jelastic/ROOT/node_modules/payload/src/errors/Forbidden.ts:7:5)<br>    at executeAccess (/home/jelastic/ROOT/node_modules/payload/src/auth/executeAccess.ts:9:43)<br>    at processTicksAndRejections (node:internal/process/task_queues:96:5)<br>    at update (/home/jelastic/ROOT/node_modules/payload/src/collections/operations/update.ts:97:43)<br>    at updateHandler (/home/jelastic/ROOT/node_modules/payload/src/collections/requestHandlers/update.ts:24:17)<br> <br> this is from trying in payload admin<br> <br> Update: solution found<br> <br> I added these to my config:<br> <br> ---<br> <br> rateLimit:{<br>    trustProxy:true<br>  },<br>  csrf:[<br>    &#x27;&lt;url_to_the_site&gt;&#x27;<br>  ]<br> <br> I am running my app in a virtuozzo environnement with a lot of control on deployment, loadbalancing etc... No clue which on of the 2 worked, though.",
        "fileAttachments": [],
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1678366670717
      }
    ],
    "messageCount": 8,
    "slug": "access-control-user-missing-in-req"
  },
  {
    "info": {
      "name": "Is it possible to hide collections from the sidebar",
      "id": "1075865165519659108",
      "guildId": "967097582721572934",
      "createdAt": 1676576644068
    },
    "intro": {
      "content": "I have some collections I only want to be CRUD from other collections, where they are referenced as fields. <br>As to not confused the user, i would like to hide these collections from the sidebar. Is this possible?",
      "fileAttachments": [],
      "authorID": "814899246540914698",
      "authorName": "moritz",
      "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
      "createdAtDate": 1676576644068
    },
    "messages": [
      {
        "content": "Hey @moritz there are a number of different discussions on this topic, here are a few that may contain the answers you&#x27;re looking for! I&#x27;m happy to fill in the gaps <a href=\"https://discord.com/channels/967097582721572934/1043100541036789760\">https://discord.com/channels/967097582721572934/1043100541036789760</a> <a href=\"https://discord.com/channels/967097582721572934/1064531848220381295\">https://discord.com/channels/967097582721572934/1064531848220381295</a> <a href=\"https://discord.com/channels/967097582721572934/1068706036883669022\">https://discord.com/channels/967097582721572934/1068706036883669022</a> <a href=\"https://discord.com/channels/967097582721572934/1070272024775249950\">https://discord.com/channels/967097582721572934/1070272024775249950</a>",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676580204130
      }
    ],
    "messageCount": 1,
    "slug": "is-it-possible-to-hide-collections-from-the-sidebar"
  },
  {
    "info": {
      "name": "Batch Upload into Media Folder",
      "id": "1083356915154812979",
      "guildId": "967097582721572934",
      "createdAt": 1678362816371
    },
    "intro": {
      "content": "I am just setting up another instance of payload for a image-based dataset i wanna host. When just uploading my ~150 images into my media folder (which i have mounted inside my Media Collection) - they are not detected as media instances. Is there a nice way for such batch uploads, or do i really need to upload all images 1by1 to get them as Items inside the collection?",
      "fileAttachments": [],
      "authorID": "133983243291590657",
      "authorName": "Joekr",
      "authorAvatar": "3536be469ac5e6130152ce4eb5be9665",
      "createdAtDate": 1678362816371
    },
    "messages": [
      {
        "content": "As of now you cannot batch upload. You could write your own script that uses the Local API to create the media collection items one by one.",
        "fileAttachments": [],
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1678434608188
      },
      {
        "content": "Bulk uploading is part of the roadmap, stay tuned because it is an often asked for feature 🙂",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1678440799861
      },
      {
        "content": "Is this something I can expect in the next week&#x27;s?",
        "fileAttachments": [],
        "authorID": "133983243291590657",
        "authorName": "Joekr",
        "authorAvatar": "3536be469ac5e6130152ce4eb5be9665",
        "createdAtDate": 1678442306117
      },
      {
        "content": "Hey Joekr - we like to keep our launch week items under wraps until the week of, so you&#x27;ll just have to stay tuned until then. Just know that Bulk operations are pretty high up on our list, so it shouldn&#x27;t be too long now!",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1678458867723
      },
      {
        "content": "I need this as well!",
        "fileAttachments": [],
        "authorID": "525819893333884938",
        "authorName": "wiesson",
        "authorAvatar": "45ae35ecb8e0d89dd1c9a726cf793568",
        "createdAtDate": 1678464240969
      }
    ],
    "messageCount": 5,
    "slug": "batch-upload-into-media-folder"
  },
  {
    "info": {
      "name": "deploying on Digital Ocean",
      "id": "1077251950132871319",
      "guildId": "967097582721572934",
      "createdAt": 1676907279285
    },
    "intro": {
      "content": "If I want to be able to upload images in Payload CMS, will a DO Droplet suffice, or do I also need Spaces (Object storage)?",
      "fileAttachments": [],
      "authorID": "850995577848070156",
      "authorName": "acandael",
      "authorAvatar": "e44cdbf7977857cdfe2b09724e7cd3bb",
      "createdAtDate": 1676907279285
    },
    "messages": [
      {
        "content": "Droplets come with a set amount of storage already, the lowest being 10GB I think, but you can add Volume (block storage) that will automatically mount to your droplet. If you&#x27;re going to use a droplet anyway, that is likely gonna be the easiest solution for more storage. With Spaces, you would have to write the functionality for uploading files yourself, since they don&#x27;t attach directly to your droplet.",
        "fileAttachments": [],
        "authorID": "783701636165402624",
        "authorName": "tylandavis",
        "authorAvatar": "f93cd3cba7ccab13bbb14a2f41ffd5a5",
        "createdAtDate": 1676926763445
      },
      {
        "content": "Thanks for the answer Ty! This is definitely the move.",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1676927247714
      },
      {
        "content": "Thanks for the information Ty!",
        "fileAttachments": [],
        "authorID": "850995577848070156",
        "authorName": "acandael",
        "authorAvatar": "e44cdbf7977857cdfe2b09724e7cd3bb",
        "createdAtDate": 1676959965788
      }
    ],
    "messageCount": 3,
    "slug": "deploying-on-digital-ocean"
  },
  {
    "info": {
      "name": "How to query a a value inside hasMany?",
      "id": "1072878122225119302",
      "guildId": "967097582721572934",
      "createdAt": 1675864477450
    },
    "intro": {
      "content": "I have a field relationTo inside my collection that has hasMany. I&#x27;m trying to create a fetch query that can find a value inside of that field. How can I do that? Thanks",
      "fileAttachments": [],
      "authorID": "950202910095081473",
      "authorName": "johnmadrigal_",
      "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
      "createdAtDate": 1675864477450
    },
    "messages": [
      {
        "content": "is relationTo and array or a string?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675871400346
      },
      {
        "content": "It a news tags, this is the sample news return<br><br>{<br>  newsTitle: &quot;Hello&quot;,<br>  ....<br>  tags: [<br>    {<br>       value: {<br>         title: &quot;Tag name&quot;,<br>         ....<br>       }<br>       relationTo: &quot;tags&quot;<br>    },<br>    {<br>     .... <br>    }<br>  ]<br>}<br><br>I want to query tags item title if its the same with &quot;Tag name&quot;",
        "fileAttachments": [],
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1675894818444
      },
      {
        "content": "@johnmadrigal_ to clarify - you want to query your news collection and return documents based on the tags?<br><br>That would look something like this:<br><br><pre><code class=\"hljs\">  const posts = await payload.find({\n    collection: &#x27;posts&#x27;,\n    where: {\n      &#x27;tags.name&#x27;: {\n        contains: &#x27;Test&#x27;, // Your tagname here\n      },\n    },\n  });</code></pre>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678098011300
      }
    ],
    "messageCount": 3,
    "slug": "how-to-query-a-a-value-inside-hasmany"
  },
  {
    "info": {
      "name": "Admin 'error' after proxy config",
      "id": "1075421217349177474",
      "guildId": "967097582721572934",
      "createdAt": 1676470798576
    },
    "intro": {
      "content": "Hey all, started getting this error after changing my payload nginx config to server on /payload.<br><br><pre><code class=\"hljs\">EventSource&#x27;s response has a MIME type (&quot;text/html&quot;) that is not &quot;text/event-stream&quot;. Aborting the connection.</code></pre><br><br>The odd thing is that seemingly nothing is broken, it just loops this message, I assume as it tries to connect to hmr?<br><br>Happy to provide more info.",
      "fileAttachments": [],
      "authorID": "1049775120559898725",
      "authorName": "thisisnotchris",
      "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
      "createdAtDate": 1676470798576
    },
    "messages": [
      {
        "content": "I can&#x27;t say I&#x27;ve seen anything like this before. This is on app start or something else?<br> <br> We use webpack-hot-middleware that might communicate over a different port, would that make a difference for your nginx config?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676654806175
      },
      {
        "content": "Hmm possibly, looking into it now",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676900733633
      }
    ],
    "messageCount": 3,
    "slug": "admin-error-after-proxy-config"
  },
  {
    "info": {
      "name": "Querying a number field that is `null`",
      "id": "1077652964010901567",
      "guildId": "967097582721572934",
      "createdAt": 1677002888444
    },
    "intro": {
      "content": "I have a number field which is optional, and if set and unset gets a <code>null</code> value. If I use:<br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-attr\">or</span>: [\n    {\n      <span class=\"hljs-attr\">numberField</span>: {\n        <span class=\"hljs-attr\">exists</span>: <span class=\"hljs-literal\">false</span>,\n      },\n    },\n    {\n      <span class=\"hljs-attr\">numberField</span>: {\n        <span class=\"hljs-attr\">equals</span>: <span class=\"hljs-literal\">null</span>,\n      },\n    },\n  ],\n}</code></pre><br>it does not match the field.<br><br>Is this a bug or is there another way to check if a field specifically has a <code>null</code> value? My assumption was that <code>null</code> would still match the <code>exists: false</code> query",
      "fileAttachments": [],
      "authorID": "93699784942034944",
      "authorName": "itsjxck",
      "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
      "createdAtDate": 1677002888444
    },
    "messages": [
      {
        "content": "hi @itsjxck - I replicated your query and it worked correctly for me. Exists&gt;false returned the same docs as equals&gt;null.<br><br>To get the docs that have <code>numberField: null</code> and not the ones where it is undefined, I used:<br><pre><code class=\"hljs\">where: {\n      and: [\n        {\n          numberField: {\n            equals: null,\n          },\n        },\n        {\n          numberField: {\n            exists: true,\n          },\n        }\n      ]\n    },</code></pre>",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678106695892
      },
      {
        "content": "@jesschow thanks for that; I can confirm it does indeed work when doing this in payload, but in a REST query, it does not work<br> <br> I assume this is because <code>null</code> is not a valid query parameter value<br> <br> This behaviour seems strange though, I would expect that a field that has it&#x27;s values removed, would have the same <code>undefined</code> value as if the field had never had the value set in the first place",
        "fileAttachments": [],
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1678107353509
      }
    ],
    "messageCount": 4,
    "slug": "querying-a-number-field-that-is-null"
  },
  {
    "info": {
      "name": "Production deployment throws fetch error",
      "id": "1084448268496412714",
      "guildId": "967097582721572934",
      "createdAt": 1678623015284
    },
    "intro": {
      "content": "I was setting up my CI/CD pipeline for deploying my payload app to app engine, where I dockerize the app, push it GCR and then deploy the image to app engine.<br>I have been successful in doing so. But the react app is making request to <code>http://localhost:3000/api/users/me</code> instead of <code>&lt;PROVIDED HOSTNAME&gt;/api/users/me</code>.<br>I&#x27;ve tried passing all the different environment variables <code>PAYLOAD_PUBLIC_PAYLOAD_URL</code>, <code>PAYLOAD_PUBLIC_PAYLOAD_API</code> and <code>PAYLOAD_URL</code> .<br> <br> Production deployment throws fetch error<br> <br> <pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> { buildConfig } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/config&quot;</span>;\n<span class=\"hljs-keyword\">import</span> path <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;path&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Categories</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./collections/Categories&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Posts</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./collections/Posts&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Tags</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./collections/Tags&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Users</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./collections/Users&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Media</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./collections/Media&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { gcsAdapter } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@payloadcms/plugin-cloud-storage/gcs&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { cloudStorage } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@payloadcms/plugin-cloud-storage&quot;</span>;\n\n<span class=\"hljs-keyword\">let</span> adapter = <span class=\"hljs-title function_\">gcsAdapter</span>({\n  <span class=\"hljs-attr\">options</span>: {\n    <span class=\"hljs-comment\">// apiEndpoint: process.env.GCS_ENDPOINT,</span>\n    <span class=\"hljs-attr\">projectId</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">GCS_PROJECT_ID</span>,\n  },\n  <span class=\"hljs-attr\">bucket</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">GCS_BUCKET</span>,\n});\n\n<span class=\"hljs-keyword\">if</span> (!process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PAYLOAD_PUBLIC_PAYLOAD_URL</span>) {\n  <span class=\"hljs-comment\">// throw new Error(&quot;&quot;);</span>\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&quot;Cannot get the env variables&quot;</span>);\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">buildConfig</span>({\n  <span class=\"hljs-attr\">serverURL</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PAYLOAD_PUBLIC_PAYLOAD_URL</span> ?? <span class=\"hljs-string\">&quot;http://localhost:3000&quot;</span>,\n  <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">user</span>: <span class=\"hljs-title class_\">Users</span>.<span class=\"hljs-property\">slug</span>,\n  },\n\n  <span class=\"hljs-attr\">collections</span>: [\n    <span class=\"hljs-title class_\">Categories</span>,\n    <span class=\"hljs-title class_\">Posts</span>,\n    <span class=\"hljs-title class_\">Tags</span>,\n    <span class=\"hljs-title class_\">Users</span>,\n    <span class=\"hljs-title class_\">Media</span>,\n  ],\n  <span class=\"hljs-attr\">plugins</span>: [\n    <span class=\"hljs-title function_\">cloudStorage</span>({\n      <span class=\"hljs-attr\">collections</span>: {\n        <span class=\"hljs-attr\">media</span>: {\n          adapter,\n        },\n      },\n    }),\n  ],\n  <span class=\"hljs-attr\">typescript</span>: {\n    <span class=\"hljs-attr\">outputFile</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;payload-types.ts&quot;</span>),\n  },\n  <span class=\"hljs-attr\">graphQL</span>: {\n    <span class=\"hljs-attr\">schemaOutputFile</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;generated-schema.graphql&quot;</span>),\n  },\n});</code></pre><br> <br> <pre><code class=\"hljs docker\"><span class=\"hljs-keyword\">FROM</span> node:<span class=\"hljs-number\">18.8</span>-alpine as base\n\n<span class=\"hljs-keyword\">FROM</span> base as builder\n\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /home/node/app</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> package*.json ./</span>\n\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> . .</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> yarn install</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> yarn build</span>\n\n<span class=\"hljs-keyword\">FROM</span> base as runtime\n\n<span class=\"hljs-keyword\">ARG</span> PAYLOAD_PUBLIC_PAYLOAD_URL=<span class=\"hljs-string\">&quot;http://localhost&quot;</span>\n\n<span class=\"hljs-keyword\">ENV</span> NODE_ENV=production\n<span class=\"hljs-keyword\">ENV</span> PAYLOAD_CONFIG_PATH=dist/payload.config.js\n<span class=\"hljs-keyword\">ENV</span> GCS_BUCKET=my-test-bucket-<span class=\"hljs-number\">2002</span>\n<span class=\"hljs-keyword\">ENV</span> GCS_PROJECT_ID=payloadcms-test\n<span class=\"hljs-keyword\">ENV</span> PAYLOAD_PUBLIC_PAYLOAD_URL=${PAYLOAD_PUBLIC_PAYLOAD_URL}\n\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /home/node/app</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> package*.json  ./</span>\n\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> key.json ./key.json</span>\n<span class=\"hljs-keyword\">ENV</span> GOOGLE_APPLICATION_CREDENTIALS=./key.json\n\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> yarn install --production</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> --from=builder /home/node/app/dist ./dist</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> --from=builder /home/node/app/build ./build</span>\n\n<span class=\"hljs-comment\"># EXPOSE 3000</span>\n\n<span class=\"hljs-keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"hljs-string\">&quot;node&quot;</span>, <span class=\"hljs-string\">&quot;dist/server.js&quot;</span>]</span></code></pre>",
      "fileAttachments": [],
      "authorID": "643912278244065292",
      "authorName": "dumbledore",
      "authorAvatar": "94cbc64f03bcd57381f79c521bc221ea",
      "createdAtDate": 1678623015284
    },
    "messages": [
      {
        "content": "@dumbledore can you hard-code that serverURL field instead of using an environment variable and see if that works - just to test?",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1084448268496412714/1084490538385948773/Discord_2023-03-12_at_15.57.002x.jpg",
            "name": "Discord_2023-03-12_at_15.57.002x.jpg",
            "id": "1084490538385948773",
            "size": 36190,
            "url": "https://cdn.discordapp.com/attachments/1084448268496412714/1084490538385948773/Discord_2023-03-12_at_15.57.002x.jpg",
            "proxyURL": "https://media.discordapp.net/attachments/1084448268496412714/1084490538385948773/Discord_2023-03-12_at_15.57.002x.jpg",
            "height": 182,
            "width": 674,
            "contentType": "image/jpeg",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1678633093262
      },
      {
        "content": "@Alessio 🍣  I did that as a temporary fix and it works. But I&#x27;m work on make it a reusable template with terraform for provisioning the infrastucture i.e creating storage bucket, provisioning mongodb database on atlas, enabling gcr, gae apis in gcp and a script that use github cli to add env secret to your git repo so that I can work on the schema and when I make a commit to the main branch the github actions deploy the new version of the app to app engine. In short, I want to automate all the tedious tasks before I start using it for something serious without going through the hassel setting things up.",
        "fileAttachments": [],
        "authorID": "643912278244065292",
        "authorName": "dumbledore",
        "authorAvatar": "94cbc64f03bcd57381f79c521bc221ea",
        "createdAtDate": 1678693766853
      },
      {
        "content": "This is the same issue I had with DevOps deployment to Azure. <br><br>The PAYLOAD_PUBLIC env cars have to be present when you run the “build” command to be compiled into the admin app<br><br>If you’re using the dockerfile you’ll need to set the env var inside there before build is called.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1678694022580
      },
      {
        "content": "I figured that too and I used docker args to inject the variable from github secrets when building the docker image. But that didn&#x27;t cut it, so I had to hardcode the url in the build config as a temporary fix.",
        "fileAttachments": [],
        "authorID": "643912278244065292",
        "authorName": "dumbledore",
        "authorAvatar": "94cbc64f03bcd57381f79c521bc221ea",
        "createdAtDate": 1678694980195
      },
      {
        "content": "I found I had to have a different dockerfile for each environment and set the bars in the dockerfile",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1678695051651
      },
      {
        "content": "I&#x27;m still trying make it work in a single environment i.e production. Once thats done then I&#x27;ll move on working on provisioning different environment using IaaC and dedicate main and staging branch to deploy to those environment. But that&#x27;s after I figure out this problem.",
        "fileAttachments": [],
        "authorID": "643912278244065292",
        "authorName": "dumbledore",
        "authorAvatar": "94cbc64f03bcd57381f79c521bc221ea",
        "createdAtDate": 1678695449076
      },
      {
        "content": "After the issues I had I opened up a discussion on github <a href=\"https://github.com/payloadcms/payload/discussions/2288\">https://github.com/payloadcms/payload/discussions/2288</a>",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1678695523323
      },
      {
        "content": "Did you hardcode the url in your config or did passing the environment variable at build time work for you?",
        "fileAttachments": [],
        "authorID": "643912278244065292",
        "authorName": "dumbledore",
        "authorAvatar": "94cbc64f03bcd57381f79c521bc221ea",
        "createdAtDate": 1678696477708
      },
      {
        "content": "I created a separate Dockerfile for each environment and hardcoded a <code>ENV PAYLOAD_PUBLIC_SERVER_URL=http....</code> in each just above the  <code>npm install</code> line. <br><br>In DevOps Pipelines I then have a dynamic variable that selects which Dockerfile to build and publish based on the branch that triggered it.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1678698071170
      },
      {
        "content": "Though I&#x27;m exposing the endpoint in the repo currently, but that&#x27;s not what I want it to be. I want to be able to pass the <code>PAYLOAD_URL</code> via some secrets manager like github for one.",
        "fileAttachments": [],
        "authorID": "643912278244065292",
        "authorName": "dumbledore",
        "authorAvatar": "94cbc64f03bcd57381f79c521bc221ea",
        "createdAtDate": 1678698364914
      },
      {
        "content": "Basically we need the ability for the hosting environment variables to be passed to the admin (i.e. allow Admin to see/know about them at runtime rather than just at build time) ... not sure how feasible that is.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1678698530385
      },
      {
        "content": "Thats the problem I&#x27;m trying to figure out",
        "fileAttachments": [],
        "authorID": "643912278244065292",
        "authorName": "dumbledore",
        "authorAvatar": "94cbc64f03bcd57381f79c521bc221ea",
        "createdAtDate": 1678699095790
      },
      {
        "content": "I think the safest solution at the moment is to use <code>.env.xxxxxx</code> files for all <code>PAYLOAD_PUBLIC_</code> vars and create a separate build script in package.json for each environment.<br><br>This way, you don&#x27;t need to set the public vars in any hosting environment, you just have them all in the relevant file and that gets deployed alongside the app.<br><br>You can set private env vars in the hosting environment and use them in the Express server side of things still. This just means that some vars (like API keys) might require you to create a custom Express route that can use the private var, proxying the secured API.",
        "fileAttachments": [],
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1678699681787
      },
      {
        "content": "I guess this would have been lot easier than what I just did. I added an additional step that during the CD creates <code>.env</code> that holds all the env, currently its just the <code>PAYLOAD_PUBLIC_</code> and feeds this to docker during the build.",
        "fileAttachments": [],
        "authorID": "643912278244065292",
        "authorName": "dumbledore",
        "authorAvatar": "94cbc64f03bcd57381f79c521bc221ea",
        "createdAtDate": 1678699955376
      }
    ],
    "messageCount": 17,
    "slug": "production-deployment-throws-fetch-error"
  },
  {
    "info": {
      "name": "Docker for remix server.",
      "id": "1077905084886818846",
      "guildId": "967097582721572934",
      "createdAt": 1677062998745
    },
    "intro": {
      "content": "How can I wrap this repo ( <a href=\"https://github.com/payloadcms/remix-server\">https://github.com/payloadcms/remix-server</a> ) in docker?",
      "fileAttachments": [],
      "authorID": "691523402124623923",
      "authorName": "aliahad",
      "authorAvatar": "75a400eed63cce5cfc5d69aa882f034a",
      "createdAtDate": 1677062998745
    },
    "messages": [
      {
        "content": "Do you want to use it in production or development? I&#x27;m asking because those require usually quite different approaches. You need a Docker image to run the container, so you&#x27;d need to use existing one from <a href=\"https://hub.docker.com\">https://hub.docker.com</a> or build your own using Dockerfile. For production, you&#x27;d actually preferably just build your own to have it self-contained, but in development it&#x27;s ok to just use Docker Compose with existing image and custom command and bind mounts.",
        "fileAttachments": [],
        "authorID": "378602619431682071",
        "authorName": "Jesse Sivonen",
        "authorAvatar": null,
        "createdAtDate": 1677078893863
      }
    ],
    "messageCount": 1,
    "slug": "docker-for-remix-server"
  },
  {
    "info": {
      "name": "Schedule feature",
      "id": "1081190966117011566",
      "guildId": "967097582721572934",
      "createdAt": 1677846413879
    },
    "intro": {
      "content": "Hello there.<br><br>We&#x27;re proposing PayloadCMS to a customer, and I&#x27;m in charge of make some PoCs based on their scenarios I&#x27;m stuck in one of these that is to make schedule system to scheduling posts changing its status publish and unpublished given a date.<br><br>Is there a solution for this case? <br>Is Payload provides any features like a CLI or hooks to do this?",
      "fileAttachments": [],
      "authorID": "931543970369126450",
      "authorName": "gabrielsantos",
      "authorAvatar": "566259b681a4ff3b51280eea7238fa76",
      "createdAtDate": 1677846413879
    },
    "messages": [
      {
        "content": "Hey @gabrielsantos while we&#x27;ve built similar functionality in the past, we don&#x27;t have anything off-the-shelf (yet) for Payload. It has been discussed here - <a href=\"https://github.com/payloadcms/payload/discussions/567\">https://github.com/payloadcms/payload/discussions/567</a> and will likely make its way to our roadmap!",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1678371967696
      },
      {
        "content": "@gabrielsantos you could possibly get away with using a date field, and a beforeRead hook that checks the date on the publishAt date field, if less than now <em>and</em> not published, publish the doc - after the update return the updated doc in your hook. If the post is already published you could skip that step and return the doc arg given to you in the beforeRead hook.<br><br>This might help get you to a working solution 👍",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678373367673
      },
      {
        "content": "Good call Jarrod!",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1678378088828
      }
    ],
    "messageCount": 3,
    "slug": "schedule-feature"
  },
  {
    "info": {
      "name": "EventSource error",
      "id": "1081205114871746691",
      "guildId": "967097582721572934",
      "createdAt": 1677849787205
    },
    "intro": {
      "content": "Enviornment: Development<br><br>Seems like some kind of dev related error? Doesn&#x27;t seem to mess functionality, although, the admin page today is very slow with no data (maybe our enviornment?)<br> <br> Location: Every admin page<br> <br> Any ideas on what this is?",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1081205114871746691/1081205115215683614/image.png",
          "name": "image.png",
          "id": "1081205115215683614",
          "size": 46182,
          "url": "https://cdn.discordapp.com/attachments/1081205114871746691/1081205115215683614/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1081205114871746691/1081205115215683614/image.png",
          "height": 260,
          "width": 1376,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "1049775120559898725",
      "authorName": "thisisnotchris",
      "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
      "createdAtDate": 1677849787205
    },
    "messages": [
      {
        "content": "I haven&#x27;t seen this before. Did this error potentially start after changing your payload nginx config to server on /payload ?",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1678141457358
      },
      {
        "content": "@patrikkozak Yes",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678197870486
      },
      {
        "content": "As @denolfe mentioned earlier, we are using webpack-hot-middleware. Take a look at this github post: <a href=\"https://github.com/webpack-contrib/webpack-hot-middleware/issues/26\">https://github.com/webpack-contrib/webpack-hot-middleware/issues/26</a> <br><br>May be able to give you some answers to your situation. If it doesn&#x27;t help, let me know!",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1678201347171
      }
    ],
    "messageCount": 5,
    "slug": "eventsource-error"
  },
  {
    "info": {
      "name": "Get Light/Dark Mode Preference for custom Component",
      "id": "1076906094791762012",
      "guildId": "967097582721572934",
      "createdAt": 1676824820946
    },
    "intro": {
      "content": "Hey, how do I get the Light/Dark Mode Preference?<br>Need it for a custom component.",
      "fileAttachments": [],
      "authorID": "267014985056518147",
      "authorName": "Sylens Drake",
      "authorAvatar": "ab13a5f24e6c5f6ad5dc67fb3f57cfd0",
      "createdAtDate": 1676824820946
    },
    "messages": [
      {
        "content": "@Sylens Drake the html element has a data-theme attribute that you can use to target your custom component css",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676829727814
      },
      {
        "content": "I think more information about the data-theme attribute could be listen on the CSS customization page that references Dark Mode: <a href=\"https://payloadcms.com/docs/admin/customizing-css\">https://payloadcms.com/docs/admin/customizing-css</a>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676900213873
      },
      {
        "content": "we don&#x27;t explicitly export the <code>useTheme</code> hook, but you can still import it<br> <br> <code>import { useTheme } from &#x27;payload/dist/admin/components/utilities/Theme</code><br> <br> if you did want to help us export it, you could open a PR via adding an export to the <code>payload/components/utilities</code> file and then add it to docs here:<br> <br> <a href=\"https://payloadcms.com/docs/admin/hooks#react-hooks\">https://payloadcms.com/docs/admin/hooks#react-hooks</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676900898816
      },
      {
        "content": "@jmikrut was the PR ever opened? I started using the direct import today",
        "fileAttachments": [],
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1678662758823
      },
      {
        "content": "Hey @damnstaychill no, we never added this, but i will add it today (got some other stuff coming out)<br> <br> anddd done<br> <br> will be released shortly",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678719407858
      }
    ],
    "messageCount": 10,
    "slug": "get-light-dark-mode-preference-for-custom-component"
  },
  {
    "info": {
      "name": "I asked ChatGPT to write the code of an example collection. Is this valid?",
      "id": "1078730479815110809",
      "guildId": "967097582721572934",
      "createdAt": 1677259788231
    },
    "intro": {
      "content": "module.exports = {<br>  slug: &#x27;posts&#x27;,<br>  labels: {<br>    singular: &#x27;Post&#x27;,<br>    plural: &#x27;Posts&#x27;<br>  },<br>  admin: {<br>    useAsTitle: &#x27;title&#x27;<br>  },<br>  fields: [<br>    {<br>      name: &#x27;title&#x27;,<br>      label: &#x27;Title&#x27;,<br>      type: &#x27;text&#x27;,<br>      required: true,<br>    },<br>    {<br>      name: &#x27;slug&#x27;,<br>      label: &#x27;Slug&#x27;,<br>      type: &#x27;slug&#x27;,<br>      from: &#x27;title&#x27;,<br>      required: true,<br>      unique: true,<br>      editable: false<br>    },<br>    {<br>      name: &#x27;content&#x27;,<br>      label: &#x27;Content&#x27;,<br>      type: &#x27;richtext&#x27;,<br>      required: true,<br>    },<br>    {<br>      name: &#x27;author&#x27;,<br>      label: &#x27;Author&#x27;,<br>      type: &#x27;relationship&#x27;,<br>      relationTo: &#x27;users&#x27;,<br>      required: true,<br>    },<br>    {<br>      name: &#x27;publishedAt&#x27;,<br>      label: &#x27;Published At&#x27;,<br>      type: &#x27;datetime&#x27;,<br>      required: true,<br>    },<br>    {<br>      name: &#x27;tags&#x27;,<br>      label: &#x27;Tags&#x27;,<br>      type: &#x27;array&#x27;,<br>      of: &#x27;string&#x27;,<br>      required: false,<br>    },<br>    {<br>      name: &#x27;featuredImage&#x27;,<br>      label: &#x27;Featured Image&#x27;,<br>      type: &#x27;file&#x27;,<br>      required: false,<br>      options: {<br>        accept: &#x27;image/*&#x27;,<br>        limit: 1,<br>      },<br>    },<br>  ],<br>};<br> <br> I asked ChatGPT to write the code of an example collection. Is this valid?",
      "fileAttachments": [],
      "authorID": "537385969230413846",
      "authorName": "Arskeliss",
      "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
      "createdAtDate": 1677259788231
    },
    "messages": [
      {
        "content": "looks valid to me",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1677264106539
      }
    ],
    "messageCount": 2,
    "slug": "i-asked-chatgpt-to-write-the-code-of-an-example-collection-is-this-valid"
  },
  {
    "info": {
      "name": "Access Globals within beforeDelete Hook",
      "id": "1076104536600629249",
      "guildId": "967097582721572934",
      "createdAt": 1676633714581
    },
    "intro": {
      "content": "Hello,<br><br>Currently have a &quot;working&quot; beforeDelete hook which iterates over the Pages collection however I would also like to show a warning if a related topic is included within a global field..<br><br><code>collection: &#x27;pages&#x27;</code> seems to be the line i need to change but I can&#x27;t find any docs on how to access globals within the <code>req.payload</code> object<br><br>Any help would be appreciated <br><br><pre><code class=\"hljs\">export const checkTopicsNotInReleatedPagesOrSubNav: BeforeDeleteHook = async ({ req, id }) =&gt; {\n    console.log(&#x27;checkTopicsNotInReleatedPagesOrSubNav fired&#x27;, id)\n\n    console.log(&#x27;req.payload:&#x27;, req.payload)\n    const result = await req.payload.find({\n        collection: &#x27;pages&#x27;,\n        limit: 100,\n        depth: 2,\n        where: {\n            // &#x27;globals.subNav.topic&#x27;: { equals: id },\n            &#x27;topics&#x27;: { equals: id },\n        },\n    });</code></pre>",
      "fileAttachments": [],
      "authorID": "1075816381200736306",
      "authorName": "jamesryan",
      "authorAvatar": null,
      "createdAtDate": 1676633714581
    },
    "messages": [
      {
        "content": "Hey @jamesryan, welcome! The function you&#x27;re looking for is <code>findGlobal</code>. Docs are here: <a href=\"https://payloadcms.com/docs/local-api/overview#globals\">https://payloadcms.com/docs/local-api/overview#globals</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676667766659
      }
    ],
    "messageCount": 1,
    "slug": "access-globals-within-beforedelete-hook"
  },
  {
    "info": {
      "name": "Cannot find a descendant at path [6,0] in node ... Error",
      "id": "1081223166275358850",
      "guildId": "967097582721572934",
      "createdAt": 1677854090995
    },
    "intro": {
      "content": "I&#x27;m developing a blocks field currently, and occasionally when I attempt to reorder a new block that I created I will get this breaking error and the Admin UI will crash. I have to navigate back and reload the page to fix it. I&#x27;ve tried to reproduce consistently but can&#x27;t seem to unfortunately.<br> <br> I&#x27;m on Payload v1.6.11 btw<br> <br> @jmikrut Would you know what&#x27;s going on here? My team is getting frustrated by this",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1081223166275358850/1081223166493478912/The_error_from_dev_console",
          "name": "The_error_from_dev_console",
          "id": "1081223166493478912",
          "size": 557055,
          "url": "https://cdn.discordapp.com/attachments/1081223166275358850/1081223166493478912/The_error_from_dev_console",
          "proxyURL": "https://media.discordapp.net/attachments/1081223166275358850/1081223166493478912/The_error_from_dev_console",
          "height": null,
          "width": null,
          "contentType": null,
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1081223166275358850/1081223166879342653/The_rest_of_the_error_showing_stack_trace",
          "name": "The_rest_of_the_error_showing_stack_trace",
          "id": "1081223166879342653",
          "size": 152500,
          "url": "https://cdn.discordapp.com/attachments/1081223166275358850/1081223166879342653/The_rest_of_the_error_showing_stack_trace",
          "proxyURL": "https://media.discordapp.net/attachments/1081223166275358850/1081223166879342653/The_rest_of_the_error_showing_stack_trace",
          "height": null,
          "width": null,
          "contentType": null,
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "408784184765710337",
      "authorName": "TheDunco",
      "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
      "createdAtDate": 1677854090995
    },
    "messages": [
      {
        "content": "can you open a GitHub issue about this with as much detail as possible?<br> <br> the team will get on it",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1678226923585
      },
      {
        "content": "Will do, thanks<br> <br> I&#x27;m having some trouble reproducing it consistently, but will speak to my team to see if they can get a video of it happening so I can write up the most detailed issue I can.",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678281500273
      },
      {
        "content": "@TheDunco I have an issue that may be related?<br> <br> So I have a Pages collection<br> <br> Which, I sort of regret creating as a single collection<br> <br> Because then each individual page you end up creating Blocks<br> <br> But I had the idea of a Slider Block, for a main page Slider (eww I know)<br> <br> Then I got smart and decided, this is going to be a CTA instead (yay)<br> <br> Well, I went and changed the name of the model in my source<br> <br> Then I went to add a new CTA and my admin panel crashes<br> <br> It&#x27;s because there are remnants of an old Block type that weren&#x27;t deleted<br> <br> and I didn&#x27;t migrate first, but in this case, I shouldn&#x27;t have had to really manage the migration<br> <br> Because it was such a simple change",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678284113476
      },
      {
        "content": "Oh, interesting. So you&#x27;re saying it shouldn&#x27;t be an issue with newly created ones which would be why I&#x27;m having a hard time reproducing it?",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678284325852
      },
      {
        "content": "So say I accidentally noticed I wrote<br> <br> SilderBlock<br> <br> if i created an instance of a SilderBlock<br> <br> and then changed the collection name to SliderBlock<br> <br> it will crash on adding new data",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678284341737
      },
      {
        "content": "Mmm, yeah that might be related but I&#x27;m not sure that&#x27;s the exact issue because I was seeing this when I drag/dropped the block, not when adding new data per say",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678284421209
      },
      {
        "content": "I do think this kind of error should be handled by  better error messaing<br> <br> but yeah, possibly related maybe not",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678284461127
      },
      {
        "content": "Thanks for your input though, I can check the document and see if there&#x27;s any old data in there",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678284495645
      },
      {
        "content": "I would like to see better migration documentation on the Payload site too hehe<br> <br> @patrikkozak<br> <br> Only because I have no idea what to do about resolving this<br> <br> Without redefining the old model type<br> <br> <br> <br> :*(",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678284524316
      },
      {
        "content": "I asked about this in #general yesterday and it sounds like there should be some examples in GitHub discussions (although I didn&#x27;t have time to find any specific examples yesterday)",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678284750031
      },
      {
        "content": "Hehe I saw that thread @TheDunco , but this kind of information NEEDS to be on the Payload site<br> <br> It&#x27;s a crucial time for Payload to appeal to devs<br> <br> And detailed documentation is how to appeal to devs",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678285599740
      },
      {
        "content": "I was able to consistently reproduce this. I&#x27;ll open an actual github issue with more info after lunch but just for context it&#x27;s still happening on payload v1.16.17<br> <br> I&#x27;ve opened the github issue here <a href=\"https://github.com/payloadcms/payload/issues/2272\">https://github.com/payloadcms/payload/issues/2272</a>",
        "fileAttachments": [],
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1678295659919
      }
    ],
    "messageCount": 39,
    "slug": "cannot-find-a-descendant-at-path-6-0-in-node-error"
  },
  {
    "info": {
      "name": "Sorting on multiple fields?",
      "id": "1074130763131400232",
      "guildId": "967097582721572934",
      "createdAt": 1676163130315
    },
    "intro": {
      "content": "Is it possible to sort by one field, then another when using the REST API?<br><br>In SQL terms I&#x27;m looking for the equivalent of <code>SORT BY FieldA DESC, FieldB ASC</code>",
      "fileAttachments": [],
      "authorID": "365498720726286349",
      "authorName": "Kyr",
      "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
      "createdAtDate": 1676163130315
    },
    "messages": [
      {
        "content": "Currently no. This would make a great addition. You can submit a feature request in our github discussions and we will assess the priority or somebody in the community can pick it up!",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676345118968
      },
      {
        "content": "Feature request was made here <a href=\"https://github.com/payloadcms/payload/discussions/2089\">https://github.com/payloadcms/payload/discussions/2089</a> - marking this thread as answered",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1676914179928
      }
    ],
    "messageCount": 2,
    "slug": "sorting-on-multiple-fields"
  },
  {
    "info": {
      "name": "no docs in Vercel",
      "id": "1076044223691894835",
      "guildId": "967097582721572934",
      "createdAt": 1676619334863
    },
    "intro": {
      "content": "I don&#x27;t know why, but in vercel I don&#x27;t get docs from a query but in localhost I do.<br>And i have another similar collection, and similar queries and I get docs in local and the domain. Does anyone have an idea of why?<br> <br> This is the query, I get docs in local, but not in vercel<br><pre><code class=\"hljs\">const { data } = await axios.get(&#x27;/communityMembers&#x27;, {\n    params: {\n      where: {\n        and: [\n          {\n            community: {\n              equals: {\n                value: communityId,\n                relationTo: &#x27;community&#x27;,\n              },\n            },\n          },\n          {\n            member: {\n              equals: userId,\n            },\n          },\n        ],\n      },\n    },\n  });</code></pre><br> <br> In other collection I use this other query and works in vercel and local:<br><pre><code class=\"hljs\">const { data } = await axios.get(&#x27;/visits&#x27;, {\n    params: {\n      where: {\n        and: [\n          {\n            activity: {\n              equals: {\n                value: activityId,\n                relationTo: &#x27;activities&#x27;,\n              },\n            },\n          },\n          {\n            attendee: {\n              equals: userId,\n            },\n          },\n        ],\n      },\n    },\n  });</code></pre><br> <br> I deploy the project in digital ocean and the query for <code>communityMembers</code> works fine 🫠. I really have no idea of why is not working in Vercel",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1076044223691894835/1076044223868063774/Screenshot_2023-02-17_at_1.32.12_a.m..png",
          "name": "Screenshot_2023-02-17_at_1.32.12_a.m..png",
          "id": "1076044223868063774",
          "size": 25193,
          "url": "https://cdn.discordapp.com/attachments/1076044223691894835/1076044223868063774/Screenshot_2023-02-17_at_1.32.12_a.m..png",
          "proxyURL": "https://media.discordapp.net/attachments/1076044223691894835/1076044223868063774/Screenshot_2023-02-17_at_1.32.12_a.m..png",
          "height": 230,
          "width": 776,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1076044223691894835/1076044224102932510/Screenshot_2023-02-17_at_1.32.51_a.m..png",
          "name": "Screenshot_2023-02-17_at_1.32.51_a.m..png",
          "id": "1076044224102932510",
          "size": 30569,
          "url": "https://cdn.discordapp.com/attachments/1076044223691894835/1076044224102932510/Screenshot_2023-02-17_at_1.32.51_a.m..png",
          "proxyURL": "https://media.discordapp.net/attachments/1076044223691894835/1076044224102932510/Screenshot_2023-02-17_at_1.32.51_a.m..png",
          "height": 202,
          "width": 777,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "706208036439588934",
      "authorName": "akacronos",
      "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
      "createdAtDate": 1676619334863
    },
    "messages": [
      {
        "content": "do you get a response at all?  does your axios fn throw an error?",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676640963805
      },
      {
        "content": "yes, but without docs :/<br> <br> I have a similar request in another page that works<br> <br> The weird things:<br>- Works in other similar collection / req<br>- Works in local but not in vercel<br>- Works in digitalocean app but not in vercel 🫠",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076044223691894835/1076247598651941034/Screenshot_2023-02-17_at_3.02.49_p.m..png",
            "name": "Screenshot_2023-02-17_at_3.02.49_p.m..png",
            "id": "1076247598651941034",
            "size": 87946,
            "url": "https://cdn.discordapp.com/attachments/1076044223691894835/1076247598651941034/Screenshot_2023-02-17_at_3.02.49_p.m..png",
            "proxyURL": "https://media.discordapp.net/attachments/1076044223691894835/1076247598651941034/Screenshot_2023-02-17_at_3.02.49_p.m..png",
            "height": 274,
            "width": 1946,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1076044223691894835/1076247599012646952/Screenshot_2023-02-17_at_3.03.08_p.m..png",
            "name": "Screenshot_2023-02-17_at_3.03.08_p.m..png",
            "id": "1076247599012646952",
            "size": 65723,
            "url": "https://cdn.discordapp.com/attachments/1076044223691894835/1076247599012646952/Screenshot_2023-02-17_at_3.03.08_p.m..png",
            "proxyURL": "https://media.discordapp.net/attachments/1076044223691894835/1076247599012646952/Screenshot_2023-02-17_at_3.03.08_p.m..png",
            "height": 374,
            "width": 1382,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676667823369
      }
    ],
    "messageCount": 7,
    "slug": "no-docs-in-vercel"
  },
  {
    "info": {
      "name": "Random bug where pages in a collection disappear (but still in database)",
      "id": "1072789027842953236",
      "guildId": "967097582721572934",
      "createdAt": 1675843235694
    },
    "intro": {
      "content": "I started getting this really weird issue after upgrading to Payload 1.6 from 1.5.9. For context, I am using ISG with Next 13&#x27;s App Directory, with a cache limit of 10 seconds while I make updates to the site for testing. I am using MongoDB Atlas, running Payload inside a Docker Container on Google Cloud Run.<br><br>I have found that when refreshing the page on my Next 13 app in quick succession, it causes Payload to freakout and hide all of the pages in my Pages collection. The data is still in Mongodb, and additionally, I can retrieve them by going to my global navbar which uses a relationship to my pages. I can then select the edit button in the relationship dropdown and save each page. This brings them all back, but it is going to be a pain to do when I have over 50 pages on my website.<br><br>Has anyone else had this issue?<br><br>I ran in the versions migration script, maybe it&#x27;s an error with the new versions not playing nicely.",
      "fileAttachments": [],
      "authorID": "191776538205618177",
      "authorName": "Mark | Omniux",
      "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
      "createdAtDate": 1675843235694
    },
    "messages": [
      {
        "content": "not sure if this is related, but after update to latest version on payload form plugin on random fields I miss the values even if in database the data is there (checked myself). Seems a bit the same behavior <br>notice on the first image how the Rich text is empty and in the db the value is there",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1072789027842953236/1072808814954430575/image.png",
            "name": "image.png",
            "id": "1072808814954430575",
            "size": 40824,
            "url": "https://cdn.discordapp.com/attachments/1072789027842953236/1072808814954430575/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1072789027842953236/1072808814954430575/image.png",
            "height": 612,
            "width": 1775,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          },
          {
            "attachment": "https://cdn.discordapp.com/attachments/1072789027842953236/1072808815281573898/image.png",
            "name": "image.png",
            "id": "1072808815281573898",
            "size": 15500,
            "url": "https://cdn.discordapp.com/attachments/1072789027842953236/1072808815281573898/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1072789027842953236/1072808815281573898/image.png",
            "height": 169,
            "width": 499,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "386056031102304256",
        "authorName": "dragos.nedelcu",
        "authorAvatar": "c3cb755639223adfcf37dddacb9b0d64",
        "createdAtDate": 1675847953462
      },
      {
        "content": "I do have the form plugin in my project. Maybe that is causing some of the issue",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675859719335
      },
      {
        "content": "hey @Mark | Omniux are you still experiencing this issue?",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678095492430
      },
      {
        "content": "hi Jess, fixed it now, was caused by a failed migration",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1678109079644
      },
      {
        "content": "Sweet 👍",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678112661097
      }
    ],
    "messageCount": 5,
    "slug": "random-bug-where-pages-in-a-collection-disappear-but-still-in-database"
  },
  {
    "info": {
      "name": "Rewriting base path to dynamically to section admin and API endpoints for different tenants",
      "id": "1076473260876767232",
      "guildId": "967097582721572934",
      "createdAt": 1676721625299
    },
    "intro": {
      "content": "I&#x27;m writing a multi-tenancy plugin for Payload CMS (<a href=\"https://github.com/joas8211/payload-tenancy\">https://github.com/joas8211/payload-tenancy</a>). Current task is to separate tenants by different base paths. For that I thought writing an Express middleware would make the trick, but it seems to only affect REST API requests and URLs are already rewritten to remove /api. This happens even when setting middleware to config.express.preMiddleware. It seems that there&#x27;s no way to run middleware before Payload middleware from a plugin, or is there?<br> <br> I managed to run the middleware before Payload middleware by moving it up the router stack, like so:<br><pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">config</span>: <span class=\"hljs-title class_\">Config</span> = {\n  ...originalConfig,\n  <span class=\"hljs-attr\">onInit</span>: <span class=\"hljs-keyword\">async</span> (payload) =&gt; {\n    payload.<span class=\"hljs-property\">express</span>.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">createMiddleware</span>());\n\n    <span class=\"hljs-comment\">// Move the added middleware up in the stack as far as possible (after</span>\n    <span class=\"hljs-comment\">// &quot;bound dispatch&quot; middleware).</span>\n    <span class=\"hljs-keyword\">const</span> router = payload.<span class=\"hljs-property\">express</span>.<span class=\"hljs-property\">_router</span>;\n    <span class=\"hljs-keyword\">const</span> index = router.<span class=\"hljs-property\">stack</span>.<span class=\"hljs-title function_\">findIndex</span>(\n      <span class=\"hljs-function\">(<span class=\"hljs-params\">layer</span>) =&gt;</span> layer.<span class=\"hljs-property\">name</span> === <span class=\"hljs-string\">&quot;bound dispatch&quot;</span>\n    );\n    router.<span class=\"hljs-property\">stack</span> = [\n      ...router.<span class=\"hljs-property\">stack</span>.<span class=\"hljs-title function_\">slice</span>(<span class=\"hljs-number\">0</span>, index + <span class=\"hljs-number\">1</span>),\n      ...router.<span class=\"hljs-property\">stack</span>.<span class=\"hljs-title function_\">slice</span>(-<span class=\"hljs-number\">1</span>),\n      ...router.<span class=\"hljs-property\">stack</span>.<span class=\"hljs-title function_\">slice</span>(index + <span class=\"hljs-number\">1</span>, -<span class=\"hljs-number\">1</span>),\n    ];\n  },\n};</code></pre><br> <br> Now there&#x27;s another problem regarding admin front-end. I cannot dynamically decide what base URL it uses for the API. But that&#x27;s a problem of it&#x27;s own.",
      "fileAttachments": [],
      "authorID": "378602619431682071",
      "authorName": "Jesse Sivonen",
      "authorAvatar": null,
      "createdAtDate": 1676721625299
    },
    "messages": [],
    "messageCount": 2,
    "slug": "rewriting-base-path-to-dynamically-to-section-admin-and-api-endpoints-for-different-tenants"
  },
  {
    "info": {
      "name": "Module not found after updating to  1.6.16",
      "id": "1080763956693577799",
      "guildId": "967097582721572934",
      "createdAt": 1677744606899
    },
    "intro": {
      "content": "I get Module not found: Error: Can&#x27;t resolve &#x27;fs&#x27; . When i <code>build</code> and run with <code>serve</code> script. The code build perfectly but when i start it gives error.<br>I also added webpack alias for fs. With adding it, fail to <code>build</code>",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1080763956693577799/1080763956970389514/image.png",
          "name": "image.png",
          "id": "1080763956970389514",
          "size": 17932,
          "url": "https://cdn.discordapp.com/attachments/1080763956693577799/1080763956970389514/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1080763956693577799/1080763956970389514/image.png",
          "height": 109,
          "width": 907,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1080763956693577799/1080763957247229962/image.png",
          "name": "image.png",
          "id": "1080763957247229962",
          "size": 20654,
          "url": "https://cdn.discordapp.com/attachments/1080763956693577799/1080763957247229962/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1080763956693577799/1080763957247229962/image.png",
          "height": 251,
          "width": 456,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "707015513825345537",
      "authorName": "Ronok",
      "authorAvatar": null,
      "createdAtDate": 1677744606899
    },
    "messages": [
      {
        "content": "hi @Ronok - what version of payload were you on before you updated to 1.6.16?",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678119140571
      },
      {
        "content": "Thank you for replying but the problem was solved after using  NODE_ENV = production",
        "fileAttachments": [],
        "authorID": "707015513825345537",
        "authorName": "Ronok",
        "authorAvatar": null,
        "createdAtDate": 1678127164283
      },
      {
        "content": "Ah wonderful 👍",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678130235406
      }
    ],
    "messageCount": 3,
    "slug": "module-not-found-after-updating-to-1616"
  },
  {
    "info": {
      "name": "Problems with @aws-sdk",
      "id": "1078542544406839337",
      "guildId": "967097582721572934",
      "createdAt": 1677214980938
    },
    "intro": {
      "content": "Hey there! I&#x27;m having troubles when building my app. I actually had it working some weeks ago.. but I&#x27;m unable to build it now due to some errors with aws-sdk (I&#x27;m using <code>@payloadcms/plugin-cloud-storage</code>) the app.<br><br>This is the error I get when trying to build it:<br><br><br>Has anyone found this issue too?<br> <br> Okay.. so I actually went to my last working and I&#x27;m unable to build it now..",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1078542544406839337/1078542544717221969/image.png",
          "name": "image.png",
          "id": "1078542544717221969",
          "size": 111768,
          "url": "https://cdn.discordapp.com/attachments/1078542544406839337/1078542544717221969/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1078542544406839337/1078542544717221969/image.png",
          "height": 429,
          "width": 1206,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "494333401264947218",
      "authorName": "nacho",
      "authorAvatar": null,
      "createdAtDate": 1677214980938
    },
    "messages": [
      {
        "content": "If you&#x27;re using the s3adapter you need to install @aws-sdk/lib-storage package aswell as of release 1.0.14.",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1078542544406839337/1078757982902440007/image.png",
            "name": "image.png",
            "id": "1078757982902440007",
            "size": 61122,
            "url": "https://cdn.discordapp.com/attachments/1078542544406839337/1078757982902440007/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1078542544406839337/1078757982902440007/image.png",
            "height": 266,
            "width": 2216,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "220897925612568577",
        "authorName": "Rick",
        "authorAvatar": "17e958af3d2b16f99bcb0e3a77050739",
        "createdAtDate": 1677266345524
      },
      {
        "content": "@Rick is correct. An additional peer dependency was added for the s3 adapter recently. The readme is up-to-date with steps from the breaking change reference by Rick.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677272651364
      }
    ],
    "messageCount": 3,
    "slug": "problems-with-aws-sdk"
  },
  {
    "info": {
      "name": "How to translate validation error messages",
      "id": "1077231699190095872",
      "guildId": "967097582721572934",
      "createdAt": 1676902451084
    },
    "intro": {
      "content": "I tried following the documentation <a href=\"https://payloadcms.com/docs/fields/overview#validation\">https://payloadcms.com/docs/fields/overview#validation</a><br>Validation function has translation function as an optional param, but when I use the same translation function, the error message still does not translate. <br>I have not extended i18 configuration. I am just using the <code>t</code> function and expecting payload to translate according to the language chosen by the user.  Is there anything that I am missing.<br><br><code>validate: (value, { t }) =&gt; {\n        if (condition) return true;\n        return t(\n          &quot;The URL must start with xyz&quot;\n        );\n      }</code>",
      "fileAttachments": [],
      "authorID": "1070298006605279282",
      "authorName": "Akt771",
      "authorAvatar": null,
      "createdAtDate": 1676902451084
    },
    "messages": [
      {
        "content": "The <code>t</code> function uses the keys defined in the translation files. Take a look at <code>en.json</code> for available keys and one of the errors in source to see how it can be used. Typically, it would take a string as <code>namespace:translationKey</code>.<br><br><a href=\"https://github.com/payloadcms/payload/blob/master/src/translations/en.json\">https://github.com/payloadcms/payload/blob/master/src/translations/en.json</a><br><a href=\"https://github.com/payloadcms/payload/blob/master/src/errors/AuthenticationError.ts#L7\">https://github.com/payloadcms/payload/blob/master/src/errors/AuthenticationError.ts#L7</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676903941604
      },
      {
        "content": "Thank you very much.I think this is what i needed.",
        "fileAttachments": [],
        "authorID": "1070298006605279282",
        "authorName": "Akt771",
        "authorAvatar": null,
        "createdAtDate": 1676904990281
      }
    ],
    "messageCount": 2,
    "slug": "how-to-translate-validation-error-messages"
  },
  {
    "info": {
      "name": "Union type fragments",
      "id": "1076192345751572480",
      "guildId": "967097582721572934",
      "createdAt": 1676654649914
    },
    "intro": {
      "content": "Any way to make the generated graphql schema <em>not</em> create specific types for re-used objects, or merge them in a union? Would be so nice to be able to actually re-use fragments without each being uniquely typed.<br><br>Right now, given a field that is a group: <code>const groupField: Field = { type: &#x27;group&#x27;, name; &#x27;repeated&#x27;, fields: [...]}</code><br><br>using <code>groupField</code> in different collections, say <code>User</code> and <code>Post</code> will yield <code>User_Group</code> and <code>Post_Group</code> types, and not being collected in a union type, I can&#x27;t really reuse a fragment for it in my gql-queries.",
      "fileAttachments": [],
      "authorID": "981456072617381918",
      "authorName": "rhythmic.visions",
      "authorAvatar": "1d59c2bc78c3d055cea10bd049ce51dd",
      "createdAtDate": 1676654649914
    },
    "messages": [
      {
        "content": "I can&#x27;t think of a way you could do this without some changes.<br><br>In what you described, we are doing this for graphQL blocks I believe, but it can&#x27;t be copied for groups as they aren&#x27;t re-used in a meaningful way. Suppose the Payload GraphQL schema generation tried to make types for every group it would be a mess of unnecessarily granular types. When names are the same as another group you&#x27;d either end up with a union of identical schemas repeated when fields are the same, or we&#x27;d need some way of comparing that the field names and types are in fact the same and iterating on the schema name.<br>This sounds quite messy to do well. The only way I can think to have it work would be to add a config option for the graphQL name to groups and named tabs which would make it both—<br>A) Provide a nice way for devs to name their composable schemas parts only when needed, and<br>B) Add intention so devs can either make it work or fall on their own sword if they mess it up with a duplicate name that actually has different fields.<br><br>It is an interesting question. If you think there is a path forward on how this might work, you could create a Github discussion to try and gain traction. If there is a will to build it from the community, that would help, but as it stands this isn&#x27;t going to be prioritized by our team.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676952490203
      }
    ],
    "messageCount": 1,
    "slug": "union-type-fragments"
  },
  {
    "info": {
      "name": "Updated to latest version and enabled drafts made all my entries disappear",
      "id": "1083059221916033024",
      "guildId": "967097582721572934",
      "createdAt": 1678291840772
    },
    "intro": {
      "content": "Hey everyone, interesting one, but all my entries have disappeared after enabling drafts and updating to the latest version of Payload. <br><br>The API still gives the correct results:<br><a href=\"https://cms.productionpark.co.uk/api/news\">https://cms.productionpark.co.uk/api/news</a><br><br>However the CMS shows as per screenshot. Is there a way to get the articles back?",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1083059221916033024/1083059222058631238/image.png",
          "name": "image.png",
          "id": "1083059222058631238",
          "size": 28136,
          "url": "https://cdn.discordapp.com/attachments/1083059221916033024/1083059222058631238/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1083059221916033024/1083059222058631238/image.png",
          "height": 488,
          "width": 1268,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "183581008677961728",
      "authorName": "Tom",
      "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
      "createdAtDate": 1678291840772
    },
    "messages": [
      {
        "content": "This happened to me<br> <br> I had to refresh the page like 10 times<br> <br> And then they showed up<br> <br> Wondering if that will work for you",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678292070333
      },
      {
        "content": "I&#x27;ll try that, maybe it&#x27;s client side cache",
        "fileAttachments": [],
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1678292094868
      },
      {
        "content": "For me, my Admin would say &quot;2 Pages&quot;, but no pages would be listed<br> <br> (until refreshing a bunch of times)",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678292112289
      },
      {
        "content": "Yea, not working for me unfortunately, even tried incognito mode",
        "fileAttachments": [],
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1678292172221
      },
      {
        "content": "any errors?",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678292258399
      },
      {
        "content": "I can access it if I copy and paste the ID into the URL. But the list will not show it.<br> <br> No errors",
        "fileAttachments": [
          {
            "attachment": "https://cdn.discordapp.com/attachments/1083059221916033024/1083060981065863168/image.png",
            "name": "image.png",
            "id": "1083060981065863168",
            "size": 117278,
            "url": "https://cdn.discordapp.com/attachments/1083059221916033024/1083060981065863168/image.png",
            "proxyURL": "https://media.discordapp.net/attachments/1083059221916033024/1083060981065863168/image.png",
            "height": 540,
            "width": 961,
            "contentType": "image/png",
            "description": null,
            "ephemeral": false
          }
        ],
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1678292260242
      },
      {
        "content": "Odd<br> <br> Some other people were posting recently about data existing but not showing in admin components<br> <br> Wonder if it is related",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678292307983
      },
      {
        "content": "Possibly! First time something like this has happened to me.<br> <br> Naturally our content editors are freaking out 😅",
        "fileAttachments": [],
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1678293188687
      },
      {
        "content": "Hey Tom - We actually had a breaking change in 1.6.1 that required migration of document versions.<br><br>Here is more info and the migration script:<br><a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-versions-may-need-to-be-migrate\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-versions-may-need-to-be-migrate</a><br> <br> this is likely the case",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1678296100835
      },
      {
        "content": "Hey I updated from 1.6.13 to 1.6.17 which caused them to disappear. I&#x27;ll try run that script though I am concerned about data corruption<br> <br> Script is giving the error<br><pre><code class=\"hljs ts\"><span class=\"hljs-variable constant_\">PAYLOAD_CONFIG_PATH</span>=src/payload.<span class=\"hljs-property\">config</span>.<span class=\"hljs-property\">ts</span> : <span class=\"hljs-title class_\">The</span> term <span class=\"hljs-string\">&#x27;PAYLOAD_CONFIG_PATH=src/payload.config.ts&#x27;</span> is not recognized <span class=\"hljs-keyword\">as</span> the name <span class=\"hljs-keyword\">of</span> a cmdlet, <span class=\"hljs-keyword\">function</span>, script file, or \noperable program. <span class=\"hljs-title class_\">Check</span> the spelling <span class=\"hljs-keyword\">of</span> the name, or <span class=\"hljs-keyword\">if</span> a path was included, verify that the path is correct and <span class=\"hljs-keyword\">try</span> again.\n<span class=\"hljs-title class_\">At</span> <span class=\"hljs-attr\">line</span>:<span class=\"hljs-number\">1</span> <span class=\"hljs-attr\">char</span>:<span class=\"hljs-number\">1</span>\n+ <span class=\"hljs-variable constant_\">PAYLOAD_CONFIG_PATH</span>=src/payload.<span class=\"hljs-property\">config</span>.<span class=\"hljs-property\">ts</span> npx ts-node -T ./migrateVer ...\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + <span class=\"hljs-title class_\">CategoryInfo</span>          : <span class=\"hljs-title class_\">ObjectNotFound</span>: (<span class=\"hljs-variable constant_\">PAYLOAD_CONFIG_</span>...yload.<span class=\"hljs-property\">config</span>.<span class=\"hljs-property\">ts</span>:<span class=\"hljs-title class_\">String</span>) [], <span class=\"hljs-title class_\">CommandNotFoundException</span>\n    + <span class=\"hljs-title class_\">FullyQualifiedErrorId</span> : <span class=\"hljs-title class_\">CommandNotFoundException</span></code></pre>",
        "fileAttachments": [],
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1678297670793
      },
      {
        "content": "crossenv issue?<br> <br> @Tom Try putting <code>cross-env</code> at the start of the cmd<br> <br> might work? the dev command and serve commands start with it<br> <br> <pre><code class=\"hljs\">cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts .........</code></pre>",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1678302782590
      },
      {
        "content": "Hey @Tom did you get this sorted or could you use an assist here?",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1678458689446
      },
      {
        "content": "That migration script isn&#x27;t going to be what you need I&#x27;m afraid.<br>That helps you go update payload on collections that already had versions with the breaking changes.<br>@Tom  What you&#x27;re seeing is different. Your database had documents in the normal collection location (why you can access them via the id). The list queries the _collectionname_versions table in mongo to show both draft + published results.<br>You need a migration script that resaves all documents which will create the version collection documents for the list to work.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1678465545319
      },
      {
        "content": "Hey, I did thanks guys yeah, for some reason I had to put it in my package.json and run it from there with cross-env, that finally got it working, appreciate all the help",
        "fileAttachments": [],
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1678466815972
      },
      {
        "content": "Amazing!<br> <br> Glad to hear it!",
        "fileAttachments": [],
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1678479351983
      }
    ],
    "messageCount": 29,
    "slug": "updated-to-latest-version-and-enabled-drafts-made-all-my-entries-disappear"
  },
  {
    "info": {
      "name": "Issues upgrading to v1.6.11 and getting this error? any idea what might be the issue?",
      "id": "1075897263982919720",
      "guildId": "967097582721572934",
      "createdAt": 1676584296938
    },
    "intro": {
      "content": "/Users/liorix/Development/featurefm-rebranded-website/apps/cms-backend/src/payload.config.ts:1<br>import { buildConfig } from &#x27;payload/config&#x27;;<br>^^^^^^<br>Followed the following guide: <a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-breaking-changes\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-breaking-changes</a><br><br>SyntaxError: Cannot use import statement outside a module<br>    at Object.compileFunction (node:vm:360:18)<br>    at wrapSafe (node:internal/modules/cjs/loader:1084:15)<br>    at Module._compile (node:internal/modules/cjs/loader:1119:27)<br>    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1209:10)<br>    at Module.load (node:internal/modules/cjs/loader:1033:32)<br>    at Function.Module._load (node:internal/modules/cjs/loader:868:12)<br>    at Function.Module._load (/Users/liorix/Development/featurefm-rebranded-website/packages/js/src/executors/node/node-with-require-overrides.ts:16:27)<br>    at Module.require (node:internal/modules/cjs/loader:1057:19)<br>    at require (node:internal/modules/cjs/helpers:103:18)<br>    at loadConfig (/Users/liorix/Development/featurefm-rebranded-website/node_modules/payload/src/config/load.ts:22:25)<br>No errors found.",
      "fileAttachments": [],
      "authorID": "372021382789332993",
      "authorName": "liorix",
      "authorAvatar": null,
      "createdAtDate": 1676584296938
    },
    "messages": [
      {
        "content": "I have the same problem. I am currently using 1.5.9 because of it.<br><a href=\"https://github.com/payloadcms/nextjs-custom-server/issues/26\">https://github.com/payloadcms/nextjs-custom-server/issues/26</a>",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676596920937
      },
      {
        "content": "I had the the same problem days ago when I moved from 1.5.9 to 1.6.9 …I just created a new payload project and moved my collections and config ..I wonder why this happens",
        "fileAttachments": [],
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676630314155
      },
      {
        "content": "So this is because in 1.6.0, we have recently <em><strong>removed our automatic config transpilation</strong></em> - see the changelog w/ breaking change notes here:<br> <br> <a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-payload-now-no-longer-transpiles-your-config-for-you\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-payload-now-no-longer-transpiles-your-config-for-you</a>",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676641928666
      },
      {
        "content": "@jmikrut I did follow the migration guide and probably missed something, Could you please point me to the specific migration I should do to fix this issue?<br> <br> we do use typescript in this project",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676648450402
      },
      {
        "content": "Same issue here. I tried to follow the migration guide, but I must be missing something.<br><br>Even the official <code>nextjs-custom-server</code> example fails <code>yarn build</code> because of this error.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676650008741
      },
      {
        "content": "Basically, you should be using the compiled version of your config <code>payload.config.js</code> resulting from your build. Previously, you could use a *.ts config in production because Payload would transpile automatically.<br><br>What command are you running to get the error? What PAYLOAD_CONFIG_PATH?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676666548934
      },
      {
        "content": "yep - there are lots of ways to handle transpilation for any given Node app that has TS / JSX, but basically, we suggest to use <code>ts-node</code> to transpile your app<br> <br> and if you do that, then <code>import</code> will no longer throw errors in development<br> <br> but in production, you will probably want to just run <code>node</code> instead of <code>ts-node</code>, so you should have already built your project into a <code>/dist</code> or similar<br> <br> and then in production, you&#x27;d run your app like this <code>PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js</code><br> <br> and then any files that are used by <code>dist/server.js</code> should have already been converted to CommonJS (meaning no more <code>import</code> statements to be found)<br> <br> the best way to see this all working from top to bottom is to just start up a new <code>npx create-payload-app</code> and look at the NPM scripts that we ship you",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667101461
      },
      {
        "content": "<code>create-payload-app</code> is very different from the  <code>nextjs-custom-server</code> setup that was on the YouTube tutorial",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676667279383
      },
      {
        "content": "ahh yes, for that one, we will be updating that package shortly with a way to make that work<br> <br> which part are you having an error with? we can expedite this",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676667302825
      },
      {
        "content": "Sorry, @liorix I don&#x27;t mean to hijack your thread.<br><br>Me personally, I don&#x27;t understand what exact steps are needed to &quot;use the compiled version of your config payload.config.js instead of  *.ts config.&quot; as you guys put it.<br><br>It sounds like something needs to change in the <code>package.json</code> build script, and in the <code>tsconfig.json</code> and <code>tsconfig.server.json</code>. <br><br>I don&#x27;t need a full on tutorial, I really just need a commit history so that I can see what is being changed in your <code>nextjs-custom-server</code>  repo and better understand why.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676669042706
      },
      {
        "content": "well, nothing changed in our repo, nothing is necessary to change if you have always been using ts<br> <br> it&#x27;s only for projects that used to be JS-only",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676670197193
      },
      {
        "content": "Well I don&#x27;t understand because the <code>nextjs-custom-server</code> is typed, yet it can&#x27;t be built.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676670279954
      },
      {
        "content": "where is it failing for you? which command?",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676670405602
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/nextjs-custom-server/issues/26\">https://github.com/payloadcms/nextjs-custom-server/issues/26</a>",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676670417776
      },
      {
        "content": "ok i just followed up with a bit more detail and a plan for fixing this",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676671119004
      },
      {
        "content": "Saw your response, really appreciate it!",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1676671170080
      },
      {
        "content": "sorry for the hassle. this will be taken care of for you shortly",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676671184879
      },
      {
        "content": "I eventually scaffolded a new version of payload and copied my collections/etc to the new project and it worked<br> <br> thanks everyone",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676746172922
      },
      {
        "content": "yeah that was quick solution aswell😂  sometimes the hardest way is the easiest",
        "fileAttachments": [],
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676747021026
      },
      {
        "content": "I just spun up a brand new install and I&#x27;m still seeing this issue with js<br> <br> Ah ok I missed this particular line &quot;There are many ways to mitigate this - but the best way is to just quickly scaffold a barebones TS implementation.&quot; - So seems that the <code>javascript</code> option in <code>create-payload-app</code> is effectively deprecated?<br> <br> Hmm still not quite success here, I am able to run the development server but I&#x27;m getting a ton of ts errors when I try to build, I&#x27;ve never used TypeScript so I&#x27;m admittedly very ignorant to the setup there, but is it possible to build a js payload project with the ts config there some other change to the package.json or similar?<br> <br> It&#x27;s the <code>build:server</code> step that is failing. If I leave that out things seem to work, but not sure it&#x27;s kosher to leave that out. My hunch is there&#x27;s something about importing my js collections into the ts file that&#x27;s causing issues?<br> <br> I&#x27;m getting TS2322 on every imported collection<br> <br> Peppering my <code>payload.config.ts</code> with a ton of <code>@ts-ignore</code> comments seems to solve this<br> <br> But I&#x27;m wondering if there&#x27;s a path for people who won&#x27;t ever be using ts to not have to do this workaround?",
        "fileAttachments": [],
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1678206711781
      }
    ],
    "messageCount": 36,
    "slug": "issues-upgrading-to-v1611-and-getting-this-error-any-idea-what-might-be-the-issue"
  },
  {
    "info": {
      "name": "How to handle different image aspect ratio's and cropping within a media library",
      "id": "1084500782612754493",
      "guildId": "967097582721572934",
      "createdAt": 1678635535625
    },
    "intro": {
      "content": "Hi All, i am curious on how you handle different image aspect ratio&#x27;s? I am used to having one global media library and then defining the image crop dimensions within a field. This is (correct me if i am wrong) not possible within payload. What is the best way to configure a system for for example landscape and portrait images? Setting up two different collections or is there a better solution?",
      "fileAttachments": [],
      "authorID": "557183523879124992",
      "authorName": "mvdve",
      "authorAvatar": null,
      "createdAtDate": 1678635535625
    },
    "messages": [
      {
        "content": "hi, @mvdve ! Is this what you&#x27;re looking for?<br><a href=\"https://payloadcms.com/docs/upload/overview#image-sizes\">https://payloadcms.com/docs/upload/overview#image-sizes</a><br><br>in this page there is an &quot;Example Upload collection&quot; which I think does what you described",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1678643543188
      },
      {
        "content": "Hi @arielarial thanks for the link. This is for the whole collection. Say you have one Media collection, with images in landscape and portrait and you want to crop both, a very wide slider image will also be cropped to portrait which is not useful. Normally i would set the crop dimension within the image field. So for example a Page collection with a portrait image would have a portait crop and an image within Slider collection would have a landscape crop. This would result in one crop per image instead of two. I Could solve this by create two Media collections, one for portrait images and one for landscape, but this would be less user friendly for the admin. Any suggestions?",
        "fileAttachments": [],
        "authorID": "557183523879124992",
        "authorName": "mvdve",
        "authorAvatar": null,
        "createdAtDate": 1678645556901
      },
      {
        "content": "Got it now. I think that I&#x27;m used to this kind of &quot;useless crops&quot; because it is how wordpress deals with them, and never bothered about it.<br>I actually like that these crops are created because if by any change I need, they&#x27;re already there. <br>But anyway, I don&#x27;t know if payload can create image sizes conditionally, tough.",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1678647154236
      },
      {
        "content": "That&#x27;s a good take on in, maybe best to just accept it 🙂 Any idea on how to rerun resizing after adding a new image size? can&#x27;t find it in the docs anywhere",
        "fileAttachments": [],
        "authorID": "557183523879124992",
        "authorName": "mvdve",
        "authorAvatar": null,
        "createdAtDate": 1678647462439
      },
      {
        "content": "@mvdve You can run a script to regenerate images : <a href=\"https://github.com/payloadcms/payload/discussions/1834\">https://github.com/payloadcms/payload/discussions/1834</a>",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1678648686969
      },
      {
        "content": "@ElliotYoYo Cool thanks, did not find that post. My client wants to use S3 so maybe a lambda which will resize the image on the fly is good option, new territory for me but what the heck..",
        "fileAttachments": [],
        "authorID": "557183523879124992",
        "authorName": "mvdve",
        "authorAvatar": null,
        "createdAtDate": 1678648788715
      },
      {
        "content": "Payload is handling Media in the same way as Wordpress, not an optimal approach but I can&#x27;t thing of a better way.<br>- If you generate image sizes on the fly, the first request will be slow, and you open your application to possible DDOS<br>- If you set specific sizes per images, the users can&#x27;t use the whole library<br> <br> A solution might be to define a set of sizes needed per fields and payload would generate the sizes when selecting an image.",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1678649228916
      },
      {
        "content": "I have used Drupal allot an there you select an image size within the field which references the media library. This works excellent and images are only resized when needed, adding a new size works without resizing the whole library.",
        "fileAttachments": [],
        "authorID": "557183523879124992",
        "authorName": "mvdve",
        "authorAvatar": null,
        "createdAtDate": 1678649554872
      },
      {
        "content": "@mvdve I&#x27;m using payload with Next on a project. I use imagesizes from payload to generate the crops in the maximum size possible,  and then Next/image to serve it in avif and optimized for screen dimensions<br> <br> @ElliotYoYo By any chance, did you use the regenrate media sizes script with payload-plugin-cloud-storage? The way the script is made it only works for media stored locally, couldn&#x27;t make it work with media stored on the cloud :/",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1678649632460
      },
      {
        "content": "@arielarial ah, i am also starting a nextjs project so i will look in to that",
        "fileAttachments": [],
        "authorID": "557183523879124992",
        "authorName": "mvdve",
        "authorAvatar": null,
        "createdAtDate": 1678649766016
      },
      {
        "content": "I don&#x27;t think payload should rely on another module like Next/Nuxt image. If you are creating a static website/mobile application you can&#x27;t use them<br> <br> Never used the script sry.<br> <br> Is the compatibility issue here <code>filePath: ${staticDir}/${mediaDoc.filename},</code> ?",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1678649797792
      },
      {
        "content": "exactly!<br> <br> my thread is here, if you think of anything (and so we dont mess with this one from mvdve 😅 )<br><a href=\"https://discord.com/channels/967097582721572934/1080843016413118544/1080843016413118544\">https://discord.com/channels/967097582721572934/1080843016413118544/1080843016413118544</a>",
        "fileAttachments": [],
        "authorID": "736673642158620680",
        "authorName": "arielarial",
        "authorAvatar": "50c7590d9709bd9e02848d28172b0bd9",
        "createdAtDate": 1678650011501
      },
      {
        "content": "No problem, i&#x27;m running into the same issues.<br> <br> Not sure why, but my client insist on using AWS with S3, which makes this a bit complicated. I see that Amazon has a image processing repo for lambda, that could be a nice solution, completely bypassing the payload image resizing system.",
        "fileAttachments": [],
        "authorID": "557183523879124992",
        "authorName": "mvdve",
        "authorAvatar": null,
        "createdAtDate": 1678650283969
      }
    ],
    "messageCount": 19,
    "slug": "how-to-handle-different-image-aspect-ratios-and-cropping-within-a-media-library"
  },
  {
    "info": {
      "name": "Expected DateTime to be a GraphQL nullable type.",
      "id": "1078698916087857263",
      "guildId": "967097582721572934",
      "createdAt": 1677252262852
    },
    "intro": {
      "content": "Has anyone faced this issue? I am trying to deploy payload and I get this on the server log<br><br><pre><code class=\"hljs\">2023-02-24T15:22:23.933722656Z stderr F \n2023-02-24T15:22:23.933610406Z stderr F     at async initHTTP (/home/node/node_modules/payload/dist/initHTTP.js:28:21)\n2023-02-24T15:22:23.933607812Z stderr F     at async getPayload (/home/node/node_modules/payload/dist/payload.js:236:26)\n2023-02-24T15:22:23.933605289Z stderr F     at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n2023-02-24T15:22:23.933602511Z stderr F     at BasePayload.init (/home/node/node_modules/payload/dist/payload.js:209:42)\n2023-02-24T15:22:23.933599844Z stderr F     at registerSchema (/home/node/node_modules/payload/dist/graphql/registerSchema.js:58:24)\n2023-02-24T15:22:23.9335964Z stderr F     at initCollectionsGraphQL (/home/node/node_modules/payload/dist/collections/graphql/init.js:60:38)\n2023-02-24T15:22:23.933593024Z stderr F     at Array.forEach (&lt;anonymous&gt;)\n2023-02-24T15:22:23.933589447Z stderr F     at /home/node/node_modules/payload/dist/collections/graphql/init.js:101:23\n2023-02-24T15:22:23.933586504Z stderr F     at new GraphQLNonNull (/home/node/node_modules/payload/node_modules/graphql/type/definition.js:395:32)\n2023-02-24T15:22:23.933583663Z stderr F     at devAssert (/home/node/node_modules/payload/node_modules/graphql/jsutils/devAssert.js:12:11)\n2023-02-24T15:22:23.933578341Z stderr F Error: Expected DateTime to be a GraphQL nullable type.\n2023-02-24T15:22:23.933575552Z stderr F \n2023-02-24T15:22:23.933572703Z stderr F           ^\n2023-02-24T15:22:23.933567927Z stderr F     throw new Error(message);\n2023-02-24T15:22:23.933516156Z stderr F /home/node/node_modules/payload/node_modules/graphql/jsutils/devAssert.js:12</code></pre>",
      "fileAttachments": [],
      "authorID": "944284724824801302",
      "authorName": "generator101",
      "authorAvatar": null,
      "createdAtDate": 1677252262852
    },
    "messages": [
      {
        "content": "Hi @generator101 - is DateTime a field that you have added?",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678107135166
      },
      {
        "content": "no<br> <br> I think the issue was related to the npm vs yarn",
        "fileAttachments": [],
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1678108635125
      }
    ],
    "messageCount": 3,
    "slug": "expected-datetime-to-be-a-graphql-nullable-type"
  },
  {
    "info": {
      "name": "Relationship field + filterOptions on the \"relationTo\" collection",
      "id": "1080158158665818172",
      "guildId": "967097582721572934",
      "createdAt": 1677600173394
    },
    "intro": {
      "content": "Hi 👋<br>With my colleague @Leyllo we&#x27;re encountering an issue with the relationship field.<br><br>We have two collections:<br>1). <code>articles</code> that contains a field <code>category</code> that can either be &quot;Press&quot; or &quot;News&quot;<br>2). <code>pages</code> that have the relationship field linked to <code>articles</code>.<br><br>So far we understand that the <code>filterOptions</code> parameter can be used to filter the current document (i.e. a page) through <code>data</code> or <code>siblingData</code> but we actually want to filter the choices for, for example, &quot;any article that has a category of <code>news</code>&quot;.<br><br>Is this something possible? Should we go for another type of field to perform this?<br><br>In summary, we’re trying to mimic a taxonomy feature just like WordPress ACF but right now we cannot find a way to do the filtering that ACF allows.<br><br>Maybe is there a way to consume the local API (<code>payload.find()</code>) and display the response in a select, maybe through a custom UI component? Are there better options?<br><br>Thanks!",
      "fileAttachments": [],
      "authorID": "157199103921618944",
      "authorName": "Migu",
      "authorAvatar": "7c40c98d2393a326cea0da98f91966d2",
      "createdAtDate": 1677600173394
    },
    "messages": [
      {
        "content": "hi @Migu - this is absolutely possible, here is a simple way to setup with a relationship field:<br><br><pre><code class=\"hljs\">{\n  name: &#x27;articleType&#x27;,\n  type: &#x27;select&#x27;,\n  options: [\n    {\n      value: &#x27;news&#x27;,\n      label: &#x27;News&#x27;,\n    },\n    {\n      value: &#x27;press&#x27;,\n      label: &#x27;Press&#x27;,\n    }\n  ]\n},\n{\n  name: &#x27;articles&#x27;,\n  type: &#x27;relationship&#x27;,\n  relationTo: &#x27;articles&#x27;,\n  hasMany: true,\n  filterOptions: ({ data }) =&gt; {\n    return {\n      category: { equals: data.articleType },\n    };\n  },\n}</code></pre><br><br>The select field allows you to choose the category type. Then the relationship field will filter the results where the article category is equal to the category from your select field. If you don&#x27;t need the option to toggle between them, you can set <code>equals: &#x27;news&#x27;</code>  or another static string.<br><br>Hope this helps!",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678117952707
      }
    ],
    "messageCount": 1,
    "slug": "relationship-field-filteroptions-on-the-relationto-collection"
  },
  {
    "info": {
      "name": "Best approach to set up low traffic Next.js website",
      "id": "1081627879957352509",
      "guildId": "967097582721572934",
      "createdAt": 1677950582256
    },
    "intro": {
      "content": "Hi Payload community,<br>I&#x27;m new to payload and this discord community so please don&#x27;t mind if this is a trivial question.<br><br>I want to build a website for my university club which will have mostly static pages but some dynamic data driven components like projects, upcoming events, etc. A full blown backend seems to be overkill for this so I decided to explore payload for it&#x27;s admin panel/data handling.<br>Ideally, I would like to do most of the data handling with getStaticProps() and create a new build when the CMS data is changed (e.g. an event is added by the team) as I expect there won&#x27;t be very frequent changes. But I&#x27;m not sure how to set up the website to trigger a build upon updating the content in payload. <br><br>I see that there are various ways to integrate a Next.js app with payload:<br><br>1. Set up a separate payload server which will act like a usual backend server with an admin panel. Deploy the Next.js app on vercel. <br>This approach seems straightforward to me but I&#x27;ll have to maintain 2 different deployments.<br><br>2. A monorepo approach like in the nextjs-payload boilerplate provided by the payload team. I have parts of the frontend built already, I couldn&#x27;t figure out how to add payload to the existing nextjs app. Also seems like I won&#x27;t be able to deploy to vercel this way?<br><br>3. I saw another repo by the payload team - next/payload which apparently exposes payload in a serverless way using nextjs API routes. However the package still seems to be in early development so I&#x27;m not sure if/how to use it.<br><br>I would love to deploy this website with free-tiers of any cloud providers (at least initially) as I&#x27;m not sure if my university will be providing any budget for this website.<br><br>Any suggestions or advice is appreciated!<br>Thank you!",
      "fileAttachments": [],
      "authorID": "1054060010830839888",
      "authorName": "Shailesh Shenoy",
      "authorAvatar": "c82b3fa769ed6e6ffdea579381ed5f5c",
      "createdAtDate": 1677950582256
    },
    "messages": [
      {
        "content": "I&#x27;ve attempted a deployment solution where you click a button in the admin that triggers the next.js dev server to shut down, statically export, turn back on, then sync to an s3 bucket.<br> <br> The problem with this approach is that the bigger the site gets, the longer and longer the export becomes. And the bigger the export, the more upload cost you&#x27;re incurring on aws.<br> <br> the better solution i&#x27;ve found is to host next.js in incremental static regeneration mode. You have to host it somewhere, but if you do that, you can sit cloudfront in front of that host and it&#x27;ll cache all requests, making it way easier to keep costs low",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677959355744
      },
      {
        "content": "Is your payload server deployed on the same server as nextjs?",
        "fileAttachments": [],
        "authorID": "1054060010830839888",
        "authorName": "Shailesh Shenoy",
        "authorAvatar": "c82b3fa769ed6e6ffdea579381ed5f5c",
        "createdAtDate": 1677961148322
      },
      {
        "content": "yup",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677961839092
      },
      {
        "content": "Great, do you know of any resources which demonstrate how to add payload-server into an existing nextjs app?<br>Thanks!",
        "fileAttachments": [],
        "authorID": "1054060010830839888",
        "authorName": "Shailesh Shenoy",
        "authorAvatar": "c82b3fa769ed6e6ffdea579381ed5f5c",
        "createdAtDate": 1677966963849
      },
      {
        "content": "Actually I’m not sure outside of just hooking them up myself lol. The main thing I did was generate an auth token in play load, then I set up an api route in next js to handle the gql requests. That’s the gist of it.",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677967904621
      },
      {
        "content": "There is a nestjs+payload example in the payload GitHub org. It runs both in the same process.",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1678017561506
      },
      {
        "content": "Thanks!<br>I will follow this approach going forward.<br>Payload has a great community 🙂",
        "fileAttachments": [],
        "authorID": "1054060010830839888",
        "authorName": "Shailesh Shenoy",
        "authorAvatar": "c82b3fa769ed6e6ffdea579381ed5f5c",
        "createdAtDate": 1678063834728
      },
      {
        "content": "I have a very small B2B site, deployed to a free tier Google Cloud VM.<br><br>Instead of Get Static Props, I use Incremental Static Regeneration. I have my revalidate set to once per hour. <br><a href=\"https://nextjs.org/docs/basic-features/data-fetching/incremental-static-regeneration\">https://nextjs.org/docs/basic-features/data-fetching/incremental-static-regeneration</a><br><br>I also use Cloudflare&#x27;s CDN to cache the static pages, further reducing server load.",
        "fileAttachments": [],
        "authorID": "288798695699513346",
        "authorName": "TacticalSmoores",
        "authorAvatar": "a_70eb1ab615b97d33f3f0a8e975969cb6",
        "createdAtDate": 1678068772998
      },
      {
        "content": "@Shailesh Shenoy We&#x27;re actively working on a website template right now which will include a complete Next.js front-end and will cover the basic needs of most websites like page building, previewing, etc. It won&#x27;t be shipped monorepo but you can easily do that yourself. While that&#x27;s being developed you might find our preview example helpful <a href=\"https://github.com/payloadcms/payload/tree/master/examples/preview\">https://github.com/payloadcms/payload/tree/master/examples/preview</a>. It too includes a complete front-end and will answer some of your questions around triggering static rebuilds. This example is strictly to show the preview feature and ISR. The website template will include this plus many more features–I&#x27;ll post an update to this thread in the coming weeks.",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678077484047
      },
      {
        "content": "Thanks @jacobsfletch<br>I tried adding payload with required dependencies to my nextjs 13 app but was not able to get it running due to various issues (webpack, dependencies, etc.)<br>Maybe this is due to my lack of experience with build technologies. I went ahead and started a new repo using the nextjs-custome-website template from payload team: <a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a><br>And I am in the process of copying my nextjs pages/files to this repo which is working well for now.<br> <br> It will be helpful if there is a guide to add payload to existing nextjs application for beginners like me!",
        "fileAttachments": [],
        "authorID": "1054060010830839888",
        "authorName": "Shailesh Shenoy",
        "authorAvatar": "c82b3fa769ed6e6ffdea579381ed5f5c",
        "createdAtDate": 1678208241563
      },
      {
        "content": "100% guides like this are crucial<br> <br> This would make a great blog post<br> <br> I might be able to slap something together sometime<br> <br> Or if anyone else stumbles upon this thread, let it rip!",
        "fileAttachments": [],
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1678217605504
      }
    ],
    "messageCount": 17,
    "slug": "best-approach-to-set-up-low-traffic-nextjs-website"
  },
  {
    "info": {
      "name": "Error running project",
      "id": "1080369850024722493",
      "guildId": "967097582721572934",
      "createdAt": 1677650644547
    },
    "intro": {
      "content": "I don&#x27;t know if it is an isolated case, but when I create a new project with js-blank and run it (npm run dev), it throws an error because it doesn&#x27;t find the src folder that was not created. Attached are pictures of the console error and the automatically created folder structure, where some folders are missing.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1080369850024722493/1080369850234445846/Captura_de_pantalla_2023-03-01_010003.png",
          "name": "Captura_de_pantalla_2023-03-01_010003.png",
          "id": "1080369850234445846",
          "size": 83949,
          "url": "https://cdn.discordapp.com/attachments/1080369850024722493/1080369850234445846/Captura_de_pantalla_2023-03-01_010003.png",
          "proxyURL": "https://media.discordapp.net/attachments/1080369850024722493/1080369850234445846/Captura_de_pantalla_2023-03-01_010003.png",
          "height": 613,
          "width": 1319,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1080369850024722493/1080369850469335060/Captura_de_pantalla_2023-03-01_010240.png",
          "name": "Captura_de_pantalla_2023-03-01_010240.png",
          "id": "1080369850469335060",
          "size": 22175,
          "url": "https://cdn.discordapp.com/attachments/1080369850024722493/1080369850469335060/Captura_de_pantalla_2023-03-01_010240.png",
          "proxyURL": "https://media.discordapp.net/attachments/1080369850024722493/1080369850469335060/Captura_de_pantalla_2023-03-01_010240.png",
          "height": 558,
          "width": 406,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "898767999287320607",
      "authorName": "Porfirio",
      "authorAvatar": "d66ff8314c6b768bd32c2a3dd7e54771",
      "createdAtDate": 1677650644547
    },
    "messages": [
      {
        "content": "Just tried js-&gt;blank and ts-&gt;blank and got a working project both times.<br><pre><code class=\"hljs\">npx create-payload-app\n&gt; name\n&gt; js\n&gt; blank</code></pre>",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677666472758
      },
      {
        "content": "Sounds like you may have an old cached version of create-payload-app. We actually made the decision to remove the JS templates.<br> <br> This post might help you out: <a href=\"https://github.com/payloadcms/payload/discussions/2013#discussioncomment-4925042\">https://github.com/payloadcms/payload/discussions/2013#discussioncomment-4925042</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677679934272
      },
      {
        "content": "I understand, thank you for your help",
        "fileAttachments": [],
        "authorID": "898767999287320607",
        "authorName": "Porfirio",
        "authorAvatar": "d66ff8314c6b768bd32c2a3dd7e54771",
        "createdAtDate": 1677712504635
      }
    ],
    "messageCount": 4,
    "slug": "error-running-project"
  },
  {
    "info": {
      "name": "hide id field",
      "id": "1048430878898004048",
      "guildId": "967097582721572934",
      "createdAt": 1670035800433
    },
    "intro": {
      "content": "Hi all 👋  <br><br>I&#x27;m having trouble hiding the id of a collection. I assumed I could do it like this, but I get caught in a loop where it can&#x27;t log me in properly. <br><br><pre><code class=\"hljs\">{\n  name: &#x27;id&#x27;,\n  type: &#x27;text&#x27;,\n  hidden: true,\n},</code></pre><br><br>I can identify at least two potential issues... the <code>type</code> is not correct, and/or <code>hidden</code> isn&#x27;t doing what I think it is. <br><br>The <code>hidden</code> config is defined as <code>Restrict this field&#x27;s visibility from all APIs entirely. Will still be saved to the database, but will not appear in any API or the Admin panel.</code><br><br>does <code>hidden: true</code> mean that the id is not included in the user object when it is fetched from the database? If this is the case, how do I include the id in the document but hide it from the toggle columns options? (pictured)<br><br>Any guidance is appreciated. Thank you",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1048430878898004048/1048430879074160670/image.png",
          "name": "image.png",
          "id": "1048430879074160670",
          "size": 33651,
          "url": "https://cdn.discordapp.com/attachments/1048430878898004048/1048430879074160670/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1048430878898004048/1048430879074160670/image.png",
          "height": 363,
          "width": 1271,
          "contentType": "image/png",
          "description": "Toggle Columns",
          "ephemeral": false
        }
      ],
      "authorID": "1047669407708610661",
      "authorName": "browniedev",
      "authorAvatar": "bc09a78c8bd507dffa53e59033933c80",
      "createdAtDate": 1670035800433
    },
    "messages": [
      {
        "content": "hey @browniedev — well, the <code>id</code> <em><strong>will</strong></em> be included when fetched from the database—using <code>hidden: true</code> will simply hide it from being returned from any of Payload&#x27;s APIs<br> <br> we should be able to build in controls to &quot;deactivate&quot; fields from being used as columns, I&#x27;d say that is the right way to go here<br> <br> because hiding an <code>id</code> will have unknown side-effects in the admin UI, etc<br> <br> we would happily accept a PR for this as well btw<br> <br> maybe a new property on a field config like <code>admin.disableColumn</code> or similar<br> <br> and then simply check for that property when we expose what columns are available to use in the List view<br> <br> could be a good first contribution if you&#x27;re up for it 😈",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670266742418
      },
      {
        "content": "Yes!! When I get home today, I&#x27;ll follow up on this 💯",
        "fileAttachments": [],
        "authorID": "1047669407708610661",
        "authorName": "browniedev",
        "authorAvatar": "bc09a78c8bd507dffa53e59033933c80",
        "createdAtDate": 1670269571711
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/discussions/1219\">https://github.com/payloadcms/payload/discussions/1219</a><br> <br> this might be helpful if you end up deciding to PR",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670269699758
      },
      {
        "content": "I&#x27;m open to the idea of making a contribution, do you have any documentation on the process of contributing?",
        "fileAttachments": [],
        "authorID": "1047669407708610661",
        "authorName": "browniedev",
        "authorAvatar": "bc09a78c8bd507dffa53e59033933c80",
        "createdAtDate": 1670269826349
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/blob/master/contributing.md\">https://github.com/payloadcms/payload/blob/master/contributing.md</a><br> <br> this plus the Discussion above should be helpful",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1670271087848
      },
      {
        "content": "@browniedev have you tried to implement this? Would be nice to have!",
        "fileAttachments": [],
        "authorID": "1041438496285532170",
        "authorName": "TheFrontend",
        "authorAvatar": "bcb7fbbe04c97de177f47c68e9fbaf6d",
        "createdAtDate": 1677674407997
      }
    ],
    "messageCount": 14,
    "slug": "hide-id-field"
  },
  {
    "info": {
      "name": "Problem with DocumentDB connection",
      "id": "1085553933335932938",
      "guildId": "967097582721572934",
      "createdAt": 1678886626324
    },
    "intro": {
      "content": "Hi there! Maybe someone run into a problem with DocumentDB and  <code>readPreference=secondaryPreferred</code>?<br><br><pre><code class=\"hljs\">ERROR (payload): Error: cannot connect to MongoDB. Details: MongoDB prohibits index creation on connections that read from non-primary replicas.  Connections that set &quot;readPreference&quot; to &quot;secondary&quot; or &quot;secondaryPreferred&quot; may not opt-in to the following connection options: autoCreate, autoIndex</code></pre><br> <br> For anyone struggling with DocumentDB, I was able to configure it:<br><br>1. get CA .pem file <code>wget https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem</code> and save it on the same level as <code>server.ts</code> file<br>2. set correct MONGODB_URI <code>mongodb://&lt;user_with_access_to_database&gt;:&lt;password&gt;@&lt;documentdb_domain_from_aws_dashboard&gt;:27017/&lt;database&gt;</code><br>3. update configuration passed to payload.init in server.ts file:<br><br><pre><code class=\"hljs\">payload.init({\n...\nmongoURL: process.env.MONGODB_URI,\nmongoOptions: {\n        ssl: true,\n        sslCA: path.resolve(__dirname, &#x27;rds-combined-ca-bundle.pem&#x27;),\n        useFacet: false,\n        retryWrites: false\n   }\n});</code></pre><br><br>I&#x27;ve also encountered <code>MongoServerSelectionError: Server selection timed out after 30000 ms</code> error but it was fixed by provided <code>mongoOptions</code> (it was probably fixed by changing tlsCAFile to sslCA). Hope it&#x27;ll help someone ✌️<br> <br> And here is the AWS troubleshooting instruction: <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/troubleshooting.connecting.html\">https://docs.aws.amazon.com/documentdb/latest/developerguide/troubleshooting.connecting.html</a>",
      "fileAttachments": [],
      "authorID": "545926768327131137",
      "authorName": "svnx",
      "authorAvatar": "a3912bbb6e1730daed37444a5abd703f",
      "createdAtDate": 1678886626324
    },
    "messages": [],
    "messageCount": 2,
    "slug": "problem-with-documentdb-connection"
  },
  {
    "info": {
      "name": "Amazon S3 for images",
      "id": "1075762051072405576",
      "guildId": "967097582721572934",
      "createdAt": 1676552059668
    },
    "intro": {
      "content": "Hi, I&#x27;ve configured S3 to be our image cloud storage. I&#x27;m getting this error message when I try to upload an image:<br><br>[12:45:18] ERROR (NoSuchKey): The specified key does not exist.<br>    NoSuchKey: The specified key does not exist.<br>        at deserializeAws_restXmlNoSuchKeyResponse... <br><br>This is my setup, am I missing something? We were able to make it work a while back but now as we&#x27;re preparing to go live with our new CMS and set the production env, we again unable to make it work.<br><br>env:<br><br>    &quot;@payloadcms/plugin-cloud-storage&quot;: &quot;^1.0.14&quot;,<br>    &quot;payload&quot;: &quot;1.5.9&quot;,<br>    &quot;@aws-sdk/client-s3&quot;: &quot;^3.272.0&quot;,<br>    &quot;@aws-sdk/lib-storage&quot;: &quot;^3.272.0&quot;,<br><br><br>payload config code:<br><br>let cloudStorageAdapter: Adapter;<br><br>  cloudStorageAdapter = s3Adapter({<br>    config: {<br>      forcePathStyle: false,<br>      region: process.env.S3_REGION,<br>      credentials: {<br>        accessKeyId: process.env.S3_ACCESS_KEY_ID,<br>        secretAccessKey: process.env.S3_SECRET_ACCESS_KEY,<br>      },<br>    },<br>    bucket: process.env.S3_BUCKET,<br>  });<br><br><br>...<br><br>  plugins: [<br>    // Pass the plugin to Payload<br>    cloudStorage({<br>      collections: {<br>        media: {<br>          adapter: cloudStorageAdapter,<br>        },<br>      },<br>    }),<br><br>....",
      "fileAttachments": [],
      "authorID": "372021382789332993",
      "authorName": "liorix",
      "authorAvatar": null,
      "createdAtDate": 1676552059668
    },
    "messages": [
      {
        "content": "Have you tried changing <code>forcePathStyle</code> to true?<br> <br> You might also need to set <code>config.endpoint</code> to <code>https://s3.amazonaws.com</code> as seen here: <a href=\"https://github.com/payloadcms/plugin-cloud-storage/blob/master/dev/src/payload.config.ts#LL31C41-L31C41\">https://github.com/payloadcms/plugin-cloud-storage/blob/master/dev/src/payload.config.ts#LL31C41-L31C41</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676554894059
      },
      {
        "content": "Hi @denolfe .. I tried, this is my updated config:<br> <br> cloudStorageAdapter = s3Adapter({<br>    config: {<br>      endpoint: &#x27;<a href=\"https://s3.amazonaws.com\">https://s3.amazonaws.com</a>&#x27;,<br>      forcePathStyle: true,<br>      region: process.env.S3_REGION,<br>      credentials: {<br>        accessKeyId: process.env.S3_ACCESS_KEY_ID,<br>        secretAccessKey: process.env.S3_SECRET_ACCESS_KEY,<br>      },<br>    },<br>    bucket: process.env.S3_BUCKET,<br>  });<br> <br> I&#x27;m now getting the following error:<br> <br> (PermanentRedirect): The bucket you are attempting to access must be addressed using the specified endpoint. Please send all future requests to this endpoint.<br> <br> the endpoint config has no trailing &quot;/&quot;, for some reason discord add it when I send the message",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676582183695
      },
      {
        "content": "Is your  S3_BUCKET value configured as just the name? It <em>shouldn&#x27;t</em> include <code>s3-&lt;region&gt;.amazonaws.com</code> in it.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676644188406
      },
      {
        "content": "Yes, it includes just the name<br> <br> @denolfe I still couldn&#x27;t find a solution. I upgraded to the latest version of payload as well but no luck with the s3 storage",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676750473209
      },
      {
        "content": "I&#x27;d do some research on that specific error. Could be something on the AWS side of things. Have you tried using the AWS CLI to do a simple read/write to see if you get any errors?",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676900912367
      },
      {
        "content": "@liorix Does it work if you remove the <code>region</code> setting?<br>I&#x27;ve had this mess me up before.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676914078815
      },
      {
        "content": "@dribbens eventually it looks like it&#x27;s working. on my machine I get this error by my cto and test environment is working as expected.<br> <br> btw, does the forcePathStyle parameter still working or I should use the generateFileURL parameter to build the s3 full path url?",
        "fileAttachments": [],
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1677231848229
      },
      {
        "content": "@liorix, Is this still giving you trouble?<br> <code>forcePathStyle</code> should work, I don&#x27;t know of any issues surrounding it.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1677521090019
      }
    ],
    "messageCount": 15,
    "slug": "amazon-s3-for-images"
  },
  {
    "info": {
      "name": "Directory structure for Next.js app and PayloadCMS?",
      "id": "1071441392129282188",
      "guildId": "967097582721572934",
      "createdAt": 1675521934302
    },
    "intro": {
      "content": "Hello team,<br>My question is that is it a working way to install Next.js as the frontend and Payload as backend in the same idrectory, along-side one another? Or should I just keep them in separate folders, but inside one, main folder?<br><br>How do you guys do it normally, the way it works nice and dandy?",
      "fileAttachments": [],
      "authorID": "537385969230413846",
      "authorName": "Arskeliss",
      "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
      "createdAtDate": 1675521934302
    },
    "messages": [
      {
        "content": "Check their github, they have a nextjs project combined with payload template there 🙂",
        "fileAttachments": [],
        "authorID": "220308673988263938",
        "authorName": "nicht hzK",
        "authorAvatar": "950e93943e4df21eb48a38a36c3ee62b",
        "createdAtDate": 1675554783619
      },
      {
        "content": "This matters on the project really. We prefer to keep the frontend and backend in separate repos, adn therefore allows easier separate deployments. However, as mentioned above, we do have an example with them combined here: <a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a>",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691876645
      },
      {
        "content": "Hi @denolfe , I have a payload cms project. How can i add NextJS configuration by myself in that existing payload project?<br>Kindly guide me.",
        "fileAttachments": [],
        "authorID": "1055906817881940069",
        "authorName": "Zeeshan",
        "authorAvatar": "2f7e0f4af189093c2c40bed516eb8754",
        "createdAtDate": 1676880040280
      },
      {
        "content": "Trying to model your project after the above repo is your best bet.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676900460517
      }
    ],
    "messageCount": 4,
    "slug": "directory-structure-for-nextjs-app-and-payloadcms"
  },
  {
    "info": {
      "name": "payload.update help with arrays and hasMany relationship fields",
      "id": "1075390011182157886",
      "guildId": "967097582721572934",
      "createdAt": 1676463358446
    },
    "intro": {
      "content": "What is the recommended approach for updating array and hasMany relationship fields?<br><br>### 1) hasMany relationship fields<br>I have an Customer collection, and I want to add an order id to the hasMany relationship field. What&#x27;s the approach to take here?<br><br>### 2) array fields<br>If I want to push a new object to an array, what is the recommended approach here?<br><br>Some example code for both cases would be <em>really</em> helpful here.<br><br>Thanks!<br> <br> @payloadcms team - would really appreciate a guide here.<br><br>When we create a relationship field, it produces an array at the API level, but when I add a new <code>id</code> to the field through <code>payload.update()</code>  do we again treat is as an array?<br><br>Would this be a correct approach:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">payloadCustomer</span>: <span class=\"hljs-title class_\">CustomerType</span> = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">findByID</span>({\n  <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;customers&#x27;</span>,\n  <span class=\"hljs-attr\">id</span>: newOrUpdatedOrder.<span class=\"hljs-property\">customerRelationship</span>.<span class=\"hljs-property\">id</span>,\n});\n\n<span class=\"hljs-keyword\">if</span> (payloadCustomer.<span class=\"hljs-property\">stripe</span>.<span class=\"hljs-property\">customerId</span> === <span class=\"hljs-string\">&#x27;&#x27;</span>) {\n  <span class=\"hljs-keyword\">const</span> stripeCustomer = <span class=\"hljs-keyword\">await</span> stripe.<span class=\"hljs-property\">customers</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">email</span>: customer.<span class=\"hljs-property\">email</span>,\n    <span class=\"hljs-attr\">name</span>: customer.<span class=\"hljs-property\">name</span>,\n    <span class=\"hljs-attr\">address</span>: customer.<span class=\"hljs-property\">address</span>,\n  });\n\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">updatedCustomer</span>: <span class=\"hljs-title class_\">CustomerType</span> = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">update</span>({\n    <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;customers&#x27;</span>,\n    <span class=\"hljs-attr\">id</span>: payloadCustomer.<span class=\"hljs-property\">id</span>,\n    <span class=\"hljs-attr\">data</span>: {\n      <span class=\"hljs-attr\">stripeCustomerId</span>: stripeCustomer.<span class=\"hljs-property\">id</span>,\n      <span class=\"hljs-attr\">orders</span>: [\n        ...payloadCustomer.<span class=\"hljs-property\">orders</span>,\n        newOrUpdatedOrder.<span class=\"hljs-property\">id</span>,\n      ],\n    },\n  });\n}</code></pre><br> <br> and if the <code>hasMany</code> is set to false, how do we treat this field from <code>payload.update</code> is it an array of length 1, or is it a string of id?<br> <br> I&#x27;ve found the docs have been updated since the last time I checked many moons ago 👍",
      "fileAttachments": [],
      "authorID": "357456032454410240",
      "authorName": "jakehopking",
      "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
      "createdAtDate": 1676463358446
    },
    "messages": [
      {
        "content": "Hey @jakehopking to update an array (relationship or not), you need merge the existing array data with the new one as you are doing above.",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676477596387
      },
      {
        "content": "Of fundamental importance for anyone who gets stuck on this for more time than they should:<br><br>You need to map over the array you intend to spread back in, and only return the <code>id</code> .<br><br>A relationship <code>hasMany</code> only stores an array of id, and when we query with say, <code>payload.findById</code> it returns these populated as would be expected, so when you spread back in, then you need to filter out everything except the id. Like so:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">orders</span>: [\n  ...payloadCustomer.<span class=\"hljs-property\">orders</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">order</span>) =&gt;</span> order.<span class=\"hljs-property\">id</span>),\n  newOrUpdatedOrder.<span class=\"hljs-property\">id</span>,\n],</code></pre><br> <br> @Jarrod Thanks, but I&#x27;m still a bit confused. The above realisation got me most of the way.... however I notice that the <code>hasMany</code> can actually hold arrays with multiple items with the same id. Is this expected? How best to filter out?<br> <br> do I need to do something like this to ensure no duplicates??<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">orders</span>: <span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">from</span>(\n  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([\n    ...payloadCustomer.<span class=\"hljs-property\">orders</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">order</span>) =&gt;</span> order.<span class=\"hljs-property\">id</span>),\n    newOrUpdatedOrder.<span class=\"hljs-property\">id</span>,\n  ]),\n),</code></pre><br> <br> -<br>seems like this should be handled at the api level?<br>-<br> <br> <br> <br> For completeness for others learning this, if the hasMany relationship is new and therefore empty you need to cater for that like so:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">orders</span>: <span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">from</span>(\n  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([\n    ...(payloadCustomer?.<span class=\"hljs-property\">orders</span>?.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">0</span>\n      ? payloadCustomer.<span class=\"hljs-property\">orders</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">order</span>) =&gt;</span> order.<span class=\"hljs-property\">id</span>)\n      : []),\n    newOrUpdatedOrder.<span class=\"hljs-property\">id</span>,\n  ]),\n),</code></pre><br><br>Otherwise you&#x27;ll get undefined errors on the map and everything explodes 💥",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676483148173
      }
    ],
    "messageCount": 10,
    "slug": "payloadupdate-help-with-arrays-and-hasmany-relationship-fields"
  },
  {
    "info": {
      "name": "Why do FilterOptionsProps pass in a Partial user?",
      "id": "1075408795502653622",
      "guildId": "967097582721572934",
      "createdAt": 1676467836977
    },
    "intro": {
      "content": "Is it because the JWT does not contain all fields?<br><pre><code class=\"hljs\">FilterOptionsProps&lt;T = any&gt; = {\n    id: string | number;\n    user: Partial&lt;User&gt;;</code></pre>",
      "fileAttachments": [],
      "authorID": "476523795251855360",
      "authorName": "thgh",
      "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
      "createdAtDate": 1676467836977
    },
    "messages": [
      {
        "content": "hi @thgh - <code>Partial&lt;User&gt;</code> is used as there are cases when no user is passed through to <code>filterOptions</code>. We could also use <code>User | null</code> which might be clearer.",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678210552538
      }
    ],
    "messageCount": 1,
    "slug": "why-do-filteroptionsprops-pass-in-a-partial-user"
  },
  {
    "info": {
      "name": "Registering custom endpoint",
      "id": "1084585296785584138",
      "guildId": "967097582721572934",
      "createdAt": 1678655685374
    },
    "intro": {
      "content": "Hey guys! New to the channel and Payload,<br>(Obligatory sorry for my English, it&#x27;s my 3rd language)<br><br>I&#x27;m trying to create a custom endpoint (<code>/:event/history/restaurants</code>) that directs an admin user to a page with historical data over restaurants, in an already existing collection called <code>Anytime</code><br><br><strong>Issue at hand:</strong><br> I&#x27;m trying to log out the information I&#x27;m supposed to get back from my handler function, but am getting not getting the wanted response with information from the log. Am I missing to register the endpoint in the config? We&#x27;ve got another custom endpoint in a different collection that works, but I don&#x27;t see it registered anywhere which is why I figured I&#x27;d turn to you guys 🤞<br> <br> got it to work 🙃",
      "fileAttachments": [],
      "authorID": "776749411224125460",
      "authorName": "JasmineP",
      "authorAvatar": null,
      "createdAtDate": 1678655685374
    },
    "messages": [],
    "messageCount": 1,
    "slug": "registering-custom-endpoint"
  },
  {
    "info": {
      "name": "How to run a REPL or one-off script?",
      "id": "1077196324912513084",
      "guildId": "967097582721572934",
      "createdAt": 1676894017199
    },
    "intro": {
      "content": "I want to mess around with Payload, kind of like a REPL. Or, alternatively, put what I want in a script and run that instead. Currently, I put my stuff in <code>server.ts</code>, then run Payload as I normally would. But that&#x27;s a bit slower and also hangs, because the server continues listening.<br><br>Is there a way to just run something and have Payload exit immediately after that?",
      "fileAttachments": [],
      "authorID": "583713322700898304",
      "authorName": "dodov",
      "authorAvatar": "963cac7b9d70846918bedd06cc4cc389",
      "createdAtDate": 1676894017199
    },
    "messages": [
      {
        "content": "The best way to do this would be a stand-alone script that uses the local API. You&#x27;d run it with ts-node. Here is an example:<br><br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;\nimport path from &#x27;path&#x27;\nimport dotenv from &#x27;dotenv&#x27;\n\ndotenv.config({\n  path: path.resolve(__dirname, &#x27;../.env&#x27;),\n})\n\nconst { PAYLOAD_SECRET, MONGODB_URI } = process.env\n\nconst doAction = async (): Promise&lt;void&gt; =&gt; {\n  await payload.init({\n    secret: PAYLOAD_SECRET,\n    mongoURL: MONGODB_URI,\n    local: true,\n  })\n\n  // Use the Payload Local API: https://payloadcms.com/docs/local-api/overview#local-api\n\n  await payload.find({\n    collection: &#x27;posts&#x27;,\n    // where: {}\n  })\n\n  await payload.create({\n    collection: &#x27;posts&#x27;,\n    data: {},\n  })\n}\n\ndoAction()</code></pre><br> <br> Essentially, it runs payload.init with <code>local: true</code> which bypasses loading anything unneeded for local API usage",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676903287182
      }
    ],
    "messageCount": 2,
    "slug": "how-to-run-a-repl-or-one-off-script"
  },
  {
    "info": {
      "name": "Is it possible to query using a unique URL slug instead of the ID parameter?",
      "id": "1081273060981743739",
      "guildId": "967097582721572934",
      "createdAt": 1677865986820
    },
    "intro": {
      "content": "Is it possible to query using a unique URL slug instead of the ID parameter, such as with the following example: <a href=\"http://localhost:3100/api/articles/story-of-the-city?\">http://localhost:3100/api/articles/story-of-the-city?</a>",
      "fileAttachments": [],
      "authorID": "410868850712903681",
      "authorName": "JulianDM1995",
      "authorAvatar": "220555b59e76db93ef81b5a96e6ecc4c",
      "createdAtDate": 1677865986820
    },
    "messages": [
      {
        "content": "Yes<br> <br> i have an example that might help here..<br> <br> query<br><pre><code class=\"hljs\">query($slug:Page_slug_operator) {\n    Pages(where: {slug: $slug}) {\n        docs {\n            title\n            description\n        }\n    }\n}</code></pre><br><br>variables<br><pre><code class=\"hljs\">{ slug: { equals: &#x27;/your-slug&#x27; } }</code></pre><br> <br> I defined the Pages collection with a slug text field, then whatever else you&#x27;d like it to have<br> <br> on the calling side, you&#x27;ll want to get the first index of the result since it&#x27;s technically getting back all the results. I would recommend making sure <code>unique</code> is set to true for the slug field",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677866469484
      },
      {
        "content": "Awesome. Do you have a repository to check it maybe? 🙂",
        "fileAttachments": [],
        "authorID": "410868850712903681",
        "authorName": "JulianDM1995",
        "authorAvatar": "220555b59e76db93ef81b5a96e6ecc4c",
        "createdAtDate": 1677866757405
      },
      {
        "content": "nothing public, but i would experiment in <a href=\"http://localhost:3000/api/graphql-playground\">http://localhost:3000/api/graphql-playground</a> to get your values right. i found this using the docs menu ultimately",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677866802444
      },
      {
        "content": "Do you know is that task can be done by using rest api?",
        "fileAttachments": [],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "348c9d84bef605e502effc609bf2834b",
        "createdAtDate": 1677868361266
      },
      {
        "content": "sure, you can form your graphql request as a rest call. don&#x27;t necessarily need a middleman to handle that for you<br> <br> the request body just needs the <code>query</code> and <code>variables</code> as the main properties. then you&#x27;ll want the <code>Content-Type</code> to be <code>application/json</code><br> <br> i&#x27;m using an auth token generated by one of my users in my users collection so my authentication header looks like <code>Authorization</code> set to <code>users API-Key &lt;your-api-key&gt;</code>",
        "fileAttachments": [],
        "authorID": "214419801039175682",
        "authorName": "Jakey",
        "authorAvatar": "235bf3c8f56d52de5dc4772e5aa2d2bb",
        "createdAtDate": 1677868443854
      },
      {
        "content": "Thanks!<br> <br> Did it by using the custom endpoint: <a href=\"https://payloadcms.com/docs/rest-api/overview#custom-endpoints\">https://payloadcms.com/docs/rest-api/overview#custom-endpoints</a><br>Now I can request the article by using unique slug: <a href=\"http://localhost:3000/api/articles/original-article-name\">http://localhost:3000/api/articles/original-article-name</a>",
        "fileAttachments": [],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "348c9d84bef605e502effc609bf2834b",
        "createdAtDate": 1677868684301
      },
      {
        "content": "That is awesome!!! Thank you very much<br> <br> Would be awesome for future releases, a feature to query, not only based on id",
        "fileAttachments": [],
        "authorID": "410868850712903681",
        "authorName": "JulianDM1995",
        "authorAvatar": "220555b59e76db93ef81b5a96e6ecc4c",
        "createdAtDate": 1677870529531
      },
      {
        "content": "Yeah... Perhaps something like that: <br><pre><code class=\"hljs\">const Articles: CollectionConfig = {\n  slug: &#x27;articles&#x27;,\n  // a unique field by which the article should be searched\n  searchedBy: &quot;slug&quot;,\n  labels: {\n    ...\n  }\n}</code></pre>",
        "fileAttachments": [],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "348c9d84bef605e502effc609bf2834b",
        "createdAtDate": 1677870771522
      },
      {
        "content": "Just want to chime in here that you can do this out of the box with /api/your-collection-slug?where[slug][equals]=slug-to-find<br><br>Also I feel like I have to say, if you do use the local api you should use the “where” property to filter docs at the db level instead of after you get them back 👍",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1678046306987
      },
      {
        "content": "Perfect!",
        "fileAttachments": [],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "348c9d84bef605e502effc609bf2834b",
        "createdAtDate": 1678046621989
      }
    ],
    "messageCount": 18,
    "slug": "is-it-possible-to-query-using-a-unique-url-slug-instead-of-the-id-parameter"
  },
  {
    "info": {
      "name": "Creating a block definition to replace previous block causes error",
      "id": "1081243449791086612",
      "guildId": "967097582721572934",
      "createdAt": 1677858926962
    },
    "intro": {
      "content": "&quot;index.js:179 Uncaught TypeError: Cannot destructure property &#x27;blockType&#x27; of &#x27;row&#x27; as it is undefined.&quot;<br> <br> @jmikrut Sorry for ping, but I&#x27;m worried I broke something...is it possible my payload install is behind?<br> <br> This is on the admin side, adding a Block to a collection<br> <br> The page goes blank and prints that error<br> <br> I&#x27;m on <pre><code class=\"hljs\">&quot;payload&quot;: &quot;^1.3.0&quot;</code></pre><br> <br> <pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Block</span>, <span class=\"hljs-title class_\">CollectionConfig</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/types&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">BannerBlock</span>: <span class=\"hljs-title class_\">Block</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&quot;Banner&quot;</span>,\n  <span class=\"hljs-attr\">fields</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;section&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;title&quot;</span>,\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;Image Banner Title&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;subtitle&quot;</span>,\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;Image Banner Sub-Title&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;image&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;upload&quot;</span>,\n      <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-string\">&quot;media&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n  ],\n};\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">PanelBlock</span>: <span class=\"hljs-title class_\">Block</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&quot;Panels&quot;</span>,\n  <span class=\"hljs-attr\">fields</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;section&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;panels&quot;</span>, <span class=\"hljs-comment\">// required</span>\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;array&quot;</span>, <span class=\"hljs-comment\">// required</span>\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;Content Panels&quot;</span>,\n      <span class=\"hljs-attr\">minRows</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">maxRows</span>: <span class=\"hljs-number\">4</span>,\n      <span class=\"hljs-attr\">labels</span>: {\n        <span class=\"hljs-attr\">singular</span>: <span class=\"hljs-string\">&quot;Panel&quot;</span>,\n        <span class=\"hljs-attr\">plural</span>: <span class=\"hljs-string\">&quot;Panels&quot;</span>,\n      },\n      <span class=\"hljs-attr\">fields</span>: [\n        {\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;title&quot;</span>,\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,\n          <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n        },\n        {\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;content&quot;</span>,\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;textarea&quot;</span>,\n        },\n        {\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;link&quot;</span>,\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,\n        },\n        {\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;icon&quot;</span>,\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,\n        },\n      ],\n    },\n  ],\n};\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Pages</span>: <span class=\"hljs-title class_\">CollectionConfig</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&quot;pages&quot;</span>,\n  <span class=\"hljs-attr\">access</span>: {\n    <span class=\"hljs-attr\">read</span>: <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-literal\">true</span>,\n  },\n  <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">useAsTitle</span>: <span class=\"hljs-string\">&quot;title&quot;</span>,\n  },\n  <span class=\"hljs-attr\">fields</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;title&quot;</span>,\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;Page Title&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">unique</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;description&quot;</span>,\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;Page Description&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;textarea&quot;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;layout&quot;</span>, <span class=\"hljs-comment\">// required</span>\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;blocks&quot;</span>, <span class=\"hljs-comment\">// required</span>\n      <span class=\"hljs-attr\">minRows</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">maxRows</span>: <span class=\"hljs-number\">20</span>,\n      <span class=\"hljs-attr\">blocks</span>: [<span class=\"hljs-title class_\">BannerBlock</span>, <span class=\"hljs-title class_\">PanelBlock</span>],\n    },\n  ],\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">Pages</span>;</code></pre>",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1081243449791086612/1081243450084700200/image.png",
          "name": "image.png",
          "id": "1081243450084700200",
          "size": 90681,
          "url": "https://cdn.discordapp.com/attachments/1081243449791086612/1081243450084700200/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1081243449791086612/1081243450084700200/image.png",
          "height": 533,
          "width": 1382,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "1049775120559898725",
      "authorName": "thisisnotchris",
      "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
      "createdAtDate": 1677858926962
    },
    "messages": [
      {
        "content": "what is the Payload version that you actually have installed?<br> <br> i would also try and use these exact field configs in a brand-new and empty Payload project created with <code>npx create-payload-app</code>, to see if the problem persists<br> <br> this seems like a data problem, maybe you have docs that are out of date or similar. but if you can create this issue with a new / blank project, using these exact field / block definitions, then it would appear to be a bug and we can help look at this immediately",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677863280150
      },
      {
        "content": "@jmikrut Thanks my friend!<br> <br> @jmikrut Sadly updating did not fix the issue :/<br> <br> I had a block before, &quot;SliderBlock&quot;<br> <br> I renamed it, changed its schema a bit<br> <br> To BannerBlock<br> <br> updated the collection config<br> <br> But now I can add blocks to the collection<br> <br> cant*",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677866573829
      },
      {
        "content": "ahhh ok, if you renamed it, you should write a migration script to go through all your old docs, find any instances of the old block slug, and update them to the new block slug",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677867650236
      },
      {
        "content": "I&#x27;m not sure how to do that<br> <br> I figured it would take care of that kind of thing for me :X",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677867666151
      },
      {
        "content": "i believe there are some examples in our GitHub discussions about quick migration scripts<br> <br> but yeah, migrations are manual as with most every ORM. We don&#x27;t change your existing data ever for you, at least not yet",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677867685057
      },
      {
        "content": "With prisma i can just do like prisma migrate dev --name<br> <br> it would be nice to do prisma migrate<br> <br> err payload migrate<br> <br> and have it do that kind of thing",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677867738187
      },
      {
        "content": "that could very well be a thing that we build in the future",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677867807330
      },
      {
        "content": "when i get financially stable enough ill quit my job and join payload<br> <br> 😛",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677867832110
      },
      {
        "content": "well, the good news there is that we will be prioritizing hiring future engineers straight from our community 😈",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677867855942
      },
      {
        "content": "hehe amazing<br> <br> My speciality is more like webgl / 3d stuff<br> <br> But I do enjoy this kind of dev<br> <br> TBH, I was looking at some other headless cms systems last night<br> <br> And it&#x27;s really rough out there<br> <br> Payload is the only one who&#x27;s marketing doesnt automatically make me feel like they just want all my $$$$$<br> <br> And ive tried like, 7 of them<br> <br> That and it works nicely<br> <br> I mean not that you guys dont wnat $ but<br> <br> you care about the community<br> <br> etc<br> <br> anyway, ill let you get back to it<br> <br> TY 😄",
        "fileAttachments": [],
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1677867863265
      }
    ],
    "messageCount": 42,
    "slug": "creating-a-block-definition-to-replace-previous-block-causes-error"
  },
  {
    "info": {
      "name": "Can you trigger DOM to redraw in field level hooks?",
      "id": "1074895941557039184",
      "guildId": "967097582721572934",
      "createdAt": 1676345563068
    },
    "intro": {
      "content": "I am facing a challenge, where the form fields should be refreshed after a relationship field is updated. The reason is that other fields are populated, using default values, based on the relationship field selection.<br><br>Is it possible to refresh the DOM in field level hooks or is there a better methods to ensure reactivity?",
      "fileAttachments": [],
      "authorID": "567578449439621124",
      "authorName": "KasparTr",
      "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
      "createdAtDate": 1676345563068
    },
    "messages": [
      {
        "content": "Hi @KasparTr - are you using hooks or conditional logic to populate the other fields? I&#x27;m thinking you could use an <code>afterChange</code> hook on the relationship field, and call your functions to populate the other fields within this hook.",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678099556170
      }
    ],
    "messageCount": 1,
    "slug": "can-you-trigger-dom-to-redraw-in-field-level-hooks"
  },
  {
    "info": {
      "name": "When accessing api from browser I see uploaded images with sizes and all, but when using fetch no",
      "id": "1078793213244084355",
      "guildId": "967097582721572934",
      "createdAt": 1677274745046
    },
    "intro": {
      "content": "Why is that? I see only the image id but not the different image sizes and actual file locaiton<br> <br> Also in postman I see only the image ids not the actual fields for each image upload",
      "fileAttachments": [],
      "authorID": "240915797180940298",
      "authorName": "Oron",
      "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
      "createdAtDate": 1677274745046
    },
    "messages": [
      {
        "content": "can you show an example of both requests?<br> <br> i.e what its returning",
        "fileAttachments": [],
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1677274958086
      },
      {
        "content": "Sorry, I found the problem, it was the media collection access control, on the browser I was with the admin cookie , in the fetching from the app no. Change the access control on the media collection and it was sorted",
        "fileAttachments": [],
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1677275295970
      }
    ],
    "messageCount": 4,
    "slug": "when-accessing-api-from-browser-i-see-uploaded-images-with-sizes-and-all-but-when-using-fetch-no"
  },
  {
    "info": {
      "name": "Is there examples of overriding admin views.Edit UI ?",
      "id": "1083354414657585213",
      "guildId": "967097582721572934",
      "createdAt": 1678362220206
    },
    "intro": {
      "content": "Hi, I want to tweak views.Edit and views.List component of admin UI. I know it&#x27;s possible because  the documents says so. But since TypeScript is not familiar to me , it&#x27;s difficult to figure it out myself. Is there  any example of that? I just want to add a button instead of swapping entire component. Thanks in advance.",
      "fileAttachments": [],
      "authorID": "478284978610896926",
      "authorName": "kouohhashi",
      "authorAvatar": "16e98dd652c9a6090ce554f5f9f8bc13",
      "createdAtDate": 1678362220206
    },
    "messages": [
      {
        "content": "Hey @kouohhashi! You can find some great examples of custom components here: <a href=\"https://github.com/payloadcms/payload/tree/master/test/admin/components\">https://github.com/payloadcms/payload/tree/master/test/admin/components</a><br><br>Hope this helps! If you need anything else, please let me know!",
        "fileAttachments": [],
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1678374355353
      }
    ],
    "messageCount": 1,
    "slug": "is-there-examples-of-overriding-admin-viewsedit-ui"
  },
  {
    "info": {
      "name": "Enabling versioning causes older content to disappear from the UI",
      "id": "1082260506179534889",
      "guildId": "967097582721572934",
      "createdAt": 1678101412101
    },
    "intro": {
      "content": "Is there a migration script for that? Could not find it...<br><br>It should also be described in the docs I think 😉",
      "fileAttachments": [],
      "authorID": "930428018546049024",
      "authorName": "jankocian",
      "authorAvatar": "a2eb9a4ddee5f4f66f64d16c26144b21",
      "createdAtDate": 1678101412101
    },
    "messages": [
      {
        "content": "Hi @jankocian - migrating versions was required as part of a breaking change in 1.6.1, however if your project was created after this release you should not need to migrate. <br><br>Here is more info and the migration script:<br><a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-versions-may-need-to-be-migrate\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-versions-may-need-to-be-migrate</a> <br><br>If this isn&#x27;t applicable, then this may be a bug if you are able to reproduce it.",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678123080734
      },
      {
        "content": "Hi @jesschow, thanks for the link  🙏 , it worked!",
        "fileAttachments": [],
        "authorID": "930428018546049024",
        "authorName": "jankocian",
        "authorAvatar": "a2eb9a4ddee5f4f66f64d16c26144b21",
        "createdAtDate": 1678185881023
      }
    ],
    "messageCount": 2,
    "slug": "enabling-versioning-causes-older-content-to-disappear-from-the-ui"
  },
  {
    "info": {
      "name": "Is there a way to specify max depth of returned links in the rich text editor?",
      "id": "1076469797220532294",
      "guildId": "967097582721572934",
      "createdAt": 1676720799499
    },
    "intro": {
      "content": "By default, it only returns the doc ID.",
      "fileAttachments": [],
      "authorID": "225910068078444544",
      "authorName": "sesons",
      "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
      "createdAtDate": 1676720799499
    },
    "messages": [
      {
        "content": "are you using Graphql or the REST API?",
        "fileAttachments": [],
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1676738005346
      },
      {
        "content": "<a href=\"https://discord.com/channels/967097582721572934/1076278103489396767\">https://discord.com/channels/967097582721572934/1076278103489396767</a>",
        "fileAttachments": [],
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1676764684185
      },
      {
        "content": "i&#x27;m using REST",
        "fileAttachments": [],
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676820369213
      },
      {
        "content": "?depth=3 didn&#x27;t work?",
        "fileAttachments": [],
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1676852774230
      }
    ],
    "messageCount": 4,
    "slug": "is-there-a-way-to-specify-max-depth-of-returned-links-in-the-rich-text-editor"
  },
  {
    "info": {
      "name": "Live preview with NextJS",
      "id": "1059443765951074314",
      "guildId": "967097582721572934",
      "createdAt": 1672661477316
    },
    "intro": {
      "content": "I just recently discovered Payload and fell in love with it immediately. <br><br>I&#x27;m now trying to set up a live preview with the NextJS Frontend which is deployed on vercel. The goal would be to have 2 windows open, edit the content in payload on the left side, see the changes on the preview website in real time (small delays are fine). <br><br>My Idea was to set up a separate deploy with an auth wall on a subdomain (preview.xyz.com) that get&#x27;s the data in draft mode after the user has logged in with his payload credentials. Using the autosave feature, the content on the preview page should be updated every 2 seconds. <br><br>One unsolved question is how to actually refresh the page content: I could let the page query the content every 2 seconds, or maybe set up a websocket connection to the payload express app? Since I haven&#x27;t done anything similar before, I&#x27;d love to hear if anyone thinks this will work, or if there are better/simpler ways to implement this.",
      "fileAttachments": [],
      "authorID": "900030932617162793",
      "authorName": "Sandro Wegmann",
      "authorAvatar": "51018814dbca15d823817ac63e505824",
      "createdAtDate": 1672661477316
    },
    "messages": [
      {
        "content": "Hey @Sandro Wegmann — I do think that a simple websocket or messaging service would be the best way to do this<br> <br> and this is on our radar to build into Payload for sure, natively, although as of right now, you could do this on your own using SocketIO or similar",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1672670973205
      },
      {
        "content": "Sandro you are doing the lords work, if you figure it out lmk. Would love to implement a live preview, I wish there was documentation on implementation of just the preview functionality with next similar to what Prismic, DatoCMS, etc... Trying to hack something together to show team proof of concept",
        "fileAttachments": [],
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1672967621797
      },
      {
        "content": "Same here, would love this! As of right now I just refetch the draft data each 2seconds on a preview route.<br><br>Using SocketIO seems interesting for sure.",
        "fileAttachments": [],
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1672989554269
      },
      {
        "content": "I&#x27;ll post in here when I&#x27;ve figured sth out 😉<br> <br> @FireGuy_42 @AngeloK I actually managed to get it working.  Check my post in the Showcase Channel or hmu 🙂",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1672995343834
      },
      {
        "content": "Very nice! I would love to try and implement this in my project. It&#x27;s SvelteKit tho, but the functionality stays the same I guess.",
        "fileAttachments": [],
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673591439225
      },
      {
        "content": "Yup, you just have to implement a functionality in the frontend to 1. Authenticate a user (send a login request to payload) and 2. if logged in, listen to update calls from the server. This is a bit tricky if you&#x27;re using Nextjs along with SSG etc. but I don&#x27;t know about sveltekit<br> <br> Here&#x27;s what you have to do serverside <pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// Instead of just calling app.listen</span>\n<span class=\"hljs-comment\">// app.listen(process.env.PAYLOAD_PUBLIC_INTERNAL_SERVER_URL.split(&#x27;:&#x27;)[2]);</span>\n\n<span class=\"hljs-comment\">// create an http server (or https if you aren&#x27;t using a reverse proxy)</span>\n<span class=\"hljs-keyword\">const</span> server = http.<span class=\"hljs-title function_\">createServer</span>(app)\nserver.<span class=\"hljs-title function_\">listen</span>(process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PAYLOAD_PUBLIC_INTERNAL_SERVER_URL</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;:&#x27;</span>)[<span class=\"hljs-number\">2</span>], <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`HTTP Server running on port <span class=\"hljs-subst\">${process.env.PAYLOAD_PUBLIC_INTERNAL_SERVER_URL.split(<span class=\"hljs-string\">&#x27;:&#x27;</span>)[<span class=\"hljs-number\">2</span>]}</span>`</span>);\n});\n\n<span class=\"hljs-comment\">// Socket.io</span>\n<span class=\"hljs-comment\">// Now pass the server instance to socket io, to create a websocket server on the same port</span>\n<span class=\"hljs-keyword\">const</span> io = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;socket.io&#x27;</span>)(server, {\n  <span class=\"hljs-attr\">cors</span>: {\n    <span class=\"hljs-attr\">origin</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">WHITELIST_ORIGINS</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;,&#x27;</span>),\n  }\n});\n\nio.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&#x27;connection&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">socket</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;New client connected&#x27;</span>);\n\n  socket.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&#x27;disconnect&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-comment\">// console.log(&#x27;Client disconnected&#x27;)</span>\n  });\n})\n\n<span class=\"hljs-comment\">// You can&#x27;t call io.emit directly from the payload hooks, it throws errors. </span>\n<span class=\"hljs-comment\">// As a workaround, you can set up a simple endpoint that emits the update </span>\napp.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">&#x27;/updatePreview&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;update preview called&#x27;</span>)\n  <span class=\"hljs-comment\">// Check if authorization header contains PAYLOAD_SECRET</span>\n  <span class=\"hljs-keyword\">if</span> (req.<span class=\"hljs-property\">headers</span>.<span class=\"hljs-property\">authorization</span> !== process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PAYLOAD_PUBLIC_SERVER_SECRET</span>) {\n    res.<span class=\"hljs-title function_\">sendStatus</span>(<span class=\"hljs-number\">401</span>)\n    <span class=\"hljs-keyword\">return</span>\n  }\n  io.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;update&#x27;</span>)\n})</code></pre><br> <br> Now, in the payload hooks, add an afterChange Hook: <br><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">if</span> (args.<span class=\"hljs-property\">doc</span>.<span class=\"hljs-property\">_status</span> !== <span class=\"hljs-string\">&#x27;published&#x27;</span>) {\n            <span class=\"hljs-keyword\">try</span> {\n              <span class=\"hljs-title function_\">axios</span>({\n                <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;post&#x27;</span>,\n                <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">`<span class=\"hljs-subst\">${process.env.PAYLOAD_PUBLIC_INTERNAL_SERVER_URL}</span>/updatePreview`</span>,\n                <span class=\"hljs-attr\">headers</span>: {\n                  <span class=\"hljs-string\">&#x27;Authorization&#x27;</span>: <span class=\"hljs-string\">`<span class=\"hljs-subst\">${process.env.PAYLOAD_PUBLIC_SERVER_SECRET}</span>`</span>\n                }\n              })\n            } <span class=\"hljs-keyword\">catch</span> (e) {\n              <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(e)\n            }\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Not published, skipping revalidation&#x27;</span>)</code></pre><br>This will just call the api endpoint you&#x27;ve just set up and emit the update message",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673599998894
      },
      {
        "content": "if you write code blocks and want them to be syntax highlighted for readability, you can append the language after the 3 back ticks. For typescript it would be 3 back ticks followed by the word <code>typescript</code>",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673615786960
      },
      {
        "content": "Oh damn thanks @Jarrod ! This is my first time really using discord haha",
        "fileAttachments": [],
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673716415940
      },
      {
        "content": "No prob! Was just letting you know 😃",
        "fileAttachments": [],
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673717106972
      },
      {
        "content": "@Sandro Wegmann finally had the chance to test this out. Works like a charm!",
        "fileAttachments": [],
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1674414228142
      },
      {
        "content": "Gosh I&#x27;m a real grave-digger here, but if anyones interested, my solution (developed accidentally in parallel with this one haha) is perhaps a bit more involved, but the authentication part is quite interesting so I figured I should probably post it. It does require the two apps (frontend and payload) to be one the same-ish URL (ie. www.example.com and cms.example.com) but works pretty well I would say!<br><br><pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> io = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Server</span>(server, {\n  <span class=\"hljs-attr\">cors</span>: {\n    <span class=\"hljs-attr\">origin</span>: <span class=\"hljs-variable constant_\">WEB_URL</span>,\n    <span class=\"hljs-attr\">credentials</span>: <span class=\"hljs-literal\">true</span>,\n  },\n  <span class=\"hljs-attr\">allowRequest</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">req, callback</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> cookies = <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">fromEntries</span>(\n      req.<span class=\"hljs-property\">headers</span>.<span class=\"hljs-property\">cookie</span>\n        ?.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;; &quot;</span>)\n        .<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">cookie</span>) =&gt;</span> cookie.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;=&quot;</span>))\n        .<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">tuple</span>) =&gt;</span> tuple.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">2</span>) ?? []\n    );\n    <span class=\"hljs-keyword\">const</span> payloadToken = cookies[<span class=\"hljs-string\">&quot;payload-token&quot;</span>];\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> payloadToken !== <span class=\"hljs-string\">&quot;string&quot;</span>) {\n      <span class=\"hljs-title function_\">callback</span>(<span class=\"hljs-string\">&quot;Not signed in&quot;</span>, <span class=\"hljs-literal\">false</span>);\n      <span class=\"hljs-keyword\">return</span>;\n    }\n    jwt.<span class=\"hljs-title function_\">verify</span>(payloadToken, payload.<span class=\"hljs-property\">secret</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> {\n      <span class=\"hljs-keyword\">if</span> (err) {\n        <span class=\"hljs-title function_\">callback</span>(<span class=\"hljs-string\">&quot;Invalid token&quot;</span>, <span class=\"hljs-literal\">false</span>);\n        <span class=\"hljs-keyword\">return</span>;\n      }\n      <span class=\"hljs-title function_\">callback</span>(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">true</span>);\n    });\n  },\n});</code></pre>",
        "fileAttachments": [],
        "authorID": "321229198234615808",
        "authorName": "Ellie",
        "authorAvatar": "7472ce50c8e25a58fb6ed48925a7c31d",
        "createdAtDate": 1676445934310
      }
    ],
    "messageCount": 15,
    "slug": "live-preview-with-nextjs"
  },
  {
    "info": {
      "name": "Bypass collection hook when using LocalAPI",
      "id": "1078174191376932925",
      "guildId": "967097582721572934",
      "createdAt": 1677127158732
    },
    "intro": {
      "content": "I need to auto-update one collection when another collection is edited (using relationship field to detect which collection to auto-update).<br>While Collection hooks are great for this business logic, it takes me into a circular loop where the auto-update itself triggers another round which is not wanted.<br><br>I could escape the logic inside to hook with some temp flags in the collection itself but this is prone to errors and not a very elegant solution.<br><br>Is there a way to tell the LocalAPI, when updating a collection, to bypass collection hooks?",
      "fileAttachments": [],
      "authorID": "567578449439621124",
      "authorName": "KasparTr",
      "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
      "createdAtDate": 1677127158732
    },
    "messages": [
      {
        "content": "I would add <code>cascade</code> in the request and filter that out in the hook so it doesn&#x27;t make it to the db. <br>Not aware of a way to disable hooks.<br>Eagerly waiting for relational databases 👀",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677135398322
      },
      {
        "content": "What is cascade in request? How can I add that?",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1677135553508
      },
      {
        "content": "I meant a field named cascade with type boolean or text.<br><pre><code class=\"hljs ts\">{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;cascade&quot;</span>, <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>, <span class=\"hljs-attr\">hidden</span>: <span class=\"hljs-literal\">true</span> }</code></pre><br>When doing the auto-update from the other collection, pass in a value so that the other collection knows not to start a circular loop<br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">hooks</span>: {\n  <span class=\"hljs-attr\">beforeChange</span>: [<span class=\"hljs-function\">(<span class=\"hljs-params\">{ data: { cascade, ...data }, req }</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (cascade !== <span class=\"hljs-string\">&#x27;ignore&#x27;</span>)\n      req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-title function_\">update</span>({\n        <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;other&quot;</span>,\n        <span class=\"hljs-attr\">data</span>: {\n          <span class=\"hljs-attr\">cascade</span>: <span class=\"hljs-string\">&quot;ignore&quot;</span>,\n          <span class=\"hljs-attr\">dependentValue</span>: <span class=\"hljs-title function_\">calculate</span>()\n         }\n      })\n    <span class=\"hljs-comment\">// Same as initial data except &quot;cascade&quot; is missing</span>\n    <span class=\"hljs-keyword\">return</span> data\n  }],\n}</code></pre><br><br>It&#x27;s probably what you described as the not very elegant solution 😛",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677141020826
      },
      {
        "content": "I see, thank that is an interesting hack.<br>The main problem with this approach, is that when you turn cascade off, you also need to make sure it turns back on after the operation has finished. <br><br>Turning cascade on and off are also collection updates so now you have to deal with cascade update triggering the hooks also. <br><br>I implemented this and it somehow works, through additional hacks, but I wouldn&#x27;t show this code to anyone nor can I sleep at night 😄",
        "fileAttachments": [],
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1677227468840
      },
      {
        "content": "The beforeChange hook runs before it hits the database, so cascade is actually never saved.<br><br>By returning a value from the beforeChange hook, it will remove the cascade property from the input.",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1677401510502
      }
    ],
    "messageCount": 5,
    "slug": "bypass-collection-hook-when-using-localapi"
  },
  {
    "info": {
      "name": "Error [ERR_REQUIRE_ESM]: require() of ES Module when trying to implement Lit Element",
      "id": "1075705278307258389",
      "guildId": "967097582721572934",
      "createdAt": 1676538523986
    },
    "intro": {
      "content": "Hey there, I want to use Lit on React for <code>ui</code> field on payload. I use <code>@lit-labs/react</code> to do it.<br><br>always got <br><pre><code class=\"hljs\">Error [ERR_REQUIRE_ESM]: require() of ES Module /path/payload/node_modules/lit-element/index.js from /path/payload/src/lit-components/test/my-element.js not supported.\nInstead change the require of index.js in /path/payload/src/lit-components/test/my-element.js to a dynamic import() which is available in all CommonJS modules.</code></pre><br><br>Is there any way to implement Lit with Payload?<br>Has someone done this (Lit+React) in payload before?",
      "fileAttachments": [],
      "authorID": "946373741175267329",
      "authorName": "rrums",
      "authorAvatar": "6a019fb818dd1274398027f152b5294b",
      "createdAtDate": 1676538523986
    },
    "messages": [
      {
        "content": "That package appears to be ESM-only, so this won&#x27;t be possible currently unless you introduce some sort of bundling to get a cjs output. This is an node-wide ecosystem problem at the moment.",
        "fileAttachments": [],
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1677592204112
      },
      {
        "content": "yeah already solved using rollup, to have cjs output",
        "fileAttachments": [],
        "authorID": "946373741175267329",
        "authorName": "rrums",
        "authorAvatar": "6a019fb818dd1274398027f152b5294b",
        "createdAtDate": 1677762056286
      }
    ],
    "messageCount": 2,
    "slug": "error-err-require-esm-require-of-es-module-when-trying-to-implement-lit-element"
  },
  {
    "info": {
      "name": "Admin UI is crawling with 100+ layout blocks",
      "id": "1078732080567025725",
      "guildId": "967097582721572934",
      "createdAt": 1677260169880
    },
    "intro": {
      "content": "Hi - I&#x27;m <strong>really</strong> struggling to use the admin ui on records that have a lot of layout blocks.<br><br>Has the @payloadcms team tested the responsiveness of the ui in these use-cases?<br><br>I&#x27;m creating very content-rich pages, with 100s of images/content blocks and <strong>really</strong> need this to be snappy. Currently I&#x27;m very nervous when using the UI. <br>It frequently hangs and completely disappears at random.<br><br>Key presses are at this point are so slow that it&#x27;s not plausible to write content inside Payload.<br><br>Dragging layout blocks around is again very painful.<br><br>Saving takes a long time (this however isn&#x27;t an issue... and is understandable with the amount of json being passed about) but it&#x27;s worth mentioning.<br><br>Generally I deeply implore the @payloadcms team to really focus some attention here. Layout blocks are one of the fundamental building blocks for content heavy sites, and currently they are not fit for purpose (in my heavy use-case at least).<br><br>Please create a ticket and add it to your backlog. I&#x27;ll share some video screengrabs in the thread.<br><br>Thanks.<br> <br> -<br><br>Also worth mentioning - I&#x27;m not using a slow machine. I&#x27;m running M1 Max with 64GB of ram. Trying the same on my partner&#x27;s older Intel i7 it&#x27;s incredibly slow... and honestly I&#x27;d say unusable.<br> <br> cc / @jmikrut - Keen to share this with you James. I don&#x27;t want to come across as miserable here... I just really think it&#x27;s an area of your CMS that requires some urgent attention.",
      "fileAttachments": [],
      "authorID": "357456032454410240",
      "authorName": "jakehopking",
      "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
      "createdAtDate": 1677260169880
    },
    "messages": [
      {
        "content": "woah interesting<br> <br> we have some massive use-cases with hundreds and hundreds of fields but have never seen a slowdown<br> <br> how many fields do you have?<br> <br> and how many nested block editors do you have?<br> <br> regardless, i think that we should be able to get to the bottom of this",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677260758656
      },
      {
        "content": "Here&#x27;s a video of the situation: <a href=\"https://www.dropbox.com/s/20ddv7k2htqfha5/Screen%20Recording%202023-02-24%20at%2017.48.06.mov?dl=0\">https://www.dropbox.com/s/20ddv7k2htqfha5/Screen%20Recording%202023-02-24%20at%2017.48.06.mov?dl=0</a><br> <br> Mostly one wouldn&#x27;t have all the layout blocks expanded.... however it makes very little difference to the responsiveness of the ui if they are collapsed or expanded (when actually trying edit fields/content etc the delay in onchange events is appalling).",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1677261092667
      },
      {
        "content": "yeah we can 100% get to the bottom of this<br> <br> we may have removed some utility at one time that would only render fields if a block is 1. on screen and 2. expanded<br> <br> that at one point solved this issue 100% for us<br> <br> i know exactly what you&#x27;re up against here<br> <br> the vid shows that the tactics that we wrote prior to rectify this are no longer working as intended<br> <br> we probably removed them thinkin they were not necessary anymore but in reality it appears that they are still very helpful",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261366938
      },
      {
        "content": "Yeah, that would be ideal. We don&#x27;t need thousands of dom nodes when a layout block is collapsed.",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1677261589024
      },
      {
        "content": "exactly",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261620540
      },
      {
        "content": "I would be very grateful if you could add that utility back",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1677261621835
      },
      {
        "content": "yeah we will prioritize this for sure<br> <br> thanks for bringing it up<br> <br> it will solve your condition 100%",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677261626885
      },
      {
        "content": "Thanks for listening and looking forward to the update that fixes this 🙂",
        "fileAttachments": [],
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1677261689872
      }
    ],
    "messageCount": 22,
    "slug": "admin-ui-is-crawling-with-100-layout-blocks"
  },
  {
    "info": {
      "name": "Local API: How to provide data for all locales?",
      "id": "1075780856825794580",
      "guildId": "967097582721572934",
      "createdAt": 1676556543309
    },
    "intro": {
      "content": "How can I provide data for all locales when using <code>payload.create</code>? <code>title</code> is normally a string.. Do I have to make two API calls (one create and one update)?<br>Or is something like this possible:<br><pre><code class=\"hljs\">payload.create({\n    collection: &#x27;pages&#x27;,\n    data: {\n        title: {en: ..., es: ...},\n    }\n});</code></pre>",
      "fileAttachments": [],
      "authorID": "1044822902572318781",
      "authorName": "fewbar",
      "authorAvatar": null,
      "createdAtDate": 1676556543309
    },
    "messages": [
      {
        "content": "This isn&#x27;t currenlty possible with the existing APIs.<br>For now you have to create in one locale and then perform a separate update for each locale.<br>At some point this will need to be built into Payload.",
        "fileAttachments": [],
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676952913095
      },
      {
        "content": "thanks! 🙂",
        "fileAttachments": [],
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1677090704475
      }
    ],
    "messageCount": 2,
    "slug": "local-api-how-to-provide-data-for-all-locales"
  },
  {
    "info": {
      "name": "Refined access control for uploads",
      "id": "1081189249677791323",
      "guildId": "967097582721572934",
      "createdAt": 1677846004648
    },
    "intro": {
      "content": "How would you go about only allowing users to see their own images within the admin panel. But whilst still allowing public read access to the URL for display on the front-end?<br> <br> For more detail, I have a <code>media</code> upload collection that has a user field, which is set to too the user that creates the asset. I would like to be able to have the user see their own images in the Media collection, and not other images. But I can&#x27;t seem to find a way to restrict this, without blocking read access to the asset URL. Is there something in the request object I can use?",
      "fileAttachments": [],
      "authorID": "711854352800809041",
      "authorName": "tompatrick",
      "authorAvatar": "2cb2d25853a56b151400afba10e6c658",
      "createdAtDate": 1677846004648
    },
    "messages": [
      {
        "content": "I&#x27;m no expert, nor know how to implement it in code, but the logic would be to allow public access to the underlying URL &amp;&amp; some kind of an custom access control hook which allows only the uploading user to their own uploads. Right? I guess you need to check the access control and hooks docs, there are examples on the payload github",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1677948276970
      },
      {
        "content": "I got a similar issue. I think the best way forward is configuring strict access controls and then add a custom endpoint that exposes all data<br> <br> Another option would be to add an express middleware that adds a filter (by modifying req.query) if the request referer contains /admin but that is probably a rabbit hole.<br> <br> And another idea: configure the access controls such that anonymous read is allowed but authenticated read is limited to your own.",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1678017738105
      },
      {
        "content": "Thanks @Arskeliss and @thgh. In the end I found a way using the cloud storage plugin. I enabled public read ACL, and disabled the access control via the plugin which reveals the actual object storage URL instead of the rewritten payload one. And then I just added a CDN onto the cloud storage in this case via digital ocean and added the rules I needed in the collection config. Works well.",
        "fileAttachments": [],
        "authorID": "711854352800809041",
        "authorName": "tompatrick",
        "authorAvatar": "2cb2d25853a56b151400afba10e6c658",
        "createdAtDate": 1678030085169
      },
      {
        "content": "Hi. How can I bypass the access restriction via custom endpoints?<br>If I understood correctly, the restrictions apply to each endpoint<br> <br> Solved it by adding overrideAccess",
        "fileAttachments": [],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "348c9d84bef605e502effc609bf2834b",
        "createdAtDate": 1678030289198
      },
      {
        "content": "You are using this inside payload or your frontend?",
        "fileAttachments": [],
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1678032127595
      },
      {
        "content": "Inside payload.",
        "fileAttachments": [],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "348c9d84bef605e502effc609bf2834b",
        "createdAtDate": 1678032683137
      },
      {
        "content": "The global payload object cannot take access restrictions into account as it is not aware of who is querying? Or are you using req.payload (which I think is also unrestricted but starting to doubt that now)?",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1678038690982
      },
      {
        "content": "Seems it take into account the restrictions. At least it didn&#x27;t work until I added the overrideAccess as true<br> <br> In the documentation says that if the overrideAccess is false, you have to pass the user to use against the access control checks.<br> <br> So another solution is to create a dummy user object and use it to bypass the restriction. But for me overrideAccess: true looks better",
        "fileAttachments": [],
        "authorID": "187948379920138240",
        "authorName": "mihanc",
        "authorAvatar": "348c9d84bef605e502effc609bf2834b",
        "createdAtDate": 1678038817380
      },
      {
        "content": "Well, the docs say the default is true so that&#x27;s peculiar. (Which matches my experience)",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1678039514205
      }
    ],
    "messageCount": 15,
    "slug": "refined-access-control-for-uploads"
  },
  {
    "info": {
      "name": "'SelectInput' JSX type error",
      "id": "1074531834060357653",
      "guildId": "967097582721572934",
      "createdAt": 1676258753076
    },
    "intro": {
      "content": "When trying to re-use the <code>SelectInput</code> component in my own custom admin component, I get this type error:<br><br><blockquote>&#x27;SelectInput&#x27; cannot be used as a JSX component.<br>  Its return type &#x27;ReactElement&lt;any, any&gt;&#x27; is not a valid JSX element.<br>    Type &#x27;ReactElement&lt;any, any&gt;&#x27; is missing the following properties from type &#x27;Element&#x27;: tag, attrs, statets(2786)<br></blockquote><br>From some googling, I think this may have something to do with conflicting React versions, or else some kind of issue with TypeScript not using the correct React version.<br><br>However, I only have one version of React present in my project and it&#x27;s <code>^18.2.0</code>, the same as Payload CMS.<br><br>I also added the following to my package.json which did not seem to help:<br><br><pre><code class=\"hljs json\">  <span class=\"hljs-attr\">&quot;overrides&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;react&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^18.2.0&quot;</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;resolutions&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;react&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^18.2.0&quot;</span>\n  <span class=\"hljs-punctuation\">}</span></code></pre><br><br>My tsconfig is as follows:<br><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;compilerOptions&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n      <span class=\"hljs-attr\">&quot;allowJs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;baseUrl&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;esModuleInterop&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;lib&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;es2019&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;es2020.bigint&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;es2020.string&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;es2020.symbol.wellknown&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;jsx&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;react&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;module&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;commonjs&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;moduleResolution&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;node&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;noEmitOnError&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;outDir&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;./dist&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;paths&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n        <span class=\"hljs-attr\">&quot;bundles/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;bundles/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n        <span class=\"hljs-attr\">&quot;lib/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;lib/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n        <span class=\"hljs-attr\">&quot;combat/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;bundles/myelin-turn-combat/lib/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n        <span class=\"hljs-attr\">&quot;types/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;types/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n        <span class=\"hljs-attr\">&quot;payload/generated-types&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./bundles/myelin-cms/payload-types.ts&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;pretty&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;resolveJsonModule&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;skipLibCheck&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;sourceMap&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;target&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;es2019&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;typeRoots&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n        <span class=\"hljs-string\">&quot;./node_modules/@types&quot;</span>\n      <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n\n  <span class=\"hljs-attr\">&quot;include&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;bundles&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;lib&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;node_modules/ranvier&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;config.json&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;server.ts&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;tests&quot;</span><span class=\"hljs-punctuation\">,</span> \n    <span class=\"hljs-string\">&quot;payload.config.ts&quot;</span>\n  <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n\n  <span class=\"hljs-attr\">&quot;//&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;The myelinPanel is built by Vite and has its own TSConfig&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;exclude&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;bundles/myelin-panel/src&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;bundles/myelin-panel/dist&quot;</span>\n  <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n\n  <span class=\"hljs-attr\">&quot;ts-node&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;require&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;tsconfig-paths/register&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;swc&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span></code></pre><br><br>(note &quot;jsx&quot;: &quot;react&quot;)<br><br>And finally, the component where the error crops up is as follows (I didn&#x27;t implement any custom behavior yet due to running into this issue right away):<br><pre><code class=\"hljs tsx\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">CustomSelect</span>: <span class=\"hljs-title class_\">React</span>.<span class=\"hljs-property\">FC</span>&lt;<span class=\"hljs-title class_\">SelectInputProps</span>&gt; = <span class=\"hljs-function\">(<span class=\"hljs-params\">props</span>) =&gt;</span> {\n  <span class=\"hljs-comment\">// const { value, setValue } = useField&lt;SelectInputProps&gt;(props);</span>\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SelectInput</span>\n      {<span class=\"hljs-attr\">...props</span>}\n    /&gt;</span></span>\n  );\n}</code></pre><br> <br> Something else I can add: I changed the file with the component from <code>tsx</code> to <code>jsx</code> and everything compiles fine and the Select field works. So it&#x27;s 100% a types issue.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1074531834060357653/1074531834211356682/Screen_Shot_2023-02-12_at_10.33.14_PM.png",
          "name": "Screen_Shot_2023-02-12_at_10.33.14_PM.png",
          "id": "1074531834211356682",
          "size": 139680,
          "url": "https://cdn.discordapp.com/attachments/1074531834060357653/1074531834211356682/Screen_Shot_2023-02-12_at_10.33.14_PM.png",
          "proxyURL": "https://media.discordapp.net/attachments/1074531834060357653/1074531834211356682/Screen_Shot_2023-02-12_at_10.33.14_PM.png",
          "height": 628,
          "width": 1632,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "362971518969315328",
      "authorName": "hyper light thrifter",
      "authorAvatar": "b92ab03cf1127660b2340bd60ebc5730",
      "createdAtDate": 1676258753076
    },
    "messages": [
      {
        "content": "hi @hyper light thrifter - good catch, we plan to release a component library which will officially resolve issues like this when reusing payload components. <br><br>Is there a reason you are using just the <code>selectInput</code> and not the overall <code>select</code> field? Do you get the same issue if you use <code>select</code>?",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678099326164
      },
      {
        "content": "no good reason; i likely misunderstood which one was intended to be used. i&#x27;ll try normal <code>select</code>",
        "fileAttachments": [],
        "authorID": "362971518969315328",
        "authorName": "hyper light thrifter",
        "authorAvatar": "b92ab03cf1127660b2340bd60ebc5730",
        "createdAtDate": 1678241548741
      }
    ],
    "messageCount": 3,
    "slug": "selectinput-jsx-type-error"
  },
  {
    "info": {
      "name": "[Possible bug] How to clean a field using the dispatch from useFormFields?",
      "id": "1080189737421246536",
      "guildId": "967097582721572934",
      "createdAt": 1677607702356
    },
    "intro": {
      "content": "Hi there! I am using useFormFields to get the dispatch method for an UPDATE action. Sometimes I need to clean a field, so I dispatchName(undefined). That clears the form correctly, but when I click &#x27;Save Draft&#x27; the old value reappears and is saved in Mongo. Any insights on what&#x27;s going on?<br><br>  const dispatchName = useFormFields(<br>    ([_, dispatch]) =&gt;<br>      (value: string) =&gt;<br>        dispatch({<br>          type: &#x27;UPDATE&#x27;,<br>          path: NamePath,<br>          value: value<br>        })<br>  )<br><br>dispatchName(undefined)<br> <br> P.S: it seems to work better with dispatching &#x27;null&#x27;<br> <br> @jmikrut Do you know if have anyone seen this before?",
      "fileAttachments": [],
      "authorID": "435590980838621194",
      "authorName": "Cerize",
      "authorAvatar": null,
      "createdAtDate": 1677607702356
    },
    "messages": [
      {
        "content": "yeah you will need to send <code>null</code> to clear a field",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677616854511
      },
      {
        "content": "thanks @jmikrut  for confirming!",
        "fileAttachments": [],
        "authorID": "435590980838621194",
        "authorName": "Cerize",
        "authorAvatar": null,
        "createdAtDate": 1677620603961
      }
    ],
    "messageCount": 4,
    "slug": "possible-bug-how-to-clean-a-field-using-the-dispatch-from-useformfields"
  },
  {
    "info": {
      "name": "Protect uploads",
      "id": "1080434733256806430",
      "guildId": "967097582721572934",
      "createdAt": 1677666113915
    },
    "intro": {
      "content": "Hi, I have some file uploads that should be only available for specific people. How to protect them? I&#x27;m thinking of two approaches:<br>* Generate a unguessable filename on upload, but how to configure that?<br>* Add a middleware that checks for user access which takes more effort and more error prone.",
      "fileAttachments": [],
      "authorID": "476523795251855360",
      "authorName": "thgh",
      "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
      "createdAtDate": 1677666113915
    },
    "messages": [
      {
        "content": "Considering you&#x27;ll use a collection, you could maybe change the document (/file) name with the <code>beforeOperation</code> hook (<a href=\"https://payloadcms.com/docs/hooks/collections#beforeoperation\">https://payloadcms.com/docs/hooks/collections#beforeoperation</a>) and then restrict the access with the <code>read</code> ACL (<a href=\"https://payloadcms.com/docs/access-control/collections#read\">https://payloadcms.com/docs/access-control/collections#read</a>). Haven’t done anything similar so if anyone else has more experience on this matter please feel free to share",
        "fileAttachments": [],
        "authorID": "157199103921618944",
        "authorName": "Migu",
        "authorAvatar": "7c40c98d2393a326cea0da98f91966d2",
        "createdAtDate": 1677673676636
      },
      {
        "content": "@thgh - as @Migu said, I would restrict the <code>read</code> access directly on your upload collection. You could add a field to your users collection (<em>role</em> or similar) to determine who should be able to access the file, and another field on your uploads collection (<em>protected</em> or similar) to set whether or not the document is protected.",
        "fileAttachments": [],
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1678118563919
      },
      {
        "content": "The read access thing is clear, bit how do I change the filename of an upload?<br> <br> Is there an example available per chance?<br> <br> To be clear: I have somewhat guessable filenames now, so the limited collection read access doesn&#x27;t protect the files from hackers.",
        "fileAttachments": [],
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1678401080538
      }
    ],
    "messageCount": 5,
    "slug": "protect-uploads"
  },
  {
    "info": {
      "name": "Has anyone built a dropzone upload component?",
      "id": "1076548831384191007",
      "guildId": "967097582721572934",
      "createdAt": 1676739642712
    },
    "intro": {
      "content": "The nested modal confuses some users and a simple dropzone would suffice for this usecase.",
      "fileAttachments": [],
      "authorID": "476523795251855360",
      "authorName": "thgh",
      "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
      "createdAtDate": 1676739642712
    },
    "messages": [],
    "messageCount": 0,
    "slug": "has-anyone-built-a-dropzone-upload-component"
  },
  {
    "info": {
      "name": "Server url not setting properly on production",
      "id": "1078435396465201223",
      "guildId": "967097582721572934",
      "createdAt": 1677189434878
    },
    "intro": {
      "content": "I have trouble getting the server url right on production. I have set the <code>serverUrl</code> property to <code>process.env.SERVER_URL || http://localhost:4000</code>. That env variable is also set inside the docker container to the production url. But when I open it is stuck on the first user screen having the popup loading in the middle.",
      "fileAttachments": [
        {
          "attachment": "https://cdn.discordapp.com/attachments/1078435396465201223/1078435397006278817/image.png",
          "name": "image.png",
          "id": "1078435397006278817",
          "size": 72366,
          "url": "https://cdn.discordapp.com/attachments/1078435396465201223/1078435397006278817/image.png",
          "proxyURL": "https://media.discordapp.net/attachments/1078435396465201223/1078435397006278817/image.png",
          "height": 1378,
          "width": 1276,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1078435396465201223/1078435397320839188/Screenshot_2023-02-23_at_22.50.41.png",
          "name": "Screenshot_2023-02-23_at_22.50.41.png",
          "id": "1078435397320839188",
          "size": 142045,
          "url": "https://cdn.discordapp.com/attachments/1078435396465201223/1078435397320839188/Screenshot_2023-02-23_at_22.50.41.png",
          "proxyURL": "https://media.discordapp.net/attachments/1078435396465201223/1078435397320839188/Screenshot_2023-02-23_at_22.50.41.png",
          "height": 320,
          "width": 2874,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        },
        {
          "attachment": "https://cdn.discordapp.com/attachments/1078435396465201223/1078435397580894388/Screenshot_2023-02-23_at_22.50.59.png",
          "name": "Screenshot_2023-02-23_at_22.50.59.png",
          "id": "1078435397580894388",
          "size": 41360,
          "url": "https://cdn.discordapp.com/attachments/1078435396465201223/1078435397580894388/Screenshot_2023-02-23_at_22.50.59.png",
          "proxyURL": "https://media.discordapp.net/attachments/1078435396465201223/1078435397580894388/Screenshot_2023-02-23_at_22.50.59.png",
          "height": 220,
          "width": 1042,
          "contentType": "image/png",
          "description": null,
          "ephemeral": false
        }
      ],
      "authorID": "220897925612568577",
      "authorName": "Rick",
      "authorAvatar": "17e958af3d2b16f99bcb0e3a77050739",
      "createdAtDate": 1677189434878
    },
    "messages": [
      {
        "content": "use the variable name <code>process.env.PAYLOAD_PUBLIC_SERVER_URL</code><br> <br> because if you don&#x27;t prefix your env var with <code>PAYLOAD_PUBLIC_</code>, it won&#x27;t be accessible in your admin panel<br> <br> if you <em><strong>do</strong></em> prefix it like that, we will automatically expose it for you",
        "fileAttachments": [],
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1677200066361
      },
      {
        "content": "Yup, that fixes it. Thanks!",
        "fileAttachments": [],
        "authorID": "220897925612568577",
        "authorName": "Rick",
        "authorAvatar": "17e958af3d2b16f99bcb0e3a77050739",
        "createdAtDate": 1677265906344
      }
    ],
    "messageCount": 4,
    "slug": "server-url-not-setting-properly-on-production"
  }
]
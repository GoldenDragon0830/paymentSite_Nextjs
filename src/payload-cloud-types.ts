/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    plans: Plan;
    teams: Team;
    projects: Project;
    templates: Template;
  };
  globals: {};
}
export interface User {
  id: string;
  githubID?: string;
  ghAppInstallationID?: string;
  teams: {
    team?: string | Team;
    roles?: ('owner' | 'admin' | 'user')[];
    invitedOn?: string;
    acceptedOn?: string;
    id?: string;
  }[];
  projects: {
    project?: string | Project;
    roles?: ('owner' | 'admin' | 'user')[];
    invitedOn?: string;
    acceptedOn?: string;
    id?: string;
  }[];
  roles?: ('admin' | 'user')[];
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Team {
  id: string;
  name?: string;
  stripeCustomerID?: string;
  subscriptions: {
    stripeSubscriptionID?: string;
    stripeProductID?: string;
    plan?: string | Plan;
    status?: 'active' | 'canceled' | 'incomplete' | 'incomplete_expired' | 'past_due' | 'trialing' | 'unpaid';
    id?: string;
  }[];
  skipSync?: boolean;
  createdAt: string;
  updatedAt: string;
}
export interface Plan {
  id: string;
  name?: string;
  slug?: string;
  stripeProductID?: string;
  priceJSON?: string;
  createdAt: string;
  updatedAt: string;
}
export interface Project {
  id: string;
  name?: string;
  deletedOn?: string;
  owner: string | Team;
  template?: string | Template;
  source?: 'github';
  repositoryURL?: string;
  repositoryID?: string;
  deploymentBranch?: string;
  rootDirectory?: string;
  outputDirectory?: string;
  buildScript?: string;
  installScript?: string;
  runScript?: string;
  environmentVariables: {
    name?: string;
    value?: string;
    id?: string;
  }[];
  aws: {
    user?: string;
  };
  skipSync?: boolean;
  createdAt: string;
  updatedAt: string;
}
export interface Template {
  id: string;
  name?: string;
  slug?: string;
  description?: string;
  repositoryURL?: string;
  createdAt: string;
  updatedAt: string;
}

[
  {
    "info": {
      "name": "Replace relationship field `Edit` view to include image media within the drop down selection UI",
      "id": "1069998451263283271",
      "createdAt": 1675177910391
    },
    "messages": [
      {
        "content": "Hi, I am new to Payload and starting to learn my way around the codebase. Enjoying it so far!<br><br>This post explains my scenario but basically asks &quot;Are there any existing examples of replacing the relationship field in <code>Edit</code> views with a custom component that can get me started?&quot;<br><br>I have followed the method in this thread to populate images within custom <code>Cell</code> components as pictured in the attachments.<br><a href=\"https://discordapp.com/channels/967097582721572934/1041362545501548624\">https://discordapp.com/channels/967097582721572934/1041362545501548624</a><br><br>I would like to create a similar component for relationship types in <code>Edit</code> view to replace the dropdown list item (last image attachment).<br><br>Am I correct in thinking that I will need to target changing the <code>SingleValue</code> component? Here in the source:<br><a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/select-components/SingleValue/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/select-components/SingleValue/index.tsx</a><br><br>Or are there multiple components that I will have to target? <br>For example, does the <code>SingleValue</code> component specify the selections only when the drop down <code>DocumentDrawer</code> is open but there is a different component I need to target for when it is closed?<br>If this is the scenario of Payload - I would have to target the <code>Relationship</code> component in addition to <code>SingleValue</code> ?<br><a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/index.tsx</a><br><br>And in my definition for the collection that makes use of this relationship - the field object will look something like this if my new component is called <code>ImageTitleRelationshipField</code> ?<br><br><pre><code class=\"hljs\">{\n    name: &quot;competitorOne&quot;,\n    type: &quot;relationship&quot;,\n    relationTo: [&quot;artworks&quot;],\n    admin: {\n        components: {\n            Cell: ImageTitleCell,\n            Field: ImageTitleRelationshipField\n        },\n    },\n},</code></pre><br>I guess I am asking - what is the best approach? and are there any existing examples of replacing the relationship field in <code>Edit</code> views with a custom component that can get me started?",
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675177910391
      },
      {
        "content": "@jellygatorade sorry i don&#x27;t have the answer but i was wondering if i could see your ImageTitleCell and ImageTitleRelationshipField codes if possible? i&#x27;m trying to make a custom component to make my images look like those rather than appearing as filenames 😄",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196390182
      },
      {
        "content": "i made my own component but i can&#x27;t seem to locate the image&#x27;s url inside the props, i just get the element&#x27;s name",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196754519
      },
      {
        "content": "@minanaro_3776 See this message for a good starting point: <a href=\"https://discordapp.com/channels/967097582721572934/1041362545501548624/1041487440310964225\">https://discordapp.com/channels/967097582721572934/1041362545501548624/1041487440310964225</a><br><br>I have not yet started to create code for <code>ImageTitleRelationshipField</code> component yet because it&#x27;s what I opened this thread to ask about.",
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675196794715
      },
      {
        "content": "ohhh gotcha, thanks a lot, good luck! 😄",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196816424
      },
      {
        "content": "I don&#x27;t know of any examples of replacing this field. That field component is by far the most complex of all the fields, so swapping that one out would be pretty intense.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675226111370
      },
      {
        "content": "Thanks for your reply. I suppose that doesn&#x27;t surprise me. Looking at the <code>Relationship</code> field source code (<a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Relationship/index.tsx</a>) it doesn&#x27;t seem very maintainable in the long term to try swapping this whole field out with all its dependencies... If I am correct in my reading of the source what I am actually interested in is changing the usage of <code>props</code> within <code>ReactSelect</code> component...in my case for the <code>SingleValue</code> variant. <br><br>I&#x27;ll have to do more thinking about this caveat over the next week or so when I have the time. I&#x27;ll update this thread when I can. <br><br>For now I could categorize this potential issue in broader terms by saying: Without any concept of an attached featured image per collection item, content editors do not have a way of rapidly identifying a target item when attaching as a relationship via the existing <code>ReactSelect</code> UI if they are not sure about its name because the UI offers text only. Any alternative suggestions for working around this issue would be appreciated 🙂 .",
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675261333378
      },
      {
        "content": "Okay, so your goal is for admin users to rapidly scan the list view for image relationships? The only other workaround I can think of is to make a <code>ui</code> type field with a custom cell component and render anything helpful in it.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675264899546
      },
      {
        "content": "Thanks for thinking it though. My ideal scenario is for the dropdown list items of the <code>Relationship</code> field in the <code>Edit</code> view to appear similarly to the custom <code>Cell</code> component I successfully created for the <code>List</code> view, where a related image thumbnail appears before the title. (This successful <code>List</code> view for the Polls collection is shown as an attached image to the original post).<br><br>Is your suggested workaround to include a custom <code>UI</code> type component in the collection <code>Edit</code> view, adjacent to the <code>Relationship</code> field, that somehow listens for changes on the <code>Relationship</code> field and updates with a thumbnail image from the selected item?",
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675269813686
      },
      {
        "content": "Yes, correct.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675270393208
      },
      {
        "content": "Essentially, another field to augment the functionality instead of replacing the relationship field altogether",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675270412300
      },
      {
        "content": "I&#x27;d be happy to take a stab at that. Can you give an approach for the <code>UI</code> field to listen for changes on another field?",
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675270519924
      },
      {
        "content": "@jacobsfletch @Jarrod Can you assist here? I&#x27;m not as familiar with the React hooks we have available to accomplish this",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675270798608
      },
      {
        "content": "These docs would be a good start from the react side: <a href=\"https://payloadcms.com/docs/admin/hooks#useformfields\">https://payloadcms.com/docs/admin/hooks#useformfields</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675270856923
      },
      {
        "content": "<blockquote>make a ui type field with a custom component and render anything helpful in it.<br></blockquote>This is probably the way to go here",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675270998739
      },
      {
        "content": "To listen to changes on that field from within your custom component, fire the <code>useFormFields</code> hook like this:",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675271192767
      },
      {
        "content": "<pre><code class=\"hljs\">  const { value } = useFormFields(([fields, dispatch]) =&gt; fields.yourRelationshipField);</code></pre>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675271239393
      },
      {
        "content": "Awesome, thanks for your help! Hopefully I&#x27;ll be able to update this thread later with my usage.",
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675271539300
      },
      {
        "content": "Okay, thanks for all the help again. Here is a basic snippet to get anyone else started if searching in the future. The attached image shows how the custom <code>UI</code> component based on the code snippet looks next to the standard <code>Relationship</code> field...while using the <code>Row</code> field to parent both and with some additional CSS.<br><br><pre><code class=\"hljs\">import React, { useState, useEffect } from &quot;react&quot;;\nimport { useFormFields } from &quot;payload/components/forms&quot;;\n\nconst baseUrl = process.env.PAYLOAD_PUBLIC_SERVER_URL;\n\nconst ThumbnailListener = (props) =&gt; {\n  // value key holds current value of fields[props.label]\n  // I am using the label key in the UI field options (defined in the collection) to pass the name of the target relationship field via props\n  const { value } = useFormFields(([fields, dispatch]) =&gt; fields[props.label]);\n\n  const [fetchItem, setFetchItem] = useState();\n\n  useEffect(() =&gt; {\n    value &amp;&amp;\n      fetch(`${baseUrl}/api/${value.relationTo}/${value.value}/?depth=1`)\n        .then((data) =&gt; data.json())\n        .then((object) =&gt; setFetchItem(object));\n  }, [value]);\n\n  return (\n    &lt;&gt;\n      {fetchItem?.image?.sizes?.thumbnail?.url &amp;&amp; (\n        &lt;img\n          src={fetchItem.image.sizes.thumbnail.url}\n        &gt;&lt;/img&gt;\n      )}\n    &lt;/&gt;\n  );\n};</code></pre>",
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675287364403
      },
      {
        "content": "BOOM! That&#x27;s great.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675346264388
      }
    ],
    "messageCount": 19
  },
  {
    "info": {
      "name": "Fill in default values on Doc creation",
      "id": "1072092158531739668",
      "createdAt": 1675677089103
    },
    "messages": [
      {
        "content": "I have a collection of registrations. Within a registration I have a relationship field linking to the collection &quot;Participants&quot;. Now, If I get a registration, and the participant has not been created yet, I&#x27;d like to click on the plus button and have the values from the registration already filled into the appropriate fields. Is this possible to implement?",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1675677089103
      },
      {
        "content": "Could you instead use an afterChange hook to create the participant when a registration gets filled out?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675686677228
      },
      {
        "content": "Hmm that&#x27;s not an option unfortunately, because the application data does not 100% match the required data format for a participants. Also, there should be room for adjustments before creating the participant doc",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1675710485332
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Handling graphql requests that include items the user can no longer access",
      "id": "1073220719506362428",
      "createdAt": 1675946159007
    },
    "messages": [
      {
        "content": "In our platform we have a favourites collection that&#x27;s a many to many relationship between content items and users, however there are scenarios whereby users could favourite a content post and then subsequently not have access to that content item, meaning we get the following error when querying via gql<br><br><code>Cannot return null for non-nullable field Favourite.content</code><br><br>I am wondering whether there is a good way of handing this? Ideally without modifying the favourites table, as they could regain access to that content in the future",
        "authorID": "932901256136114206",
        "authorName": "devperson",
        "authorAvatar": "9c95d90bdc793715987969f5a5f99127",
        "createdAtDate": 1675946159007
      },
      {
        "content": "Anyone have any ideas on this?",
        "authorID": "932901256136114206",
        "authorName": "devperson",
        "authorAvatar": "9c95d90bdc793715987969f5a5f99127",
        "createdAtDate": 1676278969743
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "looking to preview a page in the demo version is that possible?",
      "id": "1075261284192374784",
      "createdAt": 1676432667540
    },
    "messages": [
      {
        "content": "hi 🙂 I&#x27;m not a developer i&#x27;m a conent creator looking to replace our current CMS. i wrote a page in the in the demo version so see what elements are available and the editor looks very promising. i&#x27;d like to preview the page so i can see what the elements look like in real life (media slider, content columns etc) but for the life of me i cannot figure out how to preview a page. i can only publish or save drafts. is this maybe disabled for the demo account?",
        "authorID": "781884553366470677",
        "authorName": "Matzathfanboy",
        "authorAvatar": null,
        "createdAtDate": 1676432667540
      },
      {
        "content": "The Payload demo does not have a corresponding frontend (a website for presenting the content to a user) in order to do any sort of preview. It is API and Admin interface only. That being said, once a frontend is built by one of your developers, access control could be configured so certain users can view drafts on the live site. Hope that makes sense, let me know if you have more questions.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676471280986
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Can I empty a field value when it's condition is false?",
      "id": "1065625709680279613",
      "createdAt": 1674135367556
    },
    "messages": [
      {
        "content": "I&#x27;m currently working with condition to show/hide a field base on another field value. It works super nice! It&#x27;s only still appearing in the API. Is there a way to remove the value passed in this field if it&#x27;s not showing up?<br><br><pre><code class=\"hljs\">{\n    name: &#x27;internal_url&#x27;,\n    type: &#x27;relationship&#x27;,\n    relationTo: &#x27;pages&#x27;,\n    admin: {\n       condition: ({ link_type }) =&gt; link_type === &#x27;internal_link&#x27;,\n    },\n},\n{\n     name: &#x27;external_url&#x27;,\n     type: &#x27;text&#x27;,\n     admin: {\n        condition: ({ link_type }) =&gt; link_type === &#x27;external_link&#x27;,\n     },\n},</code></pre><br><br>Above example should for example only show internal_url in the API if my select field <code>link_type</code> is set to &#x27;internal_link_button&#x27;",
        "authorID": "934107997687402547",
        "authorName": "NH02",
        "authorAvatar": "bb09656c42c6ca6518c538c7c38b9393",
        "createdAtDate": 1674135367556
      },
      {
        "content": "@NH02 Is there access control for that field?",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674138349149
      },
      {
        "content": "Right now there isn&#x27;t",
        "authorID": "934107997687402547",
        "authorName": "NH02",
        "authorAvatar": "bb09656c42c6ca6518c538c7c38b9393",
        "createdAtDate": 1674139011443
      },
      {
        "content": "You could use a beforeRead hook to remove the data you do not want before sending it out in a request response",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674157768656
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Regex validation or custom validation",
      "id": "1068781663842205737",
      "createdAt": 1674887805663
    },
    "messages": [
      {
        "content": "How to add regex validator or custom validation?<br>should we use third party like Joi or Z ? or Payload extend any error validation library for field validation?",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674887805663
      },
      {
        "content": "Also i need to show custom error message",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674887900742
      },
      {
        "content": "Custom validation for a field is documented here: <a href=\"https://payloadcms.com/docs/fields/overview#validation\">https://payloadcms.com/docs/fields/overview#validation</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675438215985
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "stripe example for subscription?",
      "id": "1074791954522583171",
      "createdAt": 1676320770627
    },
    "messages": [
      {
        "content": "Is there an example that handles user registration with subscription? I am thinking of using Payload for a project that requires membership payments to access certain content.",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676320770627
      },
      {
        "content": "@generator101 There is an official strip plugin for Payload <a href=\"https://github.com/payloadcms/plugin-stripe\">https://github.com/payloadcms/plugin-stripe</a>",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676321082537
      },
      {
        "content": "Not sure if that helps",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676321087534
      },
      {
        "content": "would this work for membership setup or just selling a product?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676321858204
      },
      {
        "content": "Looks like this demo is not working, UnhandledPromiseRejectionWarning: Error: Cannot find module &#x27;payload/errors&#x27;<br>Require stack:",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676325073626
      },
      {
        "content": "Hey @jacobsfletch can you take a look at this?",
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1676325612784
      },
      {
        "content": "@generator101 we have an official e-commerce template <a href=\"https://github.com/payloadcms/template-ecommerce\">https://github.com/payloadcms/template-ecommerce</a> —but it&#x27;s for one-time payments for products and/or services. There is a SaaS template in the works that will be demonstrate how to handle recurring payments (subscriptions) so you can start selling access to your Payload software 💸",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676327320978
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Deployment to Azure or Simple NGINX web host",
      "id": "1072970073851056181",
      "createdAt": 1675886400426
    },
    "messages": [
      {
        "content": "Hey all, I&#x27;m having some issues getting the payload server deployed. I have managed to deploy the CMS front end to our basic linux web host. But for some reason, I can&#x27;t get the API to work at all. I&#x27;ve also tried deploying to Azure web services. That threw out a lot of cors errors which I fixed inside azure but the cors errors still remain.<br><br>I&#x27;ve followed through the payload docs but can&#x27;t seem to make any sense of the deployment process.<br>When deploying, is there any certain folders that the files need to be placed in? Is there any other config I might be missing?<br>I am just deploying the build and server files manually via FTP so could very well be missing something.<br>Can someone help?",
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1675886400426
      },
      {
        "content": "In order to deploy Payload, you&#x27;ll need both the dist and build directory after building.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056144332
      },
      {
        "content": "<blockquote>I can&#x27;t get the API to work at all<br></blockquote>Providing more detail here would give more info in order to help. Are you able to hit the API at all? Receiving 5XX/4XX errors? Can you provide the cors errors? Do you have the <code>serverURL</code> property set in your config?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056242508
      },
      {
        "content": "Hey Elliot, I managed to get it working on Friday. I had some ports all wrong which was causing the errors.",
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676242449856
      },
      {
        "content": "@MRL Great to hear!",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676296889551
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "GraphQL sorting based on numeric value",
      "id": "1065656685978468404",
      "createdAt": 1674142752881
    },
    "messages": [
      {
        "content": "I think this might be a bug, I have a text field that stores a numeric value, lets says 1-100, when I try to sort this:<br><br><pre><code class=\"hljs\">query {\n  Users(sort: userNumPosts) {\n    docs {\n      userNumPosts\n    }\n  }\n}</code></pre><br><br>I get them sorted like this:<br><br><code>1, 10, 100, 101, 102, ....</code><br><br>The correct order should be <br><code>1, 2, 3, 4, ....</code>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674142752881
      },
      {
        "content": "Hmm not sure but to me it looks like they might get sorted as strings? instead of numbers",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674152996307
      },
      {
        "content": "maybe you need to make a custom graphql query where you control the sort?",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674153062979
      },
      {
        "content": "<a href=\"https://payloadcms.com/docs/graphql/extending\">https://payloadcms.com/docs/graphql/extending</a>",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674153290579
      },
      {
        "content": "Hi @generator101 and @noheadphones! Text fields do get stored as strings so if you want to sort by number, I would use the <code>Number</code> field instead of the <code>Text</code> field. Here is an example of an output when sorting with <code>Number</code> fields.<br><br>Let me know if you have any other questions!",
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1674840130171
      },
      {
        "content": "@patrikkozak thank you, yes, that is correct, I made the field as text by accident",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674840561511
      },
      {
        "content": "Oh yeah that&#x27;ll do it then 😂",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674862624506
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "GraphQL Playground loads but reports 500, no server logs.",
      "id": "1070272506105188442",
      "createdAt": 1675243250157
    },
    "messages": [
      {
        "content": "Hi Everyone,<br><br>I have deployed my CMS to a production environment and it is working perfectly, however I have 1 issue with my graphql playground.<br><br>I enabled the graphql playground in production in my <code>payload.config.ts</code> and I am able to load it up at <code>mydomain.tld/api/graphql-playground</code> but whenever I try and use it it reports a 500 error.<br><br>I have tried various things:<br>- Checked the server logs, nothing. I watched them live as I refreshed the page etc. Nothing logged.<br>- Copied the URL that the graphql playground is trying to connect to into my browser address bar. I get a JSON response asking me to provide a query string, as expected.<br>- Using Postman, made an empty POST request to the URL in the above step. Identical result.<br><br>Other info:<br>- The graphql schema does not load. It just shows a loading icon and then logs another 500 error to the browser console (I assume as it retries)<br>- The docs tab exhibits the same behaviour",
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675243250157
      },
      {
        "content": "So, I pinpointed the issue. My steps:<br>- Grab the query that my playground was making,<br>- Post it to the endpoint using Postman<br><br>This actually gave me a decent error:<br><code>{&quot;errors&quot;:[{&quot;message&quot;:&quot;Type ContactForm_ContactForm must define one or more fields.&quot;}]}</code><br><br>Looking into my code, my ContactForm block was as so:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">contactForm</span>: <span class=\"hljs-title class_\">Block</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;contactForm&#x27;</span>,\n  <span class=\"hljs-attr\">fields</span>: [\n    <span class=\"hljs-title function_\">blockFields</span>({\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;contactForm&#x27;</span>,\n      <span class=\"hljs-attr\">fields</span>: [\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;ui&#x27;</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;contactForm&#x27;</span>,\n          <span class=\"hljs-attr\">admin</span>: {\n            <span class=\"hljs-attr\">components</span>: {\n              <span class=\"hljs-title class_\">Field</span>: <span class=\"hljs-title class_\">ContactFormLabel</span>,\n            },\n          },\n        },\n      ],\n    }),\n  ],\n}</code></pre><br><br>Note, the only field is the <code>ui</code> field, displaying a custom element. This block requires no fields as it gets it&#x27;s config from a global.<br><br><br>I updated the block as so, note the addition of a very basic text field. Rebuild and deployed and now my GQL Playground works.<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">contactForm</span>: <span class=\"hljs-title class_\">Block</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;contactForm&#x27;</span>,\n  <span class=\"hljs-attr\">fields</span>: [\n    <span class=\"hljs-title function_\">blockFields</span>({\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;contactForm&#x27;</span>,\n      <span class=\"hljs-attr\">fields</span>: [\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;title&#x27;</span>, <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text&#x27;</span>, <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span> },\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;ui&#x27;</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;contactForm&#x27;</span>,\n          <span class=\"hljs-attr\">admin</span>: {\n            <span class=\"hljs-attr\">components</span>: {\n              <span class=\"hljs-title class_\">Field</span>: <span class=\"hljs-title class_\">ContactFormLabel</span>,\n            },\n          },\n        },\n      ],\n    }),\n  ],\n}</code></pre><br><br>Is this intended behaviour? I would ideally like this block to contain no elements besides the <code>ui</code> element. Thanks",
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675246720956
      },
      {
        "content": "Maybe I&#x27;m just tired this morning I&#x27;ve just realised I&#x27;ve wrapped the whole lot in my custom BlockFields function. That will be the issue",
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675247134780
      },
      {
        "content": "What does your graphQL query look like?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675274030134
      },
      {
        "content": "If a block contains a UI field with no other data, maybe we shouldn&#x27;t generate a type for it. I&#x27;d have to dig a little on best practices here.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675277287027
      },
      {
        "content": "@Jarrod This is my bad completely, see in my contact form block, within the fields array, I wrap the fields in a custom blockFields function. With that function removed, the query performs perfectly.\\",
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675319687286
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Allow login before email verification",
      "id": "1062205996660949073",
      "createdAt": 1673320044437
    },
    "messages": [
      {
        "content": "I want users to login in my application before they verify their email, maybe only allow them to do certain actions before they verify it.<br><br>Also how can I know a user is not verified so i can send another verification email.<br><br>It&#x27;s any way in payload to do this?",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1673320044437
      },
      {
        "content": "@ScriptDroid email verification is optional if you did not set  <code>verify: true</code> on your user collection config. When enabled, though, it adds a  <code>_verified</code> field to your user that you can use for any purpose.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1674053474763
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Production deployment throws TypeError: Router.use() requires a middleware function",
      "id": "1070942828009627698",
      "createdAt": 1675403067353
    },
    "messages": [
      {
        "content": "Everything was running well in production but after developing and locally testing some changes, deployment to production threw, out of nowhere, the following error: TypeError: Router.use() requires a middleware function<br><br>Full trace:<br><pre><code class=\"hljs\">error Command failed with exit code 1.\n at internal/main/run_main_module.js:17:47\n at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:75:12)\n at Function.Module._load (internal/modules/cjs/loader.js:790:12)\n at Module.load (internal/modules/cjs/loader.js:950:32)\n at Object.Module._extensions..js (internal/modules/cjs/loader.js:1114:10)\n at Module._compile (internal/modules/cjs/loader.js:1085:14)\n at Object.&lt;anonymous&gt; (/home/node/dist/server.js:51:8)\n at Function.use (/home/node/node_modules/express/lib/router/index.js:462:11)\nTypeError: Router.use() requires a middleware function\n\n ^\n throw new TypeError(&#x27;Router.use() requires a middleware function&#x27;)\n/home/node/node_modules/express/lib/router/index.js:462</code></pre><br><br>Because I didn&#x27;t make any fundamental changes and all works well locally, it&#x27;s quite a mystery where this opaque error comes from. <br><br>Has anybody had a similar problem in production?<br><br>The only place where Router.use() function is used is in server.ts file and that hasn&#x27;t changed in the recent update.<br><br>server.ts<br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\n...\nconst router = express.Router();\nrouter.use(payload.authenticate);\n...</code></pre>",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1675403067353
      },
      {
        "content": "Do you want to create a new Router? express.Router(); returns a New Router Object. Instead, you can add the middleware directly to express.<br><br><pre><code class=\"hljs\">const app = express();\nconst yourMiddleware = (req, res, next) =&gt; {\n    \n    next();\n};\n\napp.get(&quot;/&quot;, (_, res) =&gt; {    res.redirect(&quot;/admin&quot;);  });\napp.use(yourMiddleware);</code></pre>",
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1675405120286
      },
      {
        "content": "No, I haven&#x27;t changed anything nor do I wish to change anything about this. It hasn&#x27;t changed but the server failed to build this with any further new build. Even when I restored everything back to previously working code, the server now just doesn&#x27;t run. Looks like a hosting provider issue?",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1675408157733
      },
      {
        "content": "Solved. Turns out it was the Payload npm package.<br>I was using the following version notation  <pre><code class=\"hljs\">&quot;payload&quot;: &quot;^1.4.1&quot;</code></pre> meaning all latest minor changes will be used.<br><br>Between now and 24 days ago since I last built a new image, something has changes in the way PayloadCMS works with Express and although it claims to be a <strong>minor</strong> change, it was a breaking change and something in the <strong>server.ts</strong> file related with express needs to be re-written. <br><br>I don&#x27;t have time to do it now, so I reverted to using a strict version (1.4.1) of payload and it works. As soon as I use anything modern, it breaks.",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1675573725304
      },
      {
        "content": "I want to have my own custom routes (e.g. health check, and others) and I also need to access payload authentication middleware inside them. <br>So I followed tutorials on this but this doesn&#x27;t work anymore in latest payload versions.<br><br>Here is my server.ts new router related code.<br><br><pre><code class=\"hljs\">  \n  const router = express.Router();\n  router.use(payload.authenticate);\n\n  router.post(&#x27;/transactions/process&#x27;, (req: any, res) =&gt; {\n    if (req.user) {\n      return res.send(`Authenticated successfully as ${req.user.email}.`);\n    }\n    return res.send(&#x27;Not authenticated&#x27;);\n  });\n\n  router.get(&#x27;/health&#x27;, (req: any, res) =&gt; {\n    res.send(&#x27;Healthy&#x27;)\n  });\n\n  app.use(&#x27;/custom&#x27;, router);\n  app.listen(3000);</code></pre>",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1675575643110
      },
      {
        "content": "It works if await payload.init is before payload.authenticate.<br><br><pre><code class=\"hljs\">const start = async () =&gt; {\n  const router = express.Router();\n  \n  await payload.init({...}); // Changed to async. Need to wrap code into an async function\n\n  router.use(payload.authenticate);\n\n  router.post(&#x27;/transactions/process&#x27;, (req: any, res) =&gt; {\n    if (req.user) {\n      return res.send(`Authenticated successfully as ${req.user.email}.`);\n    }\n    return res.send(&#x27;Not authenticated&#x27;);\n  });\n\n  router.get(&#x27;/health&#x27;, (req: any, res) =&gt; {\n    res.send(&#x27;Healthy&#x27;)\n  });\n\n  app.use(&#x27;/custom&#x27;, router);\n  app.listen(3000);\n}\n\nstart();</code></pre>",
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1675588363664
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "disable rest api and only use graphql",
      "id": "1069705268453187604",
      "createdAt": 1675108010162
    },
    "messages": [
      {
        "content": "Is it possible to disable rest api and just use graphql? I only use graphql and dont need the rest api and for security I want to disable it.",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675108010162
      },
      {
        "content": "Not currently, but I&#x27;d support adding the toggle!",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675108692501
      },
      {
        "content": "The entire admin UI uses the REST API, so turning this off is not really an option.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675113238519
      },
      {
        "content": "@denolfe  So if we disable admin, will it disable the rest api? I know there is an option to disable admin in production",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675120244545
      },
      {
        "content": "No, that option simply disables the serving of the admin panel itself - no affect on REST API",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675127359796
      },
      {
        "content": "Feel free to submit a feature request, so we can discuss/prioritize with everyone.<br><br><a href=\"https://github.com/payloadcms/payload/discussions\">https://github.com/payloadcms/payload/discussions</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675127373522
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Hey there!",
      "id": "1075271142845194364",
      "createdAt": 1676435018026
    },
    "messages": [
      {
        "content": "I&#x27;m trying to customize a bit some of my list views. Is there a way to have &quot;custom fields&quot; on the list view? <br>eg: I have a Post with 3 comments and want to have a field with that &quot;calculated amount&quot; without storing it on the DB. Just showing thay <code>comments.length</code> value.<br><br>And is it possible to set a default sorting sorting for my collections?",
        "authorID": "494333401264947218",
        "authorName": "nacho",
        "authorAvatar": null,
        "createdAtDate": 1676435018026
      },
      {
        "content": "It sounds like you&#x27;re looking for a <code>ui</code> type field with custom cell component<br><br>Docs for swapping the components: <a href=\"https://payloadcms.com/docs/admin/components#collections\">https://payloadcms.com/docs/admin/components#collections</a><br>Docs for a cell component: <a href=\"https://payloadcms.com/docs/admin/components#cell-component\">https://payloadcms.com/docs/admin/components#cell-component</a><br>Docs for <code>ui</code> fields: <a href=\"https://payloadcms.com/docs/fields/ui#ui-field\">https://payloadcms.com/docs/fields/ui#ui-field</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676471690217
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Is it safe to run two instances of Payload connected to the same database?",
      "id": "1068007652724047912",
      "createdAt": 1674703267032
    },
    "messages": [
      {
        "content": "🙂",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1674703267032
      },
      {
        "content": "What’s the use case here?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674704489853
      },
      {
        "content": "I&#x27;m considering deploying to cloud run, where there&#x27;s the option to autoscale beyond one instance.",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1674705505547
      },
      {
        "content": "So I&#x27;m just wondering whether there could be any race conditions or risk of data loss by having multiple instances.",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1674706238977
      },
      {
        "content": "@Jarrod Another use case would be i18n of the admin field descriptions etc which are currently not translatable. I was pondering about having a twin instance to just translate those 🙂",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1674742636601
      },
      {
        "content": "@oliverevans96  I think that would be just fine - @denolfe anything you want to add?<br><br>@Exo oh man, I think we should just extend descriptions to allow for translations - seems like a lot of work to spin up (and maintain) a duplicate payload instance just to translate descriptions 😅",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674744149883
      },
      {
        "content": "oh that would be lovely! But given that there is so much on your guy&#x27;s plates already I thought this would be a quick&amp;dirty workaround to make the curators happy 😄",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1674744224727
      },
      {
        "content": "but translateable descriptions would be 🔥",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1674744248724
      },
      {
        "content": "Yeah..... but this sounds like a good feature. Not sure <em>when</em> it will get slated in - but we should start a github discussion around it so it does not get lost. I like it!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674744399138
      },
      {
        "content": "Someone might even pick it up, I don&#x27;t see it being too difficult. It would be very similar to how field labels are translatable!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674744479609
      },
      {
        "content": "It is not safe at all. I had a case of unintentional rollback, as someone hit save on an older version.",
        "authorID": "1039531494894473286",
        "authorName": "gubarez",
        "authorAvatar": null,
        "createdAtDate": 1674745258028
      },
      {
        "content": "It would be good to have the data automatically updated across all active clients...",
        "authorID": "1039531494894473286",
        "authorName": "gubarez",
        "authorAvatar": null,
        "createdAtDate": 1674745354996
      },
      {
        "content": "The only concern here is really <em>multiple editors</em> in the admin. As of right now, there is no way to know if someone else is already editing the document, whether the document has had an update while an editor has it open, and so on.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674746432853
      },
      {
        "content": "Purely from an API perspective, no issues unless you have a very high throughput.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674746442361
      },
      {
        "content": "IMO only one instance should be allowed to have admin panel. Otherwise maintaining it would be nearly impossible.",
        "authorID": "1039531494894473286",
        "authorName": "gubarez",
        "authorAvatar": null,
        "createdAtDate": 1674748244046
      },
      {
        "content": "We don&#x27;t make any assumptions or restrictions in that regard, we leave that up to you. The admin panel can be disabled on an instance if desired.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674748333235
      },
      {
        "content": "What if one instance only has read-only access to collections? It would seem silly to not allow that.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674748394003
      },
      {
        "content": "I think we have plans in the future to support Notion-like presence indicators, &quot;document has been updated by another user&quot; notifications and so on.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674748494768
      },
      {
        "content": "Hm, I can see how multiple editors / editing a previous schema could be issues. Thanks for the feedback. I&#x27;ll tread lightly.",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1674753759668
      },
      {
        "content": "I really did not think about differing configs, I think that would be the biggest issue - but I would imagine cloud run uses the same source of truth when autoscaling...?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674754260474
      },
      {
        "content": "I feel like not using different configs against the same DB kind of goes without saying",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674760637204
      },
      {
        "content": "Is there a github discussion about this yet? I think it goes very much in line of what is being discussed in the #plugins channel right now - payload lacking a live-preview of documents hindering adoption.<br><br>I think both of these boil down to having a socket connection to the server which lets you know if a document is being edited or if it has changed",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1674909195534
      },
      {
        "content": "No official one as of now, but there were was a related one very early on here: <a href=\"https://github.com/payloadcms/payload/discussions/257\">https://github.com/payloadcms/payload/discussions/257</a><br><br>If you&#x27;d like to write up a more detailed Feature Request ticket, we&#x27;d welcome it 👍 .",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674917232979
      }
    ],
    "messageCount": 22
  },
  {
    "info": {
      "name": "Get all child rows referring to parent",
      "id": "1074960012134318150",
      "createdAt": 1676360838684
    },
    "messages": [
      {
        "content": "So I’ve got two tables “Experiences” and “categories” <br><br>So each experience has a category <br><br>How can I get all distinct categories and total number of experiences tied to each category <br><br>Currently what I do with GRAPHQL I get all categories and their ID’s then run  separate queries to search the “Experiences”  table for all rows with that category<br><br>And I think this is inefficient as I show categories names and how many experiences they have in a list so at best 1(query for all categories) *(totalDocs places with specific category )<br><br>May you please suggest a better way to go about this",
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676360838684
      },
      {
        "content": "I do something similar for demo.payloadcms.com.<br>There is a custom component named CategorySummary: <a href=\"https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx\">https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx</a>",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676387200719
      },
      {
        "content": "That gets imported into the category collection and used at <a href=\"https://github.com/payloadcms/public-demo/blob/master/src/collections/Categories.ts#L36\">https://github.com/payloadcms/public-demo/blob/master/src/collections/Categories.ts#L36</a>",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676387241444
      },
      {
        "content": "If you&#x27;re doing it from the list view, that could be considered a lot of queries, but honestly I wouldn&#x27;t worry about it. How many editors are using the admin UI and how often will this query be performed? A hundred requests here and there probably won&#x27;t be noticed in the grand scheme of things.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676387465159
      },
      {
        "content": "You could optimize it with a custom endpoint that does an aggregate count if you wanted and throw it into a custom provider of your admin UI that feeds a Cell component.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676387537857
      },
      {
        "content": "I have never used custom components in payload only it’s native components",
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676399724746
      },
      {
        "content": "So you treat a column as a aggregate of a query ..it’s hard to express that outside of sql",
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676399767913
      },
      {
        "content": "So I’m doing this on the client side of a experience booking website…there’s a section I show experience categories and beneath the cover image and experience category title I show how many experiences are of that type",
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676399865442
      },
      {
        "content": "Oh, you&#x27;re talking client side. I was confused and giving you admin UI solutions.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676399931731
      },
      {
        "content": "You could use a virtual field that has an <code>afterRead</code> hook, do your querying with <code>req.payload.find()</code>, using the query object like you see in that CategorySummary I linked.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676400036395
      },
      {
        "content": "Ohh no but now I’m learning a bit about admin UI from you aswell which",
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676400082580
      },
      {
        "content": "On the client side im using GRAPHQL to query payload",
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676400108975
      },
      {
        "content": "Are you asking how to write the query in a GraphQL to get a count of documents on a collection with some query params? That shouldn&#x27;t be too hard to write.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676400498378
      },
      {
        "content": "I have written both the queries to list categories and count of experiences with those categories <br><br><br>So what I’m asking for is a way to do all this in one query",
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676400810630
      },
      {
        "content": "So first i get all categories.... Categories {<br>        docs {<br>          id<br>          type<br>          cover {<br>            url<br>          }<br>        }<br>      }<br>    }",
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676401034257
      },
      {
        "content": "then use each categories id to get count on experience  with that specific category Experiences(where: { category: { equals: $equals } }) {<br>          totalDocs<br>        }",
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676401136274
      },
      {
        "content": "To do it all in one you&#x27;ll need to add another field to categories that either A) is updated and stored from updating experiences or B) is a virtual field that isn&#x27;t stored, but you query using payload.find() as an afterRead hook and returns the count each time.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676401197983
      },
      {
        "content": "a solution would be to query all experiences and segregate them by categories but theres categories that might not have a experience but i would like to show",
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676401236631
      },
      {
        "content": "B seems like the best option",
        "authorID": "877297218967724072",
        "authorName": "eloahsam",
        "authorAvatar": "07dcdf8e4b5e97f273507519ed261742",
        "createdAtDate": 1676401347606
      }
    ],
    "messageCount": 18
  },
  {
    "info": {
      "name": "ERROR (payload): ValidationError: The following field is invalid: id",
      "id": "1066238537512525855",
      "createdAt": 1674281477097
    },
    "messages": [
      {
        "content": "I cant able to update a document in update api(local api) inside hooks.Someone kindly help<br>#payloadcms",
        "authorID": "997134219262308463",
        "authorName": "curlie",
        "authorAvatar": null,
        "createdAtDate": 1674281477097
      },
      {
        "content": "Do you have some code you can show?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674313633979
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Please Help me ./install.sh: line 3: node-waf: not found",
      "id": "1067821757697900626",
      "createdAt": 1674658946204
    },
    "messages": [
      {
        "content": "| error /home/node/app/node_modules/node-base64: Command failed.<br>admin-global-phone-payload-1  | Exit code: 127<br>admin-global-phone-payload-1  | Command: ./install.sh<br>admin-global-phone-payload-1  | Arguments:<br>admin-global-phone-payload-1  | Directory: /home/node/app/node_modules/node-base64<br>admin-global-phone-payload-1  | Output:<br>admin-global-phone-payload-1  | ./install.sh: line 3: node-waf: not found<br><br><br><br>I can&#x27;t upload to the server.  It gives out this. Maybe someone knows how to fix this?",
        "authorID": "467287070394679297",
        "authorName": "Руся",
        "authorAvatar": "37b8372854854ee7899947390a0b3112",
        "createdAtDate": 1674658946204
      },
      {
        "content": "Hey @Руся have you googled that error in your console? I did a quick search and found this: <a href=\"https://stackoverflow.com/questions/16317976/node-waf-not-found\">https://stackoverflow.com/questions/16317976/node-waf-not-found</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674667849707
      },
      {
        "content": "Sounds like you might need to run <code>sudo npm install -g node-gyp</code> on your machine",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674667890207
      },
      {
        "content": "I solved this problem. It was a library conflict JWT and payload",
        "authorID": "467287070394679297",
        "authorName": "Руся",
        "authorAvatar": "37b8372854854ee7899947390a0b3112",
        "createdAtDate": 1674685136588
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Is it possible to modify an image upload before uploading? (generating and adding QR to image)",
      "id": "1070287657034338314",
      "createdAt": 1675246862420
    },
    "messages": [
      {
        "content": "I have a Products collection with an image upload field. My plan is generating a QR code using the current element&#x27;s field data, for example product color, size, etc., and then adding the QR to the image the user wants to upload. I&#x27;m currently working with local files but I&#x27;ll eventually use S3 or its akin, I was wondering if what I&#x27;m describing is possible to do?<br><br>Thank you!",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675246862420
      },
      {
        "content": "I&#x27;m not 100% sure, but I would imagine you want to use the <code>beforeChange</code> hook on (<a href=\"https://payloadcms.com/docs/hooks/collections#beforechange\">https://payloadcms.com/docs/hooks/collections#beforechange</a>) on your media collection. First step would be to modify the image. Second step would be to upload to S3, as described in the &quot;ephemeral filesystems&quot; subsection of <a href=\"https://payloadcms.com/docs/production/deployment#file-storage\">https://payloadcms.com/docs/production/deployment#file-storage</a>",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675250669070
      },
      {
        "content": "On that hook, using the data argument, I&#x27;m only getting image metadata like width, mimetype, etc. No data stream or image buffer data that I can use and manipulate. Any ideas?",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279303722
      },
      {
        "content": "Hm, I haven&#x27;t used it myself. But the docs say<br><br><blockquote>Write an asynchronous <code>beforeChange</code> hook for all Collections that support Uploads, which takes any uploaded file from the Express <code>req</code> and sends it to an S3 bucket<br></blockquote><br>Can you find the file itself in the <code>req</code> object?",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675279425125
      },
      {
        "content": "Oh, the req object, let me try!",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279508173
      },
      {
        "content": "I found it, req.files.file. It gives me buffer data, I&#x27;m assuming all I have to do is replace that buffer and still return the data argument as if I changed nothing about the data argument and it will upload the image with my specified buffer? 😄",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279713764
      },
      {
        "content": "I guess ultimately, you want to take that buffer, modify it, then upload it to S3 manually. But for local files, I don&#x27;t know - I&#x27;ll be curious to hear whether replacing the buffer does what you want.",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675279803139
      },
      {
        "content": "If that doesn&#x27;t work, I would also try modifying the buffer in-place rather than replacing it.",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675279840014
      },
      {
        "content": "Let me know how it goes 🙂",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675279852638
      },
      {
        "content": "I wonder if the req.files.file happens regardless of local files or S3. 😄",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279898543
      },
      {
        "content": "Let me try, logically there should be no difference 😄",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279934250
      },
      {
        "content": "Yeah, I think it should still be there in the hook. It should just be a matter of whether it actually gets saved to disk afterwards.",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675279938136
      },
      {
        "content": "Because you still select a local file system image",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279941284
      },
      {
        "content": "only the place u upload it to is different",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279948043
      },
      {
        "content": "thanks a bunch @oliverevans96 ! i&#x27;ll try and let you know",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675279968423
      },
      {
        "content": "You&#x27;re welcome! See also <a href=\"https://payloadcms.com/docs/upload/overview#disabling-local-upload-storage\">https://payloadcms.com/docs/upload/overview#disabling-local-upload-storage</a>",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675280001032
      },
      {
        "content": "hey! i tried replacing my uploaded image&#x27;s buffer but the image is the same as the original source rather than my modified version of the image 😄 i made a thread about it if ur curious <a href=\"https://discord.com/channels/967097582721572934/1070461370501447680\">https://discord.com/channels/967097582721572934/1070461370501447680</a>",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675290513124
      },
      {
        "content": "Interesting, thanks",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675290569263
      }
    ],
    "messageCount": 17
  },
  {
    "info": {
      "name": "How to run on local network? (I'm testing)",
      "id": "1072738989188063304",
      "createdAt": 1675831305549
    },
    "messages": [
      {
        "content": "I tried to modify the server.ts file like following<br><br>app.listen(3000, &quot;192.168.56.1&quot;);<br><br>but didn&#x27;t work 😦",
        "authorID": "629766588492677131",
        "authorName": "LuisLopezlg",
        "authorAvatar": "34c04cc9816e77b82120e46fcb360d69",
        "createdAtDate": 1675831305549
      },
      {
        "content": "Never mind, I found the solution (I just read the docs actually sorry hehe) <br><br>I just edited the file payload.config.ts<br>first time didn&#x27;t work, but then it worked! c:",
        "authorID": "629766588492677131",
        "authorName": "LuisLopezlg",
        "authorAvatar": "34c04cc9816e77b82120e46fcb360d69",
        "createdAtDate": 1675832999030
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "AWS DocumentDB SSH",
      "id": "1068507155621220352",
      "createdAt": 1674822357803
    },
    "messages": [
      {
        "content": "In order to connect to an AWS DocumentDB during development, you need to SSH into an EC2 instance as DocumentDB connections are only allowed on the same VPC. Is there a way to set up an SSH tunnel with Payload?",
        "authorID": "831425870270693376",
        "authorName": "JonnyF",
        "authorAvatar": null,
        "createdAtDate": 1674822357803
      },
      {
        "content": "For anyone else needing to answer this:<br><br>- You first need to set up an EC2 instance on AWS to provide your SSH Tunnel. Make sure this is one the same VPC as your AWS DocumentDB and correct security group settings applied<br><br>- You then need to set up SSH port forwarding on your local machine with the following:<br><pre><code class=\"hljs\">ssh -i ssh.pem -L localhost:&lt;LOCAL_PORT&gt;:&lt;AWS_DOCUMENT_DB_CONNECTION_STRING&gt; -p 22 &lt;SSH_USERNAME&gt;@&lt;SSH_INSTANCE_DNS&gt;</code></pre><br><br>- The pem file will be your own private key generated from AWS<br><br>- You then need to update your MongoDB connection string. Its important to include <code>directConnection</code> otherwise it will error:<br><pre><code class=\"hljs\">mongodb://localhost:27000?directConnection=true</code></pre><br><br>- Include your auth for AWS DocumentDB in the Payload <code>mongoOptions</code>:<br><pre><code class=\"hljs typescript\">payload.<span class=\"hljs-title function_\">init</span>({\n  <span class=\"hljs-attr\">secret</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PAYLOAD_SECRET</span>,\n  <span class=\"hljs-attr\">mongoURL</span>: isProduction\n    ? process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">MONGODB_URI_PROD</span>\n    : process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">MONGODB_URI_DEV</span>,\n  <span class=\"hljs-attr\">mongoOptions</span>: {\n    <span class=\"hljs-attr\">user</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">MONGODB_USER</span>,\n    <span class=\"hljs-attr\">pass</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">MONGODB_PASSWORD</span>,\n    <span class=\"hljs-attr\">retryWrites</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-comment\">// AWS DocumentDB doesn&#x27;t support retryWrites</span>\n  }\n  ...\n  })</code></pre>",
        "authorID": "831425870270693376",
        "authorName": "JonnyF",
        "authorAvatar": null,
        "createdAtDate": 1675087637437
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How to deploy free?",
      "id": "1066984578104954950",
      "createdAt": 1674459347035
    },
    "messages": [
      {
        "content": "i searching this in channel, i only found a paid service..<br>nobody know?",
        "authorID": "996606499663118336",
        "authorName": "dapsipli",
        "authorAvatar": null,
        "createdAtDate": 1674459347035
      },
      {
        "content": "You can host the CMS in Google Cloud Run and it will either be free or within the free budget provided, which is enough for a long time. It&#x27;s true that a managed database in the cloud is expensive, you can get a free instance from MongoLAB.<br><br>You also need a server for the frontend. This is where free vorkers can show up badly, because it is the loading speed that matters. But you can generate a site in static (SSG) and put on Github Pages / CloudFlare Pages. That would be free, too.",
        "authorID": "190910246879756289",
        "authorName": "hgen",
        "authorAvatar": "9d45df29728ceeaf84c5d21834865421",
        "createdAtDate": 1674461066162
      },
      {
        "content": "It would be easier to help you if you described your problem in more detail.",
        "authorID": "190910246879756289",
        "authorName": "hgen",
        "authorAvatar": "9d45df29728ceeaf84c5d21834865421",
        "createdAtDate": 1674461164779
      },
      {
        "content": "MongoDB Atlas has a free tier. <br>Cloudinary also has a free tier and a Payload plugin.<br><br>With those two correctly configured and your media collections set to NOT save to the server&#x27;s disk, you could run it as a Railway app. If your usage is low this would fit in the free $5/mo credit they give you.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674464869623
      },
      {
        "content": "It&#x27;s an honor, bro.<br>I&#x27;m a website of a small company. <br>I think GCR is good.<br>You too?",
        "authorID": "996606499663118336",
        "authorName": "dapsipli",
        "authorAvatar": null,
        "createdAtDate": 1674467208035
      },
      {
        "content": "This site has a very large image capacity. I&#x27;m thinking of trying Moongodb after trying Google. Thank you, bro.",
        "authorID": "996606499663118336",
        "authorName": "dapsipli",
        "authorAvatar": null,
        "createdAtDate": 1674467293183
      },
      {
        "content": "Google Cloud has no managed mongodb. Btw managed DB is very expensive. Try Google Cloud + MongoDB Atlas (ex mongolab)",
        "authorID": "190910246879756289",
        "authorName": "hgen",
        "authorAvatar": "9d45df29728ceeaf84c5d21834865421",
        "createdAtDate": 1674467388034
      },
      {
        "content": "Oh, you&#x27;ll have to buy a CDN for a lot of images. It&#x27;s not very expensive, but it&#x27;s not free.",
        "authorID": "190910246879756289",
        "authorName": "hgen",
        "authorAvatar": "9d45df29728ceeaf84c5d21834865421",
        "createdAtDate": 1674467431524
      },
      {
        "content": "If that&#x27;s the case it&#x27;s even more reason to use a dedicated digital asset management platform like Cloudinary, Bynder or similar. Alternatively you could use the cloud storage plugin and have the images hosted on Azure, AWS or GCS blob storage.<br><br>Any way you slice it you&#x27;ll likely have to pay for image storage above a certain level. The benefit of a DAM is that they have built-in image optimisation &amp; resizing APIs which reduces the load on your Payload NodeJS instance because you just amend the image URL to get the different versions.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674467455552
      },
      {
        "content": "If you have a commercial site, it is better to pay a little money, but there will be SLA and some support.",
        "authorID": "190910246879756289",
        "authorName": "hgen",
        "authorAvatar": "9d45df29728ceeaf84c5d21834865421",
        "createdAtDate": 1674467482989
      },
      {
        "content": "Storage is generally quite cheap. It&#x27;s the compute to do image optimisation &amp; resampling that costs the money.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674467527777
      },
      {
        "content": "It strongly depends on the traffic and the requirements for the speed of static output.",
        "authorID": "190910246879756289",
        "authorName": "hgen",
        "authorAvatar": "9d45df29728ceeaf84c5d21834865421",
        "createdAtDate": 1674467602051
      },
      {
        "content": "My app is not connected to a DB,<br>If so, is Google cloud okay? <br>I think CDN should use cloudinary. <br>Now I know there&#x27;s a plug-in.<br>Sorry",
        "authorID": "996606499663118336",
        "authorName": "dapsipli",
        "authorAvatar": null,
        "createdAtDate": 1674467876638
      },
      {
        "content": "<blockquote>My app is not connected to a DB<br></blockquote>You need a mongodb instance to run payloadcms",
        "authorID": "190910246879756289",
        "authorName": "hgen",
        "authorAvatar": "9d45df29728ceeaf84c5d21834865421",
        "createdAtDate": 1674467911101
      },
      {
        "content": "Oh, is there a Mongo db locally?",
        "authorID": "996606499663118336",
        "authorName": "dapsipli",
        "authorAvatar": null,
        "createdAtDate": 1674467987446
      },
      {
        "content": "Indeed. As I mentioned, Cloudinary has a free tier... but if you host in Azure/AWS/GCS blob storage you&#x27;ll pay for storage regardless and you still have to do the optimisation somewhere. In those blob storage cloud providers the storage itself is pennies compared to the compute cost wherever you do the optimisation.<br><br>For small sites, my suggestion of Atlas + Cloudinary + Railway is viable for free. For anything big enough to be above the free usage limits you should be paying anyway... but that combo would likely still be a relatively cheap setup.<br><br>If you use NextJS and the <code>next/image</code> component for the front-end rendering of the content you can turn off the optimisation in Payload and let your NextJS app handle it via a Cloudinary image loader. Or, if you host in Vercel, you can let Vercel do the optimisation (but that would be expensive if you go over their quotas).",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674467995533
      },
      {
        "content": "Because I&#x27;ve used all the stacks you mentioned.<br>I think that would be better. <br>I understand that the free version of Railway can&#x27;t fill up a month. <br>How does that sound?",
        "authorID": "996606499663118336",
        "authorName": "dapsipli",
        "authorAvatar": null,
        "createdAtDate": 1674468157384
      },
      {
        "content": "You are partially correct about the free version of Railway. On the basic free version they have a runtime limit that is less than 1 month, however if you sign up for a developer account and input payment details you still get the $5/mo of free credit and it removes the runtime limitation.<br><br>You could easily run a low-mid usage Payload instance within the $5/mo free credit",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674468265757
      },
      {
        "content": "I&#x27;ve had a Strapi instance with Postgres database running in it for free before.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674468296948
      },
      {
        "content": "Okay, I&#x27;ll try it now.<br>Happy New Year",
        "authorID": "996606499663118336",
        "authorName": "dapsipli",
        "authorAvatar": null,
        "createdAtDate": 1674468489717
      }
    ],
    "messageCount": 19
  },
  {
    "info": {
      "name": "Adjusting the GraphQL API",
      "id": "1067369434311823440",
      "createdAt": 1674551103905
    },
    "messages": [
      {
        "content": "Hey, I want to add a runtime field to the graphql API for very basic profiling/tracing. Any pointers on how I could add an extension to express-graphql <a href=\"https://www.npmjs.com/package/express-graphql#providing-extensions\">https://www.npmjs.com/package/express-graphql#providing-extensions</a> ?",
        "authorID": "190191205907169280",
        "authorName": "altan",
        "authorAvatar": "6fe697550cadb7d4199a44e5bb05839d",
        "createdAtDate": 1674551103905
      },
      {
        "content": "This isn&#x27;t something we support currently. However, it looks like we possibly could. Feel free to submit a feature request, so we can discuss/prioritize with everyone. <br><br><a href=\"https://github.com/payloadcms/payload/discussions\">https://github.com/payloadcms/payload/discussions</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674750842100
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How to include upload drawer in custom field",
      "id": "1074535080149647410",
      "createdAt": 1676259527004
    },
    "messages": [
      {
        "content": "I am create a custom rich text editor i want to use image picker (same like default rich text editor)",
        "authorID": "589480760898093201",
        "authorName": "Qasim Ali",
        "authorAvatar": "9ed1c88c715db6238e6e81ebdfbf34bb",
        "createdAtDate": 1676259527004
      },
      {
        "content": "There&#x27;s a  <code>useListDrawer</code> hook that returns the <code>ListDrawer</code> component which is used throughout our admin UI. There&#x27;s no documentation around this yet and it&#x27;s not exported top-level so you may have to dig around for it&#x27;s import path. The only parameters are an array of collection slugs that you&#x27;d like to render in that drawer. <a href=\"https://github.com/payloadcms/payload/blob/3ebe7b4a7e739c48f7b13fa5b57395581b5e8ed1/src/admin/components/elements/ListDrawer/index.tsx\">https://github.com/payloadcms/payload/blob/3ebe7b4a7e739c48f7b13fa5b57395581b5e8ed1/src/admin/components/elements/ListDrawer/index.tsx</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676267945790
      },
      {
        "content": "Thank you so much sir  😊",
        "authorID": "589480760898093201",
        "authorName": "Qasim Ali",
        "authorAvatar": "9ed1c88c715db6238e6e81ebdfbf34bb",
        "createdAtDate": 1676302212290
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Exposing group and block types when generating types",
      "id": "1075432369823158312",
      "createdAt": 1676473457533
    },
    "messages": [
      {
        "content": "I want to write some generic mappings that maps from payload&#x27;s types to props for my frontend React components. Blocks and groups aren&#x27;t exposed at the top level, so I&#x27;m having to manually pick them out by unpacking arrays and extracting specific blocks. <br><br>Is it possible to expose these when generating types? Or is there a simpler way for me to define these types based on the generated typings?",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676473457533
      }
    ],
    "messageCount": 0
  },
  {
    "info": {
      "name": "Buttons on custom UI Component trigger default Save button",
      "id": "1066826023976575036",
      "createdAt": 1674421544785
    },
    "messages": [
      {
        "content": "Hello everyone,<br><br>I&#x27;m making a custom UI component that allows me to interface with OpenAI.<br><br>Any simple &lt;button&gt; I add, even though it just has a custom onClick handler, will trigger the Post&#x27; default Save button.<br><br>Any ideas why this might be and how to prevent it?<br><br>Thanks!",
        "authorID": "194944230194544641",
        "authorName": "batz",
        "authorAvatar": "af70980d50b6c46f61d0f990af697602",
        "createdAtDate": 1674421544785
      },
      {
        "content": "Buttons on custom UI Component trigger default Save button",
        "authorID": "194944230194544641",
        "authorName": "batz",
        "authorAvatar": "af70980d50b6c46f61d0f990af697602",
        "createdAtDate": 1674421572299
      },
      {
        "content": "Did you set type=button as an attribute on your button?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674432522644
      },
      {
        "content": "I didn&#x27;t",
        "authorID": "194944230194544641",
        "authorName": "batz",
        "authorAvatar": "af70980d50b6c46f61d0f990af697602",
        "createdAtDate": 1674501391288
      },
      {
        "content": "You&#x27;ll need to set the type on the button to <code>type=&quot;button&quot;</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type\">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674503185283
      },
      {
        "content": "cool, thanks!",
        "authorID": "194944230194544641",
        "authorName": "batz",
        "authorAvatar": "af70980d50b6c46f61d0f990af697602",
        "createdAtDate": 1674597726442
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Place custom fields in collection meta?",
      "id": "1072178378788057169",
      "createdAt": 1675697645614
    },
    "messages": [
      {
        "content": "Do we have access to the <code>collection-edit__meta</code> as a custom <code>admin: { position: ... }}</code> ?<br><br>I&#x27;d like to add a custom &quot;Preview URL&quot; and &quot;Published URL&quot; link/label to the bottom right collection meta... <br><br>Currently, it looks like I can add this to the <code>sidebar</code> ... but I&#x27;d like to use the bottom right meta instead.<br><br>Also, is it possible to set a position weight for items in the sidebar, so that items can be placed above/below other items ... when using plugins to introduce fields to collections, it&#x27;s hard to keep the order of items synchronized.",
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675697645614
      },
      {
        "content": "It would be nice to have more control on the meta like you&#x27;re saying. I would open a github discussion as a feature request. I think others would be interested in this as well. We have the <code>admin.position</code> property, it could be extended to push fields to meta I would think.<br><br>As for ordering fields, they just come in the order that they appear in the config. I&#x27;m unsure why you would need a <code>weight</code> property instead.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675699911796
      },
      {
        "content": "@dribbens if I modify the collection via a handful of plugins, and then also add fields to the collection config itself ... it becomes a pain to figure out where my field is going to be placed.<br><br>Say for example I have two plugins which automatically attach fields to every collection in the sidebar ... then in a specific collection I want to add a couple fields to the sidebar, but I want the first sidebar field on the top, and the second on the bottom ... with my plugins sidebar fields in the middle.<br><br>Plugin 1 - &quot;user history&quot;, which adds fields for &quot;Created By&quot; and &quot;Updated By&quot;<br>Plugin 2 - &quot;slugs&quot; which adds auto-generated slugs to my collections<br>Collection A - adds a relationship to my image uploads to the sidebar, and also adds a relationship to a Categories collection, and a Tags collection<br><br>I&#x27;d like to have the Category and Tags on the top, the Slug, the Featured Image, then Created By and Updated By<br><br>This is a bit of an acrobatic feat with the current &quot;in whatever order they were added&quot; solution - a simple weighting system would allow me to prioritize the sidebar items and they could then be sorted by this ... using a simple default of say 10 or 20 for fields that don&#x27;t explicitly specify the weight, allows for other fields to go before or after them easily",
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675701223885
      },
      {
        "content": "I definitely see your point! I&#x27;m considering how we should go about this.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675981083824
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Disable post request for other domains except frontend domain",
      "id": "1068406640635805706",
      "createdAt": 1674798393163
    },
    "messages": [
      {
        "content": "I have enabled guest posts for one of my collections <code>/api/posts</code> but I am worried about people sending mass post requests to this route. In my config file, I added <code>cors: [process.env.PAYLOAD_PUBLIC_NEXT_URL].filter(Boolean),</code>  but I can still make post requests using services like Postman directly to <code>/api/posts</code>. <br><br>Is it possible to only allow post requests from my front end url?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674798393163
      },
      {
        "content": "I think you&#x27;re right in setting up CORS, but the requests don&#x27;t originate from a page with an URL so CORS does not apply with Postman IIRC.",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674825640536
      },
      {
        "content": "Can you read <code>req.origin</code> from access control hooks and whitelist only certain domains?",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1674828103671
      },
      {
        "content": "This page might be useful to you as well: <a href=\"https://payloadcms.com/docs/production/preventing-abuse\">https://payloadcms.com/docs/production/preventing-abuse</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674829151001
      },
      {
        "content": "@jacobsfletch by access control hooks you mean these hooks? <a href=\"https://payloadcms.com/docs/hooks/collections\">https://payloadcms.com/docs/hooks/collections</a>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674837130800
      },
      {
        "content": "@Jarrod thank you, yeah, I read that last night, I am planning to also implement recaptcha but that would be next step",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674837231138
      },
      {
        "content": "@jacobsfletch oh I see what you mean, so something like this on create",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674838747826
      },
      {
        "content": "<pre><code class=\"hljs\">create: ({ req }) =&gt; {\n  console.log(req.hostname)\n  // if it is my domain set it to true\n  return true\n},</code></pre>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674838780681
      },
      {
        "content": "looks like we dont have <code>req.origin</code> <a href=\"https://expressjs.com/en/api.html#req\">https://expressjs.com/en/api.html#req</a> , there is a <code>req.hostname</code> but this always returns the backend part",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674842711332
      },
      {
        "content": "what about <a href=\"https://expressjs.com/en/api.html#req.originalUrl\">https://expressjs.com/en/api.html#req.originalUrl</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674842918221
      },
      {
        "content": "yeah that returns the api route but doesnt include the frontend domain",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674843307559
      },
      {
        "content": "Okay, here is what I did in case someone else need to implement something similar. <br>I created a new API route in next.js <code>/api/submission</code>  to send my post submissions and where I send the post request to Payload and included a secret key in the header<br><br><pre><code class=\"hljs\">method: ‘POST’,\nheaders: {\n    ‘Content-Type’: ‘application/json’,\n    secret: `${process.env.PAYLOAD_SUBMISSION_SECRET}`,\n},\n...</code></pre><br><br>In the server side, I get that secret key and compare it before creating a post:<br><br><pre><code class=\"hljs\">create: ({ req }) =&gt; {\n if (req.user) return true\n if (\n   req.headers.secret === process.env.PAYLOAD_SUBMISSION_SECRET\n ) return true\n},</code></pre><br><br>This way if anyone sends a post requests, they are blocked unless it is coming from front end or if they add that secret code but because using next.js api route,  abusers would not see the header has a secret key!",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674844644777
      },
      {
        "content": "and once again, I just love Payload !",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674844741591
      },
      {
        "content": "<a href=\"https://tenor.com/view/love-you-so-much-gif-25114698\">https://tenor.com/view/love-you-so-much-gif-25114698</a>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674844760887
      },
      {
        "content": "Great idea!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674847711858
      }
    ],
    "messageCount": 14
  },
  {
    "info": {
      "name": "Trying to implement a custom SlateJS element following the custom-website-series.",
      "id": "1063517008911667260",
      "createdAt": 1673632614115
    },
    "messages": [
      {
        "content": "I have everything set up the same, but I keep getting this error on the front-end. What is set up differently in the custom-website series that allows one to use useSlate in their elements/leaves?",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1673632614115
      },
      {
        "content": "It is also used in the link element in the current build of payload",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1673633130580
      },
      {
        "content": "you should be able to <code>useSlate</code> for sure",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443021802
      },
      {
        "content": "do you have a local copy of Slate installed?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443039190
      },
      {
        "content": "it must be on the same version otherwise your <code>useSlate</code> hook could be using a different copy of context vs. the internal one that Payload uses. You also might try and add a webpack alias to enforce that Webpack always uses the same copy of Slate, which would alleviate this even if you did have multiple copies installed",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443077196
      },
      {
        "content": "Ok I will double check those and get back to you on that! Thanks for the tip",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675484702924
      },
      {
        "content": "hey @blupandaman , wanted to ask what your solution was to this as I am getting the same error.<br><br>I am starting a project and using the PayloadCMS website repo as a starting point. The <code>useSlate</code> hook is called in the richText field in the video Button component and I am getting this error whenever the Rich Text Editor is rendered in the admin.<br><br>Edit: I believe this was caused by a <code>slate</code> version mismatch as pointed out by @jmikrut . I was able to resolve by uninstalling <code>slate</code> and <code>slate-react</code>. Thanks for the help!",
        "authorID": "674843534616166420",
        "authorName": "reepicheep05",
        "authorAvatar": null,
        "createdAtDate": 1676422222634
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "hooks on { Select } from 'payload/components/forms'",
      "id": "1073633812036198471",
      "createdAt": 1676044647941
    },
    "messages": [
      {
        "content": "I have the following DOM element select:<br><pre><code class=\"hljs\">&lt;select title=&quot;select&quot; value={selectedOption} onChange={(e) =&gt; handleChange(e, path)}&gt;\n    {options.map((option, index) =&gt; &lt;option value={option}&gt;{option}&lt;/option&gt;)}\n  &lt;/select&gt;</code></pre><br><br>The above works as expected<br><br>I&#x27;m trying to use payload&#x27;s Select, as referenced in the subject title. I imagine hooks is the way to manage state, as onChange isn&#x27;t provided - but they aren&#x27;t ever triggered?<br><br><pre><code class=\"hljs\">&lt;Select name=&#x27;select&#x27; label=&quot;my select&quot; options={options} hooks={{\n    afterChange: [() =&gt; console.log(&#x27;afterChange&#x27;)],\n    beforeChange: [() =&gt; console.log(&#x27;beforeChange&#x27;)],\n    afterRead: [() =&gt; console.log(&#x27;afterRead&#x27;)],\n    beforeValidate: [() =&gt; console.log(&#x27;beforeValidate&#x27;)],\n  }} /&gt;</code></pre><br><br>Am I missing something? I would like to set a default value from <code>useFormFields</code> and update the selected value onChange (as achieved in the first example)",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676044647941
      },
      {
        "content": "AH!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676049931344
      },
      {
        "content": "I linked the wrong import path in our last discussion. 1 min",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676049940381
      },
      {
        "content": "Ok so you will want to import the Select component like so <code>import SelectInput from &#x27;payload/dist/admin/components/forms/field-types/Select/Input&#x27;;</code> (see the component here: <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Select/Input.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Select/Input.tsx</a>)<br><br>This will give you the styled component - so it looks and feels like other payload select components. <br><br>What you need to do is implement similar functionality seen in this file in your custom Field component: <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Select/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Select/index.tsx</a><br><br>You can see how that file imports the <code>&lt;SelectInput /&gt;</code> which is the one you will import, all of the state management (getting and setting options for your custom select) will live in a file that then passes props (onChange, value, options, etc) down to the SelectInput component.<br><br>I hope this makes sense and steers you in the right direction!!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676050440289
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Select Field Limiting Records",
      "id": "1070373063700533389",
      "createdAt": 1675267224956
    },
    "messages": [
      {
        "content": "Hi All,<br><br>New to payload<br><br>I have created a select field with multiple relationships. It is all working as expected except that I am getting a maximum of about 20 records back in the select field. There are a lot more records in the collection(s) .<br><br>How can i get payload to retrieve and display all the records from the mongo collection(s) in the select dropdown?<br><br>Please note that in the attached code/file, there are many relationships. I have tried this with a single relationship with the same outcome.",
        "authorID": "999829636890492948",
        "authorName": "raka",
        "authorAvatar": null,
        "createdAtDate": 1675267224956
      },
      {
        "content": "They should incrementally show if you scroll to the bottom of the select field, do they load in when you reach the bottom?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675271359898
      },
      {
        "content": "The reason for this is performance, it is not performant to load 1000 relationships on load, so instead we allow searching inside the field, or scrolling to the bottom to trigger another set of documents to load in",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675271417253
      },
      {
        "content": "facing same issue even after scroll to bottom its only loading 19 records",
        "authorID": "1045313947106029588",
        "authorName": "redhorse7422",
        "authorAvatar": null,
        "createdAtDate": 1675321605620
      },
      {
        "content": "Thank you Jarrod.<br><br>Seems to be an issue with my pc. I installed &amp; ran the project on a different pc and it worked as expected.",
        "authorID": "999829636890492948",
        "authorName": "raka",
        "authorAvatar": null,
        "createdAtDate": 1675333982887
      },
      {
        "content": "What browser / OS are you both on?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675338454100
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "How to show video preview for video files?",
      "id": "1064962772053528656",
      "createdAt": 1673977310909
    },
    "messages": [
      {
        "content": "I am trying to create a gallery with all available file types. I tried to search for a solution but unable to find any lead on showing previews for the videos.  <br><br>How can I achieve this task?<br><br><code>import { CollectionConfig } from &#x27;payload/types&#x27;;\nimport path from &#x27;path&#x27;;\n\nexport const Media: CollectionConfig = {\n  slug: &#x27;media&#x27;,\n  upload: {\n    staticDir: path.resolve(__dirname, &#x27;../../media&#x27;),\n    imageSizes: [\n      {\n        name: &#x27;thumbnail&#x27;,\n        width: 400,\n        height: 300,\n        position: &#x27;centre&#x27;,\n      },\n      {\n        name: &#x27;card&#x27;,\n        width: 768,\n        height: 1024,\n        position: &#x27;centre&#x27;,\n      },\n      {\n        name: &#x27;tablet&#x27;,\n        width: 1024,\n        height: null,\n        position: &#x27;centre&#x27;,\n      },\n    ],\n    adminThumbnail: &#x27;thumbnail&#x27;,\n    mimeTypes: [&#x27;image/*&#x27;, &#x27;video/*&#x27;, &#x27;audio/*&#x27;, &#x27;application/pdf&#x27;],\n  },\n  fields: [],\n};</code>",
        "authorID": "943472469057077261",
        "authorName": "uxdkhan",
        "authorAvatar": "b6daf4d8150b4d38e28fdc79b83f09e2",
        "createdAtDate": 1673977310909
      },
      {
        "content": "As of right now, Payload does not generate thumbnails for video file types. That being said, I think this would be a great feature for us to add.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1673982599980
      },
      {
        "content": "Thanks for replying. that would be really cool. <br><br>is it possible to do it using UI field? <br>if yes, How can I pass in the url of uploaded file to the React component?<br><br>Sorry, documentation is not clear on that.",
        "authorID": "943472469057077261",
        "authorName": "uxdkhan",
        "authorAvatar": "b6daf4d8150b4d38e28fdc79b83f09e2",
        "createdAtDate": 1674130905181
      },
      {
        "content": "I imagine if you create a UI field that renders a video player, you may be able to get a thumbnail that way.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674144601244
      },
      {
        "content": "For an example of a UI field, you can look here: <a href=\"https://github.com/payloadcms/public-demo/blob/c82bcade77ca1c3648c9adf46c183689f1988027/src/collections/Categories.ts#L28\">https://github.com/payloadcms/public-demo/blob/c82bcade77ca1c3648c9adf46c183689f1988027/src/collections/Categories.ts#L28</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674144645128
      },
      {
        "content": "Docs on how to do custom components here: <a href=\"https://payloadcms.com/docs/admin/components#fields\">https://payloadcms.com/docs/admin/components#fields</a>.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674144698831
      },
      {
        "content": "Thanks @denolfe : That&#x27;s is helpful.",
        "authorID": "943472469057077261",
        "authorName": "uxdkhan",
        "authorAvatar": "b6daf4d8150b4d38e28fdc79b83f09e2",
        "createdAtDate": 1674243062857
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Using a React library custom component - ES Module not supported",
      "id": "1073208167246331944",
      "createdAt": 1675943166315
    },
    "messages": [
      {
        "content": "I want to use a React library component (a local one in our monorepo, but I have the same issue using swiper/react) in a <code>type: &#x27;ui&#x27;</code> field. I have also been able to reproduce this with the create payload app CLI<br><br>If I have the import in code and run serve, I get the following error:<br><br><code>Error [ERR_REQUIRE_ESM]: require() of ES Module not supported</code><br><br>However, if I remove the import and run serve -- once webpack kicks in, I can re-introduce the import and it works as expected.<br><br>I think it&#x27;s related to my tsconfig, and possibly I need to exclude that import somehow when ts-node runs. Any ideas?",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675943166315
      },
      {
        "content": "This seems to work using material UI (<a href=\"https://mui.com/\">https://mui.com/</a>) -- could it be related to how the library is bundled/defined?",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675943281905
      },
      {
        "content": "Is the package you&#x27;re importing ESM only?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056338543
      },
      {
        "content": "Yeah that was it in the end. The library stopped supporting CJS at a certain version. Downgrading it allowed me to use it in the payload admin panel.",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676281457406
      },
      {
        "content": "I was hoping to build out a live component preview within the admin panel, but I can&#x27;t get approval on downgrading this and another library to older versions. Is the payload team thinking of supporting ESM only libs?",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676281799505
      },
      {
        "content": "Since your Payload configuration file is loaded from the Payload source code (which are CJS), the error occurs when you try to import a ESM module (CJS can&#x27;t import ESM, while ESM can import both CJS (through dynamic imports) and ESM). Payload could provide both a ESM and CJS distribution which have been up for discussion. <br><br>In the meantime though, you can use a bundler and transpile the ESM-only library into CJS for you. For example Vite in &quot;library&quot; mode and build target as &quot;cjs&quot;.",
        "authorID": "397709884474261514",
        "authorName": "dsod",
        "authorAvatar": "fbb82213566f145908e03b5a89013a0c",
        "createdAtDate": 1676293025649
      },
      {
        "content": "Thanks for the tip. I&#x27;ll look into it! 😁",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676307032132
      },
      {
        "content": "@sam  any looks with getting your ESM package to output in CJS?",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676433867448
      },
      {
        "content": "No I haven&#x27;t had chance to look at it yet, sorry!",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676462605834
      },
      {
        "content": "@sam can we check out your tsconfig?",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676470030673
      },
      {
        "content": "oops this was answered",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676470054396
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "Can't create a new record in admin panel -- getting 403",
      "id": "1069075409293029416",
      "createdAt": 1674957840036
    },
    "messages": [
      {
        "content": "Payload noob here. Created my first collection and first user - trying to create a record in the collection but getting a 403 response from the server <br><pre><code class=\"hljs\">{&quot;errors&quot;:[{&quot;message&quot;:&quot;You are not allowed to perform this action.&quot;}]}</code></pre><br>Am I missing something? Do I have to explicitly set access controls or user roles before I can edit something from the admin panel?",
        "authorID": "395022086000869386",
        "authorName": "austinyb",
        "authorAvatar": "b01ffe3f58659c2f2766d93012c39a77",
        "createdAtDate": 1674957840036
      },
      {
        "content": "On this page: <a href=\"https://payloadcms.com/blog/build-your-own-rbac\">https://payloadcms.com/blog/build-your-own-rbac</a> it says &quot;Note: Access functions default to requiring a logged-in user. This is why <code>create</code> does not need to be defined for this example, since we want any logged in user to be able to create an order.&quot;",
        "authorID": "395022086000869386",
        "authorName": "austinyb",
        "authorAvatar": "b01ffe3f58659c2f2766d93012c39a77",
        "createdAtDate": 1674958408718
      },
      {
        "content": "This leads me to believe I should be able to create the resource without defining access controls, but this isn&#x27;t the case",
        "authorID": "395022086000869386",
        "authorName": "austinyb",
        "authorAvatar": "b01ffe3f58659c2f2766d93012c39a77",
        "createdAtDate": 1674958426102
      },
      {
        "content": "From looking at server logs, i&#x27;m getting an error <br><pre><code class=\"hljs\">UnauthorizedError: Unauthorized, you must be logged in to make this request.\nat new ExtendableError (/app/node_modules/payload/src/errors/APIError.ts:26:11)\n...</code></pre>",
        "authorID": "395022086000869386",
        "authorName": "austinyb",
        "authorAvatar": "b01ffe3f58659c2f2766d93012c39a77",
        "createdAtDate": 1674958718468
      },
      {
        "content": "Solved <a href=\"https://discord.com/channels/967097582721572934/1047200612699357184\">https://discord.com/channels/967097582721572934/1047200612699357184</a>",
        "authorID": "395022086000869386",
        "authorName": "austinyb",
        "authorAvatar": "b01ffe3f58659c2f2766d93012c39a77",
        "createdAtDate": 1674959200070
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Change admin url",
      "id": "1069354467687927859",
      "createdAt": 1675024372742
    },
    "messages": [
      {
        "content": "Is it possible to change the admin url?<br>Default right now is <code>/admin</code>, what if I want to change it to <code>/login</code> or <code>/custom-admin-login</code>?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675024372742
      },
      {
        "content": "check the <code>routes</code> key in payload config. <a href=\"https://payloadcms.com/docs/configuration/overview\">https://payloadcms.com/docs/configuration/overview</a>",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675048598374
      },
      {
        "content": "great, thanks, I missed that in the doc",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675094876768
      },
      {
        "content": "<pre><code class=\"hljs\">routes: {\n   admin: &#x27;/custom-admin-login&#x27;,\n},</code></pre>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675094895498
      },
      {
        "content": "here is what I added in <code>payload.config.ts</code> in case someone else comes across this question",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675094911686
      },
      {
        "content": "Thanks mate, this helps me as well. Cheers",
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1675098691100
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Prettier/Editor settings for contributing to source code",
      "id": "1069147833795608586",
      "createdAt": 1674975107383
    },
    "messages": [
      {
        "content": "Is there a default configuration I should be using to contribute to the source code? <br><br>I edited one of the files to play around and when saving I&#x27;ve been getting lots of these changes in the file.<br><br>So I don&#x27;t know if there&#x27;s a bit of documentation on this that I missed or we could add either .vscode/settings.json or a prettier config? I can also do it per workspace on my end of course",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674975107383
      },
      {
        "content": "Payload core uses .eslint formatting rules, are you using prettier to format?",
        "authorID": "618601682460344334",
        "authorName": "Kalon-Robson",
        "authorAvatar": "416a5969efb8ca3e0c40f9b37f5e2bf6",
        "createdAtDate": 1675192455839
      },
      {
        "content": "Yeah, I disabled format on save and changed format to changes only...maybe my vscode was bugged previously as it shouldn&#x27;t have used &quot; over &#x27;...anyway its magically resolved no after restarting vscode 🌈 <br><br>Cheers",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1675226075316
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Cannot read properties of undefined (reading 'thumbnail')",
      "id": "1073556897413746698",
      "createdAt": 1676026310066
    },
    "messages": [
      {
        "content": "Regarding imageSizes for the upload field type, my configuration is following <br><pre><code class=\"hljs\">upload: {\n        adminThumbnail: &#x27;card&#x27;,\n        staticURL: &#x27;/assets&#x27;,\n        staticDir: &#x27;assets&#x27;,\n        disableLocalStorage: true,\n        imageSizes: [\n            {\n                name: &#x27;thumbnail&#x27;,\n                width: 300,\n                height: null,\n                position: &#x27;centre&#x27;,\n            },\n        ],\n    },</code></pre><br>I add new entry to the collection, upload the image, but right after the upload when on this page <code>admin/collections/people-avatars/63e61ebc1b7ee8328d4ef20b</code> I get the following error <code>Cannot read properties of undefined (reading &#x27;thumbnail&#x27;)</code>. In the background if I call the api I see both original image and thumbnail image are generated and resized properly and I can access them both (they are stored in the S3). Grid view as well works fine and I see the image there correctly, but as soon as I try to open the edit/view window in the CMS I get the same error",
        "authorID": "1057285936951607326",
        "authorName": "gruja",
        "authorAvatar": null,
        "createdAtDate": 1676026310066
      },
      {
        "content": "i also have this problem, Elliot from the payload team told me it&#x27;s a cloud plugin bug that&#x27;s being worked on. happens in the latest version of payload",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1676026565858
      },
      {
        "content": "@gruja @minanaro_3776  A new version of the plugin-cloud-storage was released, give that a try. NOTE: there is an additional peer dependency that will need to be installed. Details in the release notes here: <a href=\"https://github.com/payloadcms/plugin-cloud-storage/releases/tag/v1.0.14\">https://github.com/payloadcms/plugin-cloud-storage/releases/tag/v1.0.14</a><br><br>Let me know if you run into any issues.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676057293855
      },
      {
        "content": "thanks a lot Elliot! will try",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1676057307435
      },
      {
        "content": "working perfectly @denolfe great work!",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1676106841271
      },
      {
        "content": "works great, thank you guys",
        "authorID": "1057285936951607326",
        "authorName": "gruja",
        "authorAvatar": null,
        "createdAtDate": 1676283546897
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Azure Deployment",
      "id": "1067987094212980786",
      "createdAt": 1674698365501
    },
    "messages": [
      {
        "content": "Hi all,<br><br>Is it even possible to deploy payload cms to Azure App Service? We have been trying to achieve this following documentation and some nodejs deployment to azure tutorials but we haven&#x27;t been able to success so far. Any help will be appreciated.",
        "authorID": "286736082928664576",
        "authorName": "emmanuel",
        "authorAvatar": "793f0d53664a9bcc276e085f9737dab9",
        "createdAtDate": 1674698365501
      },
      {
        "content": "Since Payload is just a node.js app, if the platform supports it, there shouldn&#x27;t be any issue.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674750104327
      },
      {
        "content": "We have clients on Azure, not sure if they&#x27;re using Azure App Service or not though",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674750135583
      },
      {
        "content": "thanks for the answer, at first we were trying to deploy it in Azure App Service (windows), because the company has some available slots for testing purposes, we were not able to make it work, so we did switch to Linux and worked; also we did with docker and also work in case someone (who is not a devops expert) is facing the same issue.",
        "authorID": "286736082928664576",
        "authorName": "emmanuel",
        "authorAvatar": "793f0d53664a9bcc276e085f9737dab9",
        "createdAtDate": 1675126926027
      },
      {
        "content": "You should be able to use this Dockerfile or similar <a href=\"https://payloadcms.com/docs/production/deployment#docker\">https://payloadcms.com/docs/production/deployment#docker</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675127612909
      },
      {
        "content": "yes, I used that one as base, I just needed to modify it a bit as I added some environment variables. Thank you!",
        "authorID": "286736082928664576",
        "authorName": "emmanuel",
        "authorAvatar": "793f0d53664a9bcc276e085f9737dab9",
        "createdAtDate": 1675201667364
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "How to save media files in different folders?",
      "id": "1068408761204617277",
      "createdAt": 1674798898746
    },
    "messages": [
      {
        "content": "I have a media collection which I use to save all media files. I want to organize the files into subfolders. Currently, all files are saved in folder: media<br><br>How can I save files from collection-1 to media/collection-1 when using media relationship.",
        "authorID": "943472469057077261",
        "authorName": "uxdkhan",
        "authorAvatar": "b6daf4d8150b4d38e28fdc79b83f09e2",
        "createdAtDate": 1674798898746
      },
      {
        "content": "I think you&#x27;ll want to create a new media collection, named something else. When you set up the new collection, you can define the save location. <a href=\"https://payloadcms.com/docs/upload/overview#uploading-files\">https://payloadcms.com/docs/upload/overview#uploading-files</a>",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674825207906
      },
      {
        "content": "I see what you are getting at @uxdkhan, like how wordpress separates folders by year and so on. I think you should open a github discussion and we can discuss this further there!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674829284838
      },
      {
        "content": "Thanks guys.<br>Yes, I feel that is what payload is really  missing. <br>I will open discussion in Github.",
        "authorID": "943472469057077261",
        "authorName": "uxdkhan",
        "authorAvatar": "b6daf4d8150b4d38e28fdc79b83f09e2",
        "createdAtDate": 1674839380115
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Is there a way to count documents without retrieving them ?",
      "id": "1068229167700770856",
      "createdAt": 1674756080318
    },
    "messages": [
      {
        "content": "So far what i need to do is <br><pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">find</span>({ <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;my-collection&quot;</span>, <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-number\">1</span> });\n<span class=\"hljs-keyword\">const</span> count = data.<span class=\"hljs-property\">totalDocs</span></code></pre><br><br>and I was wondering if there is anything like <br><pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">count</span>({ <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;my-collection&quot;</span> });</code></pre>",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1674756080318
      },
      {
        "content": "You have direct access to the Mongoose model which has <code>countDocuments</code>. I believe something like <code>payload.collections[&#x27;my-collection&#x27;].Model.countDocuments({});</code> should work.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674756926726
      },
      {
        "content": "I was hoping not to have to access the DB directly, but it will work for now, thank you! <br><br>Any plans to add shortcuts like a <code>count</code> method in the future?",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1674757193944
      },
      {
        "content": "Well, this is still through payload, not direct DB access. I guess I&#x27;m unclear on what you mean.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674757360889
      },
      {
        "content": "Payload uses the Mongoose models under the hood, it&#x27;s just exposed on <code>.Model</code> for conveniences - great for instances like this",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674757401222
      },
      {
        "content": "No plans currently to have a count method. Not against it though. Feel free to submit a feature request, so we can discuss/prioritize with everyone.<br><br><a href=\"https://github.com/payloadcms/payload/discussions\">https://github.com/payloadcms/payload/discussions</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674757494847
      },
      {
        "content": "Got it, thank you!",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1674824828737
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Cors issue when deploying to Ubuntu 20.04 VPS",
      "id": "1074094192575389836",
      "createdAt": 1676154411215
    },
    "messages": [
      {
        "content": "I am trying to set up a payload cms on a Ubuntu VPS with nginx as reverse proxy.<br>I am getting to the &quot;first user registration&quot; loading page.<br>Currently set <pre><code class=\"hljs\">cors: &#x27;*&#x27;</code></pre>  as wildcard in the payload.config.ts and i still get a cors error (already tried to whitelist my_domain.com in every possible way - http/https/www etc.):<br><pre><code class=\"hljs\">Access to fetch at &#x27;http://localhost:3000/api/users/me&#x27; from origin &#x27;https://www.my_domain.com&#x27; has been blocked by CORS policy: No &#x27;Access-Control-Allow-Origin&#x27; header is present on the requested resource. If an opaque response serves your needs, set the request&#x27;s mode to &#x27;no-cors&#x27; to fetch the resource with CORS disabled.</code></pre><br>The network tab looks like in the image. In the first fetch there is the wildcard Access-Allow-Origin: &#x27;*&#x27; Header, in the second (failed) fetch there is none.<br><br>Do i need to set the header manually in the nginx config? I tried something, but that also didn&#x27;t work .<br><br>Currently on payload version 1.6.7",
        "authorID": "189202872800378881",
        "authorName": "bobbyZ",
        "authorAvatar": "f0988915755cddd9a231cf1afaafea65",
        "createdAtDate": 1676154411215
      },
      {
        "content": "Solved by deleting serverURL prop in the payload.config.ts file.",
        "authorID": "189202872800378881",
        "authorName": "bobbyZ",
        "authorAvatar": "f0988915755cddd9a231cf1afaafea65",
        "createdAtDate": 1676230654339
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "RichText - Any way to add left-center-right alignment buttons?",
      "id": "1064332447967363112",
      "createdAt": 1673827029936
    },
    "messages": [
      {
        "content": "Seems like a default feature in SlateJS, can&#x27;t narrow down where in Payload source the hand-off to Slate is to trace it back. Is it even possible?",
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1673827029936
      },
      {
        "content": "only reference I see to alignment: <a href=\"https://github.com/payloadcms/payload/issues/119#issuecomment-811111727\">https://github.com/payloadcms/payload/issues/119#issuecomment-811111727</a>",
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1673827174948
      },
      {
        "content": "Hi @see.ess, it is completely possible to add left/center/right align options by adding them as <strong>custom leaves</strong>. The custom-website-series by @jmikrut has a good example of how to set these up <a href=\"https://github.com/payloadcms/custom-website-series/tree/master/components/RichText\">https://github.com/payloadcms/custom-website-series/tree/master/components/RichText</a><br><br>And the docs on how to do this is here: <a href=\"https://payloadcms.com/docs/fields/rich-text#building-custom-elements-and-leaves\">https://payloadcms.com/docs/fields/rich-text#building-custom-elements-and-leaves</a>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673865569440
      },
      {
        "content": "I appreciate your help. Clearly should&#x27;ve RTFM instead of digging through source 😅",
        "authorID": "398939985773854742",
        "authorName": "see.ess",
        "authorAvatar": "d1c3ebf237e0b1471b75095da8902dd5",
        "createdAtDate": 1673899487164
      },
      {
        "content": "Hey Cody, I&#x27;ve also been trying to build text alignment into my project. I have a solution but it&#x27;s not really very workable long - term, would you be willing to share a gist of what you have done with your implementation?",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1674631725496
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Why querying on the 2nd level not working?",
      "id": "1075352738696798250",
      "createdAt": 1676454471993
    },
    "messages": [
      {
        "content": "I use this query to get a collection record, why is it not working?<br><br>{<br>          &quot;location.locationGroup.title&quot;: {<br>            equals: searchParams.locationGroup,<br>          }<br>}",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676454471993
      },
      {
        "content": "If you console log searchParams.locationGroup, what do you get?<br><br>Can you share the config for this location field on the collection you are querying",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676464030466
      },
      {
        "content": "I double check the searchParams.locationGroup, its showing the right value. <br><br>Project Collection:<br><a href=\"https://pastebin.com/dxc0cpzc\">https://pastebin.com/dxc0cpzc</a><br><br>Location Collection:<br><a href=\"https://pastebin.com/bkiJDdkm\">https://pastebin.com/bkiJDdkm</a><br><br>Location Group Collection:<br><a href=\"https://pastebin.com/5KHmsJWn\">https://pastebin.com/5KHmsJWn</a><br><br>I also have another query that looking for location.title, it works fine, I notice that only when I try to go 1 level deep, it doesn&#x27;t work.",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676471806461
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Interesting case for type inference",
      "id": "1071471648051572816",
      "createdAt": 1675529147876
    },
    "messages": [
      {
        "content": "I have some reusable <code>FieldHook</code>s where I am doing for example:<br><pre><code class=\"hljs ts\">payload.<span class=\"hljs-title function_\">findByID</span>({\n  <span class=\"hljs-attr\">collection</span>: req.<span class=\"hljs-property\">collection</span>.<span class=\"hljs-property\">config</span>.<span class=\"hljs-property\">slug</span>,\n  ...\n})</code></pre><br>Because of the new type inference scheme, which I do like very much, <code>req.collection.config.slug</code> no longer fits into the <code>collection</code> parameter of payload query operations:<br><pre><code class=\"hljs\">Type &#x27;string&#x27; is not assignable to type &#x27;&quot;users&quot; | ...&#x27;.ts(2322)\nThe expected type comes from property &#x27;collection&#x27; which is declared here on type &#x27;Options&lt;&quot;users&quot; | ...&gt;&#x27;</code></pre><br>Marking it <code>as any</code> solves the problem for now, but curious if this might be something worth looking into.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675529147876
      },
      {
        "content": "Post weekend bump (;",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675782822535
      },
      {
        "content": "Ok so it sounds like <code>req.collection.config.slug</code> is typed as a generic string, but the local API will <em>only</em> except the exact slugs of your collections (&quot;users&quot;, etc). Without looking at the code, this may be able to get resolved by improving the types at the hook-level to be a union of collection slugs. For now you might be available to import the slugs from your generated types to replace your <code>as any</code> type assertion.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676269120245
      },
      {
        "content": "Exactly. The goal is that the type of <code>req.collection.config.slug</code> is already that union, rather than remaining <code>string</code>.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1676293947857
      },
      {
        "content": "It would be great if that same typing could be applied to <code>relationTo</code> as well.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1676294060712
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Collection objects not showing",
      "id": "1073117141609496586",
      "createdAt": 1675921464112
    },
    "messages": [
      {
        "content": "Hi guys, all of the docs under one collection are suddenly not showing up for me within the CMS<br><br>They still exist in the DB, and still return results as expected when queried via API<br><br>This occurred after establishing a relationship field within another collection, accidentally hitting &#x27;create new page&#x27; within that relationship field, then backing out of the create new page dialogue without doing anything<br><br>Restarting the server does not resolve the issue",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675921464112
      },
      {
        "content": "on v1.6.7",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675922516041
      },
      {
        "content": "creating a new item in the collection will show up just fine, it&#x27;s just the ones prior that don&#x27;t appear",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675922858743
      },
      {
        "content": "upon closer inspection the items that don&#x27;t show up are missing the _status value in the db - manually navigating to the item via collection and re-publishing will have it re-appear in the collection<br><br>so it seems i&#x27;ve solved this one myself 🙂",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675922924169
      },
      {
        "content": "but still a strange thing to occur",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675922930107
      },
      {
        "content": "Did you happen to upgrade from a &lt; 1.6.x version of payload?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675973690082
      },
      {
        "content": "You would need to run the migration script mentioned in the changelog if so 👍 <br><br><a href=\"https://github.com/payloadcms/payload/releases/tag/v1.6.1\">https://github.com/payloadcms/payload/releases/tag/v1.6.1</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675973714741
      },
      {
        "content": "strangely enough i just went from 1.6.4  to 1.6.7",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675990029967
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Is Payload CMS suitable for building a social app?",
      "id": "1067407373754454086",
      "createdAt": 1674560149373
    },
    "messages": [
      {
        "content": "Hello everyone. I&#x27;m new to Payload CMS and I&#x27;m liking it so far. I&#x27;m looking for an easy way to build an API and an admin dashboard for a social app where basically there are users and they can interact with each other, add each other to their friend lists, chat, search, upload photos, etc. <br><br>It&#x27;s seems everything is possible with Payload CMS but I wonder if there would be any drawbacks like performance issues, difficulties in continuous deployment, migrations, technical limitations of adding features that Payload CMS is not meant to support, vendor lock-in, etc.",
        "authorID": "965296940432646264",
        "authorName": "Emre Erdogan",
        "authorAvatar": null,
        "createdAtDate": 1674560149373
      },
      {
        "content": "Payload is perfectly suitable for this task. <br><br><blockquote>performance<br></blockquote>The stack itself (node.js, mongoDB) has proven to be very performant, so no concerns there. We actually have a leg up here with how we do relationships compared to other CMS out there.<br><br><blockquote>continuous deployment<br></blockquote>Payload is pretty typical as far as this goes. It has the normal concerns as any node.js application.<br><br><blockquote>migrations<br></blockquote>This is one thing that will be improving in the future. As of now, you have to write migration scripts if you&#x27;re renaming a field or changing a field&#x27;s type.<br><br><blockquote>technical limitations of adding features that Payload CMS is not meant to support, vendor lock-in, etc.<br></blockquote>You might have to expand upon what you mean on that one, but nothing comes to mind regarding this.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674571916945
      },
      {
        "content": "Thanks Elliot 👋  I think I&#x27;m going to give it a try!",
        "authorID": "965296940432646264",
        "authorName": "Emre Erdogan",
        "authorAvatar": null,
        "createdAtDate": 1674596444645
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How to customize dark / light mode branding",
      "id": "1075154495564173404",
      "createdAt": 1676407207147
    },
    "messages": [
      {
        "content": "when white labeling using logo / icon, how can I tell the custom logo component what to render dark or light logo? is there a global parameter for knowing if we are working in light or dark mode ?",
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1676407207147
      },
      {
        "content": "Hey @Oron there is a local storage key <code>payload-theme</code> that&#x27;s value is light/dark that you can read from within your logo component",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676410165966
      },
      {
        "content": "@damnstaychill but that only give me the user&#x27;s choice, could be auto and then it&#x27;s empty",
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1676410602107
      },
      {
        "content": "I need the actual &quot;real time&quot; theme that is used",
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1676410622998
      },
      {
        "content": "This should steer you in the right direction: <a href=\"https://discord.com/channels/967097582721572934/1065405847376769146/1065426167479402548\">https://discord.com/channels/967097582721572934/1065405847376769146/1065426167479402548</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676436653562
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "MongoDB refuses connection after first install of PayloadCMS",
      "id": "1069018549701587045",
      "createdAt": 1674944283653
    },
    "messages": [
      {
        "content": "Hello everyone,<br>I am having a problem understanding how to setup the configuration, since I have installed MongoDB as a Service and is running OK, but when entering <code>yarn dev</code> the app crashes and i get the error that, the MongoDB connection is refused. I have a DB setup at mongodb://localhost/wesnoth<br>Can anyone  direct me here ,please?",
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1674944283653
      },
      {
        "content": "I mean the Payload app crashes and gives me error of connection refused.",
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1674944324880
      },
      {
        "content": "I think I initially ran into an issue where I used <code>localhost</code>, so the server was trying to connect over IPv6, but mongo was only listening on IPv4. Try changing <code>localhost</code> to <code>127.0.0.1</code> and see if that helps?",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1674948748459
      },
      {
        "content": "That was the solution to my problem. I didn&#x27;t even realize what the error message contain, it was trying to write the address in v6 now that you mention it, so yeah, that did the trick. THank so much for your help.",
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1674971567663
      },
      {
        "content": "Awesome, glad it worked! Maybe this should be considered a payload bug?",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1674972916165
      },
      {
        "content": "I don&#x27;t know , maybe? SHould I open an issue on github?",
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1674974366395
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "How to access relationship field full item data?",
      "id": "1074901824785625149",
      "createdAt": 1676346965739
    },
    "messages": [
      {
        "content": "I must conditionally populate collection fields based on the selected relationship field. The relationship field only provides the ID of the selected item. As the admin fields don&#x27;t support async functions, there is no way to query more information about the selected item before updating other collection fields.<br><br>Is there some workaround to access the selected item data and based on that, alter other fields via admin config like condition?",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676346965739
      }
    ],
    "messageCount": 0
  },
  {
    "info": {
      "name": "How can I make collection Items Header sticky",
      "id": "1067121210367955104",
      "createdAt": 1674491922705
    },
    "messages": [
      {
        "content": "Currently, when a collection has more than 50 items, it gets hard to read which column value is for which column header. So, if we can enable sticky header, that would be great to have.",
        "authorID": "685569866400399360",
        "authorName": "hanan_mehmood",
        "authorAvatar": "e4878a1f613a17a826d396b3b388bfa4",
        "createdAtDate": 1674491922705
      },
      {
        "content": "Done.",
        "authorID": "685569866400399360",
        "authorName": "hanan_mehmood",
        "authorAvatar": "e4878a1f613a17a826d396b3b388bfa4",
        "createdAtDate": 1674504767616
      },
      {
        "content": "nice! did you create a custom component for this?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674755697639
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "\"required\" and \"validate\" both prevent \"beforeValidate\"",
      "id": "1071412742273105950",
      "createdAt": 1675515103644
    },
    "messages": [
      {
        "content": "If I have a field with a <code>beforeValidate</code> hook, when I set <code>required: true</code> or a custom <code>validate</code> function, failure to validate either (when editing in the admin area) means that the validation fails in the browser and so the <code>beforeValidate</code> hook is never fired.<br><br>With the <code>validate</code> function I can sort-of get around this by checking if the <code>payload</code> argument is undefined, but this is an odd behaviour anyway as logic would suggest that if there is a <code>beforeValidate</code> hook then it should fire before <code>required</code> or <code>validate</code> are checked.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675515103644
      },
      {
        "content": "this is all expected actually",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675519043686
      },
      {
        "content": "beforeValidate only runs on the server, but your validate function runs both on the client AND the server",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675519052809
      },
      {
        "content": "all hooks on fields and collections run in the server only",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675519084392
      },
      {
        "content": "BUT",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675519088462
      },
      {
        "content": "we are going to begin exposing more client-side hooks over time and those will all be keyed to <code>admin.hooks</code>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675519106319
      },
      {
        "content": "Ok, so is it possible to have a field that is both required and set using beforeValidate based on a selection in other fields?",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675521917503
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "i18n descriptions",
      "id": "1068190345130672169",
      "createdAt": 1674746824296
    },
    "messages": [
      {
        "content": "Translating descriptions in the admin panel. How should we do this?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674746824296
      },
      {
        "content": "@Exo figured we could talk here so we are not talking over others in the other thread.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674746847957
      },
      {
        "content": "I had a thought",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674746853015
      },
      {
        "content": "Since descriptions can be react components, I am wondering if you could use the <code>useTranslation</code> hook inside a component to determine what language the user has set, and then display a description based on that. That might get you by for now!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674747040626
      },
      {
        "content": "Oh that&#x27;s an awesome idea! I thought about maybe discussing a PR to support i18n objects for the descriptions in the payload configuration after my exams",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1674812159852
      },
      {
        "content": "So it would be accessible to users who are not happy to write their own react code like that. But it seems to be quite a bit of work so I can&#x27;t get into it just yet",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1674812205995
      },
      {
        "content": "Yep I still think supporting translations in descriptions would be beneficial - but yeah a bit of work. Just an alternative for now 🙂",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674823492506
      },
      {
        "content": "One thing I was wondering about: There are singular and plural labels, would it make more sense to order it s.t.<br>{en: singular, plural; es: singular, plural...}  or rather {singular: en, es... ; plural: en, es ..}?",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1674908969308
      },
      {
        "content": "Hey @Exo following up here, another conversation sparked my memory of this convo. We were talking about translating input descriptions? So that when an editor changes their language from the account page, the description will show the translated version, right?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675436930018
      },
      {
        "content": "This is currently possible and I was mistaken the last time we talked. You can currently use an object as the description and the description will translate when an editor has a different language selected -- it is based <em>not the locale</em>, but the actual language they are viewing the admin panel in, which is ideal!<br><br>Just figured I would follow up and let you know, what you were looking for, was there the whole time 😅",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675437097794
      },
      {
        "content": "Oh wow that is even better then! I saw how payload automatically deduces the correct language for some parts of the UI since my coworker had all the buttons with spanish texts, but I was not sure it would work with descriptions too! Will check it out over the weekend! Thanks for letting me know 🙂 payload never fails to amaze me haha",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1675437435913
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "Add elements to collection page",
      "id": "1067277020159037470",
      "createdAt": 1674529070654
    },
    "messages": [
      {
        "content": "I want to add some features to the collection page (not the create doc). Is this possible? (like a download button)",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1674529070654
      },
      {
        "content": "You can swap in your own components. It sounds like you may want a custom cell component (which shows on the list view). You can pair this with a UI field type if you don&#x27;t want to replace it for one of your existing fields.<br><br><a href=\"https://payloadcms.com/docs/admin/components#cell-component\">https://payloadcms.com/docs/admin/components#cell-component</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674535103246
      },
      {
        "content": "You&#x27;d place this component under the field&#x27;s admin -&gt; components -&gt; Cell property",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674535179317
      },
      {
        "content": "I don&#x27;t want to add something to the list,  I want to add a download button on the general page. Is this possible?<br><br>something like this example, or maybe next to filters/columns",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1674702095804
      },
      {
        "content": "You are able to swap out the entire List view by passing the following configuration on your collection:<br><pre><code class=\"hljs\">  admin: {\n    components: {\n      views: {\n        List: MyCustomListView\n      }\n    }\n  }</code></pre>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674709863312
      },
      {
        "content": "Here is the default List view for reference: <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/Default.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/Default.tsx</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674709880529
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Errors when attempting `payload` access",
      "id": "1042513404390285392",
      "createdAt": 1668624964569
    },
    "messages": [
      {
        "content": "Similar to the Cell Component post below, I&#x27;m getting this error when trying to import payload and use the api within a cell component. Seems like the proposed solution of using the REST api can&#x27;t be the only way, must be missing something silly. Here&#x27;s the error:<br><br><code>VM536:1 Uncaught TypeError: payload__WEBPACK_IMPORTED_MODULE_1__.findByID is not a function</code><br><br>and the code throwing it:<br><pre><code class=\"hljs\">import React from &#x27;react&#x27;;\nimport payload from &#x27;payload&#x27;;\n  \n  \nconst SyndicationCell = (props) =&gt; {\n    const { field, colIndex, collection, cellData, rowData } = props;\n    const result = payload.findByID({\n        collection: &#x27;blogs&#x27;, // required\n        id: rowData.id, // required\n    })\n    return &lt;span&gt;{rowData.id}&lt;/span&gt;;\n  };\n  \nexport default SyndicationCell;</code></pre>",
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1668624964569
      },
      {
        "content": "The error you&#x27;re seeing is because webpack cannot handle all the backend code that comes with Payload when doing that import.<br>This is not the right way for the frontend component to get the data you need.<br><br>You have 3 options for getting data in your component.<br>1) use the props on cell, which you&#x27;re already doing.<br>2) Use the relationship provider that wraps the table to get relational data (which looks like what you need to do)<br>3) do HTTP requests using <code>fetch</code> or a package like <code>axios</code> in your component or in a custom provider.<br><br>We haven&#x27;t documented that RelationshipProvder anywhere in the docs, but this might be a good thing to add since there isn&#x27;t a reason why you can&#x27;t use it in your custom cell components.<br><a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/RelationshipProvider/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/RelationshipProvider/index.tsx</a><br>Note that since you&#x27;re replacing the cell and normally that data is requested from the cell, you might also need to copy some parts of the relationship cell to get request the docs get loaded by the relationship provider: <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/Cell/field-types/Relationship/index.tsx\">https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/Cell/field-types/Relationship/index.tsx</a>",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1668626366517
      },
      {
        "content": "Yea I&#x27;m in a bit of a unique situation as I&#x27;m effectively creating a separate collection to act as a traditional M2M table with additional attributes on the relationship - but for UX reasons I&#x27;d like to manage that within one end of the M2M",
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1668626554516
      },
      {
        "content": "(So that when viewing a blog post you can see all the &quot;sites&quot; it&#x27;s been syndicated to)",
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1668626598280
      },
      {
        "content": "That is cool!",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1668626622807
      },
      {
        "content": "So you effectively have a collection acting as a join table?",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1668626637071
      },
      {
        "content": "So I suppose I could expose this data with a afterRead hook and a computed prop",
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1668626639444
      },
      {
        "content": "I would just make another <code>fetch</code> request in your cell type then.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1668626665059
      },
      {
        "content": "The relationship provider won&#x27;t help since it is querying with depth 0 and you would need depth 1 to get the data you&#x27;re after",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1668626688391
      },
      {
        "content": "I&#x27;m gonna be trying to take this one step further allowing for creation of new relationships inline, perhaps with a modal",
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1668626693667
      },
      {
        "content": "Hi, @seth. I&#x27;m also doing something similar that might require M2M relationship with additional attributes in payload (say, <code>Books</code> and <code>Tags</code>, with additional attributes)<br><br>How do you plan on creating new relationships inline? I&#x27;m trying to find a solution but i&#x27;m not sure what&#x27;s the most elegant way to do it.",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1668671282275
      },
      {
        "content": "@bombnp I think it&#x27;ll have to be a custom component",
        "authorID": "778799229988110337",
        "authorName": "seth",
        "authorAvatar": "db6ffc89f556a13d2ec8da4e72dc44dd",
        "createdAtDate": 1669665756217
      },
      {
        "content": "Necroing this thread to ask @dribbens if something like this would be preferred method of utilizing the <code>RelationshipProvider</code> in a custom <code>Cell</code> component. <br><br><pre><code class=\"hljs\">import { useListRelationships } from &quot;/node_modules/payload/dist/admin/components/views/collections/List/RelationshipProvider&quot;;\n\nconst ImageCell = (props) =&gt; {\n  const { field, colIndex, collection, cellData, rowData } = props;\n\n  const { getRelationships, documents } = useListRelationships();\n\n  useEffect(() =&gt; {\n    getRelationships([\n      {\n        value: cellData,\n        relationTo: field.relationTo,\n      },\n    ]);\n  }, [getRelationships]);\n\n  return (\n    &lt;&gt;\n      {documents?.[field.relationTo]?.[cellData]?.sizes?.thumbnail?.url &amp;&amp; (\n        &lt;img\n          src={documents[field.relationTo][cellData].sizes.thumbnail.url}\n          style={imageStyle}\n          height={size}\n          width={size}\n        &gt;&lt;/img&gt;\n      )}\n    &lt;/&gt;\n  );\n};</code></pre><br>It looks like <code>documents</code> object holds returned data on all relationships in the collection type, not just the <code>cellData</code> passed originally into <code>getRelationships()</code> ? Therefore the related data I am interested in must be accessed by accessing these keys on <code>documents</code>  -&gt; <code>documents[field.relationTo][cellData]</code> ... which is not what I expected having passed that information into <code>getRelationships()</code> originally.",
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675186575336
      },
      {
        "content": "@jellygatorade That is expected. The relationship provider is meant to reduce duplication of requests on the list view. It is written this way so that if you have multiple columns of redundant relationships being loaded in, it can be as efficient as possible by only accessing that data once from the DB. I don&#x27;t see a problem with what you have above, nice job!",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675271566451
      },
      {
        "content": "Great! Appreciate the insight. Thanks!",
        "authorID": "1069626017846665307",
        "authorName": "jellygatorade",
        "authorAvatar": "900b8e019d21c2b7c1d9897742c11839",
        "createdAtDate": 1675276901924
      }
    ],
    "messageCount": 14
  },
  {
    "info": {
      "name": "Set value of Rich text with Hook - Slate crash",
      "id": "1066829401918013480",
      "createdAt": 1674422350149
    },
    "messages": [
      {
        "content": "Hello,<br><br>I&#x27;m trying to set the value of a Rich text field with the useForm hook dispatch.<br><br>It works, but Slate crashes.<br><br>Is there any solution for this? Can I access the same value input you would access while writing manuall?<br><br>Thanks!",
        "authorID": "194944230194544641",
        "authorName": "batz",
        "authorAvatar": "af70980d50b6c46f61d0f990af697602",
        "createdAtDate": 1674422350149
      },
      {
        "content": "What are you setting it to?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674432477610
      },
      {
        "content": "Just a plain string",
        "authorID": "194944230194544641",
        "authorName": "batz",
        "authorAvatar": "af70980d50b6c46f61d0f990af697602",
        "createdAtDate": 1674498304456
      },
      {
        "content": "Yeah it has to be in a specific format. Add content to a normal rich text input, save it, then view the api response",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674499274750
      },
      {
        "content": "Roger that, I just saw that there&#x27;s a parser included in Slate, maybe I should give that a try. Thanks",
        "authorID": "194944230194544641",
        "authorName": "batz",
        "authorAvatar": "af70980d50b6c46f61d0f990af697602",
        "createdAtDate": 1674501483248
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Custom Graphql query: configuration",
      "id": "1072462099671957504",
      "createdAt": 1675765289944
    },
    "messages": [
      {
        "content": "Morning, suffering from same issue. Try to setup a custom query for graphql and having issues retrieving docs. Try following this thread, but am not sure how to implement the BuildPaginatedListType<br>graphQL: {<br>    schemaOutputFile: path.resolve(__dirname, &#x27;generated-schema.graphql&#x27;),<br>    queries(GraphQL, payload) {<br>      return {<br>        PlacesByCityNameQuery: {<br>          type: buildPaginatedListType(&quot;PlacesByCityName&quot;,GraphQL.?)<br>          ,<br>          args: {<br>            name: {<br>              type: new GraphQL.GraphQLNonNull(GraphQL.GraphQLString),<br>            }<br><br>          },<br>          resolve: PlacesByCityName<br>        }<br>      }<br>    },<br>  },<br>I guess, my question would be what should I use for docType?",
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675765289944
      },
      {
        "content": "<a href=\"https://discord.com/channels/967097582721572934/1062719495946387486/1062719495946387486\">https://discord.com/channels/967097582721572934/1062719495946387486/1062719495946387486</a>",
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675786236270
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "duplicate page not working",
      "id": "1052475381531299890",
      "createdAt": 1671000085004
    },
    "messages": [
      {
        "content": "when i click on duplicate button its giving me error.<br><br>&quot;message&quot;:&quot;subpages validation failed: categoryName: <code>62</code> is not a valid enum value for path <code>categoryName</code>.&quot;}]<br><br>I have attached my code for whatever i have did as of now.",
        "authorID": "1041992215632805888",
        "authorName": "Shubham27",
        "authorAvatar": null,
        "createdAtDate": 1671000085004
      },
      {
        "content": "could you make a minimally reproducible example to share? If this is a bug that would allow us to fix it more promptly. You can start from <code>categoryName</code> and work backwards when throwing together a new collection with a similar shape, but define all of your fields in one file so others can just paste it into their environment to test it once you can reproduce it with minimal fields 👍",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1671110816785
      },
      {
        "content": "all of fields are defined in a same file @Jarrod",
        "authorID": "1041992215632805888",
        "authorName": "Shubham27",
        "authorAvatar": null,
        "createdAtDate": 1671170627217
      },
      {
        "content": "You are importing quite a bit of code that lives outside of this file @Shubham27",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1671192078005
      },
      {
        "content": "It seems to be coming from your <code>beforeValidate</code> hook but like Jarrod said we need the relevant files to properly dig into this - we are unable to hit that fetch request without your index.php and likely other files.",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1671217671009
      },
      {
        "content": "do you want data from api response of this index.php  api call ?",
        "authorID": "1041992215632805888",
        "authorName": "Shubham27",
        "authorAvatar": null,
        "createdAtDate": 1671434577027
      },
      {
        "content": "[<br>        {<br>            id: &quot;67&quot;,<br>            category_code: &quot;eLearning&quot;,<br>            title: &quot;eLearning&quot;,<br>            slug: &quot;portfolio/oneclick-portfolio&quot;,<br>            description: &quot;eLearning&quot;,<br>            portfolio_type: &quot;1&quot;,<br>            portfolio_file_path: &quot;ddssdvddfdfgvfgefg&quot;,<br>            file_name: &quot;&quot;,<br>            status: &quot;1&quot;,<br>            created_by: &quot;Demo User 2&quot;<br>        },<br>]",
        "authorID": "1041992215632805888",
        "authorName": "Shubham27",
        "authorAvatar": null,
        "createdAtDate": 1671434752148
      },
      {
        "content": "@Shubham27 apologies for the delay - are you still experiencing this issue?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1672910794427
      },
      {
        "content": "yes @jesschow",
        "authorID": "1041992215632805888",
        "authorName": "Shubham27",
        "authorAvatar": null,
        "createdAtDate": 1672914007959
      },
      {
        "content": "<a href=\"https://docs.google.com/document/d/1JYuIX7RXVhUslCm5oRXJKj7FY2ds7r-1VIAhkn28CCM/edit\">https://docs.google.com/document/d/1JYuIX7RXVhUslCm5oRXJKj7FY2ds7r-1VIAhkn28CCM/edit</a>",
        "authorID": "1041992215632805888",
        "authorName": "Shubham27",
        "authorAvatar": null,
        "createdAtDate": 1673330510910
      },
      {
        "content": "@jesschow here is the problem description that i am getting. hope it helps you understand issue that i am facing.",
        "authorID": "1041992215632805888",
        "authorName": "Shubham27",
        "authorAvatar": null,
        "createdAtDate": 1673330557263
      },
      {
        "content": "@Shubham27 The payload config is meant to be static. I think what you should instead do is create a custom field, possibly using the new <code>json</code> field type. You would render a custom select component that would fetch data from your endpoint and when the user submits, you add the data to the json field.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673356279890
      },
      {
        "content": "@Jarrod can you share me small example of custom select field with dynamic options or any other reference that related to it.",
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1674110151835
      },
      {
        "content": "Does this mean I can&#x27;t reference data from one source (i.e. text input) and present it in a dropdown? More info on my scenario: <a href=\"https://discord.com/channels/967097582721572934/1072241616917643454/1072241616917643454\">https://discord.com/channels/967097582721572934/1072241616917643454/1072241616917643454</a>",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675780837189
      },
      {
        "content": "Hiii @remy i&#x27;m want to render data in a select menu using custom select field",
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1675944360888
      },
      {
        "content": "i tried from this <a href=\"https://payloadcms.com/docs/admin/components#fields:~:text=%7D%3B-,Field%20Component,-When%20writing%20your\">https://payloadcms.com/docs/admin/components#fields:~:text=%7D%3B-,Field%20Component,-When%20writing%20your</a> but it doesn&#x27;t store selected value in api",
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1675944555308
      },
      {
        "content": "I managed to store the selected value with useFormFields - <a href=\"https://payloadcms.com/docs/admin/hooks#useformfields\">https://payloadcms.com/docs/admin/hooks#useformfields</a>. Hope that helps",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676047211568
      },
      {
        "content": "thanks @remy i&#x27;ll try it.",
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1676283924845
      }
    ],
    "messageCount": 17
  },
  {
    "info": {
      "name": "Is it currently not possible to send attachments with the built in mailer?",
      "id": "1065258417985441853",
      "createdAt": 1674047798392
    },
    "messages": [
      {
        "content": "I have configured a nodemailer transport for emails. And use payload.sendEmail to send. This works fine for just text/html emails. But when trying to add attachments to the message (the documentation references to nodemailer for the message: <a href=\"http://nodemailer.com/message/\">http://nodemailer.com/message/</a>) they are not sent. They are also not in the Message type, so i suggest it is currently not possible like this?",
        "authorID": "1002213674926215350",
        "authorName": "DU DA",
        "authorAvatar": null,
        "createdAtDate": 1674047798392
      },
      {
        "content": "@DU DA Not seeing it on the config for EmailOptions either",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674048014886
      },
      {
        "content": "it should be 100% possible",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674053803256
      },
      {
        "content": "i&#x27;ve never done it but we don&#x27;t <em><strong>remove</strong></em> any nodemailer functionality",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674053814707
      },
      {
        "content": "we probably just need to improve the typing for <code>payload.sendEmail</code>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674053877143
      },
      {
        "content": "which would be a <em><strong>GREAT</strong></em> pull request to get either of you on the contributors list for Payload",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674053970070
      },
      {
        "content": "i think it&#x27;s literally just changing this file:",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054054009
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/blob/master/src/email/sendEmail.ts\">https://github.com/payloadcms/payload/blob/master/src/email/sendEmail.ts</a>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054065422
      },
      {
        "content": "to this:",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054070242
      },
      {
        "content": "<pre><code class=\"hljs\">import { SendMailOptions } from &#x27;nodemailer&#x27;;\nimport logger from &#x27;../utilities/logger&#x27;;\n\nexport default async function sendEmail(message: SendMailOptions): Promise&lt;unknown&gt; {\n  let result;\n  try {\n    const email = await this.email;\n    result = email.transport.sendMail(message);\n  } catch (err) {\n    logger.error(\n      `Failed to send mail to ${message.to}, subject: ${message.subject}`,\n      err,\n    );\n    return err;\n  }\n  return result;\n}</code></pre>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054074718
      },
      {
        "content": "notice how the <code>options</code> arg is now typed with <code>SendMailOptions</code> from <code>nodemailer</code>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054092858
      },
      {
        "content": "i haven&#x27;t tested anything else but this would be awesome to PR",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054108135
      },
      {
        "content": "Hey @jmikrut thanks for your answer. I was hoping for that 🙂 I need to have a closer look into it later. But than i can try a PR",
        "authorID": "1002213674926215350",
        "authorName": "DU DA",
        "authorAvatar": null,
        "createdAtDate": 1674055010015
      },
      {
        "content": "That looks good to me @jmikrut made a PR here: <a href=\"https://github.com/payloadcms/payload/pull/1907\">https://github.com/payloadcms/payload/pull/1907</a>",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674055801499
      },
      {
        "content": "Oh no my PR failed on a rando error",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674056401309
      },
      {
        "content": "i re-ran tests",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674056944319
      },
      {
        "content": "i think it&#x27;s just a flaky test",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674056948160
      },
      {
        "content": "ooo it&#x27;s doing better this time around",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674057294918
      },
      {
        "content": "merged!",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674057402652
      },
      {
        "content": "we are about to release a canary version that will include this",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674057410531
      },
      {
        "content": "and.....LOTS of other stuff",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674057414724
      },
      {
        "content": "😈",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674057417778
      },
      {
        "content": "🤩",
        "authorID": "1002213674926215350",
        "authorName": "DU DA",
        "authorAvatar": null,
        "createdAtDate": 1674057466212
      },
      {
        "content": "YAS",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674057705747
      }
    ],
    "messageCount": 23
  },
  {
    "info": {
      "name": "Commit payload generated types?",
      "id": "1070292519310594088",
      "createdAt": 1675248021677
    },
    "messages": [
      {
        "content": "Just wondering whether it&#x27;s recommended to commit payload typescript definitions to the git repo, or add that file to .gitignore.",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675248021677
      },
      {
        "content": "You should commit them, will save you from the headache of regenerating them for every instance you have running and every time your config changes",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675262319937
      },
      {
        "content": "Thanks!",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675273618682
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Any way to access same relationship from both sides?",
      "id": "1069986904122081311",
      "createdAt": 1675175157338
    },
    "messages": [
      {
        "content": "For example, in my Projects collection I specify a relationship to a single project category.<br><br>In my Project Category collection I specify a one to many relationship to Projects. This doesn&#x27;t update when I add the category to a Project.",
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675175157338
      },
      {
        "content": "&quot;This doesn&#x27;t update when I add the category to a Project.&quot; - sorry ,what isn&#x27;t updating, the category on a project?",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1675175628870
      },
      {
        "content": "When I update the category relationship on a Project, I would expect that Project Category to reflect that in it&#x27;s relationship back.",
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675176273114
      },
      {
        "content": "I think I have the same question for my project. To use OP&#x27;s example, if you have two collections, <code>ProjectCategories</code> and <code>Projects</code>...<br><br>Looking at the <code>ProjectCategories</code> collection, I can add a <code>relationship</code> field that looks like this:<br><pre><code class=\"hljs\">    {\n      name: &quot;projects&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &quot;projects&quot;,\n      hasMany: true,\n    },</code></pre><br><br>Now in the Admin UI, if I navigate to the <code>ProjectCategories</code> collection and select a &quot;Category&quot; I will have the ability to add <code>Projects</code> that are related to the category.<br><br>Now, can we do the opposite of that and have the relationship update both collections regardless of which collection you make the update in?<br><br>So, while maintaining all of the functionality mentioned above, looking at the <code>Projects</code> collection, having a relationship to <code>ProjectCategories</code>:<br><br><pre><code class=\"hljs\">    {\n      name: &quot;project_categories&quot;,\n      type: &quot;relationship&quot;,\n      relationTo: &quot;project-categories&quot;,\n      hasMany: true,\n    },</code></pre><br><br>Now in the Admin UI, if I navigate to the <code>Projects</code> collection and select a &quot;Project&quot; I will have the ability to add <code>ProjectCategories</code> that are related to the project.<br><br>Is it possible to have two collections that relate to each other and when you update either of them, the others related field updates as well?",
        "authorID": "462049378719498241",
        "authorName": "TheBigUmberto",
        "authorAvatar": "a4da04c2eb8b222a2e713be8e4b2e9d7",
        "createdAtDate": 1675372035438
      },
      {
        "content": "Payload currently supports one way relationships. There are ways to get around this:<br><br>There is a community plugin here: <a href=\"https://github.com/TimHal/pcms-backpop\">https://github.com/TimHal/pcms-backpop</a><br><br>If you simply want to query the other side of the relationship, here is an example of a component that queries how many Posts have a certain Category:<br><br><a href=\"https://github.com/payloadcms/public-demo/blob/master/src/collections/Categories.ts#L36\">https://github.com/payloadcms/public-demo/blob/master/src/collections/Categories.ts#L36</a><br><a href=\"https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx\">https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675440375208
      },
      {
        "content": "Thank you, awesome resources!",
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1675443638314
      },
      {
        "content": "Hmm, what are the impracticalities of official support of 2 way relations?",
        "authorID": "276227047968210945",
        "authorName": "Harley Queens",
        "authorAvatar": "54b59995c428cbfd08a790f29a00e5df",
        "createdAtDate": 1675693931328
      },
      {
        "content": "I&#x27;m also wondering this. It would be nice to have.",
        "authorID": "399871533276987392",
        "authorName": "Twoxic",
        "authorAvatar": null,
        "createdAtDate": 1676299912458
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Relationship field returning just id",
      "id": "1066899804199858287",
      "createdAt": 1674439135361
    },
    "messages": [
      {
        "content": "In this global page, I get just this from the news collection",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1674439203626
      },
      {
        "content": "In this collection, I get all the data",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1674439224553
      },
      {
        "content": "This is the field for news:<br><pre><code class=\"hljs\">            {\n              name: &#x27;homeNew&#x27;,\n              type: &#x27;relationship&#x27;,\n              relationTo: [&#x27;news&#x27;, &#x27;activities&#x27;, &#x27;calls&#x27;],\n              label: &#x27;Seleccionar noticia&#x27;,\n              required: true,\n            },</code></pre><br><br>this is the field for categories:<br><pre><code class=\"hljs\">{\n      name: &#x27;projectsCategories&#x27;,\n      type: &#x27;relationship&#x27;,\n      relationTo: &#x27;categories&#x27;,\n      label: &#x27;Categorías&#x27;,\n      hasMany: true,\n      index: true,\n      admin: {\n        position: &#x27;sidebar&#x27;,\n      },\n    },</code></pre>",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1674439312863
      },
      {
        "content": "@akacronos use the <code>depth</code> parameter on your request to populate relationships beyond their ids",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1674440058532
      },
      {
        "content": "I tried this, but didn&#x27;t work. I make it work adding the <code>index: true</code> to the homeNew field. Don&#x27;t know if this is the best way 😅",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1674440220908
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Payload to simplify data management in a business management solution",
      "id": "1072174352210083850",
      "createdAt": 1675696685603
    },
    "messages": [
      {
        "content": "Hi im new here, these days i was checking out payload and i wanted to ask what would you guys think about using payload to build a business/accounting solution for small businesses. Do you think that payload would be an advantage or would be too much out of the scope (i hope this is the right word) of payload?",
        "authorID": "269553841375150080",
        "authorName": "RACCOON",
        "authorAvatar": "ca9cb7274ed04cf9942ceccfdbf65f3c",
        "createdAtDate": 1675696685603
      },
      {
        "content": "Payload is a Content Management System ... using it to manage finances (billing/invoices, accounts payable, inventory, etc) would probably be a bit of a headache.<br><br>Is it possible? Probably ... <br><br>Should you do it? Probably not ... <br><br>You could definitely create collections to hold the data for various things like Customers, Clients, Invoices, Payments, etc ... but Payload is not meant to provide a frontend, or really do much in the way of backend business logic... so in this case, you&#x27;d just be using payload as a storage container, and would likely be better off storing data directly to a database.",
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675699710671
      },
      {
        "content": "That&#x27;s what i was thinking but my idea was more like using it as a way to write API faster so i can do it based on the client needs and than making a modular ui with react that i can reuse anytime.<br>I may expressed it poorly i hope it makes sense.",
        "authorID": "269553841375150080",
        "authorName": "RACCOON",
        "authorAvatar": "ca9cb7274ed04cf9942ceccfdbf65f3c",
        "createdAtDate": 1675700529521
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Why is my generated type for my media collection possibly 'string'?",
      "id": "1073557500751773696",
      "createdAt": 1676026453913
    },
    "messages": [
      {
        "content": "Hi, I have the following field on my collection:<br><pre><code class=\"hljs ts\">   {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;heroImage&#x27;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;upload&#x27;</span>,\n      <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-string\">&#x27;media&#x27;</span>,\n      <span class=\"hljs-attr\">admin</span>: {\n        <span class=\"hljs-attr\">condition</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">_, siblingData</span>) =&gt;</span>\n          siblingData.<span class=\"hljs-property\">showHero</span> &amp;&amp; !siblingData.<span class=\"hljs-property\">makeSlider</span>,\n      },\n    },</code></pre><br><br>In my generated types, this field is defined as <code>string | Media</code>. Now, I understand the Media type, as this is just the generated type for the relation on this field, but I don&#x27;t understand how it could possibly be string. Just wondering what cases I might need to handle where this field may be string?",
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1676026453913
      },
      {
        "content": "@alexdev set <code>depth</code> to 0 and then query a document in your collection<br><br>/api/collection-slug/id?depth=0",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676034920337
      },
      {
        "content": "Perfect explanation, thank you",
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1676037895175
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "What is `Record<string, string>` used for on the `group` field on a collection?",
      "id": "1072900095663689880",
      "createdAt": 1675869716326
    },
    "messages": [
      {
        "content": "The <code>collection.admin.group</code> field accepts either <code>string</code> or <code>Record&lt;string, string&gt;</code>. The docs imply that only <code>string</code> is valid and don&#x27;t describe what <code>Record&lt;string, string&gt;</code> might be used for here. Can anyone explain?",
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1675869716326
      },
      {
        "content": "Yeah, that is because you can add translations for your editors.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675870306951
      },
      {
        "content": "<code>group: { en: &#x27;Content&#x27;, es: &#x27;Contenido&#x27; }</code>",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675870367481
      },
      {
        "content": "Amazing, thank you",
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1675870426225
      },
      {
        "content": "Changed my example to make more sense! You&#x27;re welcome. 🙂",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675870444406
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Relationship field data disappeared after new seed",
      "id": "1067136328711557300",
      "createdAt": 1674495527199
    },
    "messages": [
      {
        "content": "I have two collections, Posts and Categories, I seeded the blog posts. Categories are seeded. In my Posts collection, I added a relationship field to Posts:<br><br><pre><code class=\"hljs\">{\n            name: &#x27;category&#x27;,\n            type: &#x27;relationship&#x27;,\n            relationTo: &#x27;categories&#x27;,\n            hasMany: false,\n            index: true,\n        },</code></pre><br><br>I went and as a test, assigned a category to 10 posts.<br><br>I had to remove my categories from Mongo db and when I did that, I seeded categories again. The problem is that now posts are no longer linked to correct category. They are linked to old IDs which does not exist. <br><br>How can I prevent this from happening when I seed new stuff after deleting a collection?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674495527199
      },
      {
        "content": "They show up as <pre><code class=\"hljs\">Untitled - ID: 63c95d5c285dd0d3741039c0</code></pre> that ID does not belong to any category, maybe old category had that ID.",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674495639489
      },
      {
        "content": "So you removed your categories collection from Mongo? Payload works off of IDs, so there is no way for it to know what to &quot;re-link&quot; to.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674495924341
      },
      {
        "content": "In the future, you could seed the categories to have an ID identical to the category name.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674495974224
      },
      {
        "content": "yeah, I think better way is to seed categories with custom ID as you mentioned in another topic, to do that I tried using variable <code>id</code>  when seeding but doesnt seem to be working.",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496174088
      },
      {
        "content": "<pre><code class=\"hljs\">await payload.create({\n                collection: &#x27;categories&#x27;,\n                data: { id: myCustomID ...</code></pre>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496198653
      },
      {
        "content": "is this how you set the custom ID?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496209142
      },
      {
        "content": "Yes, that looks correct",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674496240630
      },
      {
        "content": "Are you getting some sort of error?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674496246517
      },
      {
        "content": "no, they are seeded correctly but IDs are still generated like this",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496317357
      },
      {
        "content": "",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496319708
      },
      {
        "content": "Hmm, interesting. I know we have a lot of testing related to that functionality. Let me see if I can recreate.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674496362512
      },
      {
        "content": "Payload version?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674496364299
      },
      {
        "content": "<code>&quot;payload&quot;: &quot;1.5.9&quot;,</code>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496387465
      },
      {
        "content": "I am also using <a href=\"https://www.npmjs.com/package/slugify\">https://www.npmjs.com/package/slugify</a> to set the IDs based on names",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496446268
      },
      {
        "content": "since my category names can have space and special characters",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496466226
      },
      {
        "content": "You are correct. I&#x27;m seeing the same behavior",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674496704089
      },
      {
        "content": "I&#x27;ll look into this then log an issue if need be.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674496800943
      },
      {
        "content": "oh I think I had to create a field",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496852261
      },
      {
        "content": "<pre><code class=\"hljs\">{\n            name: &#x27;id&#x27;,\n            type: &#x27;text&#x27;,\n        },</code></pre>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496855041
      },
      {
        "content": "in my collection",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496860284
      },
      {
        "content": "it now has custom id",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496874822
      },
      {
        "content": "Hah, well looks like we both learned something today.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674496886782
      },
      {
        "content": "Maybe in my case, re-learned 😉",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674496891017
      },
      {
        "content": "haha thank you Elliot",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496898300
      },
      {
        "content": "i am finding payload super useful, specially with seeding large number of data",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496915595
      },
      {
        "content": "Awesome to hear 🙌",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674496931589
      },
      {
        "content": "yeah, coming from WordPress file import, it was so difficult to do data migration and field matching",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496968054
      },
      {
        "content": "unless you use a plugin to match custom fields",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496980946
      },
      {
        "content": "payload is making it much easier",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674496997146
      }
    ],
    "messageCount": 29
  },
  {
    "info": {
      "name": "Autosave draft is not working on empty array of object",
      "id": "1046293227088642050",
      "createdAt": 1669526144526
    },
    "messages": [
      {
        "content": "When I try to create the post with empty array of object in the collection, autosave draft is not working properly, it throws<br><pre><code class=\"hljs\">[05:09:28] ERROR (payload): _shows_versions validation failed: version.people.crew: Parameter &quot;obj&quot; to Document() must be an object, got 0, version.people.cast: Parameter &quot;obj&quot; to Document() must be an object, got 0, version.external.streaming: Parameter &quot;obj&quot; to Document() must be an object, got 0, version.external.sources: Parameter &quot;obj&quot; to Document() must be an object, got 0</code></pre><br><pre><code class=\"hljs\">[05:09:28] ERROR (payload): TypeError: Cannot read properties of undefined (reading &#x27;version&#x27;)</code></pre><br>Is it a bug or something? But it will work when I add at least one object on every array in the collection.",
        "authorID": "434737607742586880",
        "authorName": "iamPrompt",
        "authorAvatar": "f772fda196645994bd7821f5dc341293",
        "createdAtDate": 1669526144526
      },
      {
        "content": "are those array fields required?",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1671036953931
      },
      {
        "content": "The fields are not required.",
        "authorID": "434737607742586880",
        "authorName": "iamPrompt",
        "authorAvatar": "f772fda196645994bd7821f5dc341293",
        "createdAtDate": 1671041110936
      },
      {
        "content": "There is another issue about this topic. I have been use the dispatchFields from useAllFormFields hook to create the object in an array. I can successfully dispatch to the document but cannot save it throws<br><pre><code class=\"hljs\">shows validation failed: external.streaming: Cast to embedded failed for value &quot;1&quot; (type number) at path &quot;streaming&quot; because of &quot;ObjectParameterError&quot;, external.sources: Cast to embedded failed for value &quot;2&quot; (type number) at path &quot;sources&quot; because of &quot;ObjectParameterError&quot;</code></pre>",
        "authorID": "434737607742586880",
        "authorName": "iamPrompt",
        "authorAvatar": "f772fda196645994bd7821f5dc341293",
        "createdAtDate": 1671041379386
      },
      {
        "content": "The config of these two groups of array is following",
        "authorID": "434737607742586880",
        "authorName": "iamPrompt",
        "authorAvatar": "f772fda196645994bd7821f5dc341293",
        "createdAtDate": 1671041472999
      },
      {
        "content": "Hi @iamPrompt do you still need help with this issue?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674755345915
      },
      {
        "content": "of course, that would be great",
        "authorID": "434737607742586880",
        "authorName": "iamPrompt",
        "authorAvatar": "f772fda196645994bd7821f5dc341293",
        "createdAtDate": 1674760716673
      },
      {
        "content": "for more detail of the issue <a href=\"https://discord.com/channels/967097582721572934/1060874983452200990/1060874983452200990\">https://discord.com/channels/967097582721572934/1060874983452200990/1060874983452200990</a>",
        "authorID": "434737607742586880",
        "authorName": "iamPrompt",
        "authorAvatar": "f772fda196645994bd7821f5dc341293",
        "createdAtDate": 1674760857171
      },
      {
        "content": "okay great lets continue in that thread ^",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675158091215
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "Is there a way to conditionally set the hidden property on a field?",
      "id": "1070970660093956116",
      "createdAt": 1675409703039
    },
    "messages": [
      {
        "content": "I have a certain field that is hidden in Payload based on a value selected inside a dropdown (select box).<br>What I want to do however, is if this field is hidden, to not send the JSON data in rest API response.<br><br>I see I can stop the field from being visible in the JSON response if the <code>hidden</code> field  is set to true, but is there a way to conditionally set this field?<br><br><pre><code class=\"hljs\">{\n    name: &quot;homeSlider&quot;,\n    type: &quot;array&quot;,\n    label: &quot;Home Page Image Slider&quot;,\n    minRows: 2,\n    maxRows: 10,\n    hidden: false, &lt;--------- wanting to set this \n    labels: {\n      singular: &quot;Slide&quot;,\n      plural: &quot;Slides&quot;,\n    },\n    admin: {\n      condition: (data) =&gt; {\n        console.log(data);\n        if (data.pageFormat === &quot;home-layout&quot;) {\n          return true;\n        } else {\n          data.homeSlider.hidden = true; &lt;------ trying to do it here \n          return false;\n        }\n    },\n},\n...</code></pre>",
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1675409703039
      },
      {
        "content": "Ah, appears I can do this using <code>data.homeSlider = null;</code><br>It does wipe the data however so keen to hear if there are any better ides?",
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1675410192100
      },
      {
        "content": "Hidden isn&#x27;t mean to be used conditionally, currently. Have you looked into an afterRead hook on the collection? You could perform some data cleanup before the response is sent back. <br><br><a href=\"https://payloadcms.com/docs/hooks/collections#afterread\">https://payloadcms.com/docs/hooks/collections#afterread</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675441944081
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "trying to build the docker that is delivered from 'npx create-payload-app' but getting errors",
      "id": "1070810091592368128",
      "createdAt": 1675371420525
    },
    "messages": [
      {
        "content": "When doing docker build it complains about <br>&#x27;#0 2.579 Something went wrong installing the &quot;sharp&quot; module<br>#0 2.579<br>#0 2.579 Cannot find module &#x27;../build/Release/sharp-linuxmusl-x64.node&#x27;<br><br>Anyone can help please?",
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1675371420525
      },
      {
        "content": "Could we get a minimally reproducible example of this? That would be super helpful to get the ball rolling here 👍 <br>- a docker file<br>- a minimal payload config to go alongside",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675431712062
      },
      {
        "content": "I found out the problem was the docker files copied node_modules from the local dir which caused a mess in npm, added .dockerignore entry for the node_modules dir",
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1675436112912
      },
      {
        "content": "npx sample should be updated",
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1675436127961
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "How to specify the size of image that can be uploaded?",
      "id": "1069607514955579452",
      "createdAt": 1675084703912
    },
    "messages": [
      {
        "content": "I have 2 collection that need to have an image. For the first one, I want to specify only 1024 by 1024, for the second one 512 by 512. I will not allow them to upload different size aside from those. How can I do that?",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1675084703912
      },
      {
        "content": "@johnmadrigal_ See: <a href=\"https://payloadcms.com/docs/upload/overview#image-sizes\">https://payloadcms.com/docs/upload/overview#image-sizes</a>",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1675087941589
      },
      {
        "content": "Thank you. However, that is a global settings for sizes. I’m looking for specific settings for each collection.",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1675088197036
      },
      {
        "content": "@johnmadrigal_ Isn&#x27;t it on a per-collection basis? Per docs: <pre><code class=\"hljs\">Optionally, if you pass imageSizes to your Collection&#x27;s Upload config, a sizes array will also be added containing auto-resized image sizes and filenames.</code></pre>",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1675088361354
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "How off autoindex mongoDB?",
      "id": "1068011407553073212",
      "createdAt": 1674704162253
    },
    "messages": [
      {
        "content": "How off autoindex mongoDB?",
        "authorID": "467287070394679297",
        "authorName": "Руся",
        "authorAvatar": "37b8372854854ee7899947390a0b3112",
        "createdAtDate": 1674704162253
      },
      {
        "content": "What do you mean?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674704434341
      },
      {
        "content": "@Jarrod When we create a collection element, mongo automatically gives it a unique id, you answered me in the last topic that you need to delete the index",
        "authorID": "467287070394679297",
        "authorName": "Руся",
        "authorAvatar": "37b8372854854ee7899947390a0b3112",
        "createdAtDate": 1674705109921
      },
      {
        "content": "",
        "authorID": "467287070394679297",
        "authorName": "Руся",
        "authorAvatar": "37b8372854854ee7899947390a0b3112",
        "createdAtDate": 1674705136968
      },
      {
        "content": "You must have set <code>unique: true</code> on your <code>brand</code> field and then removed it at a later time. I’m saying you need to remove the index that was created in your DB, payload will create the index when setting unique to true, but it will not remove it when removing the property from a field.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674706253939
      },
      {
        "content": "Thx. I&#x27;ve already tried brand the field unique, but it still won&#x27;t let me reuse items from another collection.  I&#x27;ll try to do as you said a bit later, give a unique value and remove the element from the base",
        "authorID": "467287070394679297",
        "authorName": "Руся",
        "authorAvatar": "37b8372854854ee7899947390a0b3112",
        "createdAtDate": 1674706927740
      },
      {
        "content": "Connect to your DB with mongo compass, or the command line, and remove the unique index from your brand field",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674707126468
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Add site settings page for each user",
      "id": "1068817991363477544",
      "createdAt": 1674896466819
    },
    "messages": [
      {
        "content": "I have created a new role as site-admin. who can access pages and other data related to his site only.<br>What i want to achieve is, as a site admin, he should have a menu named as site setting and when he click he can access settings for the site only.<br><br>Concept is like a singleton but as a admin user, i can see list of all sites and all settings.<br><br>For Admin, he can see list of site settings, But for site-admin, a page where he can see only his site settings data. Can read and update only",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674896466819
      },
      {
        "content": "You should use a collection with a <code>users</code> relationship field on it. This way you can assign a user to each site and ensure only those users and super-admins can update it. Your super-admin could be defined using a <code>roles</code> field on the user.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675050981585
      },
      {
        "content": "This way you can check <code>req.user</code> from an <code>access.update</code> hook to ensure it matches the documents assigned users or has the super-admin role.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675051048683
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Does Payload support deleting multiple documents at once in List view?",
      "id": "1074703344897114195",
      "createdAt": 1676299644446
    },
    "messages": [
      {
        "content": "It seems like the only way is to delete documents one by one in Edit view. Is there a faster way to bulk delete multiple documents in the admin panel?",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1676299644446
      },
      {
        "content": "Hey @bombnp not at the moment, but Bulk Editing is on our roadmap! You can keep an eye on stuff like that here - <a href=\"https://github.com/payloadcms/payload/discussions/1382\">https://github.com/payloadcms/payload/discussions/1382</a>",
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1676306019210
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Reverse proxy with Caddy",
      "id": "1071785036686299207",
      "createdAt": 1675603865549
    },
    "messages": [
      {
        "content": "I&#x27;m trying to deploy the back office application to a server. Here is what I already did :<br>- builded the back office<br>- ran the <code>dist/server.js</code> file with pm2 on port <code>3000</code><br>- setup a reverse proxy with a CaddyFile :<br><pre><code class=\"hljs\">admin.example.com {\n    reverse_proxy 127.0.0.1:3000\n}</code></pre><br>However hitting <code>admin.example.com</code> returns a 302 to <code>/admin</code> (great news right ?). But the admin route gives me a 404 <code>Cannot GET /admin</code> . Do you have any idea of what is happening ?",
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1675603865549
      },
      {
        "content": "Can&#x27;t figure out what the problem. I don&#x27;t even think it comes from Caddy.<br>Is this suppose to work  <code>curl http://localhost:3000/admin</code> ? I&#x27;m having the same HTML error, <code>Cannot GET /admin</code>, and I don&#x27;t find any logs 😦",
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1675618730272
      },
      {
        "content": "Serving locally for you works?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675620119170
      },
      {
        "content": "Works on my computer with <code>yarn dev</code> will try the build version this evening",
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1675670748956
      },
      {
        "content": "Yes, the build is working locally",
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1675716206615
      },
      {
        "content": "Ok, the server is working properly but only when I build with <code>NODE_ENV=development</code>. With <code>NODE_ENV=production</code> , I get the 404 error",
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1675722111584
      },
      {
        "content": "Ok, I resolved it, I have absolutely no idea how",
        "authorID": "280062818890547200",
        "authorName": "ElliotYoYo",
        "authorAvatar": "4f5c67d925d50fb5b5c0ebb40f4bf615",
        "createdAtDate": 1675806145765
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "MongoDB database is different than Payload",
      "id": "1069047585416949830",
      "createdAt": 1674951206307
    },
    "messages": [
      {
        "content": "So the data in the collection is not accurate, I have 2 records showing up in the dashboard but when I login to mongodb I can see 25 records in that collection. <br><br>I encountered this issue multiple times, the data is not synced properly. <br><br>Sometimes I have to change Show per page to 100 for the page to reload and show the correct data.<br><br>Is there a reason why this is happening?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674951206307
      },
      {
        "content": "Can you provide more information here? What version are you on? Are there any custom hooks on your collection?",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675049769627
      },
      {
        "content": "@jacobsfletch thanks",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675057578988
      },
      {
        "content": "I think the issue might be here",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675057585068
      },
      {
        "content": "access: {<br>        read: ({ req }) =&gt; {<br>            if (req.user) return true<br>            return {<br>                _status: {<br>                    equals: &#x27;published&#x27;,<br>                },<br>            }<br>        },",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675057607710
      },
      {
        "content": "I am on latest version",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675057623455
      },
      {
        "content": "I added this access so draft posts are not showing up for api",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675057649562
      },
      {
        "content": "But when logging to dashboard i dont see the draft posts anymore",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675057682301
      },
      {
        "content": "Unless i click on view x amount and they show up",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675057706334
      },
      {
        "content": "<blockquote>Unless i click on view x amount and they show up <br></blockquote>That is unexpected, your read access hook looks fine to me. Can open up your browser&#x27;s network tab and look for the requests being made when you navigate that page?",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675082425874
      },
      {
        "content": "so there is one particular request <code>/api/posts?locale=en&amp;depth=0&amp;draft=true</code> that looks interesting",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675086587647
      },
      {
        "content": "and it only has 2 records",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675086607693
      },
      {
        "content": "if I remove <code>&amp;draft=true</code>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675086634348
      },
      {
        "content": "I can see all posts returned",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675086647024
      },
      {
        "content": "This sounds like the same issue that you&#x27;re facing: <a href=\"https://github.com/payloadcms/payload/issues/1963\">https://github.com/payloadcms/payload/issues/1963</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675091564535
      },
      {
        "content": "@jacobsfletch oh yes, does look like the same issue I am facing, I also have version enabled",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675092033158
      },
      {
        "content": "Ok this is currently fixed in our canary release which is expected to be merged tomorrow or so",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675092180902
      },
      {
        "content": "@jacobsfletch is this going to be released soon?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675215218979
      },
      {
        "content": "We&#x27;re on track for tomorrow AM",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675215380910
      },
      {
        "content": "awesome, thank you",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675215457822
      }
    ],
    "messageCount": 19
  },
  {
    "info": {
      "name": "Does PayloadCMS provide front-end for pages?",
      "id": "1066925288572858479",
      "createdAt": 1674445211309
    },
    "messages": [
      {
        "content": "PayloadCMS claims to support pages and posts. In demo app there are also good examples for page layout being built with blocks.<br>Examples:<br>* <a href=\"https://payloadcms.com/use-cases/websites\">https://payloadcms.com/use-cases/websites</a><br>* <a href=\"https://demo.payloadcms.com/admin/collections/pages\">https://demo.payloadcms.com/admin/collections/pages</a><br><br>As far as I understand PayloadCMS does not support the front-end of these websites. But then in the case-study it claims to have Preview button &quot;baked in [...] to easily preview their content as they create it.&quot; This pegs the question if there is some out-of-the box front-end framework that somehow works with PayloadCMS page builder or your still have to do custom development for that. <br><br>If so, what is the point of the layout builder, if front-end is purely custom build and page layout changes needs front-end changes separately. <br><br>From the docs it is not clear where PayloadCMS functionality ends when building websites and blogs.",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1674445211309
      },
      {
        "content": "No, payload is a headless CMS which means it lets you implement the frontend yourself. That said, there are many examples in payload&#x27;s github of how to do this.<br><br>The layout builder / blocks provides a data structure which you frontend can render dynamically. Again, there are examples of this",
        "authorID": "258898794102521857",
        "authorName": "agenericguy",
        "authorAvatar": null,
        "createdAtDate": 1674447855745
      },
      {
        "content": "I see, do you know any good open source front-end that is compatible with the PayloadCMS page builder data structures?",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1674448290761
      },
      {
        "content": "well payload just provides you and API, so any frontend will do, most common one is nextjs",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674451161146
      },
      {
        "content": "Payload&#x27;s own website is built with NextJS 13 and using the cms itself. Both are open source and can be found on the github.<br><br>Website: <a href=\"https://github.com/payloadcms/website\">https://github.com/payloadcms/website</a><br>CMS part: <a href=\"https://github.com/payloadcms/website-cms\">https://github.com/payloadcms/website-cms</a><br><br>This could be a starting point",
        "authorID": "98717856123879424",
        "authorName": "alfw",
        "authorAvatar": "bd30f5cf51acecacedb238002ace8ca1",
        "createdAtDate": 1674456410884
      },
      {
        "content": "There is also a few videos over at the YouTube channel that still are valid but little outdated in some aspects -&gt; <a href=\"https://www.youtube.com/@payloadcms/videos\">https://www.youtube.com/@payloadcms/videos</a>",
        "authorID": "98717856123879424",
        "authorName": "alfw",
        "authorAvatar": "bd30f5cf51acecacedb238002ace8ca1",
        "createdAtDate": 1674456631326
      },
      {
        "content": "For my part, I can advice <a href=\"https://astro.build\">https://astro.build</a><br>Perfect for SSG (host on CDN)",
        "authorID": "190910246879756289",
        "authorName": "hgen",
        "authorAvatar": "9d45df29728ceeaf84c5d21834865421",
        "createdAtDate": 1674460776011
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Conditional Tab?",
      "id": "1068132580819480667",
      "createdAt": 1674733052211
    },
    "messages": [
      {
        "content": "I have a set of tabs, and want to show/hide specific tabs based on the standard <code>admin.condition</code> logic, but this doesn&#x27;t seem to be supported for the tab itself",
        "authorID": "93699784942034944",
        "authorName": "itsjxck",
        "authorAvatar": "2d16b59cd6bd3e7c108384738acef863",
        "createdAtDate": 1674733052211
      },
      {
        "content": "This feature is on our roadmap for later in the year! <a href=\"https://github.com/payloadcms/payload/discussions/1840\">https://github.com/payloadcms/payload/discussions/1840</a>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674754952744
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Autosave Local API",
      "id": "1068315385134325822",
      "createdAt": 1674776636156
    },
    "messages": [
      {
        "content": "It wasn&#x27;t very clear in the docs, but what&#x27;s the proper way to autosave using the Local API?<br><a href=\"https://payloadcms.com/docs/versions/autosave\">https://payloadcms.com/docs/versions/autosave</a>",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674776636156
      },
      {
        "content": "Experimenting a bit, looks like just the autosave flag alone won&#x27;t do it, you also need the draft flag as well:<br><br><pre><code class=\"hljs jsx\"><span class=\"hljs-comment\">// works</span>\n  <span class=\"hljs-keyword\">const</span> note = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">update</span>({\n        <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;notes&quot;</span>,\n        <span class=\"hljs-attr\">id</span>: noteId,\n        <span class=\"hljs-attr\">data</span>: {\n            mdx,\n            source,\n        },\n        user,\n        <span class=\"hljs-attr\">draft</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">autosave</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">locale</span>: <span class=\"hljs-string\">&quot;en&quot;</span>,\n    });</code></pre>",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674776707314
      },
      {
        "content": "With just <code>autosave</code> flag,  it seems to save all autosaves as a seperate draft:<br><br><pre><code class=\"hljs jsx\"><span class=\"hljs-comment\">// unexpected</span>\n  <span class=\"hljs-keyword\">const</span> note = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">update</span>({\n        <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;notes&quot;</span>,\n        <span class=\"hljs-attr\">id</span>: noteId,\n        <span class=\"hljs-attr\">data</span>: {\n            mdx,\n            source,\n        },\n        user,\n        <span class=\"hljs-attr\">autosave</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">locale</span>: <span class=\"hljs-string\">&quot;en&quot;</span>,\n    });</code></pre>",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674776825873
      },
      {
        "content": "ie, it behaves same as with only <code>draft</code> flag.",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674776857246
      },
      {
        "content": "Autosave is only an Admin UI concept. In the docs, it calls out the need for enabling drafts on the collection.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675439803132
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Is is possible to have an optional unique field?",
      "id": "1071899413536055387",
      "createdAt": 1675631135115
    },
    "messages": [
      {
        "content": "It seems that unique implies required.",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1675631135115
      },
      {
        "content": "Not true. I’ve had many occasions in other systems where I needed SQL indexes for “unique or null”",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675666356913
      },
      {
        "content": "Agree, how to do it in payload?",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1675667483899
      },
      {
        "content": "Could you do it in a custom validate function?",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675695086862
      },
      {
        "content": "Probably, but I think that would introduce a potential race condition. Created a discussion over here: <a href=\"https://github.com/payloadcms/payload/discussions/2072\">https://github.com/payloadcms/payload/discussions/2072</a>",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1676276146369
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Clone database to downstream environments",
      "id": "1072306934604120074",
      "createdAt": 1675728295709
    },
    "messages": [
      {
        "content": "I have environments for Prod, Staging, Dev, and local dev that I&#x27;d like to run Payload on... what&#x27;s the best way to be able to regularly clone content from the Prod database downstream to the staging/dev environment databases so that we&#x27;re always working with the latest content?<br><br>Is that something the Local API can do? Or better off with Mongo backup/restore?",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675728295709
      },
      {
        "content": "I would use Local API and write an export/import process ... this way you can export specific data from one environment, and import it into another ... this would allow for downstream syncing, but also provide upstream syncing as well ... for example, taking data on staging and moving it upstream.",
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675869560648
      },
      {
        "content": "@David Very cool. Do you happen to know of any examples doing that?",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675874537450
      },
      {
        "content": "I don&#x27;t believe any examples exist for local api at the moment - but I&#x27;m currently using the local api to manage &quot;seed&quot; data, which I&#x27;m also using to migrate data from WordPress into Payload.  I export the WP data into JSON files that are transformed into the shape of our Payload documents.  I then iterate over each JSON file and create/update the document using the Local API.<br><br>I haven&#x27;t built the export feature that will allow our devs to build documents on their local and then share those, at the moment, we&#x27;re just using the REST API to get the data and saving it as a JSON file manually ... but I plan to eventually support exporting the documents out of payload with an admin button, or a CLI command",
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675875304298
      },
      {
        "content": "Awesome, thank you much! I think that would be a great feature to have built in!  In the mean time I will dig into using the Local API to achieve this.",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675875469648
      },
      {
        "content": "@Douggie O hopefully this helps ... this is a stripped down version of the script I&#x27;m using to seed data ... <a href=\"https://gist.github.com/higginsd-kong/a36d08cd5547dd97cac79226bfddf7cb\">https://gist.github.com/higginsd-kong/a36d08cd5547dd97cac79226bfddf7cb</a><br><br>It assumes there are JSON files in the <code>/seeds</code> folder at the project root.  Each collection has it&#x27;s own folder, and it supports the <code>nested docs</code> plugin ... it does currently assume the data is being loaded in the correct order.  It may say that relationships do not exist, and we&#x27;re just running it a second time in that case as it creates/updates data.<br><br>It also assumes that collections define a custom ID field, ... we just use <code>bson-objectid</code> in a <code>beforeChange</code> hook to auto-generate ID&#x27;s before creating a document.<br><br>The JSON files are basically the return from the REST API with <code>depth=0</code> ... we do strip out some of the data added by nested-docs (such as breadcrumbs property)",
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675876593965
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Problem with custom auth strategy",
      "id": "1041405431387533442",
      "createdAt": 1668360803220
    },
    "messages": [
      {
        "content": "I created a google oauth strategy with passport, I added it to payload and in the login everything works well (you can login, generate a token, and the token is set to the payload-token http-only cookie) but in the admin panel I can&#x27;t access, also, the api isn&#x27;t working, i&#x27;m getting this error in the console for the admin",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668360803220
      },
      {
        "content": "",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668360898140
      },
      {
        "content": "",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668360902312
      },
      {
        "content": "My users collection:<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">GoogleStrategy</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../auth/google&quot;</span>;\n<span class=\"hljs-keyword\">import</span> finalise <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../auth/jwt&quot;</span>;\n<span class=\"hljs-keyword\">import</span> passport <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;passport&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Users</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n  <span class=\"hljs-attr\">auth</span>: {\n    <span class=\"hljs-attr\">tokenExpiration</span>: <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">7</span>, <span class=\"hljs-comment\">// 1 week</span>\n    <span class=\"hljs-attr\">verify</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">maxLoginAttempts</span>: <span class=\"hljs-number\">5</span>,\n    <span class=\"hljs-attr\">lockTime</span>: <span class=\"hljs-number\">600</span> * <span class=\"hljs-number\">1000</span>,\n    <span class=\"hljs-attr\">useAPIKey</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">strategies</span>: [\n      {\n        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;google&quot;</span>,\n        <span class=\"hljs-attr\">strategy</span>: <span class=\"hljs-title class_\">GoogleStrategy</span>,\n      },\n    ],\n  },\n  <span class=\"hljs-attr\">endpoints</span>: [\n    {\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/google&quot;</span>,\n      <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&quot;get&quot;</span>,\n      <span class=\"hljs-attr\">handler</span>: <span class=\"hljs-keyword\">async</span> (req, res) =&gt; {\n        passport.<span class=\"hljs-title function_\">authenticate</span>(<span class=\"hljs-string\">&quot;google&quot;</span>, {\n          <span class=\"hljs-attr\">scope</span>: [<span class=\"hljs-string\">&quot;profile&quot;</span>, <span class=\"hljs-string\">&quot;email&quot;</span>],\n        })(req, res);\n      },\n    },\n    {\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/google/callback&quot;</span>,\n      <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&quot;get&quot;</span>,\n      <span class=\"hljs-attr\">handler</span>: <span class=\"hljs-keyword\">async</span> (req, res) =&gt; {\n        req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-title function_\">authenticate</span>(req, res, <span class=\"hljs-function\">() =&gt;</span> {\n          <span class=\"hljs-keyword\">if</span> (req?.<span class=\"hljs-property\">user</span>) {\n            <span class=\"hljs-keyword\">const</span> final = <span class=\"hljs-title function_\">finalise</span>(req, res);\n            <span class=\"hljs-keyword\">return</span> final.<span class=\"hljs-property\">res</span>.<span class=\"hljs-title function_\">status</span>(<span class=\"hljs-number\">200</span>).<span class=\"hljs-title function_\">send</span>({ <span class=\"hljs-attr\">token</span>: final.<span class=\"hljs-property\">token</span> });\n          }\n          <span class=\"hljs-keyword\">return</span> res.<span class=\"hljs-title function_\">status</span>(<span class=\"hljs-number\">401</span>).<span class=\"hljs-title function_\">send</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Unauthorized&quot;</span> });\n        });\n      },\n    },\n  ],\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">Users</span>;</code></pre>",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668361097484
      },
      {
        "content": "the google strategy:",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668361140790
      },
      {
        "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> payload <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Strategy</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;passport-google-oauth20&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { v4 <span class=\"hljs-keyword\">as</span> uuidv4 } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;uuid&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Forbidden</span>, <span class=\"hljs-title class_\">LockedAuth</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/errors&quot;</span>;\n\n<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;dotenv&quot;</span>).<span class=\"hljs-title function_\">config</span>();\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">GoogleStrategy</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Strategy</span>(\n  {\n    <span class=\"hljs-attr\">clientID</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">GOOGLE_CLIENT_ID</span>,\n    <span class=\"hljs-attr\">clientSecret</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">GOOGLE_CLIENT_SECRET</span>,\n    <span class=\"hljs-attr\">callbackURL</span>: <span class=\"hljs-string\">&quot;/api/users/google/callback&quot;</span>,\n    <span class=\"hljs-attr\">scope</span>: [<span class=\"hljs-string\">&quot;profile&quot;</span>, <span class=\"hljs-string\">&quot;email&quot;</span>],\n  },\n  <span class=\"hljs-keyword\">async</span> (accessToken, refreshToken, profile, done) =&gt; {\n    <span class=\"hljs-keyword\">const</span> { emails } = profile;\n    <span class=\"hljs-keyword\">const</span> email = emails[<span class=\"hljs-number\">0</span>]?.<span class=\"hljs-property\">value</span>;\n\n    <span class=\"hljs-keyword\">if</span> (!email) {\n      <span class=\"hljs-title function_\">done</span>(<span class=\"hljs-title class_\">Forbidden</span>, <span class=\"hljs-literal\">false</span>);\n    }\n\n    <span class=\"hljs-keyword\">try</span> {\n      <span class=\"hljs-keyword\">let</span> user = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">find</span>({\n        <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n        <span class=\"hljs-attr\">where</span>: {\n          <span class=\"hljs-attr\">email</span>: {\n            <span class=\"hljs-attr\">equals</span>: email,\n          },\n        },\n      });\n\n      <span class=\"hljs-keyword\">if</span> (user?.<span class=\"hljs-property\">totalDocs</span> &gt; <span class=\"hljs-number\">0</span>) {\n        user = user.<span class=\"hljs-property\">docs</span>[<span class=\"hljs-number\">0</span>];\n      }\n\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">isLocked</span> = (<span class=\"hljs-params\">date</span>) =&gt; !!(date &amp;&amp; date &gt; <span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">now</span>());\n      <span class=\"hljs-keyword\">if</span> (user &amp;&amp; <span class=\"hljs-title function_\">isLocked</span>(user.<span class=\"hljs-property\">lockUntil</span>)) {\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LockedAuth</span>();\n      }\n\n      <span class=\"hljs-keyword\">if</span> (user?.<span class=\"hljs-property\">totalDocs</span> &lt; <span class=\"hljs-number\">1</span>) {\n        user = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">create</span>({\n          <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n          <span class=\"hljs-attr\">data</span>: {\n            email,\n            <span class=\"hljs-attr\">password</span>: <span class=\"hljs-title function_\">uuidv4</span>(),\n            <span class=\"hljs-attr\">avatar</span>: <span class=\"hljs-string\">&quot;1&quot;</span>,\n            <span class=\"hljs-attr\">_verified</span>: <span class=\"hljs-literal\">true</span>,\n          },\n          <span class=\"hljs-attr\">disableVerificationEmail</span>: <span class=\"hljs-literal\">true</span>,\n        });\n      }\n\n      <span class=\"hljs-keyword\">if</span> (user) {\n        user.<span class=\"hljs-property\">collection</span> = <span class=\"hljs-string\">&quot;users&quot;</span>;\n        user.<span class=\"hljs-property\">_strategy</span> = <span class=\"hljs-string\">&quot;google&quot;</span>;\n        <span class=\"hljs-title function_\">done</span>(<span class=\"hljs-literal\">null</span>, user);\n      } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-title function_\">done</span>(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">false</span>);\n      }\n    } <span class=\"hljs-keyword\">catch</span> (e) {\n      <span class=\"hljs-title function_\">done</span>(e, <span class=\"hljs-literal\">false</span>);\n    }\n  }\n);\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">GoogleStrategy</span>;</code></pre>",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668361198631
      },
      {
        "content": "token:",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668361229140
      },
      {
        "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> jwt <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;jsonwebtoken&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">finalise</span> = (<span class=\"hljs-params\">req, res</span>) =&gt; {\n  <span class=\"hljs-keyword\">let</span> user = req.<span class=\"hljs-property\">user</span>;\n  user = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(user));\n  user = <span class=\"hljs-title function_\">sanitizeInternalFields</span>(user);\n\n  <span class=\"hljs-keyword\">const</span> collections = req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-property\">collections</span>;\n  <span class=\"hljs-keyword\">const</span> userCollection = collections[req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-property\">config</span>.<span class=\"hljs-property\">admin</span>.<span class=\"hljs-property\">user</span>];\n  <span class=\"hljs-keyword\">const</span> collectionConfig = userCollection.<span class=\"hljs-property\">config</span>;\n\n  <span class=\"hljs-keyword\">const</span> fieldsToSign = <span class=\"hljs-title function_\">getFieldsToSign</span>(collectionConfig, user);\n\n  <span class=\"hljs-keyword\">const</span> token = jwt.<span class=\"hljs-title function_\">sign</span>(fieldsToSign, req.<span class=\"hljs-property\">payload</span>.<span class=\"hljs-property\">secret</span>, {\n    <span class=\"hljs-attr\">expiresIn</span>: collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">tokenExpiration</span>,\n  });\n\n  <span class=\"hljs-keyword\">const</span> cookieOptions = {\n    <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/&quot;</span>,\n    <span class=\"hljs-attr\">httpOnly</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">expires</span>: <span class=\"hljs-title function_\">getCookieExpiration</span>(collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">tokenExpiration</span>),\n    <span class=\"hljs-attr\">secure</span>: collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-property\">secure</span>,\n    <span class=\"hljs-attr\">sameSite</span>: collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-property\">sameSite</span>,\n    <span class=\"hljs-attr\">domain</span>: <span class=\"hljs-literal\">undefined</span>,\n  };\n\n  <span class=\"hljs-keyword\">if</span> (collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-property\">domain</span>) {\n    cookieOptions.<span class=\"hljs-property\">domain</span> = collectionConfig.<span class=\"hljs-property\">auth</span>.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-property\">domain</span>;\n  }\n\n  res.<span class=\"hljs-title function_\">cookie</span>(<span class=\"hljs-string\">`payload-token`</span>, token, cookieOptions);\n\n  req.<span class=\"hljs-property\">user</span> = user;\n\n  <span class=\"hljs-keyword\">return</span> { req, res, token };\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> finalise;</code></pre>",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668361265021
      },
      {
        "content": "any ideas?",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668439159572
      },
      {
        "content": "have you set all the relevant origins and callbacks in cloud console?",
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1668441210863
      },
      {
        "content": "",
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1668441214786
      },
      {
        "content": "make sure to add both localhost and localhost:3100 in your case",
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1668441249567
      },
      {
        "content": "and by the way, I updated the google-one-tap plugin yesterday so it should work out the box now",
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1668441354931
      },
      {
        "content": "how to use it for auth from client?",
        "authorID": "680820827804925953",
        "authorName": "Sora",
        "authorAvatar": "84460ba76680abd54e80ab5954aa3a6e",
        "createdAtDate": 1668442538165
      },
      {
        "content": "Its not built for auth from client, just as an auth for payloadcms admin. Auth from client depends a lot on what client but you should be able to quite easily copy the code in my repo and make the necessary adjustments. The main difference would be that I save the jwt token using payloads setToken useAuth whereas you would be wanting to do similar client side:<br><a href=\"https://github.com/ScottEAdams/payload-plugin-google-one-tap/blob/main/src/components/button.tsx\">https://github.com/ScottEAdams/payload-plugin-google-one-tap/blob/main/src/components/button.tsx</a>",
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1668443949266
      },
      {
        "content": "oh thank you, I made a little fork for my project",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668447536011
      },
      {
        "content": "@7wonders any toughs on this?",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1668530402800
      },
      {
        "content": "Sorry, been offline a bunch. Have you got the <code>app.use(express.json())</code>",
        "authorID": "274881403454226434",
        "authorName": "7wonders",
        "authorAvatar": "cdc0ebbc3f0f149be0e841f1a76cf27e",
        "createdAtDate": 1669147077675
      },
      {
        "content": "yes, but it stills not work",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669149976098
      },
      {
        "content": "Now the problem is when an account does not exits resolves with a 401 code",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669150091496
      },
      {
        "content": "",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669150097476
      },
      {
        "content": "@7wonders I think i got the problem",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669504975474
      },
      {
        "content": "seems like the plugin cannot access to accounts that are not created yet",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669504995395
      },
      {
        "content": "so you can&#x27;t cerate an account in payload using this method",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669505007620
      },
      {
        "content": "any thougs in how can i make that?",
        "authorID": "710199181305839707",
        "authorName": "ScriptDroid",
        "authorAvatar": "0c530790265ff074672ce2c0639ceebd",
        "createdAtDate": 1669505016309
      },
      {
        "content": "As soon as I add this plugin to payload, the application does not compile:<br><br><pre><code class=\"hljs\">BREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.</code></pre>",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1671543949638
      },
      {
        "content": "Any change we can peek inside the  <pre><code class=\"hljs\">sanitizeInternalFields, getFieldsToSign and getCookieExpiration</code></pre> functions?",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1671544331918
      }
    ],
    "messageCount": 26
  },
  {
    "info": {
      "name": "Docs for PATCH or POST operations",
      "id": "1057815227615428740",
      "createdAt": 1672273203520
    },
    "messages": [
      {
        "content": "I don&#x27;t know what is required in the body of those requests. Are there any docs or examples for those?",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1672273203520
      },
      {
        "content": "Didnt find any docs but it seems to just need the fields + new values as stringified json in the body",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1672274965943
      },
      {
        "content": "Can you share an example here?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674194595445
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Can We collaborate with Paylaod CMS?",
      "id": "1075256043220783194",
      "createdAt": 1676431417995
    },
    "messages": [
      {
        "content": "Hey Sophia! This is Vincent from the ILLA team, we are building an open-source low-code tool for developers. Our Repo is here: <a href=\"https://github.com/illacloud/illa-builder\">https://github.com/illacloud/illa-builder</a>, Do you think we can build a collaboration with your product? Since your product is headless and our product is UI libaray as a head if you can combine.",
        "authorID": "998777068785520760",
        "authorName": "silencer.xyz",
        "authorAvatar": "193babc99125d2e80dd13aa3cc219f0d",
        "createdAtDate": 1676431417995
      },
      {
        "content": "@silencer.xyz Of course! Payload was built with this type of integration in mind 👍",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676470990613
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Replacing useMemo with useState?",
      "id": "1067085240062984254",
      "createdAt": 1674483346716
    },
    "messages": [
      {
        "content": "Currently, when I try to set a custom elements or leaves in the richText, I get <code>Cannot find a descendant at path</code> error which causes because useMemo is reevaluated on reloads so we might need to use useState instead?<br><a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/RichText/RichText.tsx#L155\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/RichText/RichText.tsx#L155</a><br>Related issue: <a href=\"https://github.com/ianstormtaylor/slate/issues/4081\">https://github.com/ianstormtaylor/slate/issues/4081</a>",
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1674483346716
      },
      {
        "content": "@Jarrod any thoughts?",
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1674512193975
      },
      {
        "content": "This is probably due to your implementation, and you might be attempting to use an improper path or location",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443143210
      },
      {
        "content": "that error is common when you try to update a node&#x27;s properties (or similar) but the path that you&#x27;re trying to do that against is not valid",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443168025
      },
      {
        "content": "we do this often within Slate, all over the place in fact - so it&#x27;s not something that is related to our use of <code>useMemo</code> vs. <code>useState</code>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675443188300
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "supporting other databases",
      "id": "1073859030503653387",
      "createdAt": 1676098344208
    },
    "messages": [
      {
        "content": "Is supporting other databases in the roadmap?  For example Planetscale?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676098344208
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/discussions/287\">https://github.com/payloadcms/payload/discussions/287</a> pretty much, though I doubt planetscale would be one supported out of the box, I think once ^ this is done you&#x27;d be able to use or write your own adapter for any db",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1676106161942
      },
      {
        "content": "Correct, we&#x27;ll likely go with Prisma or similar to be able to hit as much DB support as possible.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676241847177
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How to edit the list view of an upload collection?",
      "id": "1071841509399351337",
      "createdAt": 1675617329693
    },
    "messages": [
      {
        "content": "I have this example but I was hoping for a more custom way to do it. For example I don&#x27;t want to display a Product like that with its ID but all of the Product&#x27;s fields. How would I do that?<br> <br><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Example</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/dist/admin/components/views/collections/List/Default&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Props</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/dist/admin/components/views/collections/List/types&quot;</span>;\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">ProductsList</span>(<span class=\"hljs-params\">props: Props</span>) {\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Example</span>\n            <span class=\"hljs-attr\">collection</span>=<span class=\"hljs-string\">{props.collection}</span>\n            <span class=\"hljs-attr\">columnNames</span>=<span class=\"hljs-string\">{props.columnNames}</span>\n            <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{props.data}</span>\n            <span class=\"hljs-attr\">hasCreatePermission</span>=<span class=\"hljs-string\">{props.hasCreatePermission}</span>\n            <span class=\"hljs-attr\">limit</span>=<span class=\"hljs-string\">{props.limit}</span>\n            <span class=\"hljs-attr\">newDocumentURL</span>=<span class=\"hljs-string\">{props.newDocumentURL}</span>\n            <span class=\"hljs-attr\">setColumns</span>=<span class=\"hljs-string\">{props.setColumns}</span>\n            <span class=\"hljs-attr\">setListControls</span>=<span class=\"hljs-string\">{props.setListControls}</span>\n            <span class=\"hljs-attr\">setSort</span>=<span class=\"hljs-string\">{props.setSort}</span>\n            <span class=\"hljs-attr\">tableColumns</span>=<span class=\"hljs-string\">{props.tableColumns}</span>\n            <span class=\"hljs-attr\">setLimit</span>=<span class=\"hljs-string\">{props.setLimit}</span>\n        /&gt;</span></span>\n    );\n}\n\n<span class=\"hljs-keyword\">export</span> { <span class=\"hljs-title class_\">ProductsList</span> };</code></pre>",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675617329693
      },
      {
        "content": "You can use your own custom <code>List</code> component to do this, read a bit more about this here: <a href=\"https://payloadcms.com/docs/admin/components#collections\">https://payloadcms.com/docs/admin/components#collections</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675689371930
      },
      {
        "content": "Basically, on your upload collection you will need to add <code>admin: { views: { List: ProductsList } }</code>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675689439479
      },
      {
        "content": "yes i&#x27;m doing this but i meant i want to access the default Upload list component that Payload provides me, so that i can edit parts of it. i don&#x27;t want to build the component from scratch or only change some props. for example i want to change the shape of that Product in the image to be horizontal and including other fields",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675701818859
      },
      {
        "content": "if that&#x27;s possible",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675701823444
      },
      {
        "content": "i imported views/collections/List/Default but i can&#x27;t customize it any more than change its props like collection and columnNames, etc.",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675701870793
      },
      {
        "content": "Sure that makes sense. Currently you would have to copy that file (ensure import paths are updated to point to dist instead of relative paths) and then swap out the UploadGallery with your own gallery component.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675706081400
      },
      {
        "content": "I think in the future, uploads will change - either we go with list/grid display (option toggle) or just align the upload gallery so it matches the collection lists",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675706140617
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/discussions/1337\">https://github.com/payloadcms/payload/discussions/1337</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675706394049
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "Admin condition",
      "id": "1065946359439573042",
      "createdAt": 1674211816416
    },
    "messages": [
      {
        "content": "Is it possible to check the length of a siblingData&#x27;s array within an admin: condition?<br><br>Trying this causes browser console errors:<br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">condition</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">_, siblingData</span>) =&gt;</span> siblingData?.<span class=\"hljs-property\">mediaItems</span>.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">2</span>,</code></pre><br><br>I&#x27;ve also tried:<br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">condition</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">data, siblingData</span>) =&gt;</span> data?.<span class=\"hljs-property\">mediaItems</span>.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">2</span>,</code></pre><br><br>The field object I&#x27;m trying to check looks like this:<br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;mediaItems&#x27;</span>,\n  <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;array&#x27;</span>,\n  <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Media items&#x27;</span>,\n  <span class=\"hljs-attr\">minRows</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">fields</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;media&#x27;</span>,\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Media photos&#x27;</span>,\n      <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-title class_\">MediaSlugs</span>.<span class=\"hljs-property\">mediaPhotos</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;upload&#x27;</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },\n  ],\n},</code></pre><br><br>Any guidance appreciated!",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674211816416
      },
      {
        "content": "Hi @jakehopking - your first condition looks correct, if you put another <code>?</code> after <code>mediaItems</code> does that fix the error?<br><br><code>condition: (_, siblingData) =&gt; siblingData?.mediaItems?.length === 2</code>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674217633395
      },
      {
        "content": "Thanks @jesschow - Yes, this does provide the solution. Funny I thought it might be this issue a few mins before you replied!",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674218042830
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "payload build missing ENV and styles",
      "id": "1063030217788108860",
      "createdAt": 1673516554067
    },
    "messages": [
      {
        "content": "I&#x27;m facing the issue that when I run payload on my server in production mode, my custom styles won&#x27;t load and environment variables don&#x27;t seem to be available to my custom components in the dashboard (even with PAYLOAD_PUBLIC prefix).<br><br>When I run payload in development mode on the same server, styles and ENV are there.<br><br>The Dashboard is built using payload build right on the server, with css files and env in place. <br><br>An interesting thing I noticed: If I run npm run dev, but have NODE_ENV set to production, payload seems to actually use the prebuilt dashboard bundle. Is that the expected behaviour?",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673516554067
      },
      {
        "content": "Hey @Sandro Wegmann following up here. Did you ever get this working? Here is a little thread about env vars and how to use them if you have not already seen it: <a href=\"https://github.com/payloadcms/payload/issues/1654#issuecomment-1403972303\">https://github.com/payloadcms/payload/issues/1654#issuecomment-1403972303</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675438843375
      },
      {
        "content": "Hey Jarrod, thanks for the link, it&#x27;s pretty helpful. I actually just tried it again with the same code, and it seems to work flawlessly now. Maybe cache issues or a payload update 😅",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1675440821020
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Upload field with MongoDB GridFS instead of file system",
      "id": "1067728066949947422",
      "createdAt": 1674636608589
    },
    "messages": [
      {
        "content": "Hi guys! Is there a way to configure the upload field to use MongoDB GridFS instead of the file system?",
        "authorID": "1039531494894473286",
        "authorName": "gubarez",
        "authorAvatar": null,
        "createdAtDate": 1674636608589
      },
      {
        "content": "This isn&#x27;t something that we support currently. I&#x27;m not familiar with GridFS at all. That being said, we do have a cloud-storage plugin that implements S3 and other providers as a file store for Payload.<br><br>You likely could add an adapter (the plugin supports custom adapters being passed in) or use this as a model to create a plugin to achieve your needs.<br><br><a href=\"https://github.com/payloadcms/plugin-cloud-storage/\">https://github.com/payloadcms/plugin-cloud-storage/</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674750597936
      },
      {
        "content": "Thanks! I was aware of the plugin, indeed this could be used with some modifications.",
        "authorID": "1039531494894473286",
        "authorName": "gubarez",
        "authorAvatar": null,
        "createdAtDate": 1675088362502
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Google Cloud Run deployment",
      "id": "1073249306838052864",
      "createdAt": 1675952974758
    },
    "messages": [
      {
        "content": "Would anyone be able to assist in sharing the Dockerfile they use for deployment on Google Cloud Run?<br><br>Very much out of my depth with docker 😅",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675952974758
      },
      {
        "content": "to clarify, i&#x27;m having difficulties with the built image saying that it&#x27;s unable to find payload config",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1675959765684
      },
      {
        "content": "try this out;<br><br><pre><code class=\"hljs\">FROM node:18.8-alpine as base\n\nFROM base as builder\n\nWORKDIR /home/node/app\nCOPY ./package*.json ./\n\nCOPY . .\nRUN yarn install\nRUN yarn build\n\nFROM base as runtime\n\nENV NODE_ENV=production\nENV PAYLOAD_CONFIG_PATH=dist/payload.config.js\n\nWORKDIR /home/node/app\nCOPY package*.json  ./\n\nRUN yarn install --production\nCOPY --from=builder /home/node/app/dist ./dist\nCOPY --from=builder /home/node/app/build ./build\n\nEXPOSE 3000\n\nCMD [&quot;node&quot;, &quot;dist/server.js&quot;]</code></pre>",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675966330801
      },
      {
        "content": "thank you for providing this, unfortunately this didn&#x27;t solve the issue 😦",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676006902167
      },
      {
        "content": "what i found though is that if the end CMD is instead [&quot;yarn&quot;, &quot;run&quot;, &quot;serve&quot;] it runs fine 🙂",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676006935139
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Populating fields using depth is not working.",
      "id": "1067413120005455942",
      "createdAt": 1674561519386
    },
    "messages": [
      {
        "content": "I am trying to populate the image field but it is returning an id. <br>but using the api url in browser shows all image variants with populated fields.<br>tried with /api/products?locale=en&amp;depth=2 through axios does not work.",
        "authorID": "943472469057077261",
        "authorName": "uxdkhan",
        "authorAvatar": "b6daf4d8150b4d38e28fdc79b83f09e2",
        "createdAtDate": 1674561519386
      },
      {
        "content": "Are you sure the picture exists? It looks as if the picture has been deleted and therefore only the id is given.",
        "authorID": "190910246879756289",
        "authorName": "hgen",
        "authorAvatar": "9d45df29728ceeaf84c5d21834865421",
        "createdAtDate": 1674561854920
      },
      {
        "content": "Yes, picture indeed exists.<br><br>For clarity: I am fetching products collections (not globals).<br>it returns the object with a nested arrays of docs: <br>so I need to populate that docs =&gt; [ {otherStuff, image} ] image property which is currently not populate via axios.",
        "authorID": "943472469057077261",
        "authorName": "uxdkhan",
        "authorAvatar": "b6daf4d8150b4d38e28fdc79b83f09e2",
        "createdAtDate": 1674561952212
      },
      {
        "content": "Do your images have access control defined on their collection?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674563155628
      },
      {
        "content": "No, it did not have any<br>attached two images.<br><br>media collection is the image that is included inside products",
        "authorID": "943472469057077261",
        "authorName": "uxdkhan",
        "authorAvatar": "b6daf4d8150b4d38e28fdc79b83f09e2",
        "createdAtDate": 1674564727650
      },
      {
        "content": "Thanks @Jarrod . It is working now with the access. <br>How can I prefix the image url with the server url from the backend?",
        "authorID": "943472469057077261",
        "authorName": "uxdkhan",
        "authorAvatar": "b6daf4d8150b4d38e28fdc79b83f09e2",
        "createdAtDate": 1674566979890
      },
      {
        "content": "normally we just use <code>env</code> variables on the frontend and build the entire url on the frontend using <code>process.env.SERVER_URL</code> + image url",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674567078040
      },
      {
        "content": "Yes. had the same idea but the funny thing is that <br>using localhost, it does assign url automatically.",
        "authorID": "943472469057077261",
        "authorName": "uxdkhan",
        "authorAvatar": "b6daf4d8150b4d38e28fdc79b83f09e2",
        "createdAtDate": 1674567330245
      },
      {
        "content": "@Jarrod : it works if you define the serverUrl in the config",
        "authorID": "943472469057077261",
        "authorName": "uxdkhan",
        "authorAvatar": "b6daf4d8150b4d38e28fdc79b83f09e2",
        "createdAtDate": 1674567981279
      },
      {
        "content": "beautiful",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674568037495
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "How to pass data to field level access control?",
      "id": "1073532264400551957",
      "createdAt": 1676020437098
    },
    "messages": [
      {
        "content": "From this doc I can read that field level access control accepts user, data, doc, siblingData and id.<br><a href=\"https://payloadcms.com/docs/access-control/fields#field-level-access-control\">https://payloadcms.com/docs/access-control/fields#field-level-access-control</a><br><br>When I pass doc or data to the function, it&#x27;s always undefined.<br>What is more, is that value reactive i.e. will the access control update when the editReason changes.<br> <pre><code class=\"hljs\"> \naccess: {\n  update: ({ req: { user }, doc }) =&gt; { if(doc) return doc.editReason === &quot;impairment&quot;; else return true }\n  }</code></pre><br><br>What I wish to achieve is a dynamic field readOnly status. As the admin field readOnly doesn&#x27;t accept a function, I am attempting to use the access controls for this.",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676020437098
      },
      {
        "content": "Hey @KasparTr , there are certain instances where access control is executed without reference to the document. More detail in our docs here under the Argument Availability section: <a href=\"https://payloadcms.com/docs/access-control/overview#access-control\">https://payloadcms.com/docs/access-control/overview#access-control</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676060807974
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "WordPress to Payload?",
      "id": "1062908841664200725",
      "createdAt": 1673487615744
    },
    "messages": [
      {
        "content": "Hey everyone. I&#x27;m coming from a WordPress site with close to 1m records, is there an easier and faster way to transfer all those records to PayloadCMS or we&#x27;ll need to add them manually if we switch over to PayloadCMS?",
        "authorID": "436035265614839808",
        "authorName": "dplgngr",
        "authorAvatar": "c121ac319ebc2f4850268e8fcde127e9",
        "createdAtDate": 1673487615744
      },
      {
        "content": "Hey @dplgngr,<br>I&#x27;ve written migration scripts for getting data from one source, mapping them to objects and then creating the new docs in Payload. I would never manually try and create existing data with that many records. Here is a similar question on the Payload Github with more info for you:<br><a href=\"https://github.com/payloadcms/payload/discussions/1660\">https://github.com/payloadcms/payload/discussions/1660</a>",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675443541674
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "lastModifiedBy",
      "id": "1062982283453280258",
      "createdAt": 1673505125631
    },
    "messages": [
      {
        "content": "i&#x27;m checked in users api it&#x27;s storing multiple objects of lastModifiedBy:{} like shown in image, i want to know the reason",
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1673505125631
      },
      {
        "content": "oh no that is weird - do you mind sharing your user collection?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673518892974
      },
      {
        "content": "@jesschow why not!",
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1673521894667
      },
      {
        "content": "Are you adding lastModifiedBy with a plugin or similar?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673530036916
      },
      {
        "content": "@Jarrod <a href=\"https://payloadcms.com/docs/plugins/overview#simple-example:~:text=will%20be%20sanitized.-,Simple%20example,-Here%20is%20an\">https://payloadcms.com/docs/plugins/overview#simple-example:~:text=will%20be%20sanitized.-,Simple%20example,-Here%20is%20an</a>",
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1673532113618
      },
      {
        "content": "i&#x27;m added from this",
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1673532130597
      },
      {
        "content": "hii @Jarrod i&#x27;m waiting for your response",
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1673951542257
      },
      {
        "content": "So what I see is what I would expect, I think. The shape you are seeing is not what is stored in the db, the db just stores the value as id and the relationTo. If you set a <code>depth</code> parameter in your query params <code>?depth=1</code> what do you get?<br><br>Think about it if the last modified was another user, it would fulfill that user and they would have a last modified field, that would get fulfilled and so on. The only thing here is, it’s a circular reference so you need a way to break the chain. I would likely create another field <code>lastModifiedBySelf</code> and then check the user id on the request with the id on <code>originalDoc</code>, if they match set the new checkbox and clear the relationship, else set the relationship.<br><br>See all arguments for beforeChange hook here <a href=\"https://payloadcms.com/docs/hooks/collections#beforechange\">https://payloadcms.com/docs/hooks/collections#beforechange</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673957951482
      },
      {
        "content": "OR, you could set <code>maxDepth</code> on the relationship field, probably more-so what you are looking for. <a href=\"https://payloadcms.com/docs/fields/relationship#config\">https://payloadcms.com/docs/fields/relationship#config</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673962157614
      },
      {
        "content": "okay so what i have to do now?",
        "authorID": "1043125033519820902",
        "authorName": "bhavikak",
        "authorAvatar": null,
        "createdAtDate": 1674109694990
      },
      {
        "content": "Have you tried either of the things I mentioned above?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674129004173
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "some help with integrating Logto to a payload / next setup.",
      "id": "1072561667197640735",
      "createdAt": 1675789028692
    },
    "messages": [
      {
        "content": "Hi, I have a repo with payload and next setup and I would like to integrate logto which is an open source alternative to auth0, <br>Can someone help me achieve that ? should be relatively simple to adopt the auth0 existing plugin to do that. Willing to pay for the effort. Thx!",
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1675789028692
      },
      {
        "content": "Just some curiosity from the sidelines. Why logto over Payload’s auth? Is there a specific benefit?",
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1675806161136
      },
      {
        "content": "social logins",
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1675807704752
      },
      {
        "content": "Hmm, I&#x27;m starting to wonder if we should have a jobs/freelance channel here in Discord for this. Thoughts?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676053732815
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Narrowing relationship field type from generated payload types (Typescript)",
      "id": "1069455509612146709",
      "createdAt": 1675048463014
    },
    "messages": [
      {
        "content": "This is mostly a Typescript question.<br><br>Say, I have 2 collections, <code>Problems</code> and <code>ProblemLists</code>, where problem list contains a relationship field with problems (hasMany = true). In the generated types, the field type is &quot;string[] | Problem[]&quot; which is understandable, given how Payload query works. However, in our use case, we always populate this relationship field in our query (with depth &gt; 1), so the field is never &quot;string[]&quot;.<br><br>Is there a clean way to use the payload generated type, but has the relationship field not a union type of &quot;string[] | Problem[]&quot;?",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675048463014
      },
      {
        "content": "Are you using the Local API? Payload types are about to be significantly improved by no longer using generics for local API methods, but instead typing the return value based on your config and args. This has been a well-known pain-point in our type generation that we are committed to improving.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675051563749
      },
      {
        "content": "i&#x27;m querying from our frontend (Axios in Next.js), but we&#x27;re using the generated types from payload to keep types in sync.",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675061653730
      },
      {
        "content": "I don&#x27;t think we have a great pattern around this yet. You could use inference types for now but I realize that&#x27;s not long-term solution.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675082718957
      },
      {
        "content": "Thanks for the response @jacobsfletch. Is there a timeline planned for these type changes? (not rushing, just wonder if there&#x27;s a timeline for it)",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675088801554
      },
      {
        "content": "No timeline on this yet. One difficult part of this is access control, where <code>depth</code> is not the only determining factor around whether you&#x27;d receive an id or an object in your relationships.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675091418109
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Custom IDs lead to being unable to retrieve resources",
      "id": "1064432783147139153",
      "createdAt": 1673850951707
    },
    "messages": [
      {
        "content": "Hi there.<br><br>I&#x27;m just starting to configure out new Payload instance. We&#x27;ve got a content type that&#x27;s setup to use both draft/publishing, and a custom ID. After a few draft/publish cycles, I&#x27;ve this this issue where no documents appear in the list. Digging into the console,  I get a 500 when the admin tries to hit <code>api/insights?locale=en&amp;depth=0&amp;draft=true</code><br><br>Looking at the response from that call, it has an error object, containing: <code>{&quot;message&quot;:&quot;PlanExecutor error during aggregation :: caused by :: Failed to parse objectId &#x27;test&#x27; in $convert with no onError value: Invalid string length for parsing to OID, expected 24 but found 4&quot;}</code><br><br>Now, <code>test</code> was the id I had set for my test object. It seems like it&#x27;s trying to parse it as an OID, which I assume means it thinks the id field should be payload&#x27;s default format, instead of a custom text field, as configured.<br><br>Even more interestingly, if I delete <code>draft=true</code> off the end, and hit <code>https://payload-cms.f4s.com/api/insights?locale=en&amp;depth=0</code>, it works, and returns a correct response.<br><br><code>{&quot;docs&quot;:[{&quot;id&quot;:&quot;test&quot;,&quot;name&quot;:&quot;Test&quot;,&quot;motivations&quot;:[],&quot;_status&quot;:&quot;draft&quot;,&quot;createdAt&quot;:&quot;2023-01-16T05:53:40.668Z&quot;,&quot;updatedAt&quot;:&quot;2023-01-16T05:53:40.668Z&quot;}],&quot;totalDocs&quot;:1,&quot;limit&quot;:10,&quot;totalPages&quot;:1,&quot;page&quot;:1,&quot;pagingCounter&quot;:1,&quot;hasPrevPage&quot;:false,&quot;hasNextPage&quot;:false,&quot;prevPage&quot;:null,&quot;nextPage&quot;:null}</code><br><br>This is running on an AWS docker instance, so it&#x27;s a bit of a pain to introspect the MongoDB (unreachable outside the AWS cluster), but that&#x27;s my next step. In the meantime, if anyone&#x27;s seen this before, I appreciate any info you have.",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1673850951707
      },
      {
        "content": "Hi @andrewhows, what version of payload are you on? There was an issue associated with <code>draft=true</code> and updates have been made in the most recent release",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673880481684
      },
      {
        "content": "@jesschow I&#x27;m on 1.5.8 . I looked at the changelog for 1.5.9, and all it had was a small mimetype update, so I&#x27;m guessing those fixes are already in my version. I&#x27;ll see if I can pull up the raw database records to see what&#x27;s going wrong.",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1673917913862
      },
      {
        "content": "@jesschow<br><br>Ok, I&#x27;m able to reproduce. From an empty collection, if I create an object, save it as draft, then publish it, I get the breaking error.<br><br>On the mongo side, I get this:<br><br><strong>insights</strong><br><code>{ &quot;_id&quot; : &quot;test&quot;, &quot;name&quot; : { &quot;en&quot; : &quot;Test&quot; }, &quot;motivations&quot; : { &quot;en&quot; : [ ] }, &quot;_status&quot; : &quot;published&quot;, &quot;createdAt&quot; : ISODate(&quot;2023-01-17T03:12:09.494Z&quot;), &quot;updatedAt&quot; : ISODate(&quot;2023-01-17T03:12:25.487Z&quot;), &quot;__v&quot; : 0 }</code><br><br><strong>_insights_versions</strong><br><code>{ &quot;_id&quot; : ObjectId(&quot;63c612192c36374648c63529&quot;), &quot;parent&quot; : &quot;test&quot;, &quot;version&quot; : { &quot;name&quot; : { &quot;en&quot; : &quot;Test&quot; }, &quot;motivations&quot; : { &quot;en&quot; : [ ] }, &quot;_status&quot; : &quot;draft&quot; }, &quot;createdAt&quot; : ISODate(&quot;2023-01-17T03:12:25.485Z&quot;), &quot;updatedAt&quot; : ISODate(&quot;2023-01-17T03:12:25.485Z&quot;), &quot;__v&quot; : 0 }</code><br><br>My best guess is that the versioning doesn&#x27;t work with custom ids, and there&#x27;s a mismatch between the id of the version (<code>ObjectId(&quot;63c612192c36374648c63529&quot;)</code>) and the id of the base instance (<code>&quot;test&quot;</code>).",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1673925297382
      },
      {
        "content": "I think you are right that custom IDs cannot be used with versioning - @jmikrut can you confirm?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674077978333
      },
      {
        "content": "correct -",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674079612586
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/issues/1905\">https://github.com/payloadcms/payload/issues/1905</a>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674079612923
      },
      {
        "content": "we have this fixed on a canary version",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674079618508
      },
      {
        "content": "<pre><code class=\"hljs\">yarn add payload@1.5.12-canary.0</code></pre>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674079635356
      },
      {
        "content": "but there are a few breaking changes that come with this canary release",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674079643745
      },
      {
        "content": "it&#x27;s stable, and you could give it a whirl, but here are some notes about how to ensure you can move to this version:",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674079656918
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/blob/canary/CHANGELOG.md\">https://github.com/payloadcms/payload/blob/canary/CHANGELOG.md</a>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674079670575
      },
      {
        "content": "Thanks guys. Custom IDs aren&#x27;t that crucial, so I&#x27;ll just stick with the mainline version for now. Cheers.",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1674086724577
      },
      {
        "content": "ok. this will be released shortly - at which point you&#x27;ll still need to migrate, but custom IDs will once again be usable",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674137724308
      }
    ],
    "messageCount": 13
  },
  {
    "info": {
      "name": "Does payload have the functionality to limit an image size within the upload field?",
      "id": "1074464680296337478",
      "createdAt": 1676242742371
    },
    "messages": [
      {
        "content": "I&#x27;m trying to force a user to upload an image size of only 100x100px. Can we set that in the upload itself so if they don&#x27;t upload that size, it shows them an error?",
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676242742371
      },
      {
        "content": "I think you can only do this on the media collection itself, not at the field level that I&#x27;ve found.<br><br>Could be worth a suggestion on GitHub though as I think it would be generally very useful to be able to restrict uploads at the field level, both for image dimensions, file sizes and also mime-types.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676296509136
      },
      {
        "content": "Thanks @Kyr, I added a feature request here: <a href=\"https://github.com/payloadcms/payload/discussions/2083\">https://github.com/payloadcms/payload/discussions/2083</a><br>Feel free to upvote.",
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676324564797
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How can you get the types for the resolver arguments in GraphQL?",
      "id": "1065869193062400011",
      "createdAt": 1674193418518
    },
    "messages": [
      {
        "content": "I&#x27;m writing my own graphql queries and mutations, however I couldn&#x27;t figure out how I can get types on this kind of resolver function, all arguments including <code>context</code> is untyped:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">CustomResolver</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">obj, args, context, info</span>) =&gt; {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;id received:&#x27;</span>, args)\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;context&#x27;</span>, context)\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">result</span>: <span class=\"hljs-string\">&#x27;PASS&#x27;</span>,\n  }\n}</code></pre>",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674193418518
      },
      {
        "content": "I&#x27;ve done a payload import and typed the destructured context like this, not sure if there&#x27;s a cleaner approach though<br><br><pre><code class=\"hljs ts\">{ payload }: { <span class=\"hljs-attr\">payload</span>: <span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-title class_\">ImportedPayload</span> }</code></pre>",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674193674273
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "What's the minimum specs for deploying on DigitalOcean?",
      "id": "1065942096038600714",
      "createdAt": 1674210799942
    },
    "messages": [
      {
        "content": "Will a $6/month droplet be enough for small blog CMS? Or do I need a beefier droplet?<br><br>Also additional question, I&#x27;m under the notion that Docker images are not good for stateful apps like storing a postgresql database inside a docker image.<br><br>As the docs say, since File Storage (Uploads/Media Library) for PayloadCMS uses local storage, it needs persistent file systems not ephemeral. Are docker containers &quot;ephemeral&quot;? <br><br>Am I correct in this assumption that everytime I push another docker container, my uploaded media gets lost?",
        "authorID": "298728783995863040",
        "authorName": "Blankeos",
        "authorAvatar": "a106165bd574bc5383a3502507a9d5f6",
        "createdAtDate": 1674210799942
      },
      {
        "content": "Not 100% on DigitalOcean&#x27;s container sizes, but it basically depends on traffic.<br><br>If you want persistence with Docker, you need to rely on an external service - either a persistent filesystem, and you run mongo on your docker container, or an external mongo service, which your docker container just connects to.<br><br>I&#x27;m more familiar with AWS that DO, but I&#x27;m sure they offer both services.",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1674215610115
      },
      {
        "content": "Thanks for the response @andrewhows! Appreciate it!<br>For &quot;external service&quot;, you mean using something like cloudinary or imgx right? And also Atlas.<br><br>I was hoping there was some way for a dockerized mongodb and payloadcms to interact with a persistent filesystem but still within the VPS instance (maybe outside the container). But yeah thanks for the response anyway! ✨",
        "authorID": "298728783995863040",
        "authorName": "Blankeos",
        "authorAvatar": "a106165bd574bc5383a3502507a9d5f6",
        "createdAtDate": 1674216317710
      },
      {
        "content": "You can use volumes with docker to persist your MongoDB data, currently working with this exact setup",
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1674216365081
      },
      {
        "content": "Thanks @alexdev  never heard of volumes but I&#x27;ll look into it for sure.",
        "authorID": "298728783995863040",
        "authorName": "Blankeos",
        "authorAvatar": "a106165bd574bc5383a3502507a9d5f6",
        "createdAtDate": 1674216418233
      },
      {
        "content": "this is provided that the host machine doesn&#x27;t have an ephemeral fs",
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1674216427337
      },
      {
        "content": "@Blankeos we&#x27;re running our dev env on a $5 container deployed using the apps platform",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674244253328
      },
      {
        "content": "our fs is using DO&#x27;s S3 compatible spaces so it works out of the box with payload",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674244273259
      },
      {
        "content": "generally it&#x27;s been fine for development, a few users and not that intensive use of the API",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674244287509
      },
      {
        "content": "i&#x27;d say, for a blog, assuming your data will be pulled into a static site, like nextjs generation, it should be fine (you can always scale it up)",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674244324182
      },
      {
        "content": "but if you will have users logging in and interacting with the API more, then yeah I&#x27;d put it on a 15-20$ droplet",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674244345069
      },
      {
        "content": "idk if the DO apps platform provides a proper file system, I&#x27;d imagine it does, but its a little different to their droplet offering",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674244594832
      },
      {
        "content": "@Blankeos I mean, something other than the docker service. For instance, AWS provides EFS (a persistent filesystem) which you can mount to a docker image as a volume, or DocumentDB (which is a mongo-compatible DB) which your Docker instance could connect to. Or you could go 3rd Party like you&#x27;re saying - atlas, or the like. But I&#x27;m sure DO has the equivalent of AWS&#x27; EFS or DocumentDB too.",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1674249097377
      },
      {
        "content": "Related: <a href=\"https://discord.com/channels/967097582721572934/1059904642902937650\">https://discord.com/channels/967097582721572934/1059904642902937650</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1674253822392
      }
    ],
    "messageCount": 13
  },
  {
    "info": {
      "name": "Dockerfile from documentation causing errors",
      "id": "1065265656649490462",
      "createdAt": 1674049524224
    },
    "messages": [
      {
        "content": "Hey everyone,<br><br>I&#x27;m using the Dockerfile from the documentation (<a href=\"https://payloadcms.com/docs/production/deployment#docker\">https://payloadcms.com/docs/production/deployment#docker</a>) and it&#x27;s causing errors on Northflank, see attached. Docker isn&#x27;t really my strong point so any advice would be great!",
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1674049524224
      },
      {
        "content": "I think I understand it, it&#x27;s because it&#x27;s doing <code>CMD [&quot;node&quot;, &quot;dist/server.js&quot;]</code> and not <code>CMD [&quot;yarn&quot;, &quot;run&quot;, &quot;serve&quot;]</code> which sets the <code>PAYLOAD_CONFIG_PATH</code> in the script.<br><br>I&#x27;m curious to why it is setup this way? Is it for more control over dev vs production? In my use-case I&#x27;m deploying my codebase so the config stays in the same location so it may just be a case of not relevant to me.",
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1674050132726
      },
      {
        "content": "Actually that doesn&#x27;t completely work either, I&#x27;m going to go back to using the Dockerfile provided by Northflank for now, but this may need looking at in the documentation.",
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1674050760804
      },
      {
        "content": "Hey @Tom, I tested and wrote the Dockerfile from the template. I can give it another once over.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674052766092
      },
      {
        "content": "It was done w/o yarn because we wanted to support both npm and yarn.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674052931454
      },
      {
        "content": "Really, the Dockerfile that ships w/ the template is highly coupled with the code in the template itself",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674052949252
      },
      {
        "content": "The main problem I had with NorthFlank&#x27;s Dockerfile was that it was copying <em>everything</em> from the src dir, which technically isn&#x27;t secure.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674053347202
      },
      {
        "content": "<pre><code class=\"hljs\"># Copy the built application.\nCOPY --from=build /home/node /home/node</code></pre><br>This line copies everything from the workdir, which would also bloat the image size",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674053410646
      },
      {
        "content": "Seems to run fine for me on a fresh create-payload-app project",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674053845375
      },
      {
        "content": "Ahhh, I see the problem.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674053915995
      },
      {
        "content": "Looks like the docs are missing setting of PAYLOAD_CONFIG_PATH, but it is set in the create-payload-template. Thanks for the heads up @Tom 👍",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674053952278
      },
      {
        "content": "Maybe this needs to be more prominent in the docs<br><blockquote>This is an example of a multi-stage docker build of Payload for production. Ensure you are setting your environment variables on deployment, like PAYLOAD_SECRET, PAYLOAD_CONFIG_PATH, and MONGODB_URI if needed.</blockquote>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674053990714
      },
      {
        "content": "This makes sense to me, I think yarn should be opt-in now opt-out since npm comes with every node install and yarn doesn&#x27;t with additional configuration. I did in fact use the <code>PAYLOAD_CONFIG_PATH</code> in my second deploy but it gave a different error.",
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1674055930672
      },
      {
        "content": "Which is this one, I&#x27;m not entirely sure what it&#x27;s trying to tell me however.",
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1674055952002
      },
      {
        "content": "It seems even with the PAYLOAD_CONFIG_PATH copied over, it&#x27;s failing to find it because in the Dockerfile, it never copies the src folder. I&#x27;ll do a local build would it be a case of doing <code>PAYLOAD_CONFIG_PATH=dist/payload.config.ts</code>?",
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1674056118412
      },
      {
        "content": "If you&#x27;re point to dist/ you&#x27;ll need to do payload.config.js",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674059759989
      },
      {
        "content": "or add a step to copy over the ts file and point at that",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674059783823
      },
      {
        "content": "Hmm, I&#x27;m unsure if I&#x27;m understanding correctly.",
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1674060165717
      },
      {
        "content": "You&#x27;ll notice this mirrors what is in package.json for <code>serve</code>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674060179757
      },
      {
        "content": "<code>cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js</code>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674060198507
      },
      {
        "content": "Yeah, that is what I did, strange.",
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1674060198528
      },
      {
        "content": "Got it working, thanks Elliot, I thought I had copied over the dist/payload.config.js but it turns out I copied the src/payload.config.js from the <code>generate:types</code> by accident.",
        "authorID": "183581008677961728",
        "authorName": "Tom",
        "authorAvatar": "5515b9b4577d71235cbd54d5c61ff4dd",
        "createdAtDate": 1674060702890
      },
      {
        "content": "Great, glad we were able to figure it out 👍",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674060734306
      },
      {
        "content": "@denolfe is it safe to add the PAYLOAD_SECRET, PAYLOAD_CONFIG_PATH etc. to the dockerfile in the same way as:<br><code>ENV NODE_ENV=production</code> ?",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1675153465536
      },
      {
        "content": "PAYLOAD_CONFIG_PATH is safe",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675174640247
      },
      {
        "content": "However, PAYLOAD_SECRET should be set at runtime in your deployment environment",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675174662075
      },
      {
        "content": "You typically would not bake sensitive values into a docker image",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675174678137
      },
      {
        "content": "Most deployment platforms let you set these externally to the image",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675174703116
      },
      {
        "content": "For running locally if you use dotenv, you can do something like this <code>docker run --env-file .env -p 3000:3000 imagename</code>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675174746089
      },
      {
        "content": "Makes sense, thank you!",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1675185659562
      }
    ],
    "messageCount": 28
  },
  {
    "info": {
      "name": "Schema update",
      "id": "1070743406164320377",
      "createdAt": 1675355521480
    },
    "messages": [
      {
        "content": "Hi all.<br>Can anyone point me towards the right way to migrate data when the underlying structure changes?<br>For example, I have replaced a simple textarea field with a richtext component, so now the data stored has gone from a string to an array of objects. I&#x27;ve updated my front end to handle either, but now the CMS breaks if I try to edit one of the old records.<br>Is there some way to run a process to migrate the old data to the new structure? I appreciate it may not be possible to do this automatically due to the complexity involved, but can I write code to do it, or in the worst case at least remove the old data so that the CMS doesn&#x27;t break?",
        "authorID": "1042412823457837066",
        "authorName": "DanMartin",
        "authorAvatar": null,
        "createdAtDate": 1675355521480
      },
      {
        "content": "Hey @DanMartin this is totally possible, and actually fairly simple. I have had to do this in the past, i&#x27;ve added a snippet of code that should point you in the right direction:",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675360096486
      },
      {
        "content": "if you are on payloads latest version, the script will need to be tweaked a little by placing the payload.init inside the function, and then awaiting it like so <code>await payload.init({...})</code>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675360999262
      },
      {
        "content": "Thanks Jarrod, that&#x27;s pretty helpful in pointing me in the right direction. It&#x27;s slightly complicated by the field being in a flexible block, but I think that&#x27;s just an extra array to iterate over.",
        "authorID": "1042412823457837066",
        "authorName": "DanMartin",
        "authorAvatar": null,
        "createdAtDate": 1675441402176
      },
      {
        "content": "@DanMartin with that you&#x27;ll want to spread the data already in the array/objects if it is nested",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675441499826
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "RichText left and rght indent",
      "id": "1072155619718602782",
      "createdAt": 1675692219429
    },
    "messages": [
      {
        "content": "Hello! I am new to CMS world. May be I have missed to find it but please help me with this. What is the way to get <code>left and right indent</code> along with the whitespaces in the frontend. I cannot find a single example on how to use the indentation in the documentation. <br>For now, I am getting the type of the element and if the<code>type is &quot;indent&quot;</code> , I render a <code>paragraph</code>",
        "authorID": "1070298006605279282",
        "authorName": "Akt771",
        "authorAvatar": null,
        "createdAtDate": 1675692219429
      },
      {
        "content": "left and right indent ... are you referring to padding/margins on either side?<br><br>The &quot;indent&quot; element is intended to mark the content for &quot;indent&quot; ... you would style this however you like on your frontend, SlateJS will style it as an indentation from the left in the payload admin ... similar to the standard treatment of a &quot;blockquote&quot; element.",
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675696142163
      },
      {
        "content": "Yes, when I use<code>type as indent</code>, I expect the CMS to give an object with whitespaces (on left for left indent and on right for right indent). <br>If I consider it to style by myself, How will I know if it is a left indent or a right indent, so that, I can give the respective <code>margin</code> styles. Because, when the user does the right indent on the Payload CMS, then the user expects that there is a margin from left.",
        "authorID": "1070298006605279282",
        "authorName": "Akt771",
        "authorAvatar": null,
        "createdAtDate": 1675761741308
      },
      {
        "content": "Hi David, I understood it now. I was getting different levels of json when I have indent, so based on the levels I can give the margin now. Thank you for responding",
        "authorID": "1070298006605279282",
        "authorName": "Akt771",
        "authorAvatar": null,
        "createdAtDate": 1675772064907
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Item not appearing in table, but accessible manually via URL",
      "id": "1072418401487687790",
      "createdAt": 1675754871485
    },
    "messages": [
      {
        "content": "Hi, I have an issue of some items not appearing in the <code>/admin/[collection-name]</code> table, but if I go to <code>/admin/[collection-name]/:id</code> manually, it works.<br><br>You can see it exists in the DB, but when I search for it (or use the Filter option), it doesn&#x27;t appear. If I access it via my NextJS app, it actually gives me the item correctly <img class=\"d-emoji d-emoji-animated\" src=\"https://cdn.discordapp.com/emojis/449765442412609546.gif\" alt=\":think3d:\"> <br><br>I&#x27;m on latest version of Payload (1.6.4).<br><br>Cheers!<br><br>EDIT:<br>After digging, what I found that might help:<br>Visiting <code>/admin/[collection-name]</code> automatically triggers a request to <code>/api/[collection-name]?locale=en&amp;depth=0&amp;draft=true&amp;page=1</code>. If I open this URL manually and change to <code>/api/[collection-name]?locale=en&amp;depth=0&amp;false&amp;page=1</code>, [<code>draft=false</code>] it gives me what I&#x27;m looking for.<br>Maybe <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/index.tsx#L82\">https://github.com/payloadcms/payload/blob/master/src/admin/components/views/collections/List/index.tsx#L82</a> is relevant<br><br>EDIT 2:<br>Ah I see now, because I have <code>versions.draft: true</code> (maybe relevant?), it <strong>only gives back documents that have at least a version 1</strong>.<br>I&#x27;m not sure why some of my documents don&#x27;t have a version 1, I created all the documents via a script that uses the local API (for context: migration script from Strapi -&gt; Payload). Is there a way to filter documents that do not have a version?",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1675754871485
      },
      {
        "content": "And another issue I&#x27;m facing, I deleted an item manually via MongoDB. The item still shows up in the table and when I click on it, it redirects me to <code>/admin/not-found</code>.",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1675755023332
      },
      {
        "content": "Item not appearing in table, but accessible manually via URL",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1675755063782
      },
      {
        "content": "The version documents will need to be deleted as well",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675798410864
      },
      {
        "content": "Ahh i see, gotcha thank you",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1675815794539
      },
      {
        "content": "Is there an easy way of deleting it via local API?<br><br>Specifically: I want to delete version documents that does not have an existing (real) document. I&#x27;m currently trying to figure out in MongoDB Compass an aggregation query to get those version documents",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1675822929000
      },
      {
        "content": "In the migrateVersions script here, we are doing just that! You could adjust this script and remove the parts that are not related <br><br><a href=\"https://github.com/payloadcms/payload/releases/tag/v1.6.1\">https://github.com/payloadcms/payload/releases/tag/v1.6.1</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675825006992
      },
      {
        "content": "Cool, I&#x27;ll check that out. Thanks!",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1675834721751
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Image data not exposed when API called from NextJS getStaticProps",
      "id": "1075007526342496306",
      "createdAt": 1676372166954
    },
    "messages": [
      {
        "content": "I have a pages collection which has some blocks, and within one an image upload. When I hit the API via my browser like <code>http://localhost:3000/api/pages?where%5Burl%5D%5Bequals%5D=%2F</code> I get back the sizes object.<br><br>When I make a call to the same endpoint from NextJS&#x27;s getStaticProps, I get an object back that&#x27;s missing most of the expected data:<br><br><pre><code class=\"hljs\">    image: &#x27;63d3a93700ebf20ada158cf6&#x27;,\n    id: &#x27;63d3a94578b6112d19867f25&#x27;,\n    blockType: &#x27;Image&#x27;</code></pre><br><br>All other data looks OK",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676372166954
      },
      {
        "content": "It was because I was logged in my browser with my payload user",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676380029158
      },
      {
        "content": "Ultimately it was an access control issue",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1676380174142
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "seeding to a relationship field using string",
      "id": "1065307779050524782",
      "createdAt": 1674059566987
    },
    "messages": [
      {
        "content": "I have a relationship field in my collection<br><br><pre><code class=\"hljs\">{\n    name: &#x27;state&#x27;,\n    type: &#x27;relationship&#x27;,\n    relationTo: &#x27;states&#x27;,\n    hasMany: false,\n},</code></pre><br><br>States is a collection consist of name, slug, id, ex: <code>NY, ny, 1</code><br><br>In my json file, I have this:<br><br><pre><code class=\"hljs\">[\n  {\n   &quot;id&quot; : 1,\n   &quot;name&quot; : &quot;john&quot;\n   &quot;state&quot;: &quot;NY&quot;\n  },\n  ....\n]</code></pre><br><br>When seeding, I get an error for state, I guess because relationship should be an array?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674059566987
      },
      {
        "content": "<pre><code class=\"hljs\">status: 400,\n  data: [\n    {\n      message: &#x27;This field has the following invalid selections: NY 0&#x27;,\n      field: &#x27;state&#x27;\n    }\n  ],\n  isPublic: false,\n  isOperational: true</code></pre>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674060040599
      },
      {
        "content": "Can you provide your seeding code?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674068683574
      },
      {
        "content": "To seed a relationship, you&#x27;ll need to provide the id of the relation",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674068736793
      },
      {
        "content": "this is how I seed",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674077738443
      },
      {
        "content": "<pre><code class=\"hljs\">USERS_JSON.forEach((user) =&gt; {\n    await payload.create({\n      collection: &#x27;users&#x27;,\n      data: {\n        ...user,\n      },\n    });\n})</code></pre>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674077743594
      },
      {
        "content": "You&#x27;ll need to create the states in the state collection first, then pass the appropriate ID for the state field.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674091781234
      },
      {
        "content": "When you seed the states, you can store them in memory, then do a lookup when seeding the users",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674091831943
      },
      {
        "content": "An example of seeding relationships can be found here: <a href=\"https://github.com/payloadcms/payload/blob/master/test/collections-graphql/config.ts#L127\">https://github.com/payloadcms/payload/blob/master/test/collections-graphql/config.ts#L127</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674091953860
      },
      {
        "content": "It is not possible to seed based on slug? I also seed states so might not have the ID, or it can be different but slug is always the same since i seed states with slug and name.",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674112083944
      },
      {
        "content": "You could go about this in 2 different ways to make it easier.<br><br>One way would be when you seed your states, send in the slug value as the <code>id</code>, since Payload allows custom ids.<br><br>Another way would be to populate a JS object with key/value pairs when you seed the state. Then when you&#x27;re seeding the user, you can grab the proper id by doing <code>statesReference[&#x27;NY&#x27;]</code>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674144354276
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "multisite & remix integration?",
      "id": "1065796907886202890",
      "createdAt": 1674176184389
    },
    "messages": [
      {
        "content": "Any quick pointers where to look out foe integrating remix with payload.<br><br>I know there is a full example repro just wanted to get some quick feedback if somwthing like below is possible at the moment:<br><br>In the ideal world i would have:<br>1. Payload cms hosted on vps<br>2. Several small projects build in remix with integration of payload hosted on another vps.<br>3. Then certain routes would use payload to show the site content. Connecting them by site id or identifier.<br><br>1 central cms<br>Flexible way to assign me as admin and someone else as editor.<br><br>🙏",
        "authorID": "887845407621808209",
        "authorName": "J0rdan",
        "authorAvatar": null,
        "createdAtDate": 1674176184389
      },
      {
        "content": "This is all possible if you configure your collections to have a relationship to <code>siteId</code> or similar, then query accordingly from each frontend",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674231987253
      },
      {
        "content": "Both of these links would be good for you to go over. Second one has a video.<br><br><a href=\"https://payloadcms.com/blog/build-your-own-rbac\">https://payloadcms.com/blog/build-your-own-rbac</a><br><a href=\"https://payloadcms.com/blog/access-control-overview\">https://payloadcms.com/blog/access-control-overview</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674232120591
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Collection access to allow guest posts",
      "id": "1067475337144979557",
      "createdAt": 1674576353108
    },
    "messages": [
      {
        "content": "is this the correct access to allow guest posts?<br><br><pre><code class=\"hljs\">access: {\n        read: ({ req }) =&gt; {\n            if (req.user) return true\n            return {\n                _status: {\n                    equals: &#x27;published&#x27;,\n                },\n            }\n        },\n        create: () =&gt; true,\n        delete: isAdmin,\n        update: isAdmin,\n    },</code></pre><br><br>by adding <code>create: () =&gt; true,</code> ? I want everyone to be able to submit posts but mark them as draft, I have also enabled <br><pre><code class=\"hljs\">versions: {\n        drafts: true,\n    },</code></pre>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674576353108
      },
      {
        "content": "@generator101 I think that would suite your use case, you may need to set the status with a beforeChange (operation === &#x27;create&#x27;) hook, checking to see if there is a user or not and then setting the status accordingly",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674576495019
      },
      {
        "content": "@Jarrod thanks, without using beforeChange, the status is already draft",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674577514752
      },
      {
        "content": "",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674577517132
      },
      {
        "content": "should I use beforeChange as a security measure?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674577529651
      },
      {
        "content": "to make sure no post gets published?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674577536225
      },
      {
        "content": "If you pass a query param of <code>draft=false</code> I believe it will skip creating the draft",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674577738200
      },
      {
        "content": "@generator101 did you give this a shot?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674830353261
      },
      {
        "content": "@Jarrod not yet, but I will let you know if I stumble across an issue, thanks",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674837957695
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "`versions.retainDeleted` was removed?",
      "id": "1072872293333749830",
      "createdAt": 1675863087734
    },
    "messages": [
      {
        "content": "It looks like <code>retainDeleted</code> was removed from versions, but I don&#x27;t see this documented anywhere? I was able to track down the commit on GitHub (<a href=\"https://github.com/payloadcms/payload/commit/6ae6b9268fbbabb8f86f53a3aec190cc2243d342\">https://github.com/payloadcms/payload/commit/6ae6b9268fbbabb8f86f53a3aec190cc2243d342</a>), but don&#x27;t see any explanation being provided?  <br><br>Is this feature being removed entirely, or is it still supported in another way?<br><br>This was a breaking change in my project that defined this key on all version enabled collections, which caused me to immediately check the changelog, but I did not find anything mentioned there ... so I had to dig into the error and figure out what was going on.  I suggest updating the changelog to mention this change, I assume it&#x27;s related to the <code>simplified versions in 1.6.1</code> ?",
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675863087734
      },
      {
        "content": "There is some discussion here: <a href=\"https://github.com/payloadcms/payload/discussions/1992#discussioncomment-4850439\">https://github.com/payloadcms/payload/discussions/1992#discussioncomment-4850439</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675871218533
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Slate - some text leaves have type: \"p\", some do not",
      "id": "1072510637713920080",
      "createdAt": 1675776862315
    },
    "messages": [
      {
        "content": "I know this is perhaps more slate related, but maybe someone knows why this is happening:<br><br>I have two different collections, both with RichText fields. After entering a few paragraphs of plain, unformatted text, in one I get as the data: <br><br><pre><code class=\"hljs\">[\n  {\n    type: &quot;p&quot;,\n    children: [\n      {text: &quot;Lorem Ipsum...&quot;}\n    ]\n  },\n  ...\n]</code></pre><br><br>While in the other I get:<br><br><pre><code class=\"hljs\">[\n  {\n    children: [\n      {text: &quot;Lorem Ipsum...&quot;}\n    ]\n  },\n  ...\n]</code></pre><br><br>Any ideas why? The first one seems correct.",
        "authorID": "258898794102521857",
        "authorName": "agenericguy",
        "authorAvatar": null,
        "createdAtDate": 1675776862315
      },
      {
        "content": "This might be the difference between hitting <code>Enter</code> and <code>Shift + Enter</code>. I&#x27;d have to test.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675779413956
      },
      {
        "content": "Have you  customized your richtext fields or are both fields using the defaults?",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675779476780
      },
      {
        "content": "Both default, and both not using shift + enter",
        "authorID": "258898794102521857",
        "authorName": "agenericguy",
        "authorAvatar": null,
        "createdAtDate": 1675813076877
      },
      {
        "content": "I noticed this too and thought I was going mad as I couldn&#x27;t recreate it again. <br><br>It happened after I extracted the richtext field definitions into a separate TS module and imported them into my collections for reuse.<br><br>Nothing changed in the field def, but after saving some items in the Payload Admin again, the API returned different data, omitting the &quot;p&quot; which actually caused my front end to blow up as I hadn&#x27;t accounted for that.  <br><br>Went into admin, copy/pasted rich-text content in each field and saved again, then it went back to returning the &quot;p&quot; types.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675855989441
      },
      {
        "content": "When typing and using &#x27;Enter&#x27; or &#x27;Shift+Enter&#x27; into the richText slate editor, i also get no paragraphs. (I also had richText extracted as component, but reverting this did not solve the missing &#x27;p&#x27; type bug). No custom elements/leaves are used.<br><br>Seems to be browser independent, i tried firefox and chrome.<br><br>But i can copy&amp;paste some text from MS Word, and suddenly there are paragraphs in the editor. I am also able to copy&amp;paste older richText texts and there are paragraphs.",
        "authorID": "189202872800378881",
        "authorName": "bobbyZ",
        "authorAvatar": "f0988915755cddd9a231cf1afaafea65",
        "createdAtDate": 1675863933813
      },
      {
        "content": "opend issue <a href=\"https://github.com/payloadcms/payload/issues/2048\">https://github.com/payloadcms/payload/issues/2048</a>",
        "authorID": "189202872800378881",
        "authorName": "bobbyZ",
        "authorAvatar": "f0988915755cddd9a231cf1afaafea65",
        "createdAtDate": 1675948567945
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Is it possible to hide a collection but allow a related collection to access its API?",
      "id": "1070272024775249950",
      "createdAt": 1675243135399
    },
    "messages": [
      {
        "content": "I have a Media collection for uploads as suggested by the docs, and a Products collection with an image upload field that is related to the Media collection. I want to hide the Media collection from the users but still have the Products access the images related to the Media collection. When I set Media&#x27;s read access to false, the Media page is hidden but Products loses access to the images. I&#x27;m sure there&#x27;s a condition I can set for the read access. Or at the very least I want someone to be able to upload an image through a new Product but not through the Media collection.<br><br>Thank you!",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675243135399
      },
      {
        "content": "1. Looks like I can hide the collection from the navbar and the collection page&#x27;s elements itself using CSS.<br>2. I&#x27;m redirecting requests for the collection&#x27;s page to /admin so these 2 together worked out.",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675273093057
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How to get post by slug",
      "id": "1073789240325971999",
      "createdAt": 1676081704933
    },
    "messages": [
      {
        "content": "i build a blog and add unique slug field in posts and tags how to can i get post or tag by slug if i create custom endpoint and get post by slug using req.payload.collections.posts it can&#x27;t return a populated response req.payload dose not have fineOne function",
        "authorID": "589480760898093201",
        "authorName": "Qasim Ali",
        "authorAvatar": "9ed1c88c715db6238e6e81ebdfbf34bb",
        "createdAtDate": 1676081704933
      },
      {
        "content": "How to get post by slug",
        "authorID": "589480760898093201",
        "authorName": "Qasim Ali",
        "authorAvatar": "9ed1c88c715db6238e6e81ebdfbf34bb",
        "createdAtDate": 1676081746500
      },
      {
        "content": "You can use req.payload.find({})with a where argument, and limit 1. You will still get back a docs array but you can grab the first item out of it",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676095097144
      },
      {
        "content": "Hi, Jarrod thanks for the reply. I tried this method butt in this way server responds very slowly. Now I am using this way",
        "authorID": "589480760898093201",
        "authorName": "Qasim Ali",
        "authorAvatar": "9ed1c88c715db6238e6e81ebdfbf34bb",
        "createdAtDate": 1676199214125
      },
      {
        "content": "Did you have index: true and unique: true set on the slug field? You’ll want to add those either way and make sure they are added to your db",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676206263543
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Richtext - add support for button",
      "id": "1073185833319923783",
      "createdAt": 1675937841492
    },
    "messages": [
      {
        "content": "Hey all, I&#x27;d like to add support for buttons inside of the wysiwyg. <br><br>I&#x27;ve added custom fields to the link dialogue - so that you can choose type of the button and potentially icons; but not sure what is the right way to append the  button classes (and icons) to the element itself. I&#x27;d like to avoid duplicating all of the logic of the built-in link element (that provides the dialogue, popup on hover...).<br><br>Thanks a lot for suggestions! 🙂",
        "authorID": "930428018546049024",
        "authorName": "jankocian",
        "authorAvatar": "a2eb9a4ddee5f4f66f64d16c26144b21",
        "createdAtDate": 1675937841492
      },
      {
        "content": "From a content modelling perspective, if you use the same buttons all over the place you could create a &quot;Buttons&quot; collection and then embed items from that collection in the rich text where needed.<br><br>This lets you have the kind of functionality you&#x27;re asking about, and also means that each CTA/button you create can be managed in one place no matter how many places it&#x27;s used in.<br><br>You can also use them in linked item fields elsewhere.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675942177297
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Form Builder: Create Other Field for Select/Custom Type",
      "id": "1075186230981038191",
      "createdAt": 1676414773460
    },
    "messages": [
      {
        "content": "Hey so I need to add support for an &quot;other&quot; field that will allow a custom text box to appear on the frontend, the way the data is sent is an array of submissionData <br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-built_in\">string</span>,\n  <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-built_in\">string</span>,\n  <span class=\"hljs-string\">&quot;id&quot;</span>?: <span class=\"hljs-built_in\">string</span>,\n}</code></pre><br><br>If i&#x27;m using a Select type and want to allow the extra field how should I go about submitting the text field data and adding the other field to the inbuilt type for it?<br><br>I&#x27;ve also got a custom type called &quot;multi-choice&quot; which basically identical to select, but just different blockType so it&#x27;s easier to differentiate the type of form element to show on frontend and also Select doesn&#x27;t support multi-select options it seems.<br>I&#x27;ve added an Other checkbox to say if the form creator wants to allow the custom field, but I&#x27;m unsure how to submit it, current idea would be to send it in the value key like<br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;multi-choice&quot;</span>,\n  <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;other:Custom Text Goes Here&quot;</span>,\n}</code></pre><br>correct me if i&#x27;m wrong but this would fail validation as the value doesn&#x27;t match an option.<br>so would I just extend the submission data type or is there another way that would be recommended<br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;multi-choice&quot;</span>,\n  <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;other&quot;</span>,\n  <span class=\"hljs-string\">&quot;data&quot;</span>: <span class=\"hljs-string\">&quot;Custom Text Goes Here&quot;</span>\n}</code></pre>",
        "authorID": "1072674585197166633",
        "authorName": "work",
        "authorAvatar": "58f7a3fd0703e50b4d6210b3ac597b70",
        "createdAtDate": 1676414773460
      },
      {
        "content": "@jacobsfletch your prob best person to ask about this<br><br>next solution I currently have is to add a new field on the form that has &quot;nameOfField-other&quot; for accepting the other fields so it doesnt modify the returned data, and would just be an optional field returned. this gets added via a field hook for the multi-choice field, but unsure how I could add the same to the select field outside a collection hook?",
        "authorID": "1072674585197166633",
        "authorName": "work",
        "authorAvatar": "58f7a3fd0703e50b4d6210b3ac597b70",
        "createdAtDate": 1676418549029
      },
      {
        "content": "It sounds like you need to add <em>two</em> new fields to your forms collection, one for the checkbox that enables and disables your text field, then the text field itself. You can use conditional logic to show and hide this field based on whether it’s enabled.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676423210832
      },
      {
        "content": "This way you have a field to submit data to.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676423276992
      },
      {
        "content": "yep that&#x27;s pretty much what I ended up going with, and just overrode the select field to add the other toggle to it.<br><br>It would be nice if this was added into the plugin, I can make a PR for it with a rough implementation which can be edited by someone to follow your standards closer incase i&#x27;ve done something that doesn&#x27;t follow correctly.",
        "authorID": "1072674585197166633",
        "authorName": "work",
        "authorAvatar": "58f7a3fd0703e50b4d6210b3ac597b70",
        "createdAtDate": 1676423800529
      },
      {
        "content": "basically just adds another field into the form and use a hook to add or remove it on update",
        "authorID": "1072674585197166633",
        "authorName": "work",
        "authorAvatar": "58f7a3fd0703e50b4d6210b3ac597b70",
        "createdAtDate": 1676423826794
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Can I implement `useAPIKey` without requiring email and password?",
      "id": "1073652992139599872",
      "createdAt": 1676049220834
    },
    "messages": [
      {
        "content": "It is possible to implement <code>auth.useAPIKey: true</code> on a collection without it auto populating an email and password form in the Payload UI? We have a collection of identities that aren&#x27;t necessarily represented by humans with email addresses. It might be another application for example. We need these identities to have API Keys to access other data in our application but I can&#x27;t seem to bypass the email and password form that auto populates in the collection when I enable <code>useAPIKey</code>?",
        "authorID": "462049378719498241",
        "authorName": "TheBigUmberto",
        "authorAvatar": "a4da04c2eb8b222a2e713be8e4b2e9d7",
        "createdAtDate": 1676049220834
      },
      {
        "content": "Bug Issue Created - <a href=\"https://github.com/payloadcms/payload/issues/2077\">https://github.com/payloadcms/payload/issues/2077</a>",
        "authorID": "462049378719498241",
        "authorName": "TheBigUmberto",
        "authorAvatar": "a4da04c2eb8b222a2e713be8e4b2e9d7",
        "createdAtDate": 1676305438753
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Error traversing fields when using nested groups",
      "id": "1064603114633703465",
      "createdAt": 1673891561898
    },
    "messages": [
      {
        "content": "Getting this error when using nested groups. Is this unsupported or a bug?<br><br><pre><code class=\"hljs\">[17:45:44] ERROR (payload): TypeError: Cannot read properties of undefined (reading &#x27;email&#x27;)\n    at promise (/home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/promise.ts:69:31)\n    at /home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/traverseFields.ts:31:26\n    at Array.forEach (&lt;anonymous&gt;)\n    at traverseFields (/home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/traverseFields.ts:30:10)\n    at promise (/home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/promise.ts:60:27)\n    at /home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/traverseFields.ts:31:26\n    at Array.forEach (&lt;anonymous&gt;)\n    at traverseFields (/home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/traverseFields.ts:30:10)\n    at afterChange (/home/b/repo/endo-cms/node_modules/payload/src/fields/hooks/afterChange/index.ts:26:23)\n    at create (/home/b/repo/endo-cms/node_modules/payload/src/collections/operations/create.ts:263:29)</code></pre><br><br><pre><code class=\"hljs ts\">    <span class=\"hljs-comment\">// Traverse subfields</span>\n    <span class=\"hljs-keyword\">switch</span> (field.<span class=\"hljs-property\">type</span>) {\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;group&#x27;</span>: {\n            <span class=\"hljs-keyword\">await</span> (<span class=\"hljs-number\">0</span>, traverseFields_1.<span class=\"hljs-property\">traverseFields</span>)({\n                data,\n                doc,\n                previousDoc,\n                <span class=\"hljs-attr\">previousSiblingDoc</span>: previousDoc[field.<span class=\"hljs-property\">name</span>],\n                <span class=\"hljs-attr\">fields</span>: field.<span class=\"hljs-property\">fields</span>,\n                operation,\n                req,\n                <span class=\"hljs-attr\">siblingData</span>: siblingData[field.<span class=\"hljs-property\">name</span>] || {},\n                <span class=\"hljs-attr\">siblingDoc</span>: siblingDoc[field.<span class=\"hljs-property\">name</span>], <span class=\"hljs-comment\">// error happens here</span>\n            });\n            <span class=\"hljs-keyword\">break</span>;</code></pre>",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1673891561898
      },
      {
        "content": "Error traversing fields when using nested groups",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1673891595313
      },
      {
        "content": "@\\ ឵឵឵ could you make a simple repo that replicates this error?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675446278178
      },
      {
        "content": "@jesschow Fixed at this point. Can tell you I tracked down the error to mixing <code>hidden</code> on a <code>type: &#x27;group&#x27;</code> field with  <code>access</code> specifiers on nested subfields, resulting in the traverse failing when trying to check access on those subfields which were not present in the result. Fix is probably a matter of short-circuiting that branch of the traverse when the field being checked is <code>undefined</code>.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675447493476
      },
      {
        "content": "@\\ ឵឵឵ interesting!",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675447771599
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "How to add confirm box before user hit save or update? Also how to extend current model with type ui",
      "id": "1069161193404645396",
      "createdAt": 1674978292562
    },
    "messages": [
      {
        "content": "How to add confirm box before user hit save or update? Also how to extend current model with type ui field button",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674978292562
      },
      {
        "content": "Probably better to add version history so things have to be published to go live",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674982700590
      },
      {
        "content": "My question is -<br>1. When you click on delete button, you get a dialog box to confirm or cancel. How to get that for custom ui component button",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674982977907
      },
      {
        "content": "I have added a custom button",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674983011346
      },
      {
        "content": "As you can see this pop up when we hit delete",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674983059914
      },
      {
        "content": "How to get this box on click",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674983078288
      },
      {
        "content": "I&#x27;m not sure you can do this with the default UI. <br><br>You might be able to create a fully custom UI for your collections, but that would feel a bit overkill to me.<br><br>What I suggested about enabling drafts would help prevent things from going &quot;live&quot; immediately though as you&#x27;d have to explicitly publish the changes/new document for it to be served on the APIs.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675162428967
      },
      {
        "content": "One option is to add a UI field in the sidebar that contains a button like this one:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> form = <span class=\"hljs-title function_\">useForm</span>()\n<span class=\"hljs-keyword\">return</span> <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span>=&gt;</span>{\n  if (!confirm(&#x27;Are you sure?&#x27;)) return\n  form.submit()\n// don&#x27;t forget about preventDefault\n}}&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span></code></pre><br><br>I&#x27;m hiding the existing buttons like this:<br><pre><code class=\"hljs ts\">  <span class=\"hljs-title function_\">useLayoutEffect</span>(<span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> elems = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelectorAll</span>(\n      <span class=\"hljs-string\">&#x27;.collection-edit__document-actions, .collection-edit__sidebar-fields .status&#x27;</span>\n    )\n\n    ;[].<span class=\"hljs-property\">forEach</span>.<span class=\"hljs-title function_\">call</span>(elems, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">elem</span>) {\n      elem.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">display</span> = <span class=\"hljs-string\">&#x27;none&#x27;</span>\n    })\n  }, [])</code></pre>",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1675177560014
      },
      {
        "content": "Added a button and confirmation but The problem is that, confirmation is like javascript alert. which is not in line with current UI flow",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1675324843013
      },
      {
        "content": "I don&#x27;t believe there is a way to hook into this UI flow currently. We have a drawer element abstracted out but not ready for consumption quite yet.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675437800171
      },
      {
        "content": "I think @Kyr &#x27;s suggestion about using drafts would be something to look into, because it seems like this is an outcome you&#x27;re trying to achieve.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675437836054
      },
      {
        "content": "You might also be able to grab our modal code and put it into your custom field somehow",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675437884171
      },
      {
        "content": "This feature is something I would really appreciate as well! Thanks all for the suggestions to use in the meantime though! <br>We implemented our own separation between what we consider &quot;published&quot; and &quot;draft&quot; content (using GraphQL queries) that does&#x27;t exactly play nicely with Payload&#x27;s default &quot;Draft&quot; feature (although we probably should have implemented it with the default behavior from the beginning because I really like how it works).",
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676316311779
      }
    ],
    "messageCount": 12
  },
  {
    "info": {
      "name": "question around Auth",
      "id": "1072614213962444807",
      "createdAt": 1675801556817
    },
    "messages": [
      {
        "content": "Can different collections support different Auth strategies?<br><br>Scenario:<br><br>CollectionA: I’m using magic link passport strategy. These users can have “clients”.<br><br>CollectionB: clients of users A. They will never log into payload themselves but I want them to be able to sign up (email password) on another client website that uses this payload collection for Auth. The benefit of having payload manage it is collectionA can reset/lock accounts etc.. like a CRM<br><br>Is this feasible?",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1675801556817
      },
      {
        "content": "Yep you can totally do that",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675801634601
      },
      {
        "content": "@jmikrut  what login route would collectionB use in this scenario, I think the built in login is tied to the <code>admin: {user: &lt;slug&gt;}</code> collection. Would I have to create a custom route and post through the auth api?",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1675892022000
      },
      {
        "content": "I think so, I see in the auth docs that I can login via collection slug name. Nice!",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1675892258766
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Custom button to create new entry in collection",
      "id": "1070006922926891169",
      "createdAt": 1675179930193
    },
    "messages": [
      {
        "content": "I&#x27;m experimenting with a workaround for a &quot;content staging&quot; feature I&#x27;m trying to implement. Essentially I need to put a custom button (either in the list or the document edit screen) that when clicked, creates a new entry in a different collection based on the data in current document. What&#x27;s the best way to do that? <br><br>I&#x27;ve created the button with a UI field and tried using the local API to do this, but I get an error <code>payload__WEBPACK_IMPORTED_MODULE_1__.default.create is not a function</code>. I think I&#x27;m not using it correctly, is this designed to only work with hooks? Should I use graphql instead? An entirely different approach?<br><br>Code below for the ui field custom component... any help/examples appreciated. Thanks!<br><br><pre><code class=\"hljs\">import React from &quot;react&quot;;\nimport { useDocumentInfo } from &quot;payload/components/utilities&quot;;\nimport payload from &quot;payload&quot;;\n\nasync function createStagePage(docData) {\n  await payload.create({\n    collection: &quot;stagePage&quot;,\n    data: {\n      title: &quot;testTitle&quot;,\n    },\n  });\n}\ntype Props = { label: string };\nconst StageField: React.FC&lt;Props&gt; = (props) =&gt; {\n  const docinfo = useDocumentInfo();\n  const clickHandler = (event: React.MouseEvent&lt;HTMLButtonElement&gt;) =&gt; {\n    event.preventDefault();\n    const returnObj = {\n      fields: docinfo.collection.fields,\n      id: docinfo.id,\n    };\n    createStagePage(returnObj);\n  };\n  return &lt;button onClick={clickHandler}&gt;Content Stage&lt;/button&gt;;\n};\nexport default StageField;</code></pre>",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675179930193
      },
      {
        "content": "The local API is server-side only, you&#x27;ll need to hit the REST API using fetch.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675440841944
      },
      {
        "content": "Here is a component that queries another collection that you may be able to use some code from: <a href=\"https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx\">https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675440912009
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Errors when trying to add custom elements to richText",
      "id": "1067096914513895446",
      "createdAt": 1674486130122
    },
    "messages": [
      {
        "content": "@Jarrod or @jacobsfletch  . Did you run into anything like this when developing our site?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674488222538
      },
      {
        "content": "yes I know it runs as one express server... didn&#x27;t suggest otherwise. Anyway... that&#x27;s not the important issue. Thanks will take a look.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674488257738
      },
      {
        "content": "I flipped &quot;no, they are&quot; in my mind. My bad.<br><br>Let us know if you run into anything else 👍",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674488304932
      },
      {
        "content": "that looks the same... still references <code>import { ElementButton } from &#x27;payload/components/rich-text&#x27;;</code> which is where the scss error is coming from according to my console error.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674488376917
      },
      {
        "content": "To be clear. I&#x27;m not importing any scss from node_modules anywhere in my app. The ONLY references are within these field folders",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674488417987
      },
      {
        "content": "@jakehopking can you take a read through this convo I had, it seems very similar: <a href=\"https://discord.com/channels/967097582721572934/1065905578863513710/1066037840787550218\">https://discord.com/channels/967097582721572934/1065905578863513710/1066037840787550218</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674488472726
      },
      {
        "content": "Thanks @Jarrod - That does seem like it&#x27;s the same issue. I have a barrel for the renderblocks component. How best to separate 🤔",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674489127593
      },
      {
        "content": "Didn&#x27;t need to separate, but did need to keep the richText field and field types out of the same barrel, so next didn&#x27;t evaluate it.<br>I can see the largeBody and useLabel elements working in the richText editor now. However, I would love for the video to work too.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674492231687
      },
      {
        "content": "When that&#x27;s enabled, the admin ui crashes",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674492244060
      },
      {
        "content": "oh really? What is the error?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674492299105
      },
      {
        "content": "useContext within the video component it seems??",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674492340032
      },
      {
        "content": "",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674492376261
      },
      {
        "content": "Full error if it helps",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674492616902
      },
      {
        "content": "Is there some extra setup required for the video in slate? I&#x27;ve installed <code>slate-react</code> and <code>@faceless-ui/modal</code>. Anything obvious I might be missing?",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674495641150
      },
      {
        "content": "Error seems to come from the useModal hook. Moving the debugger below this, and the admin ui crashes.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674495922497
      },
      {
        "content": "actually, removing the useModal and trying again, it fails if put below useSlate()",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674496104107
      },
      {
        "content": "🤷‍♂️",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674496725204
      },
      {
        "content": "I&#x27;ve exhausted ideas for this. Any inspiration @Jarrod ?",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674503037945
      },
      {
        "content": "Ok, so that to me means this component is being rendered outside of the modal provider. Where are you rendering this button?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674504103079
      },
      {
        "content": "I&#x27;m using it in the same place from your example (I&#x27;ve copied the exact setup from <code>website-cms</code>) nothing changed. Do I need to do something else to make this work then?",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674504393292
      },
      {
        "content": "it&#x27;s used in the richText component as an element",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674504416112
      },
      {
        "content": "wait if you remove all the code related to modal in this file, it gives you a different error?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674504536595
      },
      {
        "content": "oh wait",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674505125875
      },
      {
        "content": "you should not need to install slate-react or @faceless-ui/modal",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674505144314
      },
      {
        "content": "ok - ill try removing and try again",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674505510520
      },
      {
        "content": "removing all the modal code (answering your first question) just shows the video icon in the toolbar.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674505560600
      },
      {
        "content": "no errors",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674505569059
      },
      {
        "content": "If i don&#x27;t have slate installed, then it fails to start with this error",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674505833652
      },
      {
        "content": "is why i installed to begin with I remember",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674505840720
      },
      {
        "content": "then with slate-react installed, I get this:",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674505928297
      },
      {
        "content": "with <code>@faceless-ui/modal</code> I get these warnings:",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674506020280
      },
      {
        "content": "looking into node_modules and the version in payload&#x27;s package.json, the version of slate-react is quite different. I&#x27;ve installed locally the same version <code>0.72.1</code> and that last error has gone",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674506445628
      },
      {
        "content": "and now the browser console error is different too",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674506462001
      },
      {
        "content": "",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674506469578
      },
      {
        "content": "This is certainly odd, did you wipe node_modules/lock file and reinstall already?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674506539632
      },
      {
        "content": "I just booted our cms on the same payload version 1.5.9, but I am unable to recreate this issue 🤔 hmmmmmm",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674506586866
      },
      {
        "content": "Very odd. I&#x27;ve wiped node modules and now the browser has yet more different errors.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674506847966
      },
      {
        "content": "I think i&#x27;ll give up on this.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674506855888
      },
      {
        "content": "I&#x27;ll implement the video is a simple layout block instead",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674506872387
      },
      {
        "content": "I&#x27;ll leave the code in my repo... should you think of solution please do ping me. Interested to get to the bottom of it.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674506930216
      },
      {
        "content": "really wish I&#x27;d have kept payload and next separate repos. the deeper I get into this project, the more fragile the relationship between the two becomes.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674507621765
      },
      {
        "content": "is it a private repo?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674507826846
      },
      {
        "content": "it is - I can give you access if you would like to delve deeper?",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674507875466
      },
      {
        "content": "My interest has piqued",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674507893920
      },
      {
        "content": "<code>@Jarrodmflesch</code> on gh",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674507903040
      },
      {
        "content": "cool - I&#x27;ll send you an invite later... currently doing the separating of blocks (now that I&#x27;m using other elements/leaves in layout blocks, the issue you shared earlier has raised its ugly head).",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674508087949
      },
      {
        "content": "no rush, i&#x27;ll check it out when I have time 👍",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674508256858
      },
      {
        "content": "I&#x27;m a little confused by this because without these I&#x27;m unable to do useSlate(), and in the tutorial Jake was following this is something that gets used in order to find the current Editor object in the Button element",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1674741575872
      },
      {
        "content": "But I guess we could get it using <code>import { useSlate } from &#x27;payload/node_modules/slate-react&#x27;</code><br><br>But this isn&#x27;t what is used in the tutorial.<br><br>Using this import doesn&#x27;t throw any error @jakehopking",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1674741804526
      },
      {
        "content": "Thanks for the tip @Mark | Omniux I’ll try this and report back.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674748301366
      }
    ],
    "messageCount": 70
  },
  {
    "info": {
      "name": "useAsTitle using a relationship",
      "id": "1069862620871532614",
      "createdAt": 1675145525902
    },
    "messages": [
      {
        "content": "I have a relationship to users collection in a collection, and I want to use the email of the user as <code>useAsTitle</code> but I get the id, is there a way to choose the email?",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675145525902
      },
      {
        "content": "Have you defined <code>useAsTitle</code> on your users collection? It should be as simple as that, you can see it working if you boot up <code>npx create-payload-app</code> and select the <code>ts-blog</code> template",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675159914295
      },
      {
        "content": "Yes, in my users collection is email:",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675280563110
      },
      {
        "content": "but, in another collection, that has a relationship to users, I want to use the user email, is this possible?",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675280607658
      },
      {
        "content": "@akacronos not in the way you are looking for. You will need to wire up an afterChange hook and add a <code>title</code> field on this collectionConfig, set the value of the title field to the email of the user with your hook 💥",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675286387785
      },
      {
        "content": "That make sense! Thanks!!",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675292379524
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Wildcard Express Routes Blocking Admin",
      "id": "1070825108136022116",
      "createdAt": 1675375000748
    },
    "messages": [
      {
        "content": "Hello everyone,<br><br>Trust you are having a great day!<br><br>Below the <code>payload.init</code> within <code>server.ts</code> I have a wildcard route to show a 404 page for any routes that do not exist <code>app.use(&#x27;*&#x27;, fourOFour);</code>, this used to work however after upgrading to version <code>1.6.3</code> it has now always routed to the 404 &amp; not the payload admin when going to <code>/admin</code>.<br><br>Thank you!",
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1675375000748
      },
      {
        "content": "* All my other custom routes work, everything except <code>/admin</code>",
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1675375090681
      },
      {
        "content": "can you share your server file?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675431426048
      },
      {
        "content": "Yep, there were a couple breaking changes in the 1.6.1 release - you can read about what needs to be done to get back up and running here <a href=\"https://github.com/payloadcms/payload/releases/tag/v1.6.1\">https://github.com/payloadcms/payload/releases/tag/v1.6.1</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675449793552
      },
      {
        "content": "Thank you for sharing that helpful resource!",
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1675452964009
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Is there a repo or tutorial on using google login with payload?",
      "id": "1072097651010588742",
      "createdAt": 1675678398612
    },
    "messages": [
      {
        "content": "I want to completely replace the login functionality with google authentication",
        "authorID": "1004634747105972225",
        "authorName": "tantalum",
        "authorAvatar": "68d2f32d5429362e6bcf185ec5a749c7",
        "createdAtDate": 1675678398612
      },
      {
        "content": "I would say you&#x27;d want to update your server file to reroute your login page to a custom page. You can also likely hook into the middleware provided by Payload to store a token per-user (I assume) <a href=\"https://payloadcms.com/docs/authentication/using-middleware\">https://payloadcms.com/docs/authentication/using-middleware</a>",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1675692370590
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Importing / migrating data?",
      "id": "1071967121149534298",
      "createdAt": 1675647277868
    },
    "messages": [
      {
        "content": "Let&#x27;s say you&#x27;re migrating a client from something like Wordpress to Payload. How would you handle importing all of their blog posts? I&#x27;m a little unsure because I&#x27;m not familiar with Mongo. If Payload were in Postgres I&#x27;d feel more comfortable figuring this out. Any suggestions or approaches?",
        "authorID": "455433351227113472",
        "authorName": "burgerlove",
        "authorAvatar": null,
        "createdAtDate": 1675647277868
      },
      {
        "content": "I&#x27;m currently doing a similar WordPress to Payload migration, and what I&#x27;ve done is create some WP-CLI commands in WordPress to export the Posts to JSON.<br><br>I then wrote a script for Payload that uses the Local API, reads all of these JSON files, performs any necessary transformations, and then calls create/update as needed.<br><br>I created a <code>seed.ts</code> file next to my <code>server.ts</code>, at the core of this is the <code>start</code> function, which initializes Payload ... <br><br><pre><code class=\"hljs\">const start = async () =&gt;\n  await Payload.init({\n    secret: process.env.PAYLOAD_SECRET,\n    mongoURL: process.env.MONGODB_URI,\n    mongoOptions: {\n      dbName: process.env.MONGODB_DB_NAME ?? &#x27;payload-konghq&#x27;,\n    },\n    local: true,\n    onInit: (_payload) =&gt; {\n      payload = _payload;\n      payload.logger.info(`Payload initialized...`);\n      seed().then(\n        () =&gt; {\n          process.exit(0);\n        },\n        (err) =&gt; {\n          console.error(err);\n          process.exit(-1);\n        },\n      );\n    },\n  });\nstart();</code></pre>",
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675696877849
      },
      {
        "content": "The <code>seed</code> function just acts as a wrapper around various other functions, which are purpose built for seeding data in the correct order ... for example, I create/update my Payload Users first, then I create my uploads, then I create my globals, and then I create my Posts ... this ensures that related data is in place before I try to associate things.<br><br>Ignoring my transformations, and some other bits ... the main <code>seedCollection</code> function looks like this (it uses <code>createDocument</code>, <code>updateDocument</code> and <code>setDocumentParent</code>)",
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675696900836
      },
      {
        "content": "<pre><code class=\"hljs\">async function createDocument(\n  collection: string,\n  data: any,\n): Promise&lt;TypeWithID&gt; {\n  return payload\n    .create({\n      collection: collection,\n      disableVerificationEmail: true,\n      data: {\n        ...data,\n        parent: null,\n      },\n    })\n    .then((doc) =&gt; {\n      if (data.parent) {\n        return setDocumentParent(collection, data.id, data.parent);\n      }\n      return doc;\n    });\n}\n\nasync function updateDocument(\n  collection: string,\n  id: string,\n  data: any,\n): Promise&lt;TypeWithID&gt; {\n  return payload\n    .update({\n      collection: collection,\n      data: data,\n      id: id,\n    })\n    .then((doc) =&gt; {\n      if (data.parent) {\n        return setDocumentParent(collection, data.id, data.parent);\n      }\n      return doc;\n    });\n}\n\n// nested docs parent\nasync function setDocumentParent(\n  collection,\n  childId,\n  parentId,\n): Promise&lt;TypeWithID&gt; {\n  return payload.update({\n    collection: collection,\n    id: childId,\n    data: {\n      id: childId,\n      parent: parentId,\n    },\n  });\n}\n\nasync function seedCollection(collection: string) {\n  const dirPath = path.resolve(__dirname, &#x27;../seeds&#x27;, collection);\n  let filenames = [];\n\n  try {\n    filenames = fs.readdirSync(dirPath);\n  } catch (err) {\n    console.warn(&#x27;[WARNING]&#x27;, err);\n  }\n\n  for (let filename of filenames) {\n    const filepath = path.resolve(dirPath, filename);\n    if (fs.lstatSync(filepath).isDirectory()) continue;\n\n    const json = fs.readFileSync(filepath);\n    const data = JSON.parse(json.toString());\n    try {\n      const doc = await payload.findByID({\n        collection: collection,\n        id: data.id,\n      });\n      const updated = await updateDocument(collection, doc.id, data);\n    } catch (err) {\n      console.log(&#x27;[WARNING]: &#x27;, err);\n      const created = await createDocument(collection, data);\n    }\n  }\n}</code></pre>",
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675696908017
      },
      {
        "content": "It&#x27;s important to note that to keep things in sync across multiple calls, I&#x27;ve overridden the collection&#x27;s ID field and use a custom ID.  This ensure if I change data in WordPress, run the export commands, then run the import commands, the import will update the appropriate content ... rather than deleting/recreating ...",
        "authorID": "131800639293358080",
        "authorName": "David",
        "authorAvatar": "3ecb26fcfaf6619fcfad9de1cdc6a92d",
        "createdAtDate": 1675696910856
      },
      {
        "content": "I&#x27;m using the WordPress API (wpapi package) to query posts and import them via payloads rest API in a simple node script.",
        "authorID": "190191205907169280",
        "authorName": "altan",
        "authorAvatar": "6fe697550cadb7d4199a44e5bb05839d",
        "createdAtDate": 1675700034271
      },
      {
        "content": "Also importing media files like that and check against the slug to avoid duplicate imports. It&#x27;s def not super performant, but works well enough for my usecase",
        "authorID": "190191205907169280",
        "authorName": "altan",
        "authorAvatar": "6fe697550cadb7d4199a44e5bb05839d",
        "createdAtDate": 1675700159442
      },
      {
        "content": "Working something similar porting from keystonejs, I agree with @altan, I’m querying my current db and just hitting the payload rest api. It’s worked out well… the trickiest part is media files, I just wrote some notes on my post about if you would like my experience <a href=\"https://discord.com/channels/967097582721572934/1070191210834182194\">https://discord.com/channels/967097582721572934/1070191210834182194</a>",
        "authorID": "958604809215283250",
        "authorName": "joephuz",
        "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
        "createdAtDate": 1675920091241
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Condition doesn't seem to work in type Block fields",
      "id": "1067370667235889212",
      "createdAt": 1674551397857
    },
    "messages": [
      {
        "content": "I&#x27;m having a bit of trouble regarding the following setup:<br><pre><code class=\"hljs\">import { Field } from &#x27;payload/types&#x27;;\n\nconst LinkField: Field[] = [\n  {\n    name: &#x27;link_type&#x27;,\n    label: &#x27;Link type&#x27;,\n    type: &#x27;radio&#x27;,\n    required: true,\n    options: [\n      { label: &#x27;Internal link&#x27;, value: &#x27;internal_link&#x27; },\n      { label: &#x27;Custom url&#x27;, value: &#x27;external_link&#x27; },\n    ],\n  },\n  {\n    name: &#x27;url&#x27;,\n    type: &#x27;group&#x27;,\n    fields: [\n      {\n        name: &#x27;internal_link&#x27;,\n        label: &#x27;Link to&#x27;,\n        type: &#x27;relationship&#x27;,\n        relationTo: [&#x27;career-detail&#x27;],\n        admin: { condition: ({ link_type }) =&gt; link_type === &#x27;internal_link&#x27; },\n      },\n      {\n        name: &#x27;external_link&#x27;,\n        label: &#x27;Link to&#x27;,\n        type: &#x27;text&#x27;,\n        admin: { condition: ({ link_type }) =&gt; link_type === &#x27;external_link&#x27; },\n      },\n    ],\n    admin: { condition: ({ link_type }) =&gt; link_type },\n  },\n];\n\nexport default LinkField;</code></pre><br>When I import this in a collectionConfig field, the conditions works. However when I import it in a Block it doesn&#x27;t do anything. Am I missing something?",
        "authorID": "934107997687402547",
        "authorName": "NH02",
        "authorAvatar": "bb09656c42c6ca6518c538c7c38b9393",
        "createdAtDate": 1674551397857
      },
      {
        "content": "Fixed it! Only thing I needed to do was change the following in the admin: <pre><code class=\"hljs\">admin: { condition: (_, { link_type } =&gt; link_type === &#x27;internal_link&#x27;)</code></pre>. This makes sense, because link_type comes from siblingData, the second parameter.",
        "authorID": "934107997687402547",
        "authorName": "NH02",
        "authorAvatar": "bb09656c42c6ca6518c538c7c38b9393",
        "createdAtDate": 1674571446458
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How to remove uniqueness from a field relationship?",
      "id": "1067938750539235349",
      "createdAt": 1674686839471
    },
    "messages": [
      {
        "content": "How can I make sure that I can use the same value in different products? How to remove this uniqueness?",
        "authorID": "467287070394679297",
        "authorName": "Руся",
        "authorAvatar": "37b8372854854ee7899947390a0b3112",
        "createdAtDate": 1674686839471
      },
      {
        "content": "Remove the index in your database",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674694510777
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Nuxt 3 + Payload CMS",
      "id": "1055146765113905284",
      "createdAt": 1671636992482
    },
    "messages": [
      {
        "content": "Hi!<br>I&#x27;m trying to create an express server monorepo with Nuxt 3 and Payload, somewhat similar to the Remix example in the latest payload blog (<a href=\"https://payloadcms.com/blog/remix-payload-express-monorepo\">https://payloadcms.com/blog/remix-payload-express-monorepo</a>).<br><br>Do do this I created a server middleware in my nuxt project. After a few refreshes I can reach the payload admin dashboard but I keep getting the following error in my server console log: <br><br>&quot;express-rate-limit: req.ip is undefined - you can avoid this by providing a custom keyGenerator function, but it may be indicative of a larger issue. &quot; <br><br>Ican build my nuxt app, but can&#x27;t serve it without errors.<br><br>Does anyone have any experience with this? Or with using the Payload Local API in Nuxt?",
        "authorID": "1054912671880843345",
        "authorName": "Tijl",
        "authorAvatar": null,
        "createdAtDate": 1671636992482
      },
      {
        "content": "What is the purpose of creating the middleware?<br>I have project using Nuxt 3 and Payload but I am not clear what are you trying to achieve.",
        "authorID": "1042016162210398248",
        "authorName": "Seno",
        "authorAvatar": "3a9330b7bc1f35bd0f401492970934f8",
        "createdAtDate": 1672147034129
      },
      {
        "content": "I think the advantage of running payload cms and nuxt on the same express server is you can use the Local API instead of rest or graphql. Hence getting data will be faster, since it won&#x27;t need to fetch it from a different server.",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1672172389712
      },
      {
        "content": "Ah I see, thanks @AngeloK. In this case I have no experience on that but this is definitely valuable to learn",
        "authorID": "1042016162210398248",
        "authorName": "Seno",
        "authorAvatar": "3a9330b7bc1f35bd0f401492970934f8",
        "createdAtDate": 1672185088748
      },
      {
        "content": "Payload has some built-in rate limiting. It looks like you may be hitting the default limit somehow. Take a look into adjusting the rateLimit option in your config. Docs here: <a href=\"https://payloadcms.com/docs/configuration/overview#options\">https://payloadcms.com/docs/configuration/overview#options</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674672427387
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Disable inline creation feature",
      "id": "1074253173415493713",
      "createdAt": 1676192315201
    },
    "messages": [
      {
        "content": "So I recently stumbled upon the feature added by this PR (<a href=\"https://github.com/payloadcms/payload/pull/1230\">https://github.com/payloadcms/payload/pull/1230</a>) after upgrading Payload and while I LOVE the idea of it... I would like to be able to disable it. Creating a new user while writing a blog post is something that I find highly unlikely anyone would want to do and as it is, the plus button kind of just makes the UI more cluttered and harder to understand. I did see in the PR that the feature that I&#x27;m looking for was planned to be done before merge but as far as I can see, that didn&#x27;t happen. Or am I crazy here? 😅",
        "authorID": "321229198234615808",
        "authorName": "Ellie",
        "authorAvatar": "7472ce50c8e25a58fb6ed48925a7c31d",
        "createdAtDate": 1676192315201
      },
      {
        "content": "@Ellie As of now, the only way to disable it would be if the user doesn&#x27;t have <code>create</code> access to that relationship&#x27;s collection. <br><br>I agree that this is very much needed, and we&#x27;ll be working this into our roadmap. Here is the feature request for what you&#x27;re describing. Go ahead and upvote 👍  <a href=\"https://github.com/payloadcms/payload/discussions/1750\">https://github.com/payloadcms/payload/discussions/1750</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676242481460
      },
      {
        "content": "Hey thanks Elliot! Seems like I didn’t even have time to go in and upvote. There’s already a PR! 🎉",
        "authorID": "321229198234615808",
        "authorName": "Ellie",
        "authorAvatar": "7472ce50c8e25a58fb6ed48925a7c31d",
        "createdAtDate": 1676274834340
      },
      {
        "content": "PR was merged in. It will be in the next release.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676308179489
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Is it possible to set the value of a field based on a selection in another field?",
      "id": "1068560027599765534",
      "createdAt": 1674834963465
    },
    "messages": [
      {
        "content": "Title says it all really.<br><br>I have a custom field that fetches data from a 3rd party API and renders a select component.<br><br>When the editor selects an option from this dropdown I want to fill in some other fields on the content item if they are don&#x27;t already have a value.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674834963465
      },
      {
        "content": "Absolutely",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674835660632
      },
      {
        "content": "You can do this inside your custom field component, with the hooks we expose: <a href=\"https://payloadcms.com/docs/admin/hooks\">https://payloadcms.com/docs/admin/hooks</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674835730635
      },
      {
        "content": "check out <code>useFormFields</code>, it should do what you need 👍",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674835777708
      },
      {
        "content": "Awesome!",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674847675702
      },
      {
        "content": "Thanks",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674847677891
      },
      {
        "content": "Bonus question... if the field I&#x27;m setting with <code>useFormFields</code> is also the field named in <code>admin.useAsTitle</code> is there a way to make the UI update automatically. Currently the title just stays as <code>[untitled]</code> until I manually edit the field.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674859837260
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Is it possible to extend the default field components (upload, text fields)?",
      "id": "1070285562453426196",
      "createdAt": 1675246363033
    },
    "messages": [
      {
        "content": "So that I can make some minor changes to them rather than an entirely different component? Is there a way to import them directly or are their codes available?<br><br>Thank you!",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675246363033
      },
      {
        "content": "You can import a Payload&#x27;s field into your own custom component to extend it&#x27;s functionality, a good example of this is in our SEO plugin repo: <a href=\"https://github.com/payloadcms/plugin-seo/blob/main/src/fields/MetaTitle.tsx\">https://github.com/payloadcms/plugin-seo/blob/main/src/fields/MetaTitle.tsx</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675262419106
      },
      {
        "content": "Thanks a lot! 😄",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675262934355
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Is it possible to override scss vars?",
      "id": "1075154570147270787",
      "createdAt": 1676407224929
    },
    "messages": [
      {
        "content": "I&#x27;m trying to update <code>$baseline-body-size</code> but it doesn&#x27;t affect the existing scss.",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1676407224929
      },
      {
        "content": "Seems that only CSS variables can be overridden",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1676467868849
      },
      {
        "content": "We should likely convert the scss variables into css variables...",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676477798958
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Type Generation Questions",
      "id": "1067535433191407717",
      "createdAt": 1674590681122
    },
    "messages": [
      {
        "content": "Hey all, I have a couple questions about the Payload type generation.<br><br>1. Is there a way to mark a top-level field as optional when the types are generated?<br><br>- I haven&#x27;t been able to find a way to mark a collection-level field as optional (i.e. when it&#x27;s not nested in a group of other fields). This optional field would ideally render out on the admin UI initially as a plus button you have to add, and the generated type would be optional, similar to <code>field?: {...subFields}</code>. Is there an obvious way to do this that I&#x27;m missing, or is this not possible/implemented yet?<br>- Currently I&#x27;m having to include a checkbox labeled as &quot;Include &lt;field name&gt;&quot; and normalize it down the road which is annoying and hard to manage. This generates to  <code>field: {...subFields}; includeField: boolean</code><br><br><br>2. Are there plans to smarten up the type-generation to take into account conditions in the admin UI? I ran into a situation where a field is being replaced by another via a condition in the admin UI, but this behavior isn&#x27;t reflected in the types. I know it would be very difficult to determine the behavior of an arbitrary function, but for a simple boolean check in the conditional I feel like it should be possible to determine the expected behavior from that and generate types accordingly.<br><br>Other than that, this feature has been very helpful and a life saver, so keep up the fantastic work!<br><br>If I&#x27;m missing something obvious please let me know, thanks!",
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1674590681122
      },
      {
        "content": "1. I think that the way you are doing it is likely the way we would recommend, you could make this into a re-usable field like so: <br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">CollectionConfig</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/types&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Field</span>, fieldAffectsData } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/dist/fields/config/types&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> optionalField = (<span class=\"hljs-attr\">field</span>: <span class=\"hljs-title class_\">Field</span>): <span class=\"hljs-title class_\">Field</span>[] =&gt; {\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_\">fieldAffectsData</span>(field)) {\n    <span class=\"hljs-keyword\">return</span> [\n      {\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;checkbox&#x27;</span>,\n        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">`<span class=\"hljs-subst\">${field.name}</span>Enabled`</span>,\n        <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">`Enable <span class=\"hljs-subst\">${field.label}</span>`</span>,\n      },\n      {\n        ...field,\n        <span class=\"hljs-attr\">admin</span>: {\n          ...field.<span class=\"hljs-property\">admin</span>,\n          <span class=\"hljs-attr\">condition</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">return</span> data[<span class=\"hljs-string\">`<span class=\"hljs-subst\">${field.name}</span>Enabled`</span>];\n          },\n        },\n      },\n    ];\n  }\n\n  <span class=\"hljs-keyword\">return</span> [];\n};\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">ExampleCollection</span>: <span class=\"hljs-title class_\">CollectionConfig</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;example-collection&#x27;</span>,\n  <span class=\"hljs-attr\">fields</span>: [\n    ...<span class=\"hljs-title function_\">optionalField</span>({\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;optionalTextField&#x27;</span>,\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Text Field&#x27;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text&#x27;</span>,\n    }),\n  ],\n};</code></pre><br><br>2. I am not sure that is possible, since types are static.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674657903055
      },
      {
        "content": "That&#x27;s a cool idea, thanks for that! I figured that 2. wasn&#x27;t going to be possible but figured I&#x27;d ask anyway. Thanks!",
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1674677767004
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Why does the afterRead hook run multiple times for just one page load?",
      "id": "1070703179420930171",
      "createdAt": 1675345930677
    },
    "messages": [
      {
        "content": "It&#x27;s run a total of 15 (!!) times for just one page reload, even though I have attached that afterRead hook to just one single field. Is it supposed to work that way?<br><br>The collection I&#x27;m using: <a href=\"https://paste.gg/p/anonymous/6ba997cb994d4a32bbe29d0f75bb87b9\">https://paste.gg/p/anonymous/6ba997cb994d4a32bbe29d0f75bb87b9</a><br><br>First 5 times siblingdata works as usual. Last 10 times siblingdata is empty.",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675345930677
      }
    ],
    "messageCount": 0
  },
  {
    "info": {
      "name": "Namespaced tabs generated types as optional",
      "id": "1063046303979933698",
      "createdAt": 1673520389314
    },
    "messages": [
      {
        "content": "Is there any way to generate the type as non-optional? <br><br><pre><code class=\"hljs\">hero?: {\n    heroText: string;\n    backgroundImage: string | Image;\n    overlayImage: string | Image;\n  };</code></pre><br><code>hero</code> should be non-optional.<br><br>Currently, I use non-null assertion whenever I need a value inside the <code>hero</code> object. <code>{hero!.heroText}</code><br>Seems like in most use cases, the namespaced tab data will not be <code>undefined</code>. When no fields in the tab are filled in, an empty array <code>[]</code> is returned.<br><br>My tabs config:<br><pre><code class=\"hljs\">{\n      type: &quot;tabs&quot;,\n      tabs: [\n        {\n          label: &quot;Hero&quot;,\n          name: &quot;hero&quot;,\n          fields: [...]\n        }\n      ]\n}</code></pre>",
        "authorID": "204963517344776192",
        "authorName": "sjj1991",
        "authorAvatar": "cf40eec408b17d21c48dbd27c9a1f97a",
        "createdAtDate": 1673520389314
      },
      {
        "content": "@sjj1991 could you make your <code>hero</code> field required?",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1674052777303
      },
      {
        "content": "i&#x27;ve tried making both the tabs and hero tab required. made no difference in the generated types file, still optional.<br><pre><code class=\"hljs\">  fields: [\n    {\n      type: &quot;tabs&quot;,\n      required: true,\n      tabs: [\n        {\n          label: &quot;Hero&quot;,\n          name: &quot;hero&quot;,\n          required: true,\n          fields: [</code></pre>",
        "authorID": "204963517344776192",
        "authorName": "sjj1991",
        "authorAvatar": "cf40eec408b17d21c48dbd27c9a1f97a",
        "createdAtDate": 1674057583095
      },
      {
        "content": "You should set <code>required: true</code> on the <code>hero</code> field itself and not the tab, only named tabs save to the db and generate types",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1674065946906
      },
      {
        "content": "i mean i&#x27;ve tried all permutations of <code>required: true</code>. doesn&#x27;t seem to affect the generated types.",
        "authorID": "204963517344776192",
        "authorName": "sjj1991",
        "authorAvatar": "cf40eec408b17d21c48dbd27c9a1f97a",
        "createdAtDate": 1674215817962
      },
      {
        "content": "@sjj1991 Do you mind writing this up as a GitHub Issue? We can investigate this a bit deeper.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674225046583
      },
      {
        "content": "i&#x27;ve created an issue on github <a href=\"https://github.com/payloadcms/payload/issues/1933\">https://github.com/payloadcms/payload/issues/1933</a>",
        "authorID": "204963517344776192",
        "authorName": "sjj1991",
        "authorAvatar": "cf40eec408b17d21c48dbd27c9a1f97a",
        "createdAtDate": 1674408890177
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Trying to style a custom UI component with an input field",
      "id": "1064975075767500850",
      "createdAt": 1673980244343
    },
    "messages": [
      {
        "content": "I am trying to make a custom UI field that has an input element inside that I want to style similarly to Payloads default text field. However, I cant seem to find that class definition anywhere. <br><br>The payload docs say that you can import the used styles and mixins with the above code, but that doesn&#x27;t seem to work when I try importing that into my own scss file.",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1673980244343
      },
      {
        "content": "Or is something like this the preferred way to use Payload form elements in custom components? I want to highlight that this is just a form that will allow the creation of a Message object inside the view of a Ticket object",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1673985322478
      },
      {
        "content": "Or is using the textinput the better option?",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1673986093985
      },
      {
        "content": "Hey @blupandaman - you can take either approach, importing SCSS or the form elements, whatever works best for you. <br><br>For the <code>@import &#x27;~payload/scss&#x27;;</code> not working - can you share your own scss file and how you are trying to use the payload styles? I would expect something like this to work for you:<br><br><pre><code class=\"hljs\">@import &#x27;~payload/scss&#x27;;\n\n.your-classname {\n  @include formInput;\n  margin-bottom: base(1);\n}</code></pre>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674079292791
      },
      {
        "content": "Thanks for the reply. I just ended up grabbing the value from the TextInput component!",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1674103066517
      },
      {
        "content": "I will have to test out the SCSS import again soon",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1674103099761
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Serverless deployment (Google Cloud)",
      "id": "1072139981432303716",
      "createdAt": 1675688490971
    },
    "messages": [
      {
        "content": "What is the current situation on deploying in a serverless environment? (Support, latency, etc.) Thank you.",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675688490971
      },
      {
        "content": "We use Google Cloud Run to host our Payload app and it&#x27;s pretty decent. Good value for money and is scaleable. We use Nextjs on the frontend so the backend doesn&#x27;t need to be particularly fast due to Next revalidating the front end behind the scenes.",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675688667893
      },
      {
        "content": "@Mark | Omniux but surely you still have to validate on the backend anyway no? (security reasons) also why Cloud Run and not Cloud Functions?",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675689312185
      },
      {
        "content": "do you suffer from cold starts? When there&#x27;s no instance running, it takes a long time to be available (&gt;20 secs)",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675690195655
      },
      {
        "content": "@bombnp you can always do the cron trick and do a dead-end request every ~15s",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690392886
      },
      {
        "content": "but that would mean the instance would always be running, which incurs cost, yes?",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675690437235
      },
      {
        "content": "no, the costs come from initiation and time. The initiation cost is minimal, the ram and cpu time cost will also be minimal because your request should take 50ms",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690491330
      },
      {
        "content": "just make an express route /keepAlive or something that immediately responds a  200 then finishes",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690516626
      },
      {
        "content": "ohhhh i&#x27;ve always thought the price is incured for the time &quot;the instance is alive&quot;, but it&#x27;s the time &quot;the instance processes our request&quot; isn&#x27;t it?",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675690606723
      },
      {
        "content": "the instance being warmed up isn&#x27;t price incurred to my knowledge, here&#x27;s the cost if u did it every 15 seconds, it took 50ms on a 1gb 1.4ghz instance",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690667669
      },
      {
        "content": "basically the cost is nothing, I&#x27;m assuming 0.1mb per call",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690684404
      },
      {
        "content": "which it wont be",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690686734
      },
      {
        "content": "although that&#x27;s fitting into my free tier",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690717680
      },
      {
        "content": "-_- no option to estimate without it",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690727355
      },
      {
        "content": "okay it&#x27;s about $0.30 a month",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690785417
      },
      {
        "content": "on just cpu and ram",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690812701
      },
      {
        "content": "including networking idk $1",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690817275
      },
      {
        "content": "Any ideas how to avoid the <code>Cannot use import statement outside a module</code> error @bombnp",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690895545
      },
      {
        "content": "where does this error come from?",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675690948549
      },
      {
        "content": "when deploying to cloud function",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690958510
      },
      {
        "content": "I&#x27;m getting the error because server.js and Payload uses require() but the config file and others uses import",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690983008
      },
      {
        "content": "runs fine locally but google hates me",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675690988743
      },
      {
        "content": "I have not deployed to cloud functions yet, only cloud run (which i switched to EC2 because i hated cold start)",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675690998302
      },
      {
        "content": "AWS?",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675691007171
      },
      {
        "content": "why not Google&#x27;s instances?",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675691019339
      },
      {
        "content": "I&#x27;ve always preferred AWS for cloud, I just tried out Cloud Run because it seemed cheap with how it works",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691055998
      },
      {
        "content": "You know that AWS provides Lambda?",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675691075780
      },
      {
        "content": "yea i might try that out too",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691152349
      },
      {
        "content": "not sure if payload goes well with serverless functions like Lambda, since it needs db connection every time it fires, but might be worth trying",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691199295
      },
      {
        "content": "If the db is on the same premises the latency should be relatively similar to running the db locally (ish)",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675691248816
      },
      {
        "content": "so a mongodb running on the same region should be fine",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675691263730
      },
      {
        "content": "",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675691318681
      },
      {
        "content": "ahh ty",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691370595
      },
      {
        "content": "your cold start shouldn&#x27;t take 20 seconds though, are you building or something everytime?",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675691462720
      },
      {
        "content": "or maybe fetching the dependencies rather than from cache",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675691487518
      },
      {
        "content": "Yea i thought it was off too. Didn&#x27;t really investigate yet because I was very busy with getting all the features up.",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691612416
      },
      {
        "content": "It was a docker image of the entire payload app, with all the admin panel and stuff",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691636304
      },
      {
        "content": "still, it shouldn&#x27;t be long since everything&#x27;s built already",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691644799
      },
      {
        "content": "note: the db is in mongo atlas free tier",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691662410
      },
      {
        "content": "If you&#x27;re fetching the dependencies fresh + building the panel then serving it&#x27;ll take a long time wasting effort on unneeded things",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675691683766
      },
      {
        "content": "nope, it&#x27;s already built inside Dockerfile",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675691727073
      },
      {
        "content": "strange",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675691744872
      },
      {
        "content": "@bombnp after some struggle I have a Payload server running on Cloud Functions, on warm-start client sees a ~40-50ms delay. <code>NODE_ENV=development</code> causes massive delays and weirdness, <code>NODE_ENV=production</code> fixes this, just something you might&#x27;ve missed previously :)",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675701353532
      },
      {
        "content": "serverless is... something we have thought a lot about, the 1.6.x release laid the groundwork for some neat things in this space",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675706564181
      },
      {
        "content": "interesting. Thanks! Will keep that in mind while I investigate.",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675710261078
      },
      {
        "content": "cloud run with docker was the simplest to setup. We don&#x27;t need to worry about performance of Payload as long as the frontend (hosted in vercel) is fast. With Payload only being used when revalidating, because this is technically done in the background, we generally don&#x27;t need to worry about computing power of the MongoDB or Payload instance. Our entire stack costs about $3 a month. Cold starts take about 10 seconds to load the dashboard. That&#x27;s a hell of a lot faster than Strapi and even faster than Wordpress",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675798193918
      },
      {
        "content": "when you say 10 seconds cold start, do u mean only to load the dashboard? or does it take 10 seconds to access Payload&#x27;s REST API as well?",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675827477303
      },
      {
        "content": "To load the login page. 10 seconds is an extreme case, it&#x27;s closer to 5 seconds.<br><br>Once logged in Payload runs pretty fast. About a second or so for changes to be saved. If you&#x27;ve ever worked on large Wordpress Projects, you&#x27;ll know that even just 2 seconds to save a page is FAST",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675831962474
      }
    ],
    "messageCount": 47
  },
  {
    "info": {
      "name": "Missing Payload Config",
      "id": "1071062090334339122",
      "createdAt": 1675431501707
    },
    "messages": [
      {
        "content": "Hi,<br><br>it&#x27;s me again. I still try to get my seed operation going and it throws the error : &quot;&#x27;Error: cannot find Payload config. Please create a configuration file located at the root of your current working directory called &quot;payload.config.js&quot; or &quot;payload.config.ts&quot;.&#x27;).<br><br>I call the function in src/seed.ts where also payload.config resides and my package json goes like this &quot;seed&quot;: &quot;node src/seed.ts&quot;. When I try to prefix the command with &quot;PAYLOAD_CONFIG_PATH=src/payload.config.ts &quot;, it throws the error &quot;Cannot use import statement outside a module&quot;.<br><br>Any help is like always highly appreciated",
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675431501707
      },
      {
        "content": "hey! try running your file with <code>ts-node src/seed.ts</code>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675432076963
      },
      {
        "content": "That did the trick, thank you very much",
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675432839959
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Uploads resized format",
      "id": "1065797253249380454",
      "createdAt": 1674176266730
    },
    "messages": [
      {
        "content": "I&#x27;m having trouble when uploading an image. This is my code:<br><pre><code class=\"hljs\">import { CollectionConfig } from &#x27;payload/types&#x27;;\n\nconst Media: CollectionConfig = {\n  slug: &#x27;media&#x27;,\n  access: {\n    read: () =&gt; true,\n  },\n  fields: [],\n  upload: {\n    staticURL: &#x27;/media&#x27;,\n    staticDir: &#x27;media&#x27;,\n    disableLocalStorage: true,\n    formatOptions: {\n      format: &quot;webp&quot;,\n      options: {\n        losselesss: true\n      }\n    },\n    imageSizes: [\n      {\n        name: &#x27;thumbnail&#x27;,\n        width: 400,\n        height: 300,\n        position: &#x27;centre&#x27;,\n      },\n      {\n        name: &#x27;card&#x27;,\n        width: 768,\n        height: 1024,\n        position: &#x27;centre&#x27;,\n      },\n      {\n        name: &#x27;tablet&#x27;,\n        width: 1024,\n        height: null,\n        position: &#x27;centre&#x27;,\n      },\n    ],\n    adminThumbnail: &#x27;thumbnail&#x27;,\n  },\n};\n\nexport default Media;</code></pre><br><br>The problem is that the resized images are saved with the original format instead of having the webp format. The only re-formated image is the original size one",
        "authorID": "494333401264947218",
        "authorName": "nacho",
        "authorAvatar": null,
        "createdAtDate": 1674176266730
      },
      {
        "content": "Hmm, that&#x27;s interesting. Let me try to recreate",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674228380767
      },
      {
        "content": "I&#x27;m able to recreate the issue. I&#x27;ll log an issue. Thanks @nacho 👍",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674230013932
      },
      {
        "content": "Logged here: <a href=\"https://github.com/payloadcms/payload/issues/1928\">https://github.com/payloadcms/payload/issues/1928</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674230281384
      },
      {
        "content": "This was a misunderstanding. The top-level <code>formatOptions</code> <em>is for the original file only</em>. The desired <code>formatOptions</code> for each size should be set individually.<br><br>Example that formats original and all sizes:<br><pre><code class=\"hljs\">import { CollectionConfig } from &#x27;payload/types&#x27;\n\nconst Media: CollectionConfig = {\n  slug: &#x27;media&#x27;,\n  access: {\n    read: () =&gt; true,\n  },\n  fields: [],\n  upload: {\n    staticURL: &#x27;/media&#x27;,\n    staticDir: &#x27;media&#x27;,\n    // Format options for original\n    formatOptions: {\n      format: &#x27;jpg&#x27;,\n    },\n    imageSizes: [\n      {\n        name: &#x27;thumbnail&#x27;,\n        width: 400,\n        height: 300,\n        position: &#x27;centre&#x27;,\n        formatOptions: {\n          format: &#x27;jpg&#x27;,\n        },\n      },\n      {\n        name: &#x27;card&#x27;,\n        width: 768,\n        height: 1024,\n        position: &#x27;centre&#x27;,\n        formatOptions: {\n          format: &#x27;jpg&#x27;,\n        },\n      },\n      {\n        name: &#x27;tablet&#x27;,\n        width: 1024,\n        height: null,\n        position: &#x27;centre&#x27;,\n        formatOptions: {\n          format: &#x27;jpg&#x27;,\n        },\n      },\n    ],\n    adminThumbnail: &#x27;thumbnail&#x27;,\n  },\n}\n\nexport default Media</code></pre>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674231026145
      },
      {
        "content": "Thank!!",
        "authorID": "494333401264947218",
        "authorName": "nacho",
        "authorAvatar": null,
        "createdAtDate": 1674608547767
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Hide options from select",
      "id": "1074911821569458176",
      "createdAt": 1676349349158
    },
    "messages": [
      {
        "content": "is there any way to hide certain &quot;options&quot; from &quot;select &quot; field depending on the user&#x27;s rol?<br><br>for example, i&#x27;d like to display less options for a normal user.",
        "authorID": "629766588492677131",
        "authorName": "LuisLopezlg",
        "authorAvatar": "34c04cc9816e77b82120e46fcb360d69",
        "createdAtDate": 1676349349158
      }
    ],
    "messageCount": 0
  },
  {
    "info": {
      "name": "RTE Text Alignment findings & assistance",
      "id": "1070320542537760858",
      "createdAt": 1675254702935
    },
    "messages": [
      {
        "content": "Hey folks, I&#x27;ve been trying to build text alignment into my RTE (like I&#x27;m sure a lot of you have tried to do as well) and I&#x27;m wanting to share some of the stuff I&#x27;ve done so far. Just a disclaimer, this is currently working in a very limited capacity, the UI is glitchy, and the only thing is achieves so far is mutating the target node to have alignment as an option. I have trawled through every CMS project on the Payload Github to identify key areas for developing a custom text alignment element. Here are my findings so far;<br><br>- Text Alignment should be done using an Element rather than a Leaf, this is because leafs alter their child elements directly, whereas Elements affect a block. So if you have a h4 tag with Bold and Underline leaves, you want to add alignment to the entire text block rather than the normal text, bold and underline leaves.<br>- Text Alignment should not be treated as a unique element, it is an extension of the current node. According to this post - <a href=\"https://news.ycombinator.com/item?id=14127632\">https://news.ycombinator.com/item?id=14127632</a> - the author of Slate states that you should add custom data to the nodes, rather than setting the &#x27;type&#x27; property of the node (like what happens currently when applying h1, h2, h3...)<br>- When attempting to use Slatejs or Slate-react directly inside Element or Button code, YOU DO NOT NEED TO NPM INSTALL THESE PACKAGES. Instead, using the version used by payload. These packages can be accessed from <code>payload/node_modules/slate</code> and <code>payload/node_modules/slate-react</code>",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675254702935
      },
      {
        "content": "And now, my code;<br><br><pre><code class=\"hljs\">import React, { useCallback } from &#x27;react&#x27;;\nimport { ElementButton } from &#x27;payload/components/rich-text&#x27;;\nimport { useSlate, ReactEditor } from &#x27;payload/node_modules/slate-react&#x27;\nimport { Transforms, Editor, Element as SlateElement } from &#x27;payload/node_modules/slate&#x27;\nimport { IconAlignCenter, IconAlignLeft, IconAlignRight } from &#x27;../Icons&#x27;;\n\nconst TEXT_ALIGN_TYPES = [&#x27;left&#x27;, &#x27;center&#x27;, &#x27;right&#x27;]\n\ntype AlignmentNode = Partial&lt;SlateElement &amp;\n{\n    align?: typeof TEXT_ALIGN_TYPES,\n    type: string\n}&gt;\n\nconst addAlignment = (editor, format) =&gt; {\n\n    let targetNode: AlignmentNode = undefined;\n\n    Transforms.unwrapNodes(editor, {\n        match: n =&gt; {\n            var match = !Editor.isEditor(n) &amp;&amp;\n                SlateElement.isElement(n) &amp;&amp;\n                !TEXT_ALIGN_TYPES.includes(format)\n\n            if (match) {\n                targetNode = n as AlignmentNode;\n                return true;\n            }\n            return false;\n        },\n        split: true,\n    })\n\n    let newProperties: AlignmentNode = targetNode\n\n    newProperties = {\n        align: format,\n    }\n\n    Transforms.setNodes&lt;SlateElement&gt;(editor, newProperties)\n\n    ReactEditor.focus(editor);\n};\n\nconst Button: React.FC&lt;{ path: string }&gt; = () =&gt; {\n\n    const editor = useSlate();\n\n    return (&lt;&gt;\n        &lt;ElementButton onClick={useCallback(() =&gt; addAlignment(editor, &#x27;left&#x27;), [editor])}\n            tooltip=&#x27;left&#x27;\n            format=&#x27;left&#x27;\n        &gt;\n            &lt;IconAlignLeft /&gt;\n        &lt;/ElementButton&gt;\n\n        &lt;ElementButton onClick={useCallback(() =&gt; addAlignment(editor, &#x27;center&#x27;), [editor])}\n            tooltip=&#x27;center&#x27;\n            format=&#x27;center&#x27;\n        &gt;\n            &lt;IconAlignCenter /&gt;\n        &lt;/ElementButton&gt;\n\n        &lt;ElementButton onClick={useCallback(() =&gt; addAlignment(editor, &#x27;right&#x27;), [editor])}\n            tooltip=&#x27;right&#x27;\n            format=&#x27;right&#x27;\n        &gt;\n            &lt;IconAlignRight /&gt;\n        &lt;/ElementButton&gt;\n    &lt;/&gt;\n    );\n}\n\nexport default Button</code></pre>",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675254722804
      },
      {
        "content": "- Does this work?<br><br> Yeeeeaahhmmhmm... It works in such a way that it adds a custom node to the top level element. It adds an alignment field when it&#x27;s applied; either left, right, or center. It doesn&#x27;t actually change anything in the Editor UI as for some reason the element re-render doesn&#x27;t seem to get triggered. Because it doesn&#x27;t re-trigger, I am unable to actually make changes to way the text is displayed on the editor. HOWEVER, rest assured that the change has actually happened, so json object passed to your website front-end WILL show this change (big win). Obviously this isn&#x27;t workable from a general user perspective as the UI appears to be unresponsive in Payload. But it&#x27;s a start!<br><br>So guys, I have a baseline. Who wants to help improve it so we can actually show this in the Payload UI?",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675254727231
      },
      {
        "content": "Hey Mark - this is certainly something that should be on our roadmap if it isn&#x27;t already. I&#x27;ll get some more answers on this one for you shortly. Stay tuned!",
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1675701792869
      },
      {
        "content": "No worries @zubricks 🙂 I saw that 1.6 released with a new toggleElement function, that might be the thing that solves the button toggle issue. If that&#x27;s the case I&#x27;ll share the updated code",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675798450257
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Localised description not showing",
      "id": "1071060757833339062",
      "createdAt": 1675431184014
    },
    "messages": [
      {
        "content": "Hello. I have setup locales in my payload config<br><br><pre><code class=\"hljs\">  localization: {\n    locales: [&#x27;en&#x27;, &#x27;es&#x27;],\n    defaultLocale: &#x27;en&#x27;,\n    fallback: true,\n  },</code></pre><br><br>And in one of my select fields I have set the following<br><br><pre><code class=\"hljs\">admin: {\n        description: {\n          en: &#x27;The primary variant is full-width with a yellow background. The secondary variant is constrained to the grid with a black background&#x27;,\n          es: &#x27;La variante primaria ocupa todo el ancho y tiene fondo amarillo. La variante secundaria esta restringido por la cuadrícula y tiene fondo negro.&#x27;,\n        },\n      },</code></pre><br><br>However, when switching to <code>es</code> in the admin panel, the description continues to show in English",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675431184014
      },
      {
        "content": "The field also has <code>localized: true,</code>",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675431325789
      },
      {
        "content": "I noticed the docs don&#x27;t cover descriptions as objects, but it&#x27;s a valid type of Record&lt;string, string&gt;",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675432916782
      },
      {
        "content": "Perhaps this isn&#x27;t the correct way to localise descriptions",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675432925103
      },
      {
        "content": "So there are two language selections:<br>1. The locale to edit the content in<br>2. The language set on the editors account<br><br>The description relies on the <em>language</em> the editor has set from their account page",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675437311019
      },
      {
        "content": "Got it!",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675437568428
      },
      {
        "content": "Was switching the content editing not the language preference, thanks",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1675437583147
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Module not found: Error: Can't resolve 'process/browser'  issue .",
      "id": "1065607173457055784",
      "createdAt": 1674130948176
    },
    "messages": [
      {
        "content": "If we are using Axios API call inside hooks function, We are getting the below issue<br><br><br>ERROR in ./node_modules/axios/lib/defaults/index.js 27:20-27<br>Module not found: Error: Can&#x27;t resolve &#x27;process/browser&#x27; in &#x27;app/node_modules/axios/lib/defaults&#x27;<br>Did you mean &#x27;browser.js&#x27;?<br>BREAKING CHANGE: The request &#x27;process/browser&#x27; failed to resolve only because it was resolved as fully specified<br>(probably because the origin is strict EcmaScript Module, e. g. a module with javascript mimetype, a &#x27;<em>.mjs&#x27; file, or a &#x27;</em>.js&#x27; file where the package.json contains &#x27;&quot;type&quot;: &quot;module&quot;&#x27;).<br>The extension in the request is mandatory for it to be fully specified.<br>Add the extension to the request.<br><br>ERROR in ./node_modules/axios/lib/defaults/index.js<br>Cannot read properties of undefined (reading &#x27;module&#x27;)<br><br>webpack compiled with 2 errors<br><br>Anyone has the solution for this issue",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674130948176
      },
      {
        "content": "This looks like a Webpack 5 issue with the process module axios uses",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674138506534
      },
      {
        "content": "Check out this SO post for possible solution: <a href=\"https://github.com/remirror/remirror/issues/1473#issuecomment-1013917579\">https://github.com/remirror/remirror/issues/1473#issuecomment-1013917579</a>",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674138514068
      },
      {
        "content": "Should be an update to the webpack config with a fallback for that module which I think is node specific",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674138538111
      },
      {
        "content": "On a side note, fetch is great 😉",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674138555574
      },
      {
        "content": "Okay. thanks",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674229597284
      },
      {
        "content": "It&#x27;s resolved. If we do npm install process --save-dev",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674229612252
      },
      {
        "content": "I am facing some other issues using api-key",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674229712892
      },
      {
        "content": "Access apis using api-key was working fine. But, We faced &quot;you are not allowed to do perform this operation issue&quot; yesterday",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674229809324
      },
      {
        "content": "then we know about this change  <a href=\"https://github.com/payloadcms/payload/issues/1769\">https://github.com/payloadcms/payload/issues/1769</a>",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674229849751
      },
      {
        "content": "We have to slug instead of label in authorization header",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674229876900
      },
      {
        "content": "We didn&#x27;t changes any version of payload in our system",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674229910773
      },
      {
        "content": "still using &quot;payload&quot;: &quot;^1.1.21&quot; this version",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674229925726
      },
      {
        "content": "But, How changes are automatically upgraded in our system ?",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674229977727
      },
      {
        "content": "Can you please help us to understand this issue ?",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674229996234
      },
      {
        "content": "and also we are facing some new issues on update load api",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674230015814
      },
      {
        "content": "@Veera26 Go ahead and create a separate thread in #community-help for the new/separate issue. I&#x27;m having difficulty understanding what you&#x27;re asking",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674231375111
      },
      {
        "content": "Yeah I&#x27;m not following either",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674231563205
      },
      {
        "content": "Okay, I will create a separate thread. Thanks",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674231611580
      },
      {
        "content": "Isn&#x27;t this already a separate thread",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674231803628
      },
      {
        "content": "I think Elliot fixed it maybe",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674231810401
      }
    ],
    "messageCount": 20
  },
  {
    "info": {
      "name": "Custom Component for nested Fields",
      "id": "1065243458639495278",
      "createdAt": 1674044231806
    },
    "messages": [
      {
        "content": "Hi, how can I use a custom component for nested fields?<br>For example if I have an group field which has an array field which has as string field. In this example I would like to manage the array of strings with the custom group component. Maybe like a custom todo list component. <br>It seems that I only can access field via path (<code>useField</code>).  But I don&#x27;t know the path of my childs..",
        "authorID": "306429157179392002",
        "authorName": "60pfennig",
        "authorAvatar": "91e7dc342f3cfef23552bf5a68018bbe",
        "createdAtDate": 1674044231806
      },
      {
        "content": "You should be able to access children through useField",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674048439367
      },
      {
        "content": "And the strings in a todo array would be indexed by creation right? so how do you imagine accessing them via path?",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674048482246
      },
      {
        "content": "path is not documented well. I&#x27;m not sure what it is. Intuitively I would guess thats /collectionSlug/fieldname/fieldname... But as you say I don&#x27;t know how to do this for dynamic content. So a array field with a variable amount of childs I dont know how to use <code>useField</code>. Also I don&#x27;t know how to use it with Groups as the GroupField type doesn&#x27;t provide a path.",
        "authorID": "306429157179392002",
        "authorName": "60pfennig",
        "authorAvatar": "91e7dc342f3cfef23552bf5a68018bbe",
        "createdAtDate": 1674049898589
      },
      {
        "content": "To clarify my second statement:<br>I&#x27;m using for a Text component the type <code>TextInputProp</code> from Payload which I pass to my Custom Component. As a <code>GroupInputProp</code> doesn&#x27;t exist in Payload I&#x27;m using <code>Omit&lt;GroupField, &#x27;type&#x27;</code> as I have seen it somewhere in Github Disussions. But this type doesn&#x27;t provide a path so I guess a Group Field doesn&#x27;t has one.",
        "authorID": "306429157179392002",
        "authorName": "60pfennig",
        "authorAvatar": "91e7dc342f3cfef23552bf5a68018bbe",
        "createdAtDate": 1674050233154
      },
      {
        "content": "hey @60pfennig i can give some further info here",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054182749
      },
      {
        "content": "<code>path</code> is basically a dot notation-based string of the full field&#x27;s path where it is in the form",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054200133
      },
      {
        "content": "i.e. if you have a group field called <code>myGroup</code> and then a text field within it called <code>myText</code>, the <code>myText</code> path would be <code>myGroup.myText</code>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054227994
      },
      {
        "content": "and then for array-based fields like <code>array</code> and <code>blocks</code>, you will have the row index show up in the path as well",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054247605
      },
      {
        "content": "so take array field called <code>myArray</code>, and then a text field within it <code>myText</code>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054258808
      },
      {
        "content": "the first array row&#x27;s <code>myText</code> field path would be <code>myArray.0.myText</code>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054272398
      },
      {
        "content": "we do this to keep form state flat, among many other reasons",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054281094
      },
      {
        "content": "so based on what you need to do, there are a lot of ways to retrieve form state / set form state for many fields at once",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054332435
      },
      {
        "content": "i&#x27;d start with the <code>useFormFields</code>  hook, and using your group&#x27;s <code>path</code>, you could select all fields where the path starts with the group <code>path</code>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054345355
      },
      {
        "content": "to respond to your second statement, <code>GroupField</code> is the type <em><strong>of the field config itself</strong></em> - literally what you write in your config, which, as you&#x27;ve noticed, does not include a <code>path</code>. Paths are injected on the frontend form state only",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674054431345
      },
      {
        "content": "OK thanks, I&#x27;m understanding this now a way better. But I have two followup questions<br>first: How do I add objects to myArray? <br>second: to go a bit deeper in setting values in myArray. You suggest retrieving the group field via <code>const groupField = useFormField(groupPath)</code>. How to go on? I still don&#x27;t understand how to get the nested fields from there. My approach from the point of my understanding would be to use the array path to get the array field. then get the length (is this possible?) and push them in a string field array (<code>myTextFields.push(useField(&#x27;${arrayPath}.${index}.myTextFieldName&#x27;)</code>) to set and get myText fields.",
        "authorID": "306429157179392002",
        "authorName": "60pfennig",
        "authorAvatar": "91e7dc342f3cfef23552bf5a68018bbe",
        "createdAtDate": 1674055070512
      },
      {
        "content": "Hi! jumping in this discussion as I also am unsure about a field&#x27;s path. I created this discussion with my details! <a href=\"https://github.com/payloadcms/payload/discussions/1910\">https://github.com/payloadcms/payload/discussions/1910</a>",
        "authorID": "435590980838621194",
        "authorName": "Cerize",
        "authorAvatar": null,
        "createdAtDate": 1674099982794
      },
      {
        "content": "@jmikrut sorry for pinging but maybe you can give just a little hint?",
        "authorID": "306429157179392002",
        "authorName": "60pfennig",
        "authorAvatar": "91e7dc342f3cfef23552bf5a68018bbe",
        "createdAtDate": 1674139664761
      },
      {
        "content": "I&#x27;m saying to retrieve <em><strong>all fields within the group</strong></em> using the <code>useFormFields</code> hook - <em><strong>not</strong></em> the <code>useFormField</code> hook. So you will retrieve more than one field and not only the group field",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674144684960
      },
      {
        "content": "the array field will only store <em><strong>how many rows it has</strong></em> as an integer. The array field will not store the field data for each of its fields, so that&#x27;s why I&#x27;m suggesting to retrieve them all at once with the <code>useFormFields</code> hook",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674144716364
      },
      {
        "content": "then from there,  you could <code>dispatchFields</code> for each field, using its properly constructed path, for each row and subfield in your array",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674144744101
      }
    ],
    "messageCount": 20
  },
  {
    "info": {
      "name": "How to set up authentication with Okta via OAuth 2.0?",
      "id": "1047565167761833985",
      "createdAt": 1669829398814
    },
    "messages": [
      {
        "content": "I can get successful authentications, but Payload won&#x27;t log me in the admin, despite generating valid JWTs for it. I posted a discussion on GitHub with all the context: <a href=\"https://github.com/payloadcms/payload/discussions/1555\">https://github.com/payloadcms/payload/discussions/1555</a><br><br>My organization demands Okta and I believe Payload is the perfect fit for our team, so I really have to make it work. I&#x27;d be glad if the Payload team could give me a hand. @jmikrut may I ask for help?",
        "authorID": "583713322700898304",
        "authorName": "dodov",
        "authorAvatar": "963cac7b9d70846918bedd06cc4cc389",
        "createdAtDate": 1669829398814
      },
      {
        "content": "Hey @dodov I&#x27;ll respond on the Discussion - just saw it come thru",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1669829659184
      },
      {
        "content": "Great! I really appreciate the quick feedback and assistance. It&#x27;s one of the biggest thing I love about Payload. I hope it doesn&#x27;t change! 🤞",
        "authorID": "583713322700898304",
        "authorName": "dodov",
        "authorAvatar": "963cac7b9d70846918bedd06cc4cc389",
        "createdAtDate": 1669829792099
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How can I create a collection for web pages",
      "id": "1065150957765267506",
      "createdAt": 1674022177879
    },
    "messages": [
      {
        "content": "I want to the content of each pages of my app editable on Payload, but my problem is how can I setup the pages collection if each page has different values?",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1674022177879
      },
      {
        "content": "You can use a <a href=\"https://payloadcms.com/docs/fields/blocks\">https://payloadcms.com/docs/fields/blocks</a> field that act&#x27;s as a pagebuilder field.",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1674023222640
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Client side authentication",
      "id": "1069375959515541665",
      "createdAt": 1675029496793
    },
    "messages": [
      {
        "content": "I want users to signup from the website and then login. I just want payload to validate the email and password and then send a response with a jwt token or something. Is this possible?",
        "authorID": "941688759034970132",
        "authorName": "bigDaddy",
        "authorAvatar": "f59cf5ca783ae53f37e8a99cfbcc9a18",
        "createdAtDate": 1675029496793
      },
      {
        "content": "On every Auth-enabled Collection (like users), you have access to endpoints like login, which takes in an email and a password, and sends back a JWT<br><br><a href=\"https://payloadcms.com/docs/authentication/operations#authentication-operations\">https://payloadcms.com/docs/authentication/operations#authentication-operations</a>",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1675030462696
      },
      {
        "content": "I don&#x27;t know if there&#x27;s a way to do it in one call, but I currently create the user first and then if that responses with an OK, I use the same credentials to login the user and then redirect to the app",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675041956879
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "The following field is invalid: filename",
      "id": "1063460146862362644",
      "createdAt": 1673619057146
    },
    "messages": [
      {
        "content": "on create new post or duplicate it throws error (&quot;The following field is invalid: filename&quot;)<br><pre><code class=\"hljs\">const Posts: CollectionConfig = {\n    slug: &#x27;posts&#x27;,\n    admin: {\n        defaultColumns: [&#x27;title&#x27;, &#x27;author&#x27;, &#x27;category&#x27;, &#x27;tags&#x27;, &#x27;status&#x27;],\n        useAsTitle: &#x27;title&#x27;,\n    },\n    access: {\n        create: () =&gt; true,\n        read: () =&gt; true, //isAdminOrSelf,\n        delete: isAdminOrSelf,\n        update: isAdminOrSelf\n    },\n    fields: [\n       ...\n        {\n            type: &#x27;tabs&#x27;,\n            tabs: [\n                {\n                    label: &#x27;Hero&#x27;,\n                    description: &#x27;This will appear within the tab above the fields.&#x27;,\n                    fields: [\n                        {\n                            name: &#x27;title&#x27;,\n                            type: &#x27;text&#x27;,\n                            required: true,\n                        },\n                        {\n                            name: &#x27;slug&#x27;,\n                            label: &#x27;Slug&#x27;,\n                            type: &#x27;text&#x27;,\n//                            required: true,\n                            unique: true,\n                            admin: {\n                                position: &#x27;sidebar&#x27;,\n                            },\n                            hooks: {\n                                beforeValidate: [\n                                    formatSlug(&#x27;title&#x27;),\n                                ],\n                            },\n                        },\n                        {\n                            name: &#x27;postImage&#x27;,\n                            type: &#x27;upload&#x27;,\n                            relationTo: &#x27;media&#x27;,\n                            required: true,\n                        }\n\n                    ]\n                },\n            ]\n        },\n    ],\n}</code></pre>",
        "authorID": "349125160600600576",
        "authorName": "bumblebee",
        "authorAvatar": "d68860d197649e81bb7b0a4ce4555e02",
        "createdAtDate": 1673619057146
      },
      {
        "content": "Hey there! I&#x27;m having the same problem",
        "authorID": "494333401264947218",
        "authorName": "nacho",
        "authorAvatar": null,
        "createdAtDate": 1673642944495
      },
      {
        "content": "Hey all check this out <a href=\"https://github.com/payloadcms/payload/issues/1877\">https://github.com/payloadcms/payload/issues/1877</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673814774251
      },
      {
        "content": "@Jarrod I just upgrade payload 1.5.9 but same problem, when posts is empty and create new, it works fine, but after, even duplicate any post or adding new one, then throw me this error. 🤷🏼",
        "authorID": "349125160600600576",
        "authorName": "bumblebee",
        "authorAvatar": "d68860d197649e81bb7b0a4ce4555e02",
        "createdAtDate": 1673867706692
      },
      {
        "content": "@Jarrod same error on create or duplicate post, i don&#x27;t have a field named &quot;filename&quot;, <br><pre><code class=\"hljs\">{\n    &quot;errors&quot;: [\n        {\n            &quot;name&quot;: &quot;ValidationError&quot;,\n            &quot;message&quot;: &quot;The following field is invalid: filename&quot;,\n            &quot;data&quot;: [\n                {\n                    &quot;message&quot;: &quot;Value must be unique&quot;,\n                    &quot;field&quot;: &quot;filename&quot;\n                }\n            ]\n        }\n    ]\n}</code></pre>",
        "authorID": "349125160600600576",
        "authorName": "bumblebee",
        "authorAvatar": "d68860d197649e81bb7b0a4ce4555e02",
        "createdAtDate": 1674149834639
      },
      {
        "content": "I found something in codebase and I tried to drop all collection from MongoDB and now it works fine 🥳<br><pre><code class=\"hljs\"> // Handle uniqueness error from MongoDB\n      throw error.code === 11000 &amp;&amp; error.keyValue\n        ? new ValidationError([{ message: &#x27;Value must be unique&#x27;, field: Object.keys(error.keyValue)[0] }], t)\n        : error;</code></pre>",
        "authorID": "349125160600600576",
        "authorName": "bumblebee",
        "authorAvatar": "d68860d197649e81bb7b0a4ce4555e02",
        "createdAtDate": 1674150564017
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Collection not being shown in admin panel",
      "id": "1075062125875175586",
      "createdAt": 1676385184497
    },
    "messages": [
      {
        "content": "Hi all, something very strange in my production deployment. When I try to view a collection in the admin panel none is being displayed and I see this error message. Any pointer or ideas to what might be the issue?",
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676385184497
      },
      {
        "content": "Oh, wait, what Payload version are you on?",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676386606738
      },
      {
        "content": "toObjectId was used in an older version that is not compatible with some mongo &quot;compliant&quot; hosting options like documentDB and azure cosmos db",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676386652439
      },
      {
        "content": "those implementations are missing a bunch of aggregates so we re-wrote them. That error should go away when you upgrade Payload to latest.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676386691309
      },
      {
        "content": "&quot;payload&quot;: &quot;^1.5.9&quot;,",
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390752497
      },
      {
        "content": "mongodb",
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390756674
      },
      {
        "content": "db hosted by us",
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390768200
      },
      {
        "content": "the admin tries to fetch the following url: serverurl/api/home-pages?locale=en&amp;depth=0&amp;draft=true",
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390813465
      },
      {
        "content": "if we remove the draft=true, it works but the admin sends draft=true",
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390838450
      },
      {
        "content": "this is the error we&#x27;re getting if we take the url and try to fetch it via the browser url field:",
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390877766
      },
      {
        "content": "{<br>&quot;errors&quot;: [<br>{<br>&quot;message&quot;: &quot;Unrecognized expression &#x27;$toObjectId&#x27;&quot;<br>}<br>]<br>}",
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1676390878576
      },
      {
        "content": "There were a lot of changes to versions since 1.5.9 so you&#x27;re going to want to upgrade. I&#x27;m pretty certain that will solve this for you.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676395431835
      },
      {
        "content": "There were some breaking changes and a migration script will be needed if you have data on versioned collections already",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676395446468
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-breaking-changes\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md#-breaking-changes</a>",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676395516323
      }
    ],
    "messageCount": 13
  },
  {
    "info": {
      "name": "How to see which user modified what?",
      "id": "1068850602324541500",
      "createdAt": 1674904241878
    },
    "messages": [
      {
        "content": "Is there a way? how would i go about it? any idea/suggestion?<br>Customer asked for that...",
        "authorID": "927463750720692285",
        "authorName": "toybreaker",
        "authorAvatar": "bb13ee4b3b6da124af3550b67ac71323",
        "createdAtDate": 1674904241878
      },
      {
        "content": "You can combine a custom field with a beforeChangeHook to handle that. Something like this:<br><br><pre><code class=\"hljs\">// lastModifiedByField.ts\n\nimport { Field } from &quot;payload/types&quot;;\n\nconst lastModifiedByField: Field = {\n  name: &#x27;lastModifiedBy&#x27;,\n  type: &#x27;text&#x27;, // If you prefer, use &#x27;relationship&#x27; and link to a user collection\n  admin: {\n    readOnly: true, // Ensure readonly\n    hidden: true, // Ensure it is not shown in the admin panel\n  },\n  access: {\n    read: () =&gt; true, // anyone can read\n    create: () =&gt; false, // since we are going to set this value in the hook, we disable creation\n    update: () =&gt; false, // since we are going to set this value in the hook, we disable updates\n  }\n}\n\nexport default lastModifiedByField;</code></pre><br><br><pre><code class=\"hljs\">// addLastModifiedByHook.ts\n\nimport { CollectionBeforeChangeHook } from &quot;payload/types&quot;;\n\nconst addLastModifiedByHook: CollectionBeforeChangeHook = async (args) =&gt; {\n  const user = args.req.user\n  const data = args.data\n  \n  if(!user) \n    return data\n  \n  // The returning result is the final object that will be persisted\n  return {\n    ...data, // data is the original document to be persisted\n    lastModifiedBy: user.id // our customization goes here\n  }\n}\n\nexport default addLastModifiedByHook;</code></pre>",
        "authorID": "265602604174802945",
        "authorName": "erik.tartaglia",
        "authorAvatar": null,
        "createdAtDate": 1674912474417
      },
      {
        "content": "Then you have to add them to your collection configuration:<br><br><pre><code class=\"hljs\">// myCollection.ts\n\nimport { CollectionConfig } from &quot;payload/types&quot;;\n// import  hook + field\n\nconst MyCollection: CollectionConfig = {\n  slug: &#x27;my-collection&#x27;,\n  hooks: {\n    beforeChange: [addLastModifiedByHook]\n  },\n  fields: [\n    lastModifiedByField,\n    // ... other fields\n  ]\n}</code></pre>",
        "authorID": "265602604174802945",
        "authorName": "erik.tartaglia",
        "authorAvatar": null,
        "createdAtDate": 1674912849863
      },
      {
        "content": "they also have this example for <code>lastModifiedBy</code> <a href=\"https://payloadcms.com/docs/plugins/overview#simple-example\">https://payloadcms.com/docs/plugins/overview#simple-example</a>",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675021426990
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "CUstom SCSS file not working",
      "id": "1047441931426345062",
      "createdAt": 1669800016982
    },
    "messages": [
      {
        "content": "instead of /home/src/assets/css.scss",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669800932596
      },
      {
        "content": "Still isn&#x27;t adding the file to the page",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669805690051
      },
      {
        "content": "So left it at src/assets/css.scss. But this is my page structure<br><br><pre><code class=\"hljs html\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">HTML</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">http-equiv</span>=<span class=\"hljs-string\">&quot;Content-Type&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;text/html; charset=UTF-8&quot;</span> /&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;viewport&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;width=device-width, initial-scale=1, user-scalable=no&quot;</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">defer</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/admin/main.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;app&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;portal&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></code></pre>",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669805728412
      },
      {
        "content": "oh i forgot config file is within src, try just doing assets/css.scss",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669805951714
      },
      {
        "content": "Still nothing, hmm.<br>THe directory and file are present in the src folder also so they defo exist",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806016057
      },
      {
        "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> { buildConfig } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/config&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> path <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;path&#x27;</span>;\n<span class=\"hljs-comment\">// import Examples from &#x27;./collections/Examples&#x27;;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Users</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./collections/Users&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">buildConfig</span>({\n  <span class=\"hljs-attr\">serverURL</span>: <span class=\"hljs-string\">&#x27;http://localhost:3000&#x27;</span>,\n  <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">user</span>: <span class=\"hljs-title class_\">Users</span>.<span class=\"hljs-property\">slug</span>,\n    <span class=\"hljs-attr\">css</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&#x27;assets/app.scss&#x27;</span>),\n  },\n  <span class=\"hljs-attr\">collections</span>: [\n    <span class=\"hljs-title class_\">Users</span>,\n    <span class=\"hljs-comment\">// Add Collections here</span>\n    <span class=\"hljs-comment\">// Examples,</span>\n  ],\n  <span class=\"hljs-attr\">typescript</span>: {\n    <span class=\"hljs-attr\">outputFile</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&#x27;payload-types.ts&#x27;</span>),\n  },\n  <span class=\"hljs-attr\">graphQL</span>: {\n    <span class=\"hljs-attr\">schemaOutputFile</span>: path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&#x27;generated-schema.graphql&#x27;</span>),\n  },\n});</code></pre><br><br>This is the full payload.config.ts",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806051136
      },
      {
        "content": "Then this is the file structure",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806075508
      },
      {
        "content": "if you do yarn build does the scss file show up in dist?",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806107151
      },
      {
        "content": "yeah",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806161152
      },
      {
        "content": "what are you doing to check if hte scss file is working?",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806188602
      },
      {
        "content": "Just some simple css to modify colours on the page.",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806205307
      },
      {
        "content": "Trying to modify the colour of the class on the breadcrumbs span",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806330372
      },
      {
        "content": "if you look in chrome dev console are you able to see if they styles just got overridden or smth?",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806350157
      },
      {
        "content": "Doesn&#x27;t pick up any styling I&#x27;ve added. Only references the index.scss which assuming is just the default",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806409483
      },
      {
        "content": "well it probably gets compiled into 1 css file with webpack",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806454188
      },
      {
        "content": "That would make sense, but just isn&#x27;t picking it up",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669806490625
      },
      {
        "content": "not able to reproduce it",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806764633
      },
      {
        "content": "",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806784153
      },
      {
        "content": "<pre><code class=\"hljs\">  admin: {\n    user: Users.slug,\n    css: path.join(__dirname, &#x27;assets/styles.scss&#x27;),\n  },</code></pre>",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669806820085
      },
      {
        "content": "This is very strange",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807324283
      },
      {
        "content": "ya like it should just work",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807337579
      },
      {
        "content": "Ive created the blank typescript template from npx create-payload-app so nothing I&#x27;ve done thats different",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807361959
      },
      {
        "content": "whats in your app.scss",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807374785
      },
      {
        "content": "Ive changed the name and input to match what you used, so body background red and filename styles",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807399778
      },
      {
        "content": "try incognito?",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807419558
      },
      {
        "content": "maybe its an extension",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807422932
      },
      {
        "content": "or cache",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807424280
      },
      {
        "content": "Nope, not cached",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807486223
      },
      {
        "content": "I be confusion",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807490925
      },
      {
        "content": "ya not a clue, what os are you on?",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807572016
      },
      {
        "content": "linux",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807729056
      },
      {
        "content": "maybe try a backslash? your using path so it shouldn&#x27;t matter but we looking at longshots here",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807779689
      },
      {
        "content": "backslash breaks the string",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807955270
      },
      {
        "content": "you would need a double backslash so <code>assets\\\\styles.scss</code>",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669807971188
      },
      {
        "content": "Nope :/",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669807998969
      },
      {
        "content": "ya not sure",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669808005276
      },
      {
        "content": "could you send me your styles.scss",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669808010381
      },
      {
        "content": "Got it working on a different project, so wonder if setup with the cli has something that I&#x27;ve missed?",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669808963126
      },
      {
        "content": "A fellow colleague has re-created it.<br><br>So with npx create-payload-app, setup a blank typescript project then attempt it, it doesnt work",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669809274111
      },
      {
        "content": "really?",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669809795255
      },
      {
        "content": "all i did was <code>npx create-payload-app</code> spammed enter added styles.scss and the admin config and it worked",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669809823125
      },
      {
        "content": "what node version?",
        "authorID": "148846159564111872",
        "authorName": "IAmRoot",
        "authorAvatar": "a_a52a0558b2143dbba5d9ebe9b98f94be",
        "createdAtDate": 1669809851651
      },
      {
        "content": "16.13.1",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669810341500
      },
      {
        "content": "and npx v9.1.2",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669810352634
      },
      {
        "content": "So turns out caching does work for blank projects, must just be a one off bug",
        "authorID": "196034894760116224",
        "authorName": "Jamie Cee",
        "authorAvatar": "653b71147af68ce16b8f6ce4b09e7692",
        "createdAtDate": 1669818802392
      },
      {
        "content": "I just hit this same issue. What did you do to resolve it @Jamie Cee ? I&#x27;m running Payload inside a Docker container, so I&#x27;m not sure if there&#x27;s something else going on there.",
        "authorID": "423902407294976000",
        "authorName": "digi",
        "authorAvatar": "7aa4757c25d99e9032a59a3c68101ec6",
        "createdAtDate": 1669912216894
      },
      {
        "content": "Running the project outside of Docker seems to work fine",
        "authorID": "423902407294976000",
        "authorName": "digi",
        "authorAvatar": "7aa4757c25d99e9032a59a3c68101ec6",
        "createdAtDate": 1669912286502
      },
      {
        "content": "Ah, docker is running <code>serve</code> instead of <code>dev</code>",
        "authorID": "423902407294976000",
        "authorName": "digi",
        "authorAvatar": "7aa4757c25d99e9032a59a3c68101ec6",
        "createdAtDate": 1669912410035
      },
      {
        "content": "Just reinstall your node_modules",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1670980100400
      },
      {
        "content": "More specifically: <br><code>rm -Rf node_modules/.cache</code>",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1676406812279
      }
    ],
    "messageCount": 53
  },
  {
    "info": {
      "name": "How to add justify, left, center and right to text inside RichText?",
      "id": "1075209037647446137",
      "createdAt": 1676420210993
    },
    "messages": [
      {
        "content": "I want to position my text inside richtext, how do I do that? I checked the types of richtext elements and I do not see any type for these.",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676420210993
      }
    ],
    "messageCount": 0
  },
  {
    "info": {
      "name": "Message Queue",
      "id": "1060981012626161784",
      "createdAt": 1673027985484
    },
    "messages": [
      {
        "content": "Any advice about adding a message queue for tasks like sending emails and other functions there can run later?",
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1673027985484
      },
      {
        "content": "I have some thoughts on this. Making your hooks run async is a great start to not need to manage work in a queue. That said if you still do you can add any library you need to. Hell, you could even make a collection for <strong>Tasks</strong> and run a cron job on your server that:<br>1) Uses the local API to query for new &quot;tasks&quot;<br>2) Calls the function associated with each kind of job<br>3) Updates the task with a complated timestamp, or increments a failed counter (typical queue workers will have a max failed attempts setting)",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675438749241
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Cannot get first Admin user to be created.",
      "id": "1066067787342168114",
      "createdAt": 1674240767084
    },
    "messages": [
      {
        "content": "Hello, I am trying to get Payload setup so I can play around with it and familiarize myself with it but I have completely crashed into the first small hurdle.<br><br>My Problem: <br><br>I can&#x27;t get the first user for the admin UI to be created. I see the login page on port 3000, but it doesn&#x27;t actually create the user. The login screen provides no error messaging. On the terminal that is running payload there are no error messages, and the service is running even after trying to create user so it did not crash.<br><br>My environment:<br><br>- I use Gitpod which is a Cloud Development Environment that essentially is a container with a VSCode GUI. This means I&#x27;m using linux.<br>- I am attempting to run payload and mongo through the dockercompose that gets generated but I&#x27;ve also tried running payload on local with mongo on a container.<br>- Mongo IS running. I can access it from mongosh from within the payload container and from local into the mongo container<br>- Mongo databases active are [ admin, config, local, test ]. AFAIK these are all default to Mongo.<br><br>My questions:<br><br>- Where does Payload output logging? Or how do I get it to. In the payload project dir I do not see any logging.  Is there logging in the payload node module? I could not find it. If there isn&#x27;t built in loggin, is there a tool you suggest for payload?<br><br>- The Docs are very sparse (unless I missed it) on how payload utilizes mongodb. I can&#x27;t tell if the uri needs to have a db like mongo://localhost:27017/payload for the db to be created in mongo on init. Does it just use the default test db if no db name is specified? The create app cli does not generate that in the uri so it&#x27;s unclear. Do I need to have the db already created and initalized for payload to use before I create? I&#x27;ve tried all these different ways of setting up the db but still the same problem.<br><br>I&#x27;m new to payload, typescript and mongodb so it&#x27;s the bermuda triangle for me right now and I&#x27;m lost.",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674240767084
      },
      {
        "content": "By default, all logging is output to stdout wherever Payload is running.<br><br>Payload stores all collection data in MongoDB. If you don&#x27;t have any security on your local mongo instance, Mongo will automatically create the database for you.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241043592
      },
      {
        "content": "If you&#x27;re new to all of this, I&#x27;d say using Gitpod, Docker, etc just complicates things. I&#x27;d recommend installing MongoDB locally and running Payload locally until you have a grasp on everything.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241091713
      },
      {
        "content": "After you log in, there are no errors where Payload is running you said. What about in the browser console? Any errors there?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241213672
      },
      {
        "content": "Yes it&#x27;s an api fetch error for this endpoint <a href=\"http://localhost:3000/api/users/first-register\">http://localhost:3000/api/users/first-register</a>",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674241372168
      },
      {
        "content": "I saw this and I assumed it was an issue with the db connection",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674241394901
      },
      {
        "content": "thats the route I took in debugging",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674241404543
      },
      {
        "content": "Can you show me the error?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241408271
      },
      {
        "content": "",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674241528624
      },
      {
        "content": "Hmm, let me make sure I understand. You&#x27;re running Payload inside GitPod, and you&#x27;re receiving this error from your local browser?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241600348
      },
      {
        "content": "hmm I get your point",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674241650421
      },
      {
        "content": "I am using gitpod yes it virtualizes localhost",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674241661489
      },
      {
        "content": "but it might be looking for the file on localhost which is obviously not there",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674241684802
      },
      {
        "content": "Would gitpod be accessible by something other than localhost maybe? Do they give you an IP or URL?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241696704
      },
      {
        "content": "gitpod creates a uri that virtualizes localhost such as: <a href=\"https://3000-fruitfulsys-fruitfulcms-azbtvk4cnwf.ws-us83.gitpod.io/admin/create-first-user\">https://3000-fruitfulsys-fruitfulcms-azbtvk4cnwf.ws-us83.gitpod.io/admin/create-first-user</a>",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674241766863
      },
      {
        "content": "so this would mean that it&#x27;s using the 3000 port for that instance",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674241790064
      },
      {
        "content": "Okay, so it gives you a url to use. You can try setting this as <code>serverURL</code> inside your payload config.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241833850
      },
      {
        "content": "<code>serverURL: &quot;https://3000-fruitfulsys-fruitfulcms-azbtvk4cnwf.ws-us83.gitpod.io&quot;</code>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241868891
      },
      {
        "content": "Ok that sounds like a plan thanks. I&#x27;ll have to variabalize that as the instance can be and is usually different",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674241900642
      },
      {
        "content": "but I&#x27;ll move forward down that route.",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674241914565
      },
      {
        "content": "Okay, let us know if you have more trouble",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241921786
      },
      {
        "content": "The typical way to do this would be to set it as an environment variable",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241936614
      },
      {
        "content": "<code>serverURL: process.env.PAYLOAD_PUBLIC_SERVER_URL,</code>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241939763
      },
      {
        "content": "Then set it in an .env file",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241946310
      },
      {
        "content": "yes sir. I&#x27;m not new to linux and everything. just these new tools, but I appreciate the help",
        "authorID": "844318748981723187",
        "authorName": "JesseRigon",
        "authorAvatar": null,
        "createdAtDate": 1674241969319
      },
      {
        "content": "Awesome, no problem 👍",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674241982629
      }
    ],
    "messageCount": 25
  },
  {
    "info": {
      "name": "New User! How exactly do I rename my media files upon upload?",
      "id": "1073494188647264297",
      "createdAt": 1676011359131
    },
    "messages": [
      {
        "content": "I am unable to efficiently search for the images I need because they&#x27;re all named &quot;Image X-X-X&quot; <br>I&#x27;ve  attempted to search by alt in the CMS, but it doesn&#x27;t  work with relationships likely because it&#x27;s using the reference ID. Any ideas?  Code below<br><br>const podcastMedia: CollectionConfig = {<br>  slug: &quot;podcast-media&quot;,<br>  admin: {<br>    useAsTitle: &quot;alt&quot;,<br>  },<br>  upload: {<br>    staticURL: &quot;/media/podcast&quot;,<br>    staticDir: &quot;media/podcast&quot;,<br>    imageSizes: [<br>      {<br>        name: &quot;card&quot;,<br>        width: 640,<br>        height: 480,<br>      },<br>    ],<br>  },<br>  fields: [<br>    {<br>      name: &quot;alt&quot;,<br>      type: &quot;relationship&quot;,<br>      relationTo: &quot;podcasts&quot;,<br>      required: true,<br>    },<br>  ],<br>};",
        "authorID": "1030998989736247306",
        "authorName": "Serry",
        "authorAvatar": null,
        "createdAtDate": 1676011359131
      },
      {
        "content": "what does your query look like? You can use dot notation to query on nested fields inside a relationship field. <br><br>i.e. api/podcast-media?where[alt.podcast-field-name][equals]=some-value",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676035443166
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Setting up magic link with payload auth",
      "id": "1073356002101035108",
      "createdAt": 1675978412891
    },
    "messages": [
      {
        "content": "I am running into an issue with integrating <a href=\"https://magic.link/\">https://magic.link/</a> with payloads custom auth strategy. I was able to add the strategy and trigger the e-mail magic link flow. <br><br>To get it to work I have to configure the webpack server alias,  set <code>disableLocalStrategy: true,</code> on the collection and then create a custom <code>/login</code> endpoint for the collection. Everything is flowing correctly <br><br>but whenever I try to either <code>payload.create</code> or <code>payload.login</code> with the required fields, I get the type error <code>Model.findByUsername is not a function</code> other functions like <code>payload.find</code> work as expected.<br><br>The goal at this point is based on the lookup to either<br>A. create a new user and have it set access token/cookie etc..<br>or B. login the user and set the access token/cookie etc...<br><br>Any insight into why this error could be happening?",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1675978412891
      },
      {
        "content": "Is this issue caused because I disabled the local strategy?<br><br>If so I can create and login users through the custom strategy",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1675980089346
      },
      {
        "content": "So looking at the DB it looks like the user <em>is created</em> on <code>payload.create</code> but the server still throws this error hmm",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1675983460426
      },
      {
        "content": "The issue self resolved for create but not login. Likely won’t work anyway because it also expects a password and that does not get generated with magic. <br><br>Based on this discussion, I’m not sure how likely / worth it is to continue down this path <br><br><a href=\"https://github.com/payloadcms/payload/discussions/1555#discussioncomment-4276115\">https://github.com/payloadcms/payload/discussions/1555#discussioncomment-4276115</a><br><br>Will probably abandon it for the built in Auth. I don’t want to have to manage creating the token, lifecycle, refreshing etc… <br><br>I want to ideally just layer magic on top of payloads Auth and only use payload for the portions that magic couldn’t do ie generating and managing tokens after I determine if it’s a valid login or sign up",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676004315465
      },
      {
        "content": "Hmm I think I actually got it... I can login and see the admin...working but i&#x27;m nervous that it&#x27;ll break down the line when I add other collections/access",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676049069424
      },
      {
        "content": "For future reference, based on what I can tell/learned<br><br>If you’re going the set your own strategy route, specifically magic link. Some of the below is expended further in various docs, discord and GitHub threads. <br><br>1. Server code needs to be in its own file and aliased by webpack, not the package but the file  itself.<br>2. On the collection that is being used to auth the admin panel, pass in the passport strategy as documented by payload<br>3. Set <code>disableLocalStrategy= true</code> <strong>This turns off all payload Auth functionality for that collection (login etc…)</strong><br>4. Using the endpoints property on the collection you can create a custom route. For example you can recreate /login <br>5. On the UI pass in a custom component using before or after dashboard. This component should be the form to post login/sign up info to your route. <br>6. Order of operations are <br>     - your strategy function is called. whatever is returned will be accessible by the endpoint route<br>     - endpoint api route is called in req.user there is the data previously returned by the strategy.<br>7. In the endpoint api route you can access your payload instance to do look ups, create etc<br>    - for example… for login, I do a lookup based on email… since it’s password less flow (magic link)<br>8. Then create the session yourself using a JWT. The shape of the cookie needs to be an object with the fields collection, e-mail and payload ID set as a httponly. The discussion I linked about has useful sudo code. You also have to set res.user to have the same object as the cookie.<br>9. The cookie name must be the same payload expects. The payload instance has the prefix -&gt; <code>${payload.config.cookiePrefix}-token</code><br>10. Visit admin and 🚀 <br><br>Lastly remember to recreate logout, refresh, etc… for your cookie synced with your strategy provider",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676053811432
      },
      {
        "content": "Setting up magic link with payload auth",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1676053858260
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "email fromName isn't appearing",
      "id": "1074033677790617712",
      "createdAt": 1676139983366
    },
    "messages": [
      {
        "content": "Hi - I&#x27;m just starting on the voyage of emails/nodemailer and I&#x27;ve run into an immediate quirk.<br><br>I have emails correctly configured in <code>payload.init()</code>  however when I send test emails, the <code>fromName</code> that&#x27;s defined in the config doesn&#x27;t appear.<br><br>I&#x27;ll paste my config in the thread and share a couple of images to illustrate more clearly what I mean.<br><br>Looking forward to a simple solution 🙏",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676139983366
      },
      {
        "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-attr\">email</span>: {\n  <span class=\"hljs-attr\">transportOptions</span>: {\n    <span class=\"hljs-attr\">host</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">SMTP_HOST</span>,\n    <span class=\"hljs-attr\">auth</span>: {\n      <span class=\"hljs-attr\">user</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">SMTP_USER</span>,\n      <span class=\"hljs-attr\">pass</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">SMTP_PASS</span>,\n    },\n    <span class=\"hljs-attr\">port</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">SMTP_PORT</span>,\n    <span class=\"hljs-attr\">secure</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// use TLS</span>\n    <span class=\"hljs-attr\">tls</span>: {\n      <span class=\"hljs-comment\">// do not fail on invalid certs</span>\n      <span class=\"hljs-attr\">rejectUnauthorized</span>: <span class=\"hljs-literal\">false</span>,\n    },\n  },\n  <span class=\"hljs-attr\">fromName</span>: <span class=\"hljs-string\">&#x27;Elkli &amp; Hart&#x27;</span>,\n  <span class=\"hljs-attr\">fromAddress</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">EMAIL_FROM_ADDRESS</span>,\n},</code></pre>",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676140052896
      },
      {
        "content": "I did initially have the fromName in an env var, but because it had spaces I thought I&#x27;d try directly here.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676140076937
      },
      {
        "content": "I&#x27;ve also tried single words in place, and none of them come through.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676140091912
      },
      {
        "content": "-<br><br>See the &#x27;Project Drawdown&#x27; in the title....",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676140136842
      },
      {
        "content": "-<br><br>Whereas only the email address is displaying in my emails from nodemailer....",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676140202427
      },
      {
        "content": "Any ideas?",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676140221429
      },
      {
        "content": "Figured it out",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141163268
      },
      {
        "content": "Would I be correct in thinking that the  <code>fromName</code> is only used for automated system emails (like password reset etc??).",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141263788
      },
      {
        "content": "When I specify the details I want in a test message object, then the correct details come though.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141290420
      },
      {
        "content": "I&#x27;ll share here in case it helps others in the future",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141300390
      },
      {
        "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> message = {\n  <span class=\"hljs-attr\">to</span>: <span class=\"hljs-string\">&#x27;jake@hopking.io&#x27;</span>,\n  <span class=\"hljs-attr\">from</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">EMAIL_FROM_NAME</span>,\n  <span class=\"hljs-attr\">subject</span>: <span class=\"hljs-string\">&#x27;Order Confirmation #0000002&#x27;</span>,\n  <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">&#x27;Plaintext version of the message&#x27;</span>,\n  <span class=\"hljs-attr\">html</span>: <span class=\"hljs-string\">&#x27;&lt;p&gt;HTML version of the message&lt;/p&gt;&#x27;</span>,\n};\n\npayload.<span class=\"hljs-title function_\">sendEmail</span>(message);</code></pre><br><br>With <code>EMAIL_FROM_NAME</code> like this in my .env:<br><br><code>EMAIL_FROM_NAME=&quot;Elkli &amp; Hart 🦌 &lt;shop@elkliandhart.com&gt;&quot;</code>",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141382973
      },
      {
        "content": "-<br>And now I can see a much friendlier from name 🦌 👍<br>-",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141442492
      },
      {
        "content": "If someone could still comment on this before I mark this as answered, I&#x27;d be grateful:<br><br>&quot;Would I be correct in thinking that the <code>fromName</code> is only used for automated system emails (like password reset etc??).&quot;",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676141597662
      },
      {
        "content": "Correct, any email that is sent by Payload will use that name. Verification, forgot password, etc.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676242022697
      },
      {
        "content": "Thanks for confirming @denolfe",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676284292663
      }
    ],
    "messageCount": 15
  },
  {
    "info": {
      "name": "Issues with applying hook output to a field with type select",
      "id": "1072241616917643454",
      "createdAt": 1675712722759
    },
    "messages": [
      {
        "content": "Hi folks,<br><br>I&#x27;ve cloned <em>payload/website-cms</em> and am trying to add a select that is populated with select options from previous slide data (in draft mode).<br><br>Here&#x27;s my code:<br><code>export const prerequisite: Field = {\n  name: &quot;prerequisite&quot;,\n  type: &quot;select&quot;,\n  options: [{...}], // &lt;-- trying to fill this\n  hooks: {\n    someHook: [populateSelect],\n  },\n}</code><br><br><em>populateSelect</em> returns a data structure that currently looks like this:<br><br><code>options [\n  { label: &#x27;Q1. Do you have solar panels? = Yes&#x27;,    value: &#x27;Q1. Do you have solar panels? = Yes&#x27;  },\n  { label: &#x27;Q1. Do you have solar panels? = No&#x27;,    value: &#x27;Q1. Do you have solar panels? = No&#x27;  },\n  { label: &#x27;How many sets? = 1&#x27;, value: &#x27;How many sets? = 1&#x27; },\n  { label: &#x27;How many sets? = 2&#x27;, value: &#x27;How many sets? = 2&#x27; },\n  { label: &#x27;How many sets? = 3&#x27;, value: &#x27;How many sets? = 3&#x27; }\n]</code><br>A couple of questions: <br>* What can I do to add the output of populateSelect to the select options?<br>* Whats the best hook for pulling this data from an active draft as more Q and A&#x27;s are created? According to the docs, <em>beforeValidate</em> is recommended but it appears only <em>afterRead</em> appears to trigger my console logs",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675712722759
      },
      {
        "content": "Issues with applying hook output to a field with type select",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675712779901
      },
      {
        "content": "You can make a collection for <code>questions</code> and then make this field a relationship field related to the questions collection. Then in this field users could search/select or create new questions inline.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675781222431
      },
      {
        "content": "@Jarrod could you provide a bit more info:<br>* Is there something wrong with using a field in this scenario?",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675783672691
      },
      {
        "content": "On a separate note, following on from your suggestion, I&#x27;ve created:<br><br><code>import { CollectionConfig } from &#x27;payload/types&#x27;;\nimport { prerequisite } from &#x27;../prerequisite&#x27;;\nimport richText from &#x27;../../fields/richText&#x27;;\n\nexport const QuestionSets: CollectionConfig = {\n  slug: &#x27;question-set&#x27;,\n  versions: {\n    drafts: true,\n  },\n  fields: [\n    {\n      name: &#x27;Question set&#x27;,\n      type: &#x27;relationship&#x27;,\n      required: true,\n      relationTo: &quot;&quot;\n    },\n    richText({\n      name: &quot;question&quot;,\n      label: &quot;Question&quot;,\n      required: true,\n      admin: {\n        elements: [],\n        leaves: [&quot;underline&quot;],\n      },\n    }),\n    prerequisite,\n    {\n      name: &quot;answers&quot;,\n      type: &quot;array&quot;,\n      label: &quot;Answers&quot;,\n      minRows: 2,\n      required: true,\n      labels: {\n        singular: &quot;answer&quot;,\n        plural: &quot;answers&quot;\n      },\n      fields: [\n        {\n          name: &quot;answer&quot;,\n          type: &quot;text&quot;,\n        }\n      ]\n    },\n  ]\n}</code>",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675783722470
      },
      {
        "content": "but I didn&#x27;t quite follow what you meant by &quot;make this field a relationship field related to the questions collection&quot; - Is this a relationship to itself?",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675783771533
      },
      {
        "content": "You refer to questions as a collection <em>and</em> as a relationship field?",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675784375960
      },
      {
        "content": "So a relation field like:<br><pre><code class=\"hljs ts\">{\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;questions&#x27;</span>,\n  <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;relationship&#x27;</span>,\n  <span class=\"hljs-attr\">hasMany</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-string\">&quot;&quot;</span>\n}</code></pre><br><br>needs to have a relationTo value, the relationTo value is the slug of the collection, it could be <code>questions</code> and then on your <code>QuestionSets</code> collection, you would add a field like the above and set <code>relationTo: &quot;questions&quot;</code>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675788408011
      },
      {
        "content": "Thanks for getting back to me on this. So both question-set and question are collections in this scenario?",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675788537308
      },
      {
        "content": "I&#x27;m also trying to understand what you&#x27;re proposing each collection does - would it be that one creates questions and answers, the other populates the select options?",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675788764696
      },
      {
        "content": "Correct, one holds the q&amp;a&#x27;s, and the relationship field allows you to select them, allowing for dynamic values",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675792229700
      },
      {
        "content": "So I&#x27;ve rearranged my data structures how I think you&#x27;ve described. I have a &quot;Question set&quot; collection with a relationship to a &quot;Prerequisite&quot; collection:",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675848050311
      },
      {
        "content": "<code>export const Prerequisite: CollectionConfig = {\n  slug: &#x27;prerequisite&#x27;,\n  labels: {\n    plural: &#x27;prerequisites&#x27;,\n    singular: &#x27;prerequisite&#x27;\n  },\n  fields: [\n    prerequisite\n  ],\n  hooks: {\n    beforeChange: [beforeChangePrerequisite],\n    beforeValidate: [beforeValidatePrerequisite],\n    beforeRead: [beforeReadPrerequisite],\n    beforeOperation: [beforeOperationPrerequisite]\n  }\n}</code>",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675848069397
      },
      {
        "content": "I feel like I&#x27;ve gone a step backwards as the hooks no longer have access to the questionSet data and have been replaced with data that looks like this: <br><br><code>&quot;{\n  id: &#x27;63e36bc9d64cd8091ec9b961&#x27;,\n  createdAt: &#x27;2023-02-08T09:30:49.196Z&#x27;,\n  updatedAt: &#x27;2023-02-08T09:30:49.196Z&#x27;\n}&quot;</code><br><br>which are the prerequisites I&#x27;ve created with the text input. So if relationships are the recommended model, how can data from the relationship parent be passed to the relatesTo child?",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675849301324
      },
      {
        "content": "What is the goal here? I feel like we are talking very abstract and it makes it challenging to align thoughts. <br><br>As for getting the data, you can use <code>await payload.findByID({ ... })</code> function to fulfill the questionSet document data inside your hook 👍",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675870985315
      },
      {
        "content": "The goal is to setup a survey with conditional follow up questions based on answers to questions. i.e. if Q1 = A, fast forward to Q3.",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675871870431
      },
      {
        "content": "In the admin UI, I would want to assign the prerequisite ID on <em>Q3</em> as &quot;Q1=A&quot;, from a dynamic dropdown of all the possible Question&amp;Answer combos.",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675871998622
      },
      {
        "content": "will report back regarding the data fetch",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675872018827
      },
      {
        "content": "One initial question still remains: how do I get the data from find by id into a field of type select?",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675878483811
      },
      {
        "content": "@Jarrod I&#x27;ve messaged a video link describing the goal and a bit of my implementation, apologies for the low quality, just trying to keep file size down",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675947737916
      },
      {
        "content": "Hey @remy just watched your vid! Gathering some thoughts now",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675948469102
      },
      {
        "content": "So do you want answers to show/hide? or questions? (based on previous question answers)",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675948595680
      },
      {
        "content": "Yes. The logic for showing questions will live in the ui, the decisions will be made in the cms",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675949090493
      },
      {
        "content": "I’m trying to accomplish this with anything other than a text input, if I do so, I think my company will be sold on the transition",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675949169586
      },
      {
        "content": "I would like to show/hide <em>question sets</em>, questions with their answers",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675954855593
      },
      {
        "content": "(Conditional answers will probably be a nice to have but not part of my POC)",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675954893211
      },
      {
        "content": "I think a custom component would likely be the best solution here. Since arrays arrays are determined by user input, to get the dynamic select you are looking for you will want to use text field, with a custom component (assuming you want to keep the value format to match your current ui shape)",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675955475137
      },
      {
        "content": "This would actually be really cool",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675955528771
      },
      {
        "content": "not sure if you have seen our react hooks, but they can provide the data you need to create the custom select options, you can use payloads Select component as well and just feed your formatted options into that!<br><br>react hooks: <a href=\"https://payloadcms.com/docs/admin/hooks#react-hooks\">https://payloadcms.com/docs/admin/hooks#react-hooks</a><br><br>select component (can be imported from <code>payload/components/fields/Select</code>): <a href=\"https://github.com/payloadcms/payload/blob/master/components/fields/Select.ts\">https://github.com/payloadcms/payload/blob/master/components/fields/Select.ts</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675955837481
      },
      {
        "content": "I was thinking I&#x27;d go down the custom component route, just wanted to make sure I wasn&#x27;t underutilising what already exists. I&#x27;ve got till Tuesday. Will share what I have if I&#x27;m successful with my timeframe",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675957174660
      },
      {
        "content": "Thanks!",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1675957176973
      }
    ],
    "messageCount": 30
  },
  {
    "info": {
      "name": "Graphql Error  with SEO Plugin",
      "id": "1063100421763252264",
      "createdAt": 1673533291999
    },
    "messages": [
      {
        "content": "If I add the payload seo plugin to my config, payload throws the following error.<br><pre><code class=\"hljs\">Error: Cannot use GraphQLScalarType &quot;DateTime&quot; from another module or realm.\n\nEnsure that there is only one instance of &quot;graphql&quot; in the node_modules\ndirectory. If different versions of &quot;graphql&quot; are the dependencies of other\nrelied on modules, use &quot;resolutions&quot; to ensure only one version is installed.\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate &quot;graphql&quot; modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.</code></pre><br><br>I neither use Graphql nor  yarn, so I&#x27;m a bit confused.",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673533291999
      },
      {
        "content": "Hmm, that plugin is a relatively simple one and doesn&#x27;t do anything with graphql. Try deleting your node modules entirely and doing a fresh install.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673533658720
      },
      {
        "content": "Okay, solved it after doing a git revert. Turns out while cleaning up my repo and moving files around, I moved the .npmrc file as well accidentially . As always, I just added the seo plugin right afterwards, so of course it&#x27;s the plugins fault, not mine😂 . I should probably go for a walk.",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673535525542
      },
      {
        "content": "Amazing! Walks are good no matter what 👍",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673535786135
      },
      {
        "content": "Hi, I just got this exact same error right after installing the SEO plugin. I tried removing node_modules and fresh install and it gave the same error also",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1673831615996
      },
      {
        "content": "<strong>My solution</strong>: Installing <code>graphql</code>  package as a peer dependency works",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1673831790853
      },
      {
        "content": "Hmm, it gave me another error:<br><pre><code class=\"hljs\">Error: Cannot find module &#x27;react&#x27;\nRequire stack:\n- /node_modules/@payloadcms/plugin-seo/dist/fields/MetaDescription.js\n- /node_modules/@payloadcms/plugin-seo/dist/index.js\n- ....</code></pre><br><br>I installed <code>react</code> and <code>react-dom</code> as a peer dependency also and it solved it.<br><br>I&#x27;m not sure if this is the best way to go about it",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1673832584002
      },
      {
        "content": "Hmm, ok are you installing with npm or yarn?",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673878764839
      },
      {
        "content": "npm",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1673915350247
      },
      {
        "content": "I&#x27;m on payload^1.5.8, though I tried updating to 1.5.9 and it gave the same issue",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1673915399160
      },
      {
        "content": "This is not related to the plugin. To resolve please<br>1) delete <code>node_modules</code> folder<br>2) delete <code>package-lock.json</code><br>3) use <code>yarn install</code> instead of <code>npm install</code>, make sure to also update your Dockerfile if you use one",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673937050671
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "The payload template setup for javascript fails to run",
      "id": "1071421186086551673",
      "createdAt": 1675517116806
    },
    "messages": [
      {
        "content": "Hello guys!<br><br>I&#x27;ve used the following commands: npx create-payload-app (choose the javascript template for blog) and yarn build. I receive this error message when i am trying to start developing (yarn dev).<br>import { buildConfig } from &#x27;payload/config&#x27;;<br>^^^^^^<br><br>SyntaxError: Cannot use import statement outside a module<br>    at Object.compileFunction (node:vm:352:18)<br>    at wrapSafe (node:internal/modules/cjs/loader:1031:15)<br>    at Module._compile (node:internal/modules/cjs/loader:1065:27)<br>    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)<br>    at Module.load (node:internal/modules/cjs/loader:981:32)<br>    at Function.Module._load (node:internal/modules/cjs/loader:822:12)<br><br>It seems like the babel plugin fails to transform from ES6 to ES5. Until a few days ago e everything went well. I&#x27;ve used babel on files manually and then yarn run it works. Did anyone encountered this issue?  <br>#community-help",
        "authorID": "556880016273702941",
        "authorName": "ivy.mihai",
        "authorAvatar": null,
        "createdAtDate": 1675517116806
      },
      {
        "content": "Hey @ivy.mihai, we actually have removed the JS templates for this reason. In order to use JS, you&#x27;ll need to remove any type declarations and change any import statements to const require statements.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675519446363
      },
      {
        "content": "Let me know if you run into anything else",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675519724186
      },
      {
        "content": "I already have a project written in ES6. It&#x27;s there any way to transform the code with babel? I&#x27;ve tried babel-preset-env and then something like this babel -w src/ -d dist/ | nodemon --watch dist, but without luck.  I would like to continue the development without using require and manually transforming my code.",
        "authorID": "556880016273702941",
        "authorName": "ivy.mihai",
        "authorAvatar": null,
        "createdAtDate": 1675521799330
      },
      {
        "content": "I&#x27;ve found a working solution for this.<br><br> in my package.json :    &quot;serve:dev&quot;: &quot;babel -w src/ -d dist/ &amp;&amp; SERVER_URL=<a href=\"http://localhost:3000\">http://localhost:3000</a> PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=development nodemon dist/server.js --watch dist&quot;, <br><br>  &quot;devDependencies&quot;: {<br>    &quot;@babel/cli&quot;: &quot;^7.20.7&quot;,<br>    &quot;@babel/core&quot;: &quot;^7.20.12&quot;,<br>    &quot;@babel/preset-env&quot;: &quot;^7.20.2&quot;,<br>....<br>  &quot;babel&quot;: {<br>    &quot;presets&quot;:[<br>      &quot;@babel/preset-env&quot;<br>     ]<br>  },<br>....<br>}",
        "authorID": "556880016273702941",
        "authorName": "ivy.mihai",
        "authorAvatar": null,
        "createdAtDate": 1675524179817
      },
      {
        "content": "@ivy.mihai Awesome to hear, thank you for sharing your solution",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691367502
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "How to add divider line to blocks?",
      "id": "1068004369917816913",
      "createdAt": 1674702484350
    },
    "messages": [
      {
        "content": "I want to add 3 section inside my block and I want to divide it, how can I add a line?",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1674702484350
      },
      {
        "content": "You can use <code>ui</code> fields!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674704343596
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Can't modify anything in production",
      "id": "1070156169693380608",
      "createdAt": 1675215513395
    },
    "messages": [
      {
        "content": "I&#x27;m running into a strange issue where I can view but not edit payload resources via the rest API.<br><br>POST /login succeeds.<br>All GET requests succeed.<br>But any other POST requests to modify resources fail (403 Forbidden).<br><br>By adding some debug logging in the <code>read:</code> and <code>update:</code> closures, I can see that the user object is present for GET requests, but <code>undefined</code> for POST requests.<br><br>By inspecting the headers, I see that the <code>payload-token</code> cookie is present for both GET and POST requests.<br><br>This issue is occurring identically when deploying to both Google Cloud Run and fly.io. The issue does not occur locally, even when running the same docker image as in production.<br><br>Any suggestions regarding how to continue debugging?<br><br>Thanks,<br>Oliver",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675215513395
      },
      {
        "content": "Hey @oliverevans96 — there are a few topics both here and in GitHub discussions about this",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215920427
      },
      {
        "content": "maybe it&#x27;s your <code>csrf</code> config?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215927046
      },
      {
        "content": "do you have a <code>serverURL</code> set? and is it correct on your production instance?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215945442
      },
      {
        "content": "try and whitelist your production domain within the <code>csrf</code> config property",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215961149
      },
      {
        "content": "Thanks for the quick reply! I&#x27;m pretty sure <code>serverURL</code> is set correctly, but I&#x27;ll double-check it. More likely to be a <code>csrf</code> issue. Can you share any links to relevant discussions or docs?",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675216046809
      },
      {
        "content": "I didn&#x27;t have any domains whitelisted for CSRF, so I&#x27;m assuming that was the issue. I&#x27;ll update in a few minutes after verifying.",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675216372882
      },
      {
        "content": "absolutely -",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675216734700
      },
      {
        "content": "<a href=\"https://payloadcms.com/docs/authentication/overview#csrf-protection\">https://payloadcms.com/docs/authentication/overview#csrf-protection</a>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675216735162
      },
      {
        "content": "That was it! Easy - thanks so much for your help @jmikrut!",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675217049765
      },
      {
        "content": "of course",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675217553031
      },
      {
        "content": "out of curiosity, did you have your serverURL set? or was it not set?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675217564578
      },
      {
        "content": "this is never a problem for our deployments but i see it consistently and i want to figure out what causes it",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675217578015
      },
      {
        "content": "Ah interesting, so the serverURL was also set incorrectly. It was set to <a href=\"https://my-app-randomnumbers123.a.run.app/\">https://my-app-randomnumbers123.a.run.app/</a>, which is a cloud run URL. But I was accessing the site via my own domain name, pointed at the cloud run servers.",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675227775678
      },
      {
        "content": "So I take it that if I had configured the serverURL correctly, I wouldn&#x27;t have needed to explicitly specify a csrf whitelist?",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675227812849
      },
      {
        "content": "I can confirm that when I log into payload via the cloud run deployment URL (the <code>serverURL</code>), I can make edits even though that URL isn&#x27;t in the csrf whitelist.",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675227982699
      },
      {
        "content": "correct",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675257739856
      },
      {
        "content": "that&#x27;s what i was thinking was the case",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675257746763
      },
      {
        "content": "if serverURL is set, we automatically whitelist it within CSRF protection",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675257758214
      },
      {
        "content": "if it is wrong, you&#x27;ll see the issue you saw - because we dont accept cookies from other domains that are not explicitly whitelisted for security",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675257777895
      },
      {
        "content": "Makes sense. Thanks again! If it&#x27;s not too much work, it may save some future user headaches if the server could log a message related to CSRF when this happens.",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675273720301
      }
    ],
    "messageCount": 20
  },
  {
    "info": {
      "name": "Error response from daemon: failed to create shim task: OCI runtime create failed: runc create faile",
      "id": "1064590188610859099",
      "createdAt": 1673888480094
    },
    "messages": [
      {
        "content": "I am using Payload within Docker and get this error since my last build. There is no additional information and I did not change the Dockerfile. Locally the image runs just fine. <br><br><code>Error response from daemon: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: can&#x27;t get final child&#x27;s PID from pipe: EOF: unknown</code>",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673888480094
      },
      {
        "content": "This kind of error can happen if you run on a hosted VPS (such as Strato) running into artificial quotas. The first step is to check the user bean count <code>cat /proc/user_beancounters</code><br>In the Screenshot you can see that <code>numiptent</code> is at the limit (held=maxheld and failcnt &gt; 0).<br>In my case I could clear out IPs with <code>ssh-client unban --all</code> . Depending on your output you might need a different form of error handling (decrease number of processes, number of files, kernel running out of memory etc)",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673888742457
      },
      {
        "content": "Good find @Exo thanks for spending 2 full days debugging something that should not be a damn problem in the first place or at least communicated by the VPS",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673890114780
      },
      {
        "content": "@Exo Thanks, no problem 🙂",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673890122835
      },
      {
        "content": "&quot;user bean count&quot;",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673961004462
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "How do you handle nested taxonomies?",
      "id": "1075415421567643701",
      "createdAt": 1676469416754
    },
    "messages": [
      {
        "content": "Wordpress has this pretty well covered.",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1676469416754
      }
    ],
    "messageCount": 0
  },
  {
    "info": {
      "name": "Rate limiting for an individual collection or endpoint",
      "id": "1067938776497790986",
      "createdAt": 1674686845660
    },
    "messages": [
      {
        "content": "Wondering if there&#x27;s a succinct way or a plan to put rate limits on operations to individual collections or endpoints. Right now doing this:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> limiter = <span class=\"hljs-title function_\">rateLimit</span>({...})\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-string\">&quot;/some/special/endpoints&quot;</span>, limiter)</code></pre>",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1674686845660
      },
      {
        "content": "Current rate limiting is for all endpoints, and there is not a way to specify different values per collection. You&#x27;re the first that has mentioned this. What&#x27;s the use-case for the endpoint?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674750241974
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Import localized data from getText files (aka po and pot files)",
      "id": "1060720888649097306",
      "createdAt": 1672965967095
    },
    "messages": [
      {
        "content": "I&#x27;m really impressed with Payload&#x27;s field level support for localization. We are using po and pot files to manage localized strings, which we are looking to import into our Payload system. I can&#x27;t imagine we&#x27;re the first to want to do this, is there any existing tooling to support this? If not, what would be a good way to design such tooling, and if we build it, might there be interest to incorporate that into Payload?",
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1672965967095
      },
      {
        "content": "I would LOVE to incorporate that into Payload!!!",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673283842913
      },
      {
        "content": "We want to build a significantly more robust translations workflow.... so any ideas or feedback that you have there would be amazing",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673283863674
      },
      {
        "content": "So this is what I think it should look like: Iterate over all the documents, within each, iterate over all the localized fields, take their values (in the default locale) and produce a POT file. Send the POT file to translators and get back N PO files, one for each supported locale. Iterate over all the documents again, iterate over the localized fields as before, update the docs with the strings in each of the N locales taken from the N PO files. This will be using the strings in the default locale as keys to look up the corresponding strings in all the other locales. Use a gettext implementation to deal with all the PO/POT files, there are a few different implementations in npm, not sure yet which would be the best to go with. <a href=\"https://www.npmjs.com/package/node-gettext\">https://www.npmjs.com/package/node-gettext</a> and <a href=\"https://www.npmjs.com/package/@types/node-gettext\">https://www.npmjs.com/package/@types/node-gettext</a> might be a good place to start",
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1673393655859
      },
      {
        "content": "Hey Dan, I&#x27;ll respond to your email here so we can get the discussion going.<br><br><blockquote>Can you give me a summary of what it is you are working on and trying to achieve? Is this to make po files for localized content from Payload projects or does this have to do with admin panel i18n?<br></blockquote><br>This is to support localization of <em>content</em>, not of the admin panel ui. I believe you already have some support for localizing the admin UI, but none yet for the content.<br><br>This is what I have so far (not everything is working yet):<br><br>* Given a collection config, pull out the paths to all localized text fields in the config, including fields nested inside groups, arrays, etc. Naturally, this will be extended to handle multiple collections, perhaps all. I&#x27;m looking for direction on how to best configure the behaviour of the tool here.<br><br>* Given a document from this collection, pull out all the string values of all the localized text fields in the document. For each value, I also get the path to where the value come from, e.g. the string &quot;The south Pacific&quot; came from collectionX.documentY.groupZ.fieldW.<br><br>* Given the set of string values, write the strings to file in POT format<br><br>The work flow from here would then be to send the POT file off to translation, getting back a PO file for each language, where those PO files map from strings like &quot;The south Pacific&quot; to &quot;Der Südpazifik&quot;. PO/POT files are widely used, there are lots of tools for managing and manipulating them, see getText. Now we would need to choose a getText implementation to facilitate the process of looking up translations from the source language to each translated language. There are a couple of different implementations to choose from. I have not decided, so I am mocking out the getText() function in the folloing.<br><br>* Given a function getText() which maps from the source language to each translated language, and given a set of documents in the collection, look up all values in all documents and save all localized fields.",
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1675708810409
      },
      {
        "content": "PO/POT files work best for strings that are no more than a paragraph long. I&#x27;m looking for a solution that would work well for strings that are longer than that, such as a blog post. Maybe there are getText() based tools that work well for that, or perhaps getText() is not a good choice. The overall workflow is still going to be close, though.",
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1675709717619
      },
      {
        "content": "Some of the questions I have:<br>* Is this of interest, does it align with the direction you want to take Payload?<br>* Is the overall approach valid? Does it look like it would play well with the existing support for localizing the admin UI?<br>* What is the best way to update payload documents with localized strings? Your docs are pretty thin on this, this page <a href=\"https://payloadcms.com/docs/configuration/localization\">https://payloadcms.com/docs/configuration/localization</a> covers how to pull localized data, but not how to update it.<br>* Which getText implementation to use, e.g. <a href=\"https://www.npmjs.com/package/node-gettext\">https://www.npmjs.com/package/node-gettext</a><br>* Consider whether PO/POT is the correct file format or whether there are others that are better suited for translating strings longer than a paragraph.<br>* Once we start looking at the code, perhaps there are smarter ways to code this, I don&#x27;t know the Payload codebase well.",
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1675711437924
      },
      {
        "content": "@Rasmus I&#x27;m coming from a spot of never having used PO/POT files before, so I need to catch up a little before I can offer much here.<br>Without digging in, I wonder if this can handle things like html tags. Suppose you have to translate something from a richtext field:<br><code>&lt;p&gt; Something &lt;bold&gt; bold &lt;/bold&gt; and &lt;a href=&quot;&quot;&gt;link&lt;/a&gt;&lt;/p&gt;</code><br>Are you able to parameterize it enough to make it work with this for example?<br><br>I don&#x27;t want a half-baked feature. If is supported, then we can move forward. I&#x27;m imagining there will be a place to upload  translation files that goes to a special collection that has hooks to do the document creation/updating using the local api.<br><br>We have to decide if this is a core feature or a plugin. I&#x27;m leaning towards an official plugin under payloadcms/plugin-<em>whatever-we-call-it</em>.<br>I&#x27;ll do some learning and reply to your specific questions tomorrow.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675716953931
      },
      {
        "content": "About the HTML tags, I think the use case here is that there is a blog post in English that contains <code>Something &lt;bold&gt; bold &lt;/bold&gt;</code>, and the translator would translate this as <code>quelque chose &lt;bold&gt; d&#x27;audacieux &lt;/bold&gt;</code>.  Since this is about translating <em>content</em> only, it seems to me that the use cases for needing to handle strings with placeholders, plurals and such is not there. Perhaps I am overlooking something? That <em>does</em> need to be handled in the localization of the admin interfaces, and also any other custom React component that can be build in Payload to support any particular document collection, but that is a separate thing.",
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1675787257143
      },
      {
        "content": "We build a multilingual app, using PO/POT files for translation of UX elements. Our toolchain consists of lingui <a href=\"https://lingui.dev/\">https://lingui.dev/</a> that handles exporting strings from JSX to POT and importing the translated strings from PO and making the strings appear in the correct locale in the app. Lingui contains a <code>&lt;Trans&gt;</code> component so we can flag in the JSX that a particular string should be translated by having <code>&lt;Text&gt;&lt;Trans&gt;This is the string&lt;/Trans&gt;&lt;Text&gt;</code> . It can also handle placeholders  like so we can translate <code>&quot;City - \\&quot;{city}\\&quot;</code> to <code>&quot;Ville – « {city} »&quot;</code>.There are several alternatives to lingui <a href=\"https://react.libhunt.com/js-lingui-alternatives\">https://react.libhunt.com/js-lingui-alternatives</a> We also use Weblate <a href=\"https://weblate.org/en/\">https://weblate.org/en/</a> to manage the translation of UX strings, great for keeping track of which strings are new/changed in each release so we know what strings to send for translation.<br><br>This new plugin to Payload would do for content roughly what lingui does for code, with a feature set that is appropriate for the needs of translating content, which i <em>think</em> is quite a bit simpler than for code.",
        "authorID": "973292940023701524",
        "authorName": "Rasmus",
        "authorAvatar": null,
        "createdAtDate": 1675787858698
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "v1.6.4 - failing to build in production mode - multiple version of GraphQL",
      "id": "1072507736241229864",
      "createdAt": 1675776170550
    },
    "messages": [
      {
        "content": "I am trying to build payload using the generated Dockerfile by the <code>create-payload-app</code> script. It tries to build application using the build script which generates a bundle folder that is including multiple versions of GraphQL as shown with this error:<br><code>Error: Cannot use GraphQLScalarType &quot;DateTime&quot; from another module or realm.</code><br>But fixing it by forcing the latest version of graphql with a resolution block in package.json breaks the admin interface as they are expected older versions.<br><pre><code class=\"hljs\">&quot;resolutions&quot;: {\n    &quot;graphql&quot;: &quot;16.6.0&quot;,\n    &quot;**/graphql&quot;: &quot;16.6.0&quot;\n  },</code></pre><br><br>So what versions should satisfy both, server and admin interface?",
        "authorID": "1072442754455588884",
        "authorName": "jayzai",
        "authorAvatar": null,
        "createdAtDate": 1675776170550
      },
      {
        "content": "Hey @jayzai , I&#x27;m taking a look into this now. Let me try to recreate.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675872239417
      },
      {
        "content": "I&#x27;m not able to recreate this. Which template did you choose? Did you perform any modifications?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675873361888
      },
      {
        "content": "There is a related thread on github, <a href=\"https://github.com/payloadcms/payload/discussions/1856\">https://github.com/payloadcms/payload/discussions/1856</a> about this problem while using npm. What package manager are you using?<br>We&#x27;re going to look into this more today.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675955322914
      },
      {
        "content": "I <strong>was</strong> able to recreate the graphql error from the steps in the thread on github ^<br>That should give us more to look into.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675958475323
      },
      {
        "content": "Interesting, @jayzai does your Dockerfile contain npm commands or yarn commands? (This is generated by create-payload-app based upon what you have installed on your machine)",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675958879063
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Media Upload Error...Help me!",
      "id": "1069484127365124096",
      "createdAt": 1675055286018
    },
    "messages": [
      {
        "content": "I upload Media...  But I Cant get it...<br><br><br>const Media = {<br>  slug: &quot;media&quot;,<br>  admin: {<br>    useAsTitle: &quot;title&quot;,<br>  },<br>  access: {<br>    read: () =&gt; true,<br>  },<br>  fields: [<br>    {<br>      name: &quot;alt&quot;,<br>      type: &quot;text&quot;,<br>    },<br>  ],<br>  upload: {<br>    staticURL: &quot;/media&quot;,<br>    staticDir: &quot;media&quot;,<br>    mimeTypes: [&quot;image/*&quot;],<br>  },<br>};<br>export default Media; <br><br>this is my media.js<br>plz!",
        "authorID": "996606499663118336",
        "authorName": "dapsipli",
        "authorAvatar": null,
        "createdAtDate": 1675055286018
      },
      {
        "content": "<code>import { CollectionConfig } from &#x27;payload/types&#x27;;\n\nexport const Media: CollectionConfig = {\n  slug: &#x27;media&#x27;,\n  \n  fields: [\n    {\n      name: &#x27;alt&#x27;,\n      type: &#x27;text&#x27;,\n    },\n  ],\n  upload: {\n    staticURL: &#x27;/media&#x27;,\n    staticDir: &#x27;media&#x27;,\n    \n    imageSizes: [\n      {\n        name: &#x27;thumbnail&#x27;,\n        width: 400,\n        height: 300,\n        position: &#x27;centre&#x27;,\n      },\n      {\n        name: &#x27;card&#x27;,\n        width: 768,\n        height: 1024,\n        position: &#x27;centre&#x27;,\n      },\n      {\n        name: &#x27;tablet&#x27;,\n        width: 1024,\n        height: null,\n        position: &#x27;centre&#x27;,\n      },\n    ],\n    adminThumbnail: &#x27;thumbnail&#x27;,\n    mimeTypes: [&#x27;image/*&#x27;],\n  },\n};</code>",
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1675063573046
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "CORS Error on sign up",
      "id": "1064833308757872671",
      "createdAt": 1673946444454
    },
    "messages": [
      {
        "content": "I am having an issue when trying to create the initial user.<br><br>My setup is as follows:<br>nginx container listening on test.example.tld<br>nginx is set up as a reverse proxy and forwards to a payload container in the same docker network<br><br><br>This is a production environment.<br><br>I&#x27;ve attached a screengrab of my clientside logs. The last two errors were occurring when I tried to click the &quot;Create&quot; button.",
        "authorID": "1063867100231389324",
        "authorName": "alexdev",
        "authorAvatar": "99cbf0afc0bb92cf6c97a089ab44f560",
        "createdAtDate": 1673946444454
      },
      {
        "content": "Have you configured cors in your payload config?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673958556276
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How to access latest content versions with GraphQL?",
      "id": "1068710804070875237",
      "createdAt": 1674870911377
    },
    "messages": [
      {
        "content": "The REST API is really straightforward in adding ?draft=true to the url, but how do I access the latest content versions (published or not) with graphql?",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1674870911377
      },
      {
        "content": "Found it in the docs on GraphQL playground... For example: <br><pre><code class=\"hljs\">{\n  Pages(draft:true){\n    docs{\n      ...\n    }\n  }\n}</code></pre>",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1674872314148
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Deploy to deno Deploy",
      "id": "1055562444770131968",
      "createdAt": 1671736098235
    },
    "messages": [
      {
        "content": "Hi, anyone tried to deploy it to deno deploy? <br>It&#x27;s possible? <br>Would be very useful can deploy payload for free. <br>Thanks",
        "authorID": "284940321966522368",
        "authorName": "Franco",
        "authorAvatar": "13a1a45b12155816a4867b39bc4e1d13",
        "createdAtDate": 1671736098235
      },
      {
        "content": "Could you find something for this? Im curious",
        "authorID": "229336335222046726",
        "authorName": "viti",
        "authorAvatar": "24c0d66248d39f56348f5d56f9a35af0",
        "createdAtDate": 1672954124937
      },
      {
        "content": "This is not something that we&#x27;ve looked into or tested at this point in time.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674672219822
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How to generate JWT token for a user without calling .login(email, password)?",
      "id": "1071806386037604352",
      "createdAt": 1675608955631
    },
    "messages": [
      {
        "content": "I am using Google OAuth to authenticate my users. When I receive google id token, I would verify it and then find the user with the corresponding email. However, I don&#x27;t know how to generate the JWT for that specific user via local API without specifying email and password (especially since there&#x27;s no password)",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675608955631
      },
      {
        "content": "Or is it not supported at the moment?",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1675699399588
      },
      {
        "content": "Hey, there is a lot that goes into making your auth strategy. It is tough to explain the details, but you&#x27;ll need to sign your own JWT in a new custom endpoint route and use the <code>disableLocalStrategy</code> auth option as that will turn off the built-in email + password fields along with other auth features you won&#x27;t want under your strategy.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676385543792
      },
      {
        "content": "This was a really good write up on what you need in another community-help post that could help: <a href=\"https://discord.com/channels/967097582721572934/1073356002101035108/1073672246503166022\">https://discord.com/channels/967097582721572934/1073356002101035108/1073672246503166022</a>",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676385577578
      },
      {
        "content": "oh my that really is extensive. I&#x27;ve implemented it like that as well. Thanks for reply!",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1676442354757
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Error: Unexpected end of form",
      "id": "1073654127420256367",
      "createdAt": 1676049491506
    },
    "messages": [
      {
        "content": "I&#x27;m getting an unexpected end of form when running Payload on a Google Cloud Function. It&#x27;s a busboy error, related ticket here: <a href=\"https://github.com/mscdex/busboy/issues/296\">https://github.com/mscdex/busboy/issues/296</a>.<br><br>Is there any easy fix or config that can alter the buffer that Payload uses?",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1676049491506
      },
      {
        "content": "The top-level <code>upload</code> property of the payload config is for configuring <code>express-fileupload</code>, which looks to support passing through the busboy configuration.<br><br>Types here: <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/express-fileupload/index.d.ts\">https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/express-fileupload/index.d.ts</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676058356584
      },
      {
        "content": "express-fileupload: <a href=\"https://github.com/richardgirges/express-fileupload\">https://github.com/richardgirges/express-fileupload</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676058367249
      },
      {
        "content": "Not sure specifically what you&#x27;d need to modify specifically, but this is what we have exposed.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676058392279
      },
      {
        "content": "Looks like the intellisense is not working. You could clone down payload and use one of the config.ts files to play around with that if you wanted.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676058446525
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "nx monorepo Uncaught Error: Invalid hook call.",
      "id": "1067843381440557207",
      "createdAt": 1674664101706
    },
    "messages": [
      {
        "content": "I&#x27;m trying to setup Payload in an nx monorepo. When serving the application, the frontend outputs an error related to various components&#x27; hooks:<br><br><pre><code class=\"hljs\">Uncaught Error: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.</code></pre><br><br>I am using Payload version 1.5.9.<br><br>Checking the GitHub, I see that Payload has <code>&quot;react&quot;: &quot;^18.2.0&quot;,</code> as a dependency. My monorepo is currently on version 17 of react (that I can&#x27;t easily upgrade right now). I don&#x27;t believe this should cause any issues, but it&#x27;s the only thing I can think of that might cause the issue.<br><br>Does anyone have any other ideas?",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1674664101706
      },
      {
        "content": "I should have tried upgrading the version before posting, cause it does look like that&#x27;s the problem. I thought it wouldn&#x27;t be an issue because React is listed as a dependency so was expecting it to be bundled.",
        "authorID": "173581681058512897",
        "authorName": "sam",
        "authorAvatar": "f3ed485bad5511cfa5aa45293fc08a85",
        "createdAtDate": 1674664333288
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How to get current user data",
      "id": "1070810433080004668",
      "createdAt": 1675371501942
    },
    "messages": [
      {
        "content": "Is it possible to get the current logged in user data ? For example, I have a button in the sidebar that triggers a function, but I need to know which user is currently pressing the button to do different stuff.",
        "authorID": "122444319054495746",
        "authorName": "SKRY",
        "authorAvatar": "5b54bd085cab964c72bce21dcfe04638",
        "createdAtDate": 1675371501942
      },
      {
        "content": "How to get current user data",
        "authorID": "122444319054495746",
        "authorName": "SKRY",
        "authorAvatar": "5b54bd085cab964c72bce21dcfe04638",
        "createdAtDate": 1675371539875
      },
      {
        "content": "Yep! You can use the <code>useAuth</code> hook to get the user that is logged in: <a href=\"https://payloadcms.com/docs/admin/hooks#useauth\">https://payloadcms.com/docs/admin/hooks#useauth</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675431625267
      },
      {
        "content": "Thanks",
        "authorID": "122444319054495746",
        "authorName": "SKRY",
        "authorAvatar": "5b54bd085cab964c72bce21dcfe04638",
        "createdAtDate": 1675545386188
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "How to use relative urls in css, e.g. background-image: url(/example.jpg)",
      "id": "1070293286507511828",
      "createdAt": 1675248204591
    },
    "messages": [
      {
        "content": "I don&#x27;t want to bundle this image as it already in the public folder.<br><pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.example</span> {\n  <span class=\"hljs-attribute\">background-image</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">/example.jpg</span>);\n}</code></pre>",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1675248204591
      },
      {
        "content": "It should be relative to the css file where the rule is declared",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1675261063515
      },
      {
        "content": "Assuming that image lives in the root of your public folder then your code looks correct, you might need quotes around the path i.e. <code>url(&#x27;/example.jpg&#x27;);</code>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675273879922
      },
      {
        "content": "Alright, reported: <a href=\"https://github.com/payloadcms/payload/issues/1997\">https://github.com/payloadcms/payload/issues/1997</a>",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1675325262162
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Pass .env variable to collections config preview URL",
      "id": "1070753504471294012",
      "createdAt": 1675357929104
    },
    "messages": [
      {
        "content": "I need to use an env variable to pass a secret to the preview url in a collection config. I have tried a few variations of the code below, but seems like the env variables are not defined when the config gets instantiated. <br><br>What&#x27;s the best way to get an env value into that URL? <br><br><pre><code class=\"hljs\">import { CollectionConfig } from &quot;payload/types&quot;;\nimport formatSlug from &quot;../utilities/formatSlug&quot;;\nimport { Capstone } from &quot;../blocks/Capstone&quot;;\nimport { Cards } from &quot;../blocks/Cards&quot;;\n\nconst previewUrl = process.env.PREVIEW_URL || &quot;http://localhost:3000&quot;;\nconst previewSecret = process.env.PREVIEW_SECRET;\nconsole.log(previewSecret);\n\nexport const Page: CollectionConfig = {\n    slug: &quot;pages&quot;,\n    admin: {\n        useAsTitle: &quot;title&quot;,\n        preview: (doc) =&gt; {\n            return `${previewUrl}/api/preview?secret=${previewSecret}&amp;slug=${doc.slug}`;\n        },\n    },\n...</code></pre>",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675357929104
      },
      {
        "content": "Found that Payload has some security features in place to block env variables unless they&#x27;re prefixed with <code>PAYLOAD_PUBLIC_</code>  (<a href=\"https://payloadcms.com/docs/admin/webpack#admin-environment-vars\">https://payloadcms.com/docs/admin/webpack#admin-environment-vars</a>). After doing that, it worked fine. <br><br><pre><code class=\"hljs\">import { CollectionConfig } from &quot;payload/types&quot;;\nimport formatSlug from &quot;../utilities/formatSlug&quot;;\nimport { Capstone } from &quot;../blocks/Capstone&quot;;\nimport { Cards } from &quot;../blocks/Cards&quot;;\n\nexport const Page: CollectionConfig = {\n    slug: &quot;pages&quot;,\n    admin: {\n        useAsTitle: &quot;title&quot;,\n        preview: (doc) =&gt; {\n            const previewUrl =\n              process.env.PAYLOAD_PUBLIC_PREVIEW_URL || &quot;http://localhost:3000&quot;;\n            const previewSecret = process.env.PAYLOAD_PUBLIC_PREVIEW_SECRET;\n            return `${previewUrl}/api/preview?secret=${previewSecret}&amp;slug=${doc.slug}`;\n        },\n    },\n...</code></pre>",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675359284306
      },
      {
        "content": "NOTE: I had to move the env references <em>inside</em> the preview function (I updated the code above), or else it broke when running <code>yarn build</code> . I think that might be a bug? It seems like it should be able to access those env variables outside the exported function when building, as it does in dev mode.",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675363927871
      },
      {
        "content": "Check that... just upgraded to v1.6.3 and it&#x27;s again <strong>not </strong> working when building for production. Is that a bug or is there a better way to pass variables to this preview url?",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675365562611
      },
      {
        "content": "Ah, this is a known issue: <a href=\"https://github.com/payloadcms/payload/issues/1654\">https://github.com/payloadcms/payload/issues/1654</a>",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675370278006
      },
      {
        "content": "@Douggie O you were able to resolve your issue by following along with the comments in that issue?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675431811546
      },
      {
        "content": "Yes, I added the require/import dotenv in both <code>payload.config.ts</code> and <code>server.ts</code> and that worked out fine. It would be awesome for future developers to have that clearly documented and set up like that in the starters (or figure out a way to make PAYLOAD_PUBLIC_ env variables available across the board). Thanks for checking up!",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675432030626
      },
      {
        "content": "I agree with the clarity, but I do not think there is a way to consolidate and remove the need for both. Just the nature of the build/dev process 😜",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675432135573
      },
      {
        "content": "All good, minor hiccup on an amazing product. Keep up the great work!",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675432321107
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "Remove element type for richTexy",
      "id": "1069848433868951613",
      "createdAt": 1675142143457
    },
    "messages": [
      {
        "content": "I want to remove de code button from a richtext field, i don&#x27;t add it in my <code>admin:elements[]</code> is there a way to remove it?",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675142143457
      },
      {
        "content": "Hi @akacronos, what you&#x27;re doing is correct however  <code>code</code> is not an element it is a leaf. You can see which options are elements vs leaves here: <a href=\"https://payloadcms.com/docs/fields/rich-text#admin-config\">https://payloadcms.com/docs/fields/rich-text#admin-config</a><br><br>So if you add the leaves property and don&#x27;t include &#x27;code&#x27; then this option will be hidden. <br><br><pre><code class=\"hljs\">    {\n      name: &#x27;content&#x27;,\n      type: &#x27;richText&#x27;,\n      admin: {\n        leaves: [\n          &#x27;bold&#x27;,\n          &#x27;italic&#x27;\n        ],\n      }\n    },</code></pre><br>For example this would just show bold and italic - or if you had an empty array here none would show.",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675159654681
      },
      {
        "content": "Oh, thanks!",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675280405500
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Upgraded from 1.2.4 to 1.5.9 and now build fails on Railway",
      "id": "1066260457968640150",
      "createdAt": 1674286703341
    },
    "messages": [
      {
        "content": "I was setting up an old project again on Railway, the same project that used to work stopped working and I was debugging for 3 hours. I narrowed down the error to Payload version. <br><br>Old version I had <code>1.2.4</code> but after upgrading to <code>1.5.9</code> I started getting this error: <br><br><pre><code class=\"hljs\">#13 4.223 Error: unknown field `cwd`\n#13 4.223     at module.exports.__wbindgen_error_new (/app/node_modules/@swc/wasm/wasm.js:446:17)</code></pre><br><br>Is there a breaking change from 1.2.4 to 1.5.9?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674286703341
      },
      {
        "content": "here are the packages I have, I updated all of them",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674286764349
      },
      {
        "content": "<pre><code class=\"hljs\">&quot;dependencies&quot;: {\n        &quot;dotenv&quot;: &quot;16.0.3&quot;,\n        &quot;express&quot;: &quot;4.18.2&quot;,\n        &quot;payload&quot;: &quot;1.5.9&quot;\n    },\n    &quot;devDependencies&quot;: {\n        &quot;@types/express&quot;: &quot;4.17.15&quot;,\n        &quot;@types/react&quot;: &quot;18.0.27&quot;,\n        &quot;@types/react-dom&quot;: &quot;18.0.10&quot;,\n        &quot;@typescript-eslint/eslint-plugin&quot;: &quot;5.48.2&quot;,\n        &quot;@typescript-eslint/parser&quot;: &quot;5.48.2&quot;,\n        &quot;copyfiles&quot;: &quot;2.4.1&quot;,\n        &quot;cross-env&quot;: &quot;7.0.3&quot;,\n        &quot;eslint&quot;: &quot;8.32.0&quot;,\n        &quot;eslint-config-prettier&quot;: &quot;8.6.0&quot;,\n        &quot;eslint-config-standard&quot;: &quot;17.0.0&quot;,\n        &quot;eslint-import-resolver-typescript&quot;: &quot;3.5.3&quot;,\n        &quot;eslint-plugin-import&quot;: &quot;2.27.5&quot;,\n        &quot;eslint-plugin-jsx-a11y&quot;: &quot;6.7.1&quot;,\n        &quot;eslint-plugin-n&quot;: &quot;15.6.1&quot;,\n        &quot;eslint-plugin-node&quot;: &quot;11.1.0&quot;,\n        &quot;eslint-plugin-prettier&quot;: &quot;4.2.1&quot;,\n        &quot;eslint-plugin-promise&quot;: &quot;6.1.1&quot;,\n        &quot;eslint-plugin-react&quot;: &quot;7.32.1&quot;,\n        &quot;eslint-plugin-react-hooks&quot;: &quot;4.6.0&quot;,\n        &quot;eslint-plugin-standard&quot;: &quot;5.0.0&quot;,\n        &quot;nodemon&quot;: &quot;2.0.20&quot;,\n        &quot;ts-node&quot;: &quot;10.9.1&quot;,\n        &quot;typescript&quot;: &quot;4.9.4&quot;\n    }</code></pre>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674286785264
      },
      {
        "content": "Hi @generator101 - there have been breaking changes in 1.4.0 and 1.3.0, you can see more info in the changelog <a href=\"https://github.com/payloadcms/payload/blob/master/CHANGELOG.md\">https://github.com/payloadcms/payload/blob/master/CHANGELOG.md</a><br><br>- Collection slugs are no longer automatically sanitized to be kebab case. This will only be an issue if your current slugs were in camel case. The upgrade path will be to change those slugs to the kebab case version that the slug was automatically being sanitized to on the backend.<br>replaced the useAPIKey authentication header format to use the <br>- Collection slug instead of the collection label. Previous: ${collection.labels.singular} API-Key ${apiKey}, updated: ${collection.slug} API-Key ${apiKey}",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674467635644
      },
      {
        "content": "thanks, in my case I was able to fix this by changing the config path to <code>dist/payload.config.ts</code>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674487028253
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Set PAYLOAD_PUBLIC_ env vars at runtime?",
      "id": "1070982210523500584",
      "createdAt": 1675412456876
    },
    "messages": [
      {
        "content": "Hello,<br><br>It seems that <code>PAYLOAD_PUBLIC_*</code> env vars are substituted into frontend scripts at build time. I was just wondering whether there&#x27;s any way to delay this substitution until runtime so that I don&#x27;t have to rebuild my docker container to update my S3 endpoint.<br><br>Thanks,<br>Oliver",
        "authorID": "518202427711815713",
        "authorName": "oliverevans96",
        "authorAvatar": "5f4e02d6f6839ea9cee9ff1948a8e844",
        "createdAtDate": 1675412456876
      },
      {
        "content": "Hmm, this is an interesting problem. Since the bundle must be built before serving, I don&#x27;t know of an easy way to accomplish this.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676053530665
      },
      {
        "content": "Are you using the cloud storage plugin?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676054788541
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How to change order of collection items.",
      "id": "1064487552142290954",
      "createdAt": 1673864009653
    },
    "messages": [
      {
        "content": "How can I control the order of the items in my collection? When applying no filters or sorts, I want the REST API to deliver the collection in a predefined order.",
        "authorID": "345089134328807425",
        "authorName": "saaymeen",
        "authorAvatar": "3d0a34d72cc85ba1a8f5975f7c23df1b",
        "createdAtDate": 1673864009653
      },
      {
        "content": "Hey @saaymeen! One option you could do is add a middleware to the collection that sets a default sort order.<br><br>So on your collection config, you would do something like this:<br>    <pre><code class=\"hljs\"> endpoints: [\n     {\n      path: &#x27;/&#x27;,\n      method: &#x27;get&#x27;,\n      handler: (req: PayloadRequest, res: Response, next) =&gt; {\n        if (!req.query.sort) {\n          req.query.sort = &#x27;-updatedAt&#x27;;\n        }\n        next();\n      },\n    },\n  ],</code></pre>",
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1673902310563
      },
      {
        "content": "Let me know if this is what you were looking for or if you have any questions!",
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1673902571352
      },
      {
        "content": "Hey @patrikkozak, thanks for getting back to me. The issue here is that we want the items to appear in an arbitrary custom order by default. Let&#x27;s say we have a client that manages a collection of recipes. The client now wants to control in what order they appear by default - this order is completely arbitrary to them. Sorting by most viewed, most liked or popular is out of the question here. The only two solutions I found so far require the client to upload the recipes in the one specific order they want (meaning they cannot rearrange it) - or me manually sorting it in middleware having to adjust the code every time a new recipe is added or the order changes.",
        "authorID": "345089134328807425",
        "authorName": "saaymeen",
        "authorAvatar": "3d0a34d72cc85ba1a8f5975f7c23df1b",
        "createdAtDate": 1674122687119
      },
      {
        "content": "Hey, I would like to bump this. Can you please change the tag back to unanswered @patrikkozak.",
        "authorID": "345089134328807425",
        "authorName": "saaymeen",
        "authorAvatar": "3d0a34d72cc85ba1a8f5975f7c23df1b",
        "createdAtDate": 1674468661264
      },
      {
        "content": "Hey @saaymeen I believe what you are asking for is marked as planned on our current roadmap, read more here: <a href=\"https://github.com/payloadcms/payload/discussions/1413\">https://github.com/payloadcms/payload/discussions/1413</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674479897020
      },
      {
        "content": "Thanks @Jarrod, that&#x27;s exactly what I&#x27;m looking for and seems to have a PR coming. Cheers!",
        "authorID": "345089134328807425",
        "authorName": "saaymeen",
        "authorAvatar": "3d0a34d72cc85ba1a8f5975f7c23df1b",
        "createdAtDate": 1674486855302
      },
      {
        "content": "I think the tagged PR on that roadmap item might be a bit misleading - and I think should be discussed there (I can do that). The linked PR allows for dragging and dropping filter headings (which is great!) but im not sure that is what <em>you</em> are looking for.<br><br>If I am understanding you correctly, you would like to be able to drag and drop rows in an unfiltered list, right?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674487132495
      },
      {
        "content": "Which is what the discussion is aimed at, but I think the PR may be misleading and unrelated to the actual roadmap item now that I am reading it back again.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674487187240
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "I think PrettyPrint is deprecated",
      "id": "1070626220322066442",
      "createdAt": 1675327582198
    },
    "messages": [
      {
        "content": "I think PrettyPrint is deprecated and should use transport instead. <br>This example works with my Pino logger but does not work with Payload.<br><br><pre><code class=\"hljs\">import { pino } from &quot;pino&quot;;\n\nexport type LoggerOptions = pino.LoggerOptions;\n\nexport const defaultLoggerOptions = {\n  level: process.env.LOG_LEVEL || &quot;info&quot;,\n  transport: process.env.NODE_ENV !== &quot;production&quot;\n    ? {\n        target: &quot;pino-pretty&quot;,\n        options: {\n          colorize: true,\n          ignore: &quot;pid,hostname&quot;,\n          translateTime: &quot;HH:MM:ss&quot;,\n        }\n      }\n    : undefined,\n} as LoggerOptions;</code></pre><br><br>Payload hack; prettyPrint is deprecated<br><pre><code class=\"hljs\">loggerOptions: {\n      ...defaultLoggerOptions, // My logger options.\n      prettyPrint: process.env.NODE_ENV !== &quot;production&quot; ? {\n        ignore: &quot;pid,hostname&quot;,\n        translateTime: &quot;HH:MM:ss&quot;,\n      } : undefined,\n} as unknown,</code></pre>",
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1675327582198
      },
      {
        "content": "We started work on migrating this but ran into issues with how peer dependencies are handled. I think we&#x27;ll get back to it at some point.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675442166376
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Using a custom domain to point to cloud run instance hosting payload server not allowing auth",
      "id": "1072062939051339838",
      "createdAt": 1675670122636
    },
    "messages": [
      {
        "content": "Hey Payload team,<br><br>I&#x27;m currently hosting my payload server on a google cloud run instance, i am using firebase hosting to point a custom domain to the end point, upon login in with an admin account I get the error &quot;Unauthorized, you must be logged in to make this request. You are not allowed to access this page&quot;. <br><br>When i use the direct url for the endpoint provided from google cloud run with the same payload admin account it works.",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675670122636
      },
      {
        "content": "@allanc",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675670129037
      },
      {
        "content": "My investigation so far... does the <pre><code class=\"hljs\">serverURL</code></pre> need to be the exact domain and not a hosted url? docs found here <a href=\"https://payloadcms.com/docs/configuration/overview#using-environment-variables-in-your-config\">https://payloadcms.com/docs/configuration/overview#using-environment-variables-in-your-config</a>",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675670172133
      },
      {
        "content": "@jmikrut hey sorry for the tag, just needed some help here since the threads going stale 🙂",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675901375456
      },
      {
        "content": "yes, the serverURL needs to be the actual URL (with https) that you access the Payload admin with",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675902558660
      },
      {
        "content": "you should also be able to leave it undefined if you don&#x27;t know the serverURL - BUT if you do leave it undefined, then you need to whitelist the domains you&#x27;ll be using in the <code>csrf</code> property of the Payload config",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675902588032
      },
      {
        "content": "because we only accept auth cookies from either serverURL or explicitly whitelisted domains in csrf array",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675902602747
      },
      {
        "content": "for security reasons",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675902607937
      },
      {
        "content": "cc: @allanc",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675994875426
      },
      {
        "content": "thank you and appreciate you getting to this question",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1675994887508
      },
      {
        "content": "Thanks @jmikrut, that helped me out also.",
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676004398632
      },
      {
        "content": "of course! 💸",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676040820690
      },
      {
        "content": "@jmikrut hey adding in the serverURL didn&#x27;t work, do we have to add it both to <code>serverURL</code> and the <code>csrf</code>",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446214103
      },
      {
        "content": "@MRL did it work for you?",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446221856
      },
      {
        "content": "All I had to do was add the serverURL in and make sure that matches the URL where you are hosting the application.",
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446290919
      },
      {
        "content": "do you know if it supports the subdomain",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446301865
      },
      {
        "content": "or the actual base domain @MRL",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446312263
      },
      {
        "content": "It supports subdomains. So if your url is <a href=\"https://cms.mywebsite.com\">https://cms.mywebsite.com</a> then that is what you need to enter into the serverURL",
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446352781
      },
      {
        "content": "ah thank you @MRL it still doesnt work for us - maybe it might be something to do with firebase hosting a cloud run instance",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446450760
      },
      {
        "content": "Do you have the url set in the .env files?",
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446474636
      },
      {
        "content": "yep - set in the .env files on cloud run",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446517175
      },
      {
        "content": "I&#x27;m not super clued up on Firebase hosting but if you can access the logs when it is building, you should be able to see where the serverUrl is pointing to. Or you can check the browser console to see where the API calls are being made to",
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446531600
      },
      {
        "content": "sweet, for now i just redirected it to the main url on the firebase hosting",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446724486
      },
      {
        "content": "so atleast its friendly to remember",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446730304
      },
      {
        "content": "that works for now",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446732050
      },
      {
        "content": "@MRL thanks",
        "authorID": "274520005175934976",
        "authorName": "andΞ | scalene",
        "authorAvatar": "5df5f8cdb697470552e544cf481711e3",
        "createdAtDate": 1676446739120
      },
      {
        "content": "All good 🙂",
        "authorID": "178109250806087680",
        "authorName": "MRL",
        "authorAvatar": "74be7e022f4a3a9d4929d90ffdf10258",
        "createdAtDate": 1676446751055
      }
    ],
    "messageCount": 26
  },
  {
    "info": {
      "name": "Is Payload mature enough for large projects?",
      "id": "1066153350153900092",
      "createdAt": 1674261166848
    },
    "messages": [
      {
        "content": "If I have a large manufacturing client with 8,000 SKUs would you recommend against Payload? Curious what caliber of client would be responsible at its current level of maturity. <br><br>I typically use Django for these types, but it&#x27;s awful for landing pages. I could use Sanity, but I don&#x27;t agree with their pricing model. I love Payload, but I know you guys are young and I&#x27;m not sure if I should throw a bunch of data at it.",
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1674261166848
      },
      {
        "content": "Hey @samtietjen apologies for the late reply here. Payload can absolutely handle that! We have personally built &amp; helped build a handful of large scale projects with Payload. You can definitely put Payload through the ringer!",
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1674662240964
      },
      {
        "content": "Let us know if you&#x27;ve got any specific questions and we&#x27;ll be around to help if needed.",
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1674662276999
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Field hook for creating slug",
      "id": "1070026227273973820",
      "createdAt": 1675184532708
    },
    "messages": [
      {
        "content": "I am trying to use a hook for generating slug based on title<br><br><pre><code class=\"hljs\">{\n            name: &#x27;title&#x27;,\n            required: true,\n            type: &#x27;text&#x27;,\n            localized: true,\n        },\n        {\n            name: &#x27;slug&#x27;,\n            required: true,\n            type: &#x27;text&#x27;,\n            unique: true,\n            localized: true,\n            hooks: {\n                beforeValidate: [slugify(&#x27;title&#x27;)],\n            },\n        },</code></pre><br><br>but I get this error: <br><pre><code class=\"hljs\"> Field &quot;slug&quot; &gt; &quot;value&quot; does not match any of the allowed types</code></pre><br><br>I want to generate the slug from the title. I took a look at the website on GitHub (<a href=\"https://github.com/payloadcms/website-cms/blob/b130b43cc1cf7a0ac1ba4c71ba7db90627f7a444/src/fields/slug.ts#L7\">https://github.com/payloadcms/website-cms/blob/b130b43cc1cf7a0ac1ba4c71ba7db90627f7a444/src/fields/slug.ts#L7</a>) and that is how I got the hook but I dont want to create another field called slug and etc, I just want to use it inside the collection file",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675184532708
      },
      {
        "content": "is it because you don&#x27;t want the field to show up in the admin UI?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675189568474
      },
      {
        "content": "i.e. = you just want the data to be in the API response, and not be editable",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675189577036
      },
      {
        "content": "to do that, you can set <code>admin.disabled</code> to <code>true</code> on your slug field",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675189595515
      },
      {
        "content": "and it will be hidden in admin UI",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675189598352
      },
      {
        "content": "@jmikrut yes, the idea is to auto generate the slug value from the title automatically when post is saved",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675215420283
      },
      {
        "content": "but the issue is Field &quot;slug&quot; &gt; &quot;value&quot; does not match any of the allowed types error",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675215428018
      },
      {
        "content": "that means you don&#x27;t have your field config for the <code>slug</code> field correct",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215886527
      },
      {
        "content": "can you copy / paste your <code>slug</code> field config here?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675215897090
      },
      {
        "content": "hum, I am not sure, I added it as a text field",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675220728799
      },
      {
        "content": "<pre><code class=\"hljs\">{\n            name: &#x27;slug&#x27;,\n            required: true,\n            type: &#x27;text&#x27;,\n            unique: true,\n            localized: true,\n            hooks: {\n                beforeValidate: [slugify(&#x27;title&#x27;)],\n            },\n        },</code></pre>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675220733199
      },
      {
        "content": "slugify <a href=\"https://www.npmjs.com/package/slugify\">https://www.npmjs.com/package/slugify</a> is this library I want to use",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675220758024
      },
      {
        "content": "to convert the title",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675220765753
      },
      {
        "content": "the error is because you are not writing your <code>beforeValidate</code> hook properly",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675221544207
      },
      {
        "content": "in that snippet, you&#x27;re <em><strong>calling</strong></em> the function, which will likely return a string. The <code>beforeValidate</code> property can only accept an array of functions",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675221570933
      },
      {
        "content": "so you need to write your beforeValidate hook itself as a function, and not call it",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675221582851
      },
      {
        "content": "oh I see, thank you",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675226677153
      },
      {
        "content": "I will give it a shot tomorrow morning",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675226689590
      },
      {
        "content": "@jmikrut I managed to get this working and use title automatically as a slug",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675369938051
      },
      {
        "content": "Thank you for your help",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675369956765
      },
      {
        "content": "@generator101 could you kindly post your solution here? I&#x27;m also having issues working dynamically between different field selections.",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676347528135
      },
      {
        "content": "sure",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676425897722
      },
      {
        "content": "@KasparTr here you go",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676425902661
      },
      {
        "content": "<pre><code class=\"hljs\">{\n    name: &#x27;slug&#x27;,\n    type: &#x27;text&#x27;,\n    unique: true,\n    localized: true,\n    index: true,\n    admin: {\n        readOnly: true\n    },\n    hooks: {\n        beforeValidate: [\n            ({ req: { payload }, data }) =&gt; {\n                if (payload) {\n                    return slugify(data.title)\n                }\n            },\n        ],\n    },\n},</code></pre>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676425928999
      },
      {
        "content": "I used this library <a href=\"https://www.npmjs.com/package/slugify\">https://www.npmjs.com/package/slugify</a>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676425946955
      },
      {
        "content": "to convert title to slug",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1676425952765
      }
    ],
    "messageCount": 25
  },
  {
    "info": {
      "name": "Global not populating all fields when locale = *",
      "id": "1056154560814645248",
      "createdAt": 1671877269701
    },
    "messages": [
      {
        "content": "Hi,<br><br>I&#x27;ve got a global with an array field with a relation field inside.<br><br>If i query the global with a locale I get all data from the relation field as you can see in the image. However when i set * as locale I only get back the id&#x27;s of the pages. I did not set any maxDepths on any collections.<br><br>I tried querying with &amp;depth=x aswell but same result.<br><br>What am I missing? <br><br>Thanks!",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1671877269701
      },
      {
        "content": "what result would you expect?",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1673906652800
      },
      {
        "content": "I would expect I also get back the data from the pages and not only the id since i did not set any depth",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673958875125
      },
      {
        "content": "is * as locale documented anywhere? As far as I understand it&#x27;s just invalid, thus none of the localized fields are return. AFAIK you can only pass one locale at a time.",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1673984694568
      },
      {
        "content": "<a href=\"https://payloadcms.com/docs/configuration/localization\">https://payloadcms.com/docs/configuration/localization</a>",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673984752623
      },
      {
        "content": "at the bottom of the page",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673984755183
      },
      {
        "content": "thanks",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1673984759102
      },
      {
        "content": "I&#x27;m used to graphql",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1673984832612
      },
      {
        "content": "You can see in the images I posted along with the question that in the first image I only get back data from one locale",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673984838882
      },
      {
        "content": "and in the second i get all data, from nl and en",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673984848281
      },
      {
        "content": "but only the id of the page",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673984854251
      },
      {
        "content": "and not the content",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673984857669
      },
      {
        "content": "have you tried <code>all</code>?",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1673984861884
      },
      {
        "content": "yee",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673984865823
      },
      {
        "content": "same result",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673984871458
      },
      {
        "content": "I wanted to use this query so I can create a locale switchter, extract the current page other  locales uri&#x27;s",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673984908416
      },
      {
        "content": "I see",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1673984937109
      },
      {
        "content": "ping the payload team?",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1673984964020
      },
      {
        "content": "this issue is old",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1673984970879
      },
      {
        "content": "Now i had to do the page query, get the id, and then do another query with the id and locale: *",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673984996577
      },
      {
        "content": "the latter did return all content",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673985008825
      },
      {
        "content": "this is a collection, not a global",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673985044939
      },
      {
        "content": "Well, the thread will be bumped now right?",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673985083321
      },
      {
        "content": "Yeah I wrote up a test that fails on a branch earlier today, so this is a confirmed issue. It’s kinda complex, but we will get it figured out and released<br><br><a href=\"https://github.com/payloadcms/payload/compare/master...fix/nested-relationship-all-locales\">https://github.com/payloadcms/payload/compare/master...fix/nested-relationship-all-locales</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674010784412
      },
      {
        "content": "Thanks!",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1674019871640
      }
    ],
    "messageCount": 24
  },
  {
    "info": {
      "name": "Same nested block in a block",
      "id": "1072464714782748752",
      "createdAt": 1675765913435
    },
    "messages": [
      {
        "content": "Hello! For a project we need to setup a tree based content block. The blocks should contain the same blocks as the parent. Is there a possibility to implement this or should something like this be done in a different way?",
        "authorID": "1064443950024368138",
        "authorName": "RTribe",
        "authorAvatar": null,
        "createdAtDate": 1675765913435
      },
      {
        "content": "Hi @RTribe! Are you looking to implement nested blocks? If so, you can see an example of this in action - pull down the <code>payload</code> repo and run the commands <code>yarn &amp;&amp; yarn dev fields.</code> <br><br>Username is <code>dev@payloadcms.com</code> - pass is <code>test</code><br><br>The <code>blocks</code> collection will have an example of nested blocks. Let me know if this is what you were looking for!",
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1676043993542
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How to set aliases for server-only modules used inside my hooks (Webpack errors)",
      "id": "1070447034231967844",
      "createdAt": 1675284860905
    },
    "messages": [
      {
        "content": "I&#x27;m using multiple libraries involving QR codes and image processing inside a hook. I tried to follow along the webpack settings in the [docs](<a href=\"https://payloadcms.com/docs/admin/webpack\">https://payloadcms.com/docs/admin/webpack</a>) regarding setting aliases for server-side modules to prevent Webpack from trying to bundle them. I&#x27;m getting multiple Webpack errors for multiple packages such as:<br><pre><code class=\"hljs json\">ERROR in ./node_modules/@jimp/core/es/index.js <span class=\"hljs-number\">42</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">33</span><span class=\"hljs-number\">-46</span>\nModule not found<span class=\"hljs-punctuation\">:</span> Error<span class=\"hljs-punctuation\">:</span> Can&#x27;t resolve &#x27;fs&#x27; in &#x27;/mnt/c/Users/minanaro/Desktop/payload-cms/node_modules/@jimp/core/es&#x27;\n\nBREAKING CHANGE<span class=\"hljs-punctuation\">:</span> webpack &lt; <span class=\"hljs-number\">5</span> used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill<span class=\"hljs-punctuation\">,</span> you need to<span class=\"hljs-punctuation\">:</span>\n        - add a fallback &#x27;resolve.fallback<span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span> <span class=\"hljs-attr\">&quot;url&quot;</span><span class=\"hljs-punctuation\">:</span> require.resolve(<span class=\"hljs-string\">&quot;url/&quot;</span>) <span class=\"hljs-punctuation\">}</span>&#x27;\n        - install &#x27;url&#x27;\nIf you don&#x27;t want to include a polyfill<span class=\"hljs-punctuation\">,</span> you can use an empty module like this<span class=\"hljs-punctuation\">:</span>\n        resolve.fallback<span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span> <span class=\"hljs-attr\">&quot;url&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">false</span></span> <span class=\"hljs-punctuation\">}</span></code></pre><br><br><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> encodeImageWithQRPath = path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;hooks/encodeImageWithQR.js&quot;</span>);\n<span class=\"hljs-keyword\">const</span> mockModule = path.<span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;util/mockObj.js&quot;</span>);\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">buildConfig</span>({\n    <span class=\"hljs-attr\">admin</span>: {\n        <span class=\"hljs-attr\">webpack</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">config</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">return</span> {\n                ...config,\n                <span class=\"hljs-attr\">resolve</span>: {\n                    ...config.<span class=\"hljs-property\">resolve</span>,\n                    <span class=\"hljs-attr\">alias</span>: {\n                        ...config.<span class=\"hljs-property\">resolve</span>.<span class=\"hljs-property\">alias</span>,\n                        [encodeImageWithQRPath]: mockModule,\n                    },\n                },\n            };\n        },\n<span class=\"hljs-comment\">// and so on</span></code></pre><br><br>mockModule.js is the same as the docs example, an empty object. I also have my encodeImageWith... hook. I checked the alias paths and they&#x27;re correct. I also tried setting the fallback values for the modules to be false but to no avail.<br><br>What am I doing wrong?<br>Thanks for your help!",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675284860905
      },
      {
        "content": "Oh, it seems deleting node_modules/.cache fixed it... Apologies! 😄",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675285520011
      },
      {
        "content": "nice!",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675285652061
      },
      {
        "content": "i was just about to say that",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675285654515
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Conditionally hide preview button?",
      "id": "1070901022245011486",
      "createdAt": 1675393100082
    },
    "messages": [
      {
        "content": "Is there a way to conditionally render the preview button in the admin ui for previewing drafts? I.e. return a string would render the button but returning null/undefined would not render it?<br><br><a href=\"https://payloadcms.com/docs/configuration/collections#preview\">https://payloadcms.com/docs/configuration/collections#preview</a>",
        "authorID": "767903785216770058",
        "authorName": "ghard1314",
        "authorAvatar": "c007ec6ad4057708ca240354f3fca3c5",
        "createdAtDate": 1675393100082
      },
      {
        "content": "Hey @ghard1314 - conditionally rendering the preview button is currently not supported but it would definitely make a great feature. We will keep this on our radar!",
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1675960102078
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "\"You are not allowed to perform this action\" issue If we are using api-key to access the APIs",
      "id": "1066030546943229972",
      "createdAt": 1674231888281
    },
    "messages": [
      {
        "content": "Issue 1: <br><br>Initially, We used a label in the authorization header  with an API key  like  &quot; User API-key &lt;api-key&gt; &quot; , It was working fine.<br> <br>But, Since Yesterday, we have been facing the above error &quot; You are not allowed to perform this action &quot;<br><br>then we know about this changes <a href=\"https://github.com/payloadcms/payload/issues/1769\">https://github.com/payloadcms/payload/issues/1769</a><br><br>We have to use a collection slug instead of the label in the authorization header. We changed that to &quot;users API-key &lt;api-key&gt;&quot;<br><br>We didn&#x27;t change any version of the payload cms in our system. still we are using &quot;payload&quot;: &quot;^1.1.21&quot; version<br><br>we are wondering how the changes got updated automatically.",
        "authorID": "943144613689065502",
        "authorName": "Veera26",
        "authorAvatar": null,
        "createdAtDate": 1674231888281
      },
      {
        "content": "isnt it Users.slug",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674232027044
      },
      {
        "content": "as the collection slug",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674232032754
      },
      {
        "content": "is User a string?",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674232037886
      },
      {
        "content": "If you didn&#x27;t update your Payload version, you won&#x27;t want to change to <code>users</code> instead of <code>User</code>. That change was done in 1.4.0",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674232233917
      },
      {
        "content": "It seems like something else is going on here",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674232239222
      },
      {
        "content": "Are you developing locally? Can you open up access to the desired endpoint and verify at least that works?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674232360842
      },
      {
        "content": "A <code>curl</code> example would help along with the access control of the resource being queried",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674232377324
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Fetching items by slug (or other unique text field)",
      "id": "1036263494649122908",
      "createdAt": 1667134869969
    },
    "messages": [
      {
        "content": "Hey, the REST api currently works with the element ID&#x27;s, is it possible to also make it work with unique text fields on a collection, for example I create a slug field so I could do /api/recipes/mojito?",
        "authorID": "84990579150163968",
        "authorName": "kobeaerts",
        "authorAvatar": null,
        "createdAtDate": 1667134869969
      },
      {
        "content": "U could use query filters for this <br><a href=\"https://payloadcms.com/docs/queries/overview#operators\">https://payloadcms.com/docs/queries/overview#operators</a><br>like:<br><code>/api/recipes?where[slug][equals]=mojito</code><br><br>If u index the queried field, it&#x27;ll be even faster",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1667136409832
      },
      {
        "content": "True but this gives back an array of results, is it possible to get a single result?",
        "authorID": "84990579150163968",
        "authorName": "kobeaerts",
        "authorAvatar": null,
        "createdAtDate": 1667164217636
      },
      {
        "content": "@kobeaerts nope it&#x27;s not. This might seem weird at first pass but it starts to make sense after you use it for a bit",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667270740729
      },
      {
        "content": "If the collection used a custom ID text field then that url could work. You won&#x27;t be able to change it though so this probably isn&#x27;t helpful.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1667463700609
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "replace Search Bar in Admin Panel",
      "id": "1069405238831894619",
      "createdAt": 1675036477526
    },
    "messages": [
      {
        "content": "Is there a way to exclusively replace the search bar in the payload admin panel for a specific collection? I&#x27;d like to implement a custom search, therefore the search input has to send the query to another endpoint",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1675036477526
      },
      {
        "content": "Have you checked <a href=\"https://payloadcms.com/docs/admin/components\">https://payloadcms.com/docs/admin/components</a> yet?",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675044596962
      },
      {
        "content": "Maybe use custom routes?",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675044751930
      },
      {
        "content": "Yeah that&#x27;s an option of course, but I don&#x27;t want to create a List view from scratch just because I want the search bar to behave a bit differently, I really like the default one! 😅",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1675066550177
      },
      {
        "content": "Yeah, as of now there is not a granular way of replacing a single component inside the default",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675113838574
      },
      {
        "content": "you don&#x27;t have to create it from scratch, just copy the source from the original, or alternatively, clone the entire repository 😄",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675150578948
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Relations and Drafts",
      "id": "1068787015434383390",
      "createdAt": 1674889081582
    },
    "messages": [
      {
        "content": "Suppose I have two collections:<br><br>* Posts - has a relation with notes<br>* Notes - has versions &amp; drafts enabled<br><br>When getting Posts, how do I get the Note drafts in the relation? <br><br>Is the only way to make another request for the Note directly for its draft versions?",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674889081582
      },
      {
        "content": "<code>versions: {\n    drafts: true\n  },</code>",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674900235537
      },
      {
        "content": "@xHomu  Please find the related Doc",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674900277271
      },
      {
        "content": "<a href=\"https://payloadcms.com/docs/versions/drafts#controlling-who-can-see-collection-drafts\">https://payloadcms.com/docs/versions/drafts#controlling-who-can-see-collection-drafts</a>",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674900278242
      },
      {
        "content": "Sorry I wasn&#x27;t being very clear.",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674900309000
      },
      {
        "content": "<pre><code class=\"hljs\">Post = {\n    fields: [ \n        {   name: &quot;notes&quot;,\n            type: &quot;relationship&quot;,\n            relationTo: &quot;notes&quot;,\n            required: true,\n            hasMany: true,\n]\n}</code></pre>",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674900376293
      },
      {
        "content": "Notes is the one with drafts<br><pre><code class=\"hljs\">Note = {\n...\nversions: {\n        drafts: {\n            autosave: {\n                interval: 2000,\n            }\n        },\n        maxPerDoc: 20,\n        retainDeleted: false,\n    }\n}</code></pre>",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674900409759
      },
      {
        "content": "Now, if I just query post, <br><br><pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-property\">findByID</span>&lt;<span class=\"hljs-title class_\">Post</span>&gt;({\n        <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;posts&quot;</span>,\n        <span class=\"hljs-attr\">id</span>: postId,\n        user,\n    });</code></pre><br><br>in post.notes, it would only return the published versions of notes.",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674900484253
      },
      {
        "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-property\">findByID</span>&lt;<span class=\"hljs-title class_\">Post</span>&gt;({\n        <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;posts&quot;</span>,\n        <span class=\"hljs-attr\">id</span>: postId,\n        user,\n        <span class=\"hljs-attr\">draft</span>: <span class=\"hljs-literal\">true</span>\n    });</code></pre><br>doesn&#x27;t work, since Posts aren&#x27;t the one with draft versions.",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674900506661
      },
      {
        "content": "The only way I can work around that is do two queries:<br><br><pre><code class=\"hljs jsx\">    <span class=\"hljs-keyword\">const</span> post = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-property\">findByID</span>&lt;<span class=\"hljs-title class_\">Post</span>&gt;({\n        <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;posts&quot;</span>,\n        <span class=\"hljs-attr\">id</span>: postId,\n        user,\n    });\n\n    <span class=\"hljs-keyword\">const</span> notes = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">Promise</span>.<span class=\"hljs-title function_\">all</span>(\n        post?.<span class=\"hljs-property\">notes</span>?.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">note</span>) =&gt;</span>\n            payload.<span class=\"hljs-property\">findByID</span>&lt;<span class=\"hljs-title class_\">Note</span>&gt;({\n                <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;notes&quot;</span>,\n                <span class=\"hljs-attr\">id</span>: <span class=\"hljs-keyword\">typeof</span> note === <span class=\"hljs-string\">&quot;string&quot;</span> ? note : note.<span class=\"hljs-property\">id</span>,\n                <span class=\"hljs-attr\">draft</span>: <span class=\"hljs-literal\">true</span>,\n                user,\n            })\n        )\n    );</code></pre>",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674900535049
      },
      {
        "content": "Hi @xHomu , Can you try with access property in Notes, Like -<br><br><code>access: {\n    read: ({ req }) =&gt; {\n      if (req.user) return true;\n      return {\n        or: [\n          {\n            _status: {\n              equals: &#x27;published&#x27;,\n            },\n          },\n          {\n            _status: {\n              equals: &#x27;draft&#x27;,\n            }\n          }\n        ]\n      };\n      },\n      };\n    },\n  },</code>",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903309094
      },
      {
        "content": "Something like that",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903336061
      },
      {
        "content": "Yes, I have a read access written for notes.",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674903363916
      },
      {
        "content": "Let me dig it up",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674903376824
      },
      {
        "content": "Also you can use depth and where query",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903420710
      },
      {
        "content": "<blockquote><code>const getPosts = async () =&gt; {\n  const stringifiedQuery = qs.stringify({\n    where: query // ensure that</code>qs<code>adds the</code>where<code>property, too!\n  }, { addQueryPrefix: true });\n\n  const response = await fetch(</code><a href=\"http://localhost:3000/api/posts${stringifiedQuery}`\">http://localhost:3000/api/posts${stringifiedQuery}`</a>);<br>  // Continue to handle the response below...<br>}`</blockquote>",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903466123
      },
      {
        "content": "This is access: read for notes<br><pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> isAdminorUserorPublished = (userField = <span class=\"hljs-string\">&#x27;user&#x27;</span>): <span class=\"hljs-function\"><span class=\"hljs-params\">Access</span> =&gt;</span> <span class=\"hljs-function\">(<span class=\"hljs-params\">{ req: { user } }</span>) =&gt;</span> { \n     <span class=\"hljs-comment\">// Return true or false based on if the user has an admin role </span>\n     <span class=\"hljs-keyword\">if</span>(user?.<span class=\"hljs-property\">roles</span>?.<span class=\"hljs-title function_\">includes</span>(<span class=\"hljs-string\">&quot;admin&quot;</span>)) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>; \n  \n     <span class=\"hljs-comment\">// using a query constraint, we can restrict it based on the `user` field </span>\n     <span class=\"hljs-keyword\">if</span>(user) <span class=\"hljs-keyword\">return</span> { \n         <span class=\"hljs-attr\">or</span>: [ \n             { \n                 [userField]:  { \n                 <span class=\"hljs-attr\">equals</span>:  \n                     user?.<span class=\"hljs-property\">id</span> \n                 } \n             }, \n             { \n                 <span class=\"hljs-attr\">_status</span>: { \n                     <span class=\"hljs-attr\">equals</span>: <span class=\"hljs-string\">&#x27;published&#x27;</span> \n                 } \n             }, \n             { \n                 <span class=\"hljs-attr\">_status</span>: { \n                     <span class=\"hljs-attr\">equals</span>: <span class=\"hljs-literal\">false</span> \n                 } \n             } \n             ] \n     } \n\n    <span class=\"hljs-comment\">//otherwise return published version only </span>\n     <span class=\"hljs-keyword\">return</span> { \n         <span class=\"hljs-attr\">or</span>: [ \n             { \n                 <span class=\"hljs-attr\">_status</span>: { \n                     <span class=\"hljs-attr\">equals</span>: <span class=\"hljs-string\">&#x27;published&#x27;</span> \n                 } \n             }, \n             { \n                 <span class=\"hljs-attr\">_status</span>: { \n                     <span class=\"hljs-attr\">equals</span>: <span class=\"hljs-literal\">false</span> \n                 } \n             } \n             ] \n     } \n  \n };\n </code></pre>",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674903499592
      },
      {
        "content": "Ok so there you have , if user status = published, you can remove that",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903609049
      },
      {
        "content": "it will return all notes along with draft",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903621930
      },
      {
        "content": "DId you tried that?",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903628637
      },
      {
        "content": "Or use depth=2",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903661154
      },
      {
        "content": "<a href=\"https://payloadcms.com/docs/getting-started/concepts#depth\">https://payloadcms.com/docs/getting-started/concepts#depth</a>",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903677395
      },
      {
        "content": "with where condition in api",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903694975
      },
      {
        "content": "?where[posts.notes.status][equals]=draft",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903758663
      },
      {
        "content": "something like that",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903763378
      },
      {
        "content": "Mmm, thanks for the hints! Will have to play with versions a bit more tomorrow.",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674903843269
      },
      {
        "content": "Yes",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903909052
      },
      {
        "content": "Are there any public repos with interesting access control rules that is worth checking out?",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674903910995
      },
      {
        "content": "Besides the official ones in payload GitHub? Already had those bookmarked.",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1674903934745
      },
      {
        "content": "Will check and get back to you.",
        "authorID": "1064858820163145768",
        "authorName": "princephpdev",
        "authorAvatar": null,
        "createdAtDate": 1674903999658
      }
    ],
    "messageCount": 29
  },
  {
    "info": {
      "name": "custom field value not being saved",
      "id": "1065905578863513710",
      "createdAt": 1674202093569
    },
    "messages": [
      {
        "content": "I have created a custom field which is supposed to retrieve data from a global collection and then make &quot;selectable&quot; which of those items to display.<br><br>I tried to follow the docs as good as possible, but here I am stuck, I assume it has to do with the fact that the fieldname is missing? How could I set that?<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span>, { useEffect, useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Label</span>, useField } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/components/forms&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Props</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/components/fields/Text&#x27;</span>;\n\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">SelectFromFAQ</span>:<span class=\"hljs-title class_\">React</span>.<span class=\"hljs-property\">FC</span>&lt;<span class=\"hljs-title class_\">Props</span>&gt; = <span class=\"hljs-function\">(<span class=\"hljs-params\">{ label, required, path }</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [faqItems, setFaqItems] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-literal\">null</span>);\n  <span class=\"hljs-keyword\">const</span> usePath = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${path}</span>.selected`</span>;\n  <span class=\"hljs-keyword\">const</span> { value = <span class=\"hljs-string\">&#x27;&#x27;</span>, setValue } = <span class=\"hljs-title function_\">useField</span>({ <span class=\"hljs-attr\">path</span>: usePath });\n  <span class=\"hljs-title function_\">useEffect</span>(<span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">fetchData</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) =&gt; {\n      <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${process.env.PAYLOAD_PUBLIC_SERVER_URL}</span>/papi/globals/faq`</span>, {\n        <span class=\"hljs-attr\">headers</span>: { <span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>: <span class=\"hljs-string\">&#x27;application/json&#x27;</span> },\n      });\n      <span class=\"hljs-keyword\">const</span> json = <span class=\"hljs-keyword\">await</span> data.<span class=\"hljs-title function_\">json</span>();\n      <span class=\"hljs-keyword\">if</span> (json?.<span class=\"hljs-property\">groups</span>) {\n        <span class=\"hljs-title function_\">setFaqItems</span>(json.<span class=\"hljs-property\">groups</span>);\n      }\n    };\n    <span class=\"hljs-title function_\">fetchData</span>().<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-property\">error</span>);\n  }, []);\n\n  <span class=\"hljs-keyword\">if</span> (faqItems) {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">React.Fragment</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span>\n          <span class=\"hljs-attr\">htmlFor</span>=<span class=\"hljs-string\">{path}</span>\n          <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">{label}</span>\n          <span class=\"hljs-attr\">required</span>=<span class=\"hljs-string\">{required}</span>\n        /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">margin:</span> <span class=\"hljs-attr\">0</span>, <span class=\"hljs-attr\">padding:</span> <span class=\"hljs-attr\">0</span> }}&gt;</span>\n          {faqItems.map((item, index) =&gt; (\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>\n              <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{index}</span>\n              <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">listStyle:</span> &#x27;<span class=\"hljs-attr\">none</span>&#x27;, <span class=\"hljs-attr\">margin:</span> <span class=\"hljs-attr\">0</span>, <span class=\"hljs-attr\">padding:</span> <span class=\"hljs-attr\">0</span> }}\n            &gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span>\n                <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;button&quot;</span>\n                <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{item.id}</span>\n                <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setValue(item.id)}\n                className={`${item.id === value ? &#x27;btn--selected&#x27; : &#x27;&#x27;} btn btn--style-primary btn--icon-style-without-border btn--size-small btn--icon-position-right`}\n                style={{ margin: &#x27;5px 0&#x27; }}\n              &gt;\n                {item.title}\n              <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n          ))}\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">React.Fragment</span>&gt;</span></span>\n    );\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">React.Fragment</span> /&gt;</span></span>;\n};</code></pre>",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674202093569
      },
      {
        "content": "What’s the config look like for field and its parent fields look like?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674218315708
      },
      {
        "content": "This is the config for my global collection:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">GlobalConfig</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/types&#x27;</span>;\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">FAQ</span>: <span class=\"hljs-title class_\">GlobalConfig</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;faq&#x27;</span>,\n  <span class=\"hljs-attr\">access</span>: {\n    <span class=\"hljs-attr\">read</span>: <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-literal\">true</span>,\n  },\n  <span class=\"hljs-attr\">fields</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;groups&#x27;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;array&#x27;</span>,\n      <span class=\"hljs-attr\">admin</span>: {\n        <span class=\"hljs-attr\">components</span>: {\n          <span class=\"hljs-title class_\">RowLabel</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">{ data, index, path }</span>) =&gt;</span> data?.<span class=\"hljs-property\">title</span> || <span class=\"hljs-string\">`FAQ <span class=\"hljs-subst\">${<span class=\"hljs-built_in\">String</span>(index).padStart(<span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">&#x27;0&#x27;</span>)}</span>`</span>,\n        },\n      },\n      <span class=\"hljs-attr\">fields</span>: [\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text&#x27;</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;title&#x27;</span>,\n        },\n        {\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;items&#x27;</span>,\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;array&#x27;</span>,\n          <span class=\"hljs-attr\">admin</span>: {\n            <span class=\"hljs-attr\">components</span>: {\n              <span class=\"hljs-title class_\">RowLabel</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">{ data, index, path }</span>) =&gt;</span> data?.<span class=\"hljs-property\">question</span> || <span class=\"hljs-string\">`FAQ <span class=\"hljs-subst\">${<span class=\"hljs-built_in\">String</span>(index).padStart(<span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">&#x27;0&#x27;</span>)}</span>`</span>,\n            },\n          },\n          <span class=\"hljs-attr\">fields</span>: [\n            {\n              <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text&#x27;</span>,\n              <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Frage&#x27;</span>,\n              <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;question&#x27;</span>,\n            },\n            {\n              <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;richText&#x27;</span>,\n              <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Antwort&#x27;</span>,\n              <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;answer&#x27;</span>,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-variable constant_\">FAQ</span>;</code></pre>",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674232415383
      },
      {
        "content": "The config for my field is what I posted initially, and the block / parent? is as follows:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Block</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;payload/types&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Faq</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../../payload-types&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">SelectFromFAQ</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../../collections/uiFields/selectFromGlobalFAQ/field&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">FAQBlockType</span> = {\n  <span class=\"hljs-attr\">blockType</span>: <span class=\"hljs-string\">&#x27;faqblock&#x27;</span>\n  blockName?: <span class=\"hljs-built_in\">string</span>\n  width?: <span class=\"hljs-string\">&#x27;fullwidth&#x27;</span> | <span class=\"hljs-string\">&#x27;container&#x27;</span>\n  headline?: <span class=\"hljs-built_in\">string</span>\n  subline?: <span class=\"hljs-built_in\">string</span>\n  <span class=\"hljs-attr\">faqItems</span>: <span class=\"hljs-title class_\">Faq</span>[]\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">FAQBlock</span>: <span class=\"hljs-title class_\">Block</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;faqblock&#x27;</span>,\n  <span class=\"hljs-attr\">labels</span>: {\n    <span class=\"hljs-attr\">singular</span>: <span class=\"hljs-string\">&#x27;FAQ Accordion&#x27;</span>,\n    <span class=\"hljs-attr\">plural</span>: <span class=\"hljs-string\">&#x27;FAQ Accordions&#x27;</span>,\n  },\n  <span class=\"hljs-attr\">fields</span>: [\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;row&#x27;</span>,\n      <span class=\"hljs-attr\">fields</span>: [\n        {\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;width&#x27;</span>, <span class=\"hljs-comment\">// required</span>\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;select&#x27;</span>, <span class=\"hljs-comment\">// required</span>\n          <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Breite&#x27;</span>,\n          <span class=\"hljs-attr\">hasMany</span>: <span class=\"hljs-literal\">false</span>,\n          <span class=\"hljs-attr\">admin</span>: {\n            <span class=\"hljs-attr\">isClearable</span>: <span class=\"hljs-literal\">false</span>,\n          },\n          <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-string\">&#x27;container&#x27;</span>,\n          <span class=\"hljs-attr\">options</span>: [\n            {\n              <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Container&#x27;</span>,\n              <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;container&#x27;</span>,\n            },\n            {\n              <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Bildschirm&#x27;</span>,\n              <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;fullwidth&#x27;</span>,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;row&#x27;</span>,\n      <span class=\"hljs-attr\">fields</span>: [\n        {\n          <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Headline&#x27;</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;headline&#x27;</span>,\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text&#x27;</span>,\n        },\n        {\n          <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Subline&#x27;</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;subline&#x27;</span>,\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;textarea&#x27;</span>,\n        },\n      ],\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;ui&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;faqItems&#x27;</span>,\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;FAQ Items&#x27;</span>,\n      <span class=\"hljs-attr\">admin</span>: {\n        <span class=\"hljs-attr\">components</span>: {\n          <span class=\"hljs-title class_\">Field</span>: <span class=\"hljs-title class_\">SelectFromFAQ</span>,\n        },\n      },\n    },\n  ],\n};</code></pre>",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674232542480
      },
      {
        "content": "@Jarrod  nevermind, i figured it was because the <code>fieldtype</code> was <code>ui</code> I changed it to text and now it&#x27;s working &gt;.&lt;&#x27;",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674232821121
      },
      {
        "content": "NICE",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674232978819
      },
      {
        "content": "happy to help",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674232989404
      },
      {
        "content": "🤣",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674232996238
      },
      {
        "content": "I get a new error now though :x",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674233627269
      },
      {
        "content": "for some reason nextjs thinks that I am importing global css styles - this is the error:<br><pre><code class=\"hljs\">error - ./node_modules/payload/dist/admin/components/elements/Button/index.scss\nGlobal CSS cannot be imported from within node_modules.\nRead more: https://nextjs.org/docs/messages/css-npm\nLocation: node_modules\\payload\\dist\\admin\\components\\elements\\Button\\index.js\n\nImport trace for requested module:\n./node_modules/payload/dist/admin/components/elements/Button/index.scss\n./node_modules/payload/dist/admin/components/elements/Button/index.js\n./node_modules/payload/dist/admin/components/forms/Submit/index.js\n./node_modules/payload/components/forms.ts\n./collections/uiFields/selectFromGlobalFAQ/field.tsx\n./blocks/FaqBlock/config.ts\n./blocks/index.ts\n./components/RenderBlocks/index.tsx</code></pre><br><br>But I am not importing the Button or any CSS from payload.<br><br>The only thing I am doing is to import the Label and use already present css classes from payload but for some reason I can&#x27;t seem to figure",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674233742108
      },
      {
        "content": "Where are you using <code>components/RenderBlocks/index.tsx</code>? in NextJS?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674233907952
      },
      {
        "content": "Its basically just a wrapper component to render each block in the frontend",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674234055703
      },
      {
        "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-string\">&#x27;use client&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Container</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-bootstrap/Container&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Layout</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../../collections/Page&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { components } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../../blocks&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> classes <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./index.module.css&#x27;</span>;\n\n\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Props</span> = {\n  <span class=\"hljs-attr\">layout</span>: <span class=\"hljs-title class_\">Layout</span>[]\n  className?: <span class=\"hljs-built_in\">string</span>\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">RenderBlocks</span>: <span class=\"hljs-title class_\">React</span>.<span class=\"hljs-property\">FC</span>&lt;<span class=\"hljs-title class_\">Props</span>&gt; = <span class=\"hljs-function\">(<span class=\"hljs-params\">{ layout, className }</span>) =&gt;</span> (\n  <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{[</span>\n    <span class=\"hljs-attr\">classes.renderBlocks</span>,\n    <span class=\"hljs-attr\">className</span>,\n  ]<span class=\"hljs-attr\">.filter</span>(<span class=\"hljs-attr\">Boolean</span>)<span class=\"hljs-attr\">.join</span>(&#x27; &#x27;)}\n  &gt;</span>\n    {layout.map((block, i) =&gt; {\n      const Block = block.blockType === &#x27;hero&#x27; ? components.DynamicHero : components[block.blockType];\n      if (Block) {\n        if (block.blockType === &#x27;hero&#x27; || block?.width === &#x27;fullwidth&#x27;) {\n          return (\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Block</span>\n              {<span class=\"hljs-attr\">...block</span>}\n              <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{i}</span>\n            /&gt;</span>\n          );\n        }\n\n        return (\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Container</span>\n            <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{i}</span>\n            <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classes.block}</span>\n          &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Block</span> {<span class=\"hljs-attr\">...block</span>} /&gt;</span>\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Container</span>&gt;</span>\n        );\n      }\n\n      return null;\n    })}\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n);\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">RenderBlocks</span>;</code></pre>",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674234079933
      },
      {
        "content": "its used for my pages within my <code>[...slug].tsx</code>",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674234266690
      },
      {
        "content": "Is <code>/blocks/index.ts</code> exporting configs and JSX blocks?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674234669346
      },
      {
        "content": "yes",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674234762777
      },
      {
        "content": "<pre><code class=\"hljs\">import dynamic from &#x27;next/dynamic&#x27;;\nimport { CallToAction } from &#x27;./CallToAction/index&#x27;;\nimport { Content } from &#x27;./Content&#x27;;\nimport { Image } from &#x27;./Image&#x27;;\nimport { FeaturedProducts } from &#x27;./FeaturedProducts&#x27;;\nimport { Hero } from &#x27;./Hero/index&#x27;;\nimport { ThreeIconGrid } from &#x27;./ThreeIconGrid&#x27;;\nimport { NearbyLocations } from &#x27;./NearbyLocations&#x27;;\nimport { FeaturedLocations } from &#x27;./FeaturedLocations/config&#x27;;\nimport { FAQBlock } from &#x27;./FaqBlock/config&#x27;;\n\nconst DynamicHero = dynamic(() =&gt; import(&#x27;./Hero/component&#x27;).then((mod) =&gt; mod.Component), { ssr: false });\nconst cta = dynamic(() =&gt; import(&#x27;./CallToAction/component&#x27;).then((mod) =&gt; mod.Component), { ssr: false });\nconst nearbylocations = dynamic(() =&gt; import(&#x27;./NearbyLocations/component&#x27;).then((mod) =&gt; mod.Component), { ssr: false });\nconst content = dynamic(() =&gt; import(&#x27;./Content/component&#x27;).then((mod) =&gt; mod.Component), { ssr: false });\nconst image = dynamic(() =&gt; import(&#x27;./Image/component&#x27;).then((mod) =&gt; mod.Component), { ssr: false });\nconst featuredProducts = dynamic(() =&gt; import(&#x27;./FeaturedProducts/component&#x27;).then((mod) =&gt; mod.Component), { ssr: false });\nconst threeicongrid = dynamic(() =&gt; import(&#x27;./ThreeIconGrid/component&#x27;).then((mod) =&gt; mod.Component), { ssr: false });\nconst featuredLocations = dynamic(() =&gt; import(&#x27;./FeaturedLocations&#x27;).then((mod) =&gt; mod.Component), { ssr: false });\nconst faqBlock = dynamic(() =&gt; import(&#x27;./FaqBlock&#x27;).then((mod) =&gt; mod.Component), { ssr: false });\n\nexport const collections = {\n  CallToAction,\n  Content,\n  Image,\n  FeaturedProducts,\n  Hero,\n  ThreeIconGrid,\n  NearbyLocations,\n  FeaturedLocations,\n  FAQBlock,\n};\n\nexport const components = {\n  cta,\n  content,\n  image,\n  featuredProducts,\n  DynamicHero,\n  threeicongrid,\n  nearbylocations,\n  featuredLocations,\n  faqBlock,\n};</code></pre>",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674234773333
      },
      {
        "content": "this is my basic component for the faq block:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Col</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-bootstrap/Col&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Row</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-bootstrap/Row&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Container</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-bootstrap/Container&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-keyword\">type</span> { <span class=\"hljs-title class_\">FAQBlockType</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./config&#x27;</span>;\n\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Component</span>:<span class=\"hljs-title class_\">React</span>.<span class=\"hljs-property\">FC</span>&lt;<span class=\"hljs-title class_\">FAQBlockType</span>&gt; = <span class=\"hljs-function\">(<span class=\"hljs-params\">props</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(props);\n  <span class=\"hljs-keyword\">return</span> <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>Hello World<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>;\n};</code></pre><br>which should not throw that error",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674234855296
      },
      {
        "content": "I think you will need to separate them so configs and blocks are not exported from the same file",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674234872283
      },
      {
        "content": "your frontend is loading the configs (bc you are importing the barrel file) which have global scss files, and next will not allow that",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674234892272
      },
      {
        "content": "that&#x27;s odd because that was never an issue before",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674234909398
      },
      {
        "content": "only since I added my custom field to the config",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674234932268
      },
      {
        "content": "right, which uses a payload component, that references the global scss file",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674234959077
      },
      {
        "content": "does the <code>useField</code> part do that?",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674235044085
      },
      {
        "content": "It stems from the <code>import { Label, useField } from &#x27;payload/components/forms&#x27;;</code> inside your custom component",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674235152175
      },
      {
        "content": "Which is a barrel file, that import/exports the Submit button, which loads a global scss file. I am just following the path upwards from the error you posted above",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674235243261
      },
      {
        "content": "Alright, then I&#x27;ll do the the seperation - thank you ❤️",
        "authorID": "112665981502918656",
        "authorName": "Ethelien",
        "authorAvatar": "ac73e53d7abbae0aba0be389410d33af",
        "createdAtDate": 1674235419699
      }
    ],
    "messageCount": 26
  },
  {
    "info": {
      "name": "field hooks originalDoc properties log correctly, but return undefined when used",
      "id": "1062043861230293082",
      "createdAt": 1673281388338
    },
    "messages": [
      {
        "content": "I&#x27;m using field hooks to populate a relationship field with the local API. When using <code>console.log(originalDoc.id)</code> to check the document id, it returns the actual value, however, when trying to use <code>originalDoc.id</code> inside the <code>payload.update</code> operation, it says that any property of <code>originalDoc</code> is undefined. I must be doing something wrong, but I can&#x27;t figure out what it is. Any help would be appreciated<br><br>this is the field:<br><pre><code class=\"hljs\">{\n  name: &#x27;partnerAdmin&#x27;,\n  type: &#x27;relationship&#x27;,\n  relationTo: &#x27;users&#x27;,\n  hasMany: false,\n  access: {\n    read: isAdminOrPartnerAdminFieldLevel,\n    create: isAdminOrPartnerAdminFieldLevel,\n    update: isAdminFieldLevel,\n  },\n  filterOptions: ({ relationTo, siblingData }) =&gt; {\n    if (relationTo === &#x27;users&#x27;) {\n      return {\n        roles: { contains: &#x27;partnerAdmin&#x27; },\n      };\n    }\n  },\n  hooks: {\n    afterChange: [\n      async ({ req, operation, originalDoc }) =&gt; {\n        if (operation === &#x27;create&#x27;)\n          console.log(originalDoc.id);\n          await payload.update({\n            collection: &#x27;users&#x27;,\n            id: originalDoc.id,\n            data: {\n              partnerAdmin: req.user.id,\n            },\n          });\n      },\n    ],\n  },\n},</code></pre>",
        "authorID": "744383324629237872",
        "authorName": "Skumm",
        "authorAvatar": "9e953d25a78f40f8f8c2d2b72410d71b",
        "createdAtDate": 1673281388338
      },
      {
        "content": "and here is the console:<br><pre><code class=\"hljs\">63bc336b2690c6f77765e88c\n[15:52:41] ERROR (payload): TypeError: Cannot read properties of undefined (reading &#x27;id&#x27;)\n    at exports.Users.fields.fields.hooks.afterChange (G:\\xampp\\htdocs\\toneseeker-cms-main\\src\\collections\\Users.ts:836:38)\n    at G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\fields\\hooks\\afterChange\\promise.ts:38:35\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at promise (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\fields\\hooks\\afterChange\\promise.ts:35:7)\n    at async Promise.all (index 0)\n    at traverseFields (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\fields\\hooks\\afterChange\\traverseFields.ts:44:3)\n    at promise (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\fields\\hooks\\afterChange\\promise.ts:60:7)\n    at async Promise.all (index 15)\n    at traverseFields (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\fields\\hooks\\afterChange\\traverseFields.ts:44:3)\n    at afterChange (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\fields\\hooks\\afterChange\\index.ts:26:3)\n    at update (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\collections\\operations\\update.ts:320:12)\n    at exports.Users.fields.fields.hooks.afterChange (G:\\xampp\\htdocs\\toneseeker-cms-main\\src\\collections\\Users.ts:832:11)\n    at G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\fields\\hooks\\afterChange\\promise.ts:38:29\n    at promise (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\fields\\hooks\\afterChange\\promise.ts:35:7)\n    at async Promise.all (index 0)\n    at traverseFields (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\fields\\hooks\\afterChange\\traverseFields.ts:44:3)\n    at promise (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\fields\\hooks\\afterChange\\promise.ts:60:7)\n    at async Promise.all (index 15)</code></pre>",
        "authorID": "744383324629237872",
        "authorName": "Skumm",
        "authorAvatar": "9e953d25a78f40f8f8c2d2b72410d71b",
        "createdAtDate": 1673281438819
      },
      {
        "content": "<pre><code class=\"hljs\">    at traverseFields (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\fields\\hooks\\afterChange\\traverseFields.ts:44:3)\n    at afterChange (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\fields\\hooks\\afterChange\\index.ts:26:3)\n    at update (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\collections\\operations\\update.ts:320:12)\n    at updateHandler (G:\\xampp\\htdocs\\toneseeker-cms-main\\node_modules\\payload\\src\\collections\\requestHandlers\\update.ts:23:17)</code></pre>",
        "authorID": "744383324629237872",
        "authorName": "Skumm",
        "authorAvatar": "9e953d25a78f40f8f8c2d2b72410d71b",
        "createdAtDate": 1673281458885
      },
      {
        "content": "hi @Skumm - if you log <code>req.user.id</code> does this also return a value?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674478099835
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Search doesn't work for large collections",
      "id": "1068093957499793418",
      "createdAt": 1674723843694
    },
    "messages": [
      {
        "content": "I have a large collection with around 100k documents. If I try to perform a search in the payload admin panel, nothing happens. The filters however seem to work perfectly fine.<br><br>Is this a performance issue because of the type of search that is performed?",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674723843694
      },
      {
        "content": "If you open your network tab, can you provide some details about the request?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674734100539
      },
      {
        "content": "Hey Jarrod,<br>well after analyzing it a bit more, turns out the search is just super slow. It takes an average of 10 seconds for a query. In addition to that, old queries aren&#x27;t cancelled so if I type in a longer search String that triggers 3-4 search requests, it takes 50 seconds.<br><br>It&#x27;s probably because of the regex search, any way to increase the speed? I&#x27;ve already set the index to true.<br><br>Also, it just seems to search the main attribute, and ignores ID and other attributes?",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674838096212
      },
      {
        "content": "I would imagine there are definitely improvements to be made here",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674838165418
      },
      {
        "content": "This feedback is awesome. Thank you for investigating it further!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674838173189
      },
      {
        "content": "We can:<br>- further investigate the sloweness<br>- provide visual feedback when querying<br>- cancel old requests",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674838287466
      },
      {
        "content": "You&#x27;re welcome 🙂 <br>Any suggestions how to sort out this performance issue asap?Search is a key thing for this project, if it takes that long I can&#x27;t use payload.<br><br>I&#x27;d be happy to build a workaround and contribute it or turn it into a plugin, I just don&#x27;t have any experience contributing to open source yet.",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674838416043
      },
      {
        "content": "I am curious, did you set the index after booting up payload on your live db?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674838460047
      },
      {
        "content": "or did you have it set in the config, before ever booting up payload on live?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674838473434
      },
      {
        "content": "Good question, I probably added it at some point",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674838495549
      },
      {
        "content": "Does that make a difference?",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674838542554
      },
      {
        "content": "I don&#x27;t think payload touches your indexes after initial creation of a field. Can you verify there is an index in the db for the field you are searching on?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674838577015
      },
      {
        "content": "(its size should be fairly large since you have 100k+ docs)",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674838618746
      },
      {
        "content": "",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674838804252
      },
      {
        "content": "That should be it right? I&#x27;m generally confused when it comes to indexes and mongodb Atlas, I&#x27;ve had multiple issues with normal indexes on Atlas in the past. And I should have mentioned I&#x27;m using atlas haha",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674838890472
      },
      {
        "content": "is name the field that is being searched on?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674838893079
      },
      {
        "content": "Yeah",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674838909209
      },
      {
        "content": "Interesting, I can likely throw together a test and compare with your findings",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674839096899
      },
      {
        "content": "Could it be the large text index that messes things up? I migrated the database with that index",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674839099895
      },
      {
        "content": "I have not used an index like that larger one you have",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674839137968
      },
      {
        "content": "Okay yeah I dropped it and it doesn&#x27;t make any difference",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674839332359
      },
      {
        "content": "Any way to implement atlas search? That would be pretty awesome",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674839372694
      },
      {
        "content": "So locally, loading up 100_000 docs, searching on an indexed field takes about 1.2s (with no latency, obviously)",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674840958262
      },
      {
        "content": "I do wonder about that other index you have",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674840997800
      },
      {
        "content": "its quite large",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674841002728
      },
      {
        "content": "Just a thought to input here... would it be worth using something like <a href=\"https://www.npmjs.com/package/node-lucene\">https://www.npmjs.com/package/node-lucene</a> in the Payload admin to power the searches there? Might be faster than querying Mongo.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674860668658
      },
      {
        "content": "That would be super dope, I always prefer independent solutions rather that relying on atlas search or sth. The package looks pretty abandoned though.<br>Edit: Maybe implementing sth like flexsearch would be an option? <a href=\"https://github.com/nextapps-de/flexsearch\">https://github.com/nextapps-de/flexsearch</a><br><br>@Jarrod I don&#x27;t have tons of experience but if I&#x27;ve learned one thing, it&#x27;s that the UX of an app is heavily determined by the quality of the search. So apart from performance issues, I think it should be discussed how to improve the search functionality in general. As of right now, it feels like it&#x27;s built for small collections in a CMS where you just want faster access. As soon as you have an app with larger collections, where you need to search through whole docs, do fuzzy matching etc. Payload isn&#x27;t quite optimal atm",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674904466431
      },
      {
        "content": "Yeah, I picked lucene as it&#x27;s a pretty widely known search indexing standard that uses a file-based index, but anything that could operate independently within Express/Payload would work for this.<br><br>If it&#x27;s an abstract implementation it could open the door to allowing plugins to override the implementation to use 3rd party search services too, like Azure cognitive Search, ElasticSearch, Algolia, etc. but I don&#x27;t think these should be dependencies to use Payload.<br><br>It could also open the door to being able to specify search endpoints for collections or even a global search endpoint on Payload&#x27;s API further down the line.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674907112750
      },
      {
        "content": "So true, a global search endpoint would be crazy!<br><br>I&#x27;ve checked the forum for some discussions around search, and the current direction seems to be using regex for searching one or multiple fields (which is indeed possible), and as soon as you have more complex requirements integrate algolia etc.<br><br>I totally get the point, however I hate to rely on third party services for search, I&#x27;d really love to have a plugin for payload",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674907375780
      },
      {
        "content": "It should be fairly simple to make a plugin that can add hooks to collections &amp; globals to index them as they are added/updated.<br><br>The trickier parts would be:<br><br>- Verifying/rebuilding the index on a schedule<br>- Adding new API end points to Payload",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674907941173
      },
      {
        "content": "Also... <a href=\"https://github.com/payloadcms/plugin-search\">https://github.com/payloadcms/plugin-search</a>",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674908026995
      },
      {
        "content": "none of this touches on the in-admin searches though",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674908051836
      },
      {
        "content": "Oh, I didn&#x27;t know about that plugin!<br><br>If there&#x27;s a &quot;payload way&quot; to tackle the search, that&#x27;s obviously even better than a third party library. I wonder if it&#x27;s the way to go though if the end goal is a search with fuzzy matching etc. Isn&#x27;t that plugin just another collection that just contains the relevant data for the search?",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674908695613
      },
      {
        "content": "Yeah, but might be a good one to look at and expand upon",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674918210000
      },
      {
        "content": "Flexsearch is super sweet and would cover a lot of use-cases, it would be awesome if there was a plugin for it!<br><br>For those of us clustering, the in-memory index is unfortunately not an option, but I&#x27;ve used Meilisearch in the past with good results (<a href=\"https://github.com/meilisearch/meilisearch\">https://github.com/meilisearch/meilisearch</a>). It&#x27;s also a very cool open-source project with a really straightforward JS/TS API client (<a href=\"https://github.com/meilisearch/meilisearch-js\">https://github.com/meilisearch/meilisearch-js</a>) and it is extremely simple to self-host and scale.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1674946759304
      },
      {
        "content": "You&#x27;re right about the in-admin searching and filtering; it would be fantastic if there were hooks to override this functionality. It would be great if it could be supported to have the search functionality return either a list of document ids or a list of complete documents, and to have a toggle for whether or not Payload needs to apply access control logic to the list or if it has already been considered.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1674947610181
      },
      {
        "content": "I love this discussion! I think this all needs to be on radar. I&#x27;ve opened a discussion on github that makes Payload&#x27;s built-in search more extensible for the UI and detailed some other ideas from this thread. Putting it on github adds visibility for enhancements that will eventually make it to our roadmap. <a href=\"https://github.com/payloadcms/payload/discussions/1974\">https://github.com/payloadcms/payload/discussions/1974</a><br>We would also be interested in partnering with anyone willing to work on this in an open-source contributing capacity or financially through with an enterprise support agreement.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675095490940
      }
    ],
    "messageCount": 36
  },
  {
    "info": {
      "name": "Only absolute urls are allowed error",
      "id": "1064412112350347334",
      "createdAt": 1673846023405
    },
    "messages": [
      {
        "content": "So I have payload working locally just fine and I&#x27;m managing keeping data in sync for some data via hooks on various operations. This works just fine locally, I&#x27;m able to update, delete, etc but when I try to do any type of operation on the production version online, Payload throws an error:<br><br>Only absolute urls are allowed<br><br>This occurs whether I try and create the new item, delete, update, etc. The other collections work; the only thing that makes this one different is that I do fetch calls on certain operations. However the 500 Error is occurring an API call to payload so I&#x27;m unsure where the problem is (again, this all works locally).<br><br>Here is an example:<br><br><code>const property = await payload.find({\n            collection: &#x27;properties&#x27;,\n            where: {\n              id: {\n                equals: args.id\n              }\n            }\n          }).then((res) =&gt; {\n            return res;\n          });\n\n// DELETE PROPERTY PAGE\n        // ---------------------------------\n      \n        args = await fetch(</code>${process.env.HOST}/deletePage<code>, {\n          method: &#x27;post&#x27;, \n          body: JSON.stringify(property.docs[0]),\n          headers: {\n            &#x27;Content-Type&#x27;: &#x27;application/json&#x27;\n          }\n        })\n        .then(async (fres) =&gt; {\n          const res = await fres.json();\n          return fres;\n        });</code><br><br>This fetch <code>deletePage</code> is managing pages on another database (not Payload Mongo DB). Any ideas as I&#x27;m completely stumped.",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1673846023405
      },
      {
        "content": "And here is the network panel showing the 500 error that the response body has the error noted above",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1673846237246
      },
      {
        "content": "Yeah, I just added a similar one to my users collection with a fetch using the <code>beforeDelete</code> hook and it works fine locally but then fails in production as well. So the utilization of these hooks with a fetch call is having some unintended consequence when in production. Any advice is appreciated",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1673846575070
      },
      {
        "content": "Hi @gregwhitworth, if you rename your env variable <code>HOST</code> to <code>PAYLOAD_PUBLIC_HOST</code> do you still get the &#x27;Only absolute URLs...&#x27; error?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673864272931
      },
      {
        "content": "@jesschow no that doesn&#x27;t fix it, all it does is cause the same error to occur locally as well as production.",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1673891078943
      },
      {
        "content": "you are not returning the json in your callback, maybe replace <code>return fres</code> with <code>return res</code>?",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673893410978
      },
      {
        "content": "@Exo @jesschow good catch however that doesn&#x27;t change anything. I added console messages at various key spots and it&#x27;s breaking at the payload.find call as it never gets to the next console log. Only thing that get&#x27;s logged out prior to failing is &quot;Trying to delete property&quot;. Here is the udpated code (note that the code formatting on here doesn&#x27;t like JS string template syntax using the apostrophe so I&#x27;ve made them double):<br><br><code>console.log(&quot;Trying to delete property&quot;);\n\n        // DELETE PROPERTY COLLECTION\n        // ---------------------------------\n        const property = await payload.find({\n            collection: &#x27;properties&#x27;,\n            where: {\n              id: {\n                equals: args.id\n              }\n            }\n          }).then((res) =&gt; {\n            return res;\n          });\n        \n        args = await fetch(``${process.env.PAYLOAD_PUBLIC_HOST}/deleteCollection``, {\n          method: &#x27;post&#x27;, \n          body: JSON.stringify(property.docs[0]),\n          headers: {\n            &#x27;Content-Type&#x27;: &#x27;application/json&#x27;\n          }\n        })\n        .then(async (fres) =&gt; {\n          const res = await fres.json();\n          console.log(``Delete Collection: ${fres}``)\n          return res;\n        });\n\n        // DELETE PROPERTY PAGE\n        // ---------------------------------\n      \n        args = await fetch(``${process.env.PAYLOAD_PUBLIC_HOST}/deletePage``, {\n          method: &#x27;post&#x27;, \n          body: JSON.stringify(property.docs[0]),\n          headers: {\n            &#x27;Content-Type&#x27;: &#x27;application/json&#x27;\n          }\n        })\n        .then(async (fres) =&gt; {\n          const res = await fres.json();\n          console.log(``Delete Page: ${fres}``)\n          return res;\n        });\n\n        console.log(&quot;property has been deleted&quot;);</code>",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1673899478414
      },
      {
        "content": "yeah, it&#x27;s definitely when doing the payload API call",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1673916402605
      },
      {
        "content": "And if I put the fetch URL back to how I had it, locally it works as expected:",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1673916503344
      },
      {
        "content": "So I&#x27;ve made some progress, when I console.log out the <code>${process.env.PAYLOAD_PUBLIC_HOST}/deletePage</code> it results in <code>undefined/deletePage</code> which is why it was failing locally. To confirm, I&#x27;ve adjusted this back to console log out the host of .env to see what the production server is saying and more than likely it&#x27;s not actually there and thus it&#x27;s not an absolute URL",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1674010634235
      },
      {
        "content": "sure enough, that&#x27;s the problem",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1674012771961
      },
      {
        "content": "",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1674012775396
      },
      {
        "content": "Where are you calling dotenv?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674012972492
      },
      {
        "content": "Possibly related to your issue? <a href=\"https://github.com/payloadcms/payload/issues/1654\">https://github.com/payloadcms/payload/issues/1654</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674013016207
      },
      {
        "content": "apologies, what do you mean by &quot;where&quot;? I&#x27;m calling it in the fetch API above. I noticed that the HOST in .env isn&#x27;t defined on my Azure webapp instance. However I&#x27;d like to utilize something a bit more stable than a hard-coded URL",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1674013152931
      },
      {
        "content": "after reading that issue, I&#x27;m calling it from a collection",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1674013304644
      },
      {
        "content": "ok, got it working",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1674013398758
      },
      {
        "content": "I had to add in the host to my Azure instance and it&#x27;s working as expected",
        "authorID": "612318753635565792",
        "authorName": "gregwhitworth",
        "authorAvatar": "15aa085742e54e399474c02052ba5e12",
        "createdAtDate": 1674013417788
      },
      {
        "content": "O nice!!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674013599024
      }
    ],
    "messageCount": 18
  },
  {
    "info": {
      "name": "Replacing an uploaded image's buffer in a beforeValidate/Change hook",
      "id": "1070461370501447680",
      "createdAt": 1675288278938
    },
    "messages": [
      {
        "content": "Hi!<br><br>I have a Products collection with an image upload field related to a Media upload collection as suggested in the docs. I&#x27;m trying to generate and encode a QR code of the Product&#x27;s data into the uploaded image before it is uploaded. I&#x27;ve used both beforeValidate and beforeChange collection hooks to replace the buffer provided in req.files.file.data but the uploaded image is still the original image that the user selected. In the following code I generate a QR code using the new Product&#x27;s data, and use that QR&#x27;s buffer and the buffer of the image the user wants to upload to add that QR into the image, and then return the buffer that is the final image result. I can confirm my QR functions are working properly with those buffer inputs.<br><br><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">CollectionBeforeValidateHook</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;payload/types&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { addQRToImg, encodeQR } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../util&quot;</span>;\n<span class=\"hljs-keyword\">import</span> jsonpack <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;jsonpack&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">encodeImageWithQR</span>: <span class=\"hljs-title class_\">CollectionBeforeValidateHook</span> = <span class=\"hljs-keyword\">async</span> ({\n    data,\n    req,\n    operation,\n    originalDoc,\n}) =&gt; {\n    <span class=\"hljs-keyword\">const</span> uploadedImgBuffer = req.<span class=\"hljs-property\">files</span>.<span class=\"hljs-property\">file</span>.<span class=\"hljs-property\">data</span>;\n\n    <span class=\"hljs-keyword\">const</span> productDataBuffer = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">encodeQR</span>(jsonpack.<span class=\"hljs-title function_\">pack</span>(data));\n    <span class=\"hljs-keyword\">const</span> updatedImgBuffer = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">addQRToImg</span>(productDataBuffer, uploadedImgBuffer);\n\n    req.<span class=\"hljs-property\">files</span>.<span class=\"hljs-property\">file</span>.<span class=\"hljs-property\">data</span> = updatedImgBuffer;\n    \n    <span class=\"hljs-keyword\">return</span> data;\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> encodeImageWithQR;</code></pre><br><br>Any ideas? Am I using the wrong hook? Thank you!",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675288278938
      },
      {
        "content": "Also another relevant question; I was hoping to upload the image only when the entire Product is created rather than the user picking an image and uploading immediately regardless of the Product being potentially discarded later without saving. That also means I need to move this hook to my Products collection so that I can access the Product that is being created, because I need its data to encode it in the QR code. 😄 I would really appreciate any input here as well.",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675288581009
      },
      {
        "content": "I moved my Upload object and that hook to my Products collection, now I have access to the product that is being created, but the issue persists. I tried intercepting req.files in a custom Express.js route to catch any request that has a valid req.files object so that maybe I could modify the upload buffer there but that didn&#x27;t work either... Am I going to have to create my own upload component and handle how the image is processed there?",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675330921695
      },
      {
        "content": "I think I understand the problem you&#x27;re facing. It seems like you&#x27;re hitting a limitation in the way we handle file uploads, then call hooks in the Payload operations for create and update.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675439450172
      },
      {
        "content": "File uploads are taken from the <code>req</code>, hooks are then run as you&#x27;ve used them, but the value for the file upload doesn&#x27;t get updated in the hooks unfortunately.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675439517287
      },
      {
        "content": "3 options:<br>1) open an issue on github so we (or somebody) can make a PR to make this possible<br>2) handle it in another operation afterUpdate using <code>req.payload.update()</code> and use <code>overwriteExistingFiles: true</code>. This is slightly less efficient as you&#x27;re writing to the database and persisting the images twice.<br>3) (I would have to investigate this more) Can the sharp options do this for you in the image processing steps?",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675439795379
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "get a document by slug from the REST API in NextJS?",
      "id": "1064838635570081823",
      "createdAt": 1673947714465
    },
    "messages": [
      {
        "content": "Is there a way to get a document by any other field (slug/title) from the REST API? I know how to do this in graphql, but i&#x27;m trying to do it with the rest api, do I need to create a custom endpoint?",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1673947714465
      },
      {
        "content": "Hi @akacronos, you can definitely get a document by slug/title using the REST API. You just need to add a query to the end of your api route:<br><code>?where[slug][equals]=home</code> or <code>?where[title][equals]=home</code>  (changing &#x27;home&#x27; to whatever slug/title you&#x27;re trying to get). Does that answer your question?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673949170729
      },
      {
        "content": "maybe I should specify better, I don&#x27;t know how to do it from Next Js, when i try to fetch using anything beside ID, I get an error. I think that syntax is for Payload Admin, isn&#x27;t?",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1673949773741
      },
      {
        "content": "get a document by slug from the REST API in NextJS?",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1673949798024
      },
      {
        "content": "I think we are talking about the same thing - add the query like this to your fetch request",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673952052729
      },
      {
        "content": "Yes we are! Thanks, this should probably works for me! thanks a lot!",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1673982158949
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Image resizing not preserving aspect ratio",
      "id": "1073823694817857656",
      "createdAt": 1676089919524
    },
    "messages": [
      {
        "content": "Hello fellas, this may be more of a sharp question rather than a payload one, but it seems that when resizing an image while trying to preserve aspect ratio by omitting either width or height that this omission isn&#x27;t respected and instead i end up with a cropped image<br><br>for instance, i have an image of 6608x2500 dimensions that i&#x27;m trying to resize with a <pre><code class=\"hljs\">height: 50, width: null</code></pre> option, which should lead to an image of 132x50 dimensions, but instead i&#x27;m getting 400x50.<br><br>would anyone happen to know how to resolve this?",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676089919524
      },
      {
        "content": "Does this behave any differently is width is <code>undefined</code>? I recall having either height or width as <code>undefined</code> would maintain the ratio. Curious if this will be different than <code>null</code>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676241805312
      },
      {
        "content": "unfortunately it doesn&#x27;t  😢",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676269250647
      },
      {
        "content": "Can you log an issue?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676308081197
      },
      {
        "content": "sure thing, i&#x27;ve opened one now",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676353946282
      },
      {
        "content": "Thanks, we&#x27;ll get it looked at 👍",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676384689318
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "seed a json array",
      "id": "1065299873244655636",
      "createdAt": 1674057682096
    },
    "messages": [
      {
        "content": "I have a json array <br><br><pre><code class=\"hljs\">[\n  {\n   &quot;id&quot; : 1,\n   &quot;name&quot; : &quot;john&quot;\n  },\n  {\n   &quot;id&quot; : 2,\n   &quot;name&quot; : &quot;bob&quot;\n  },\n  ....\n]</code></pre><br><br>I want to seed all the data to a collection, <br>I loaded the json file<br><br><pre><code class=\"hljs\">const data = require(&#x27;../../data/data.json&#x27;)</code></pre><br><br>but not sure how to load all the individual data, any ideas?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674057682096
      },
      {
        "content": "@generator101 Do you mean mapping over your provided array to a payload collection config?",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674057843765
      },
      {
        "content": "yes",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674057868607
      },
      {
        "content": "It may be something like this",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674058043257
      },
      {
        "content": "Wait",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674058053543
      },
      {
        "content": "you mean import data into a collection already made?",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674058062696
      },
      {
        "content": "Or create a collection from a predefined config?",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674058071863
      },
      {
        "content": "so I am using this example",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674058091795
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/next-auth-cms/blob/main/src/collections/Users/seed.ts\">https://github.com/payloadcms/next-auth-cms/blob/main/src/collections/Users/seed.ts</a>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674058092539
      },
      {
        "content": "it is seeding 1 user, I want to seed multiple users",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674058112518
      },
      {
        "content": "that are in a json format in a file data.json",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674058125820
      },
      {
        "content": "the collection I already made",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674058139963
      },
      {
        "content": "with proper fields",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674058143835
      },
      {
        "content": "Oh okay",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674058153116
      },
      {
        "content": "So you could do a few things, but maybe you want to loop over your provided users data json",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674058171829
      },
      {
        "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-variable constant_\">USERS_JSON</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">user</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">create</span>({\n      <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;users&#x27;</span>,\n      <span class=\"hljs-attr\">data</span>: {\n        ...user,\n      },\n    });\n})</code></pre>",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674058207987
      },
      {
        "content": "Assuming your data in users_json is compatible with the users collection model",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674058224100
      },
      {
        "content": "Note: To hook into when all users are created, you may want to create an array of those .create methods and then Promise.all it",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674058317901
      },
      {
        "content": "@jmikrut may have a better way. Maybe a PR for createMany would be cool?",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1674058336183
      },
      {
        "content": "Thank you, this worked, but createMany would be awesome",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674058815337
      },
      {
        "content": "we are working on <code>createMany</code> 😉",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674058929949
      }
    ],
    "messageCount": 20
  },
  {
    "info": {
      "name": "Can we have a \"slug\" field?",
      "id": "1069324183928049814",
      "createdAt": 1675017152531
    },
    "messages": [
      {
        "content": "Most CMS out there have some sort of concept of a &quot;slug&quot; for use in URLs where it&#x27;s a URL friendly string (text field) that&#x27;s auto-populated from the document title (replacing nonalphanumeric characters with a hyphen and lowercasing it) by default but can be changed by the editor as long as the resulting slug is unique, either within the whole system or at least within the content type (collection).<br><br>Is it possible to create such a field natively in Payload or would this require a custom field?",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675017152531
      },
      {
        "content": "I ended up using the slug field they used for their own website, here: <a href=\"https://github.com/payloadcms/website-cms/blob/main/src/fields/slug.ts\">https://github.com/payloadcms/website-cms/blob/main/src/fields/slug.ts</a>",
        "authorID": "147318438027722752",
        "authorName": "Merl",
        "authorAvatar": "a_89a01e93878e312b999f417b5fdff7fd",
        "createdAtDate": 1675017702235
      },
      {
        "content": "Yes you can use the beforeValidate hook @Kyr",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675021058065
      },
      {
        "content": "Two further questions...<br><br>1. Is there a way to make the field value be &quot;unique&quot; and validated as such<br>2. Is there a way to create a new API endpoint to easily retrieve single documents by their slug instead of ID?",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675075554177
      },
      {
        "content": "You can set <code>unique: true</code> on the field to ensure it&#x27;s unique among other documents in the same collection. Then to query by slug, do something like this: <code>where: { slug: { equals: &#x27;test&#x27; } }</code>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675082104151
      },
      {
        "content": "thanks.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675162302904
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Can you set an max on hasMany?",
      "id": "1067069439721361458",
      "createdAt": 1674479579621
    },
    "messages": [
      {
        "content": "I tried to put an maximum on hasMany, but it did not work with maxRows or maxDepth.<br>Is there any way to fix it? or do i just set an description with only the first 3 will be seen",
        "authorID": "352799514442072065",
        "authorName": "Chrinsieboyyy",
        "authorAvatar": "e3003e2509bcb0deaea9d233523edbe0",
        "createdAtDate": 1674479579621
      },
      {
        "content": "@Chrinsieboyyy Are you using Typescript? maxRows/minRows is not currently supported on relationship fields - but sounds like it might be useful as a feature. You should start up a github discussion related to this and we will see where we can slate it into our roadmap.<br><br>As for wha you can do <em>now</em>, I think using a description paired with a <code>validate</code> function would get you pretty far. This way when the user submits, you can let them know before storing the data in the db.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674480748493
      },
      {
        "content": "👍 thx",
        "authorID": "352799514442072065",
        "authorName": "Chrinsieboyyy",
        "authorAvatar": "e3003e2509bcb0deaea9d233523edbe0",
        "createdAtDate": 1674480884106
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Help with richText",
      "id": "1068394736425119766",
      "createdAt": 1674795554978
    },
    "messages": [
      {
        "content": "I really need help with the serialize component/example. 🥲 <br><br>This is my code:<br><pre><code class=\"hljs\">// richTextSerializer component\n\nimport { Serialize } from &#x27;./serialize&#x27;;\n\nexport default function RichTextSerializer({ content }) {\n  if (!content) {\n    return null;\n  }\n\n  return &lt;Serialize content={content} /&gt;;\n}</code></pre>",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1674795554978
      },
      {
        "content": "<pre><code class=\"hljs\">// serialize.js\n\nimport React, { Fragment } from &#x27;react&#x27;;\nimport escapeHtml from &#x27;escape-html&#x27;;\nimport { Text } from &#x27;slate&#x27;;\n\nexport default function Serialize({ content }) {\n  return (\n    &lt;&gt;\n      {content?.map((node, i) =&gt; {\n        if (Text.isText(node)) {\n          let text = (\n            &lt;span dangerouslySetInnerHTML={{ __html: escapeHTML(node.text) }} /&gt;\n          );\n\n          if (node.bold) {\n            text = &lt;strong key={i}&gt;{text}&lt;/strong&gt;;\n          }\n\n          return &lt;Fragment key={i}&gt;{text}&lt;/Fragment&gt;;\n        }\n\n        if (!node) {\n          return null;\n        }\n\n        switch (node.type) {\n          case &#x27;ul&#x27;:\n            return (\n              &lt;ul key={i}&gt;\n                &lt;Serialize content={node.children} /&gt;\n              &lt;/ul&gt;\n            );\n          case &#x27;ol&#x27;:\n            return (\n              &lt;ol key={i}&gt;\n                &lt;Serialize content={node.children} /&gt;\n              &lt;/ol&gt;\n            );\n          case &#x27;li&#x27;:\n            return (\n              &lt;li key={i}&gt;\n                &lt;Serialize content={node.children} /&gt;\n              &lt;/li&gt;\n            );\n\n          default:\n            return (\n              &lt;p key={i}&gt;\n                &lt;Serialize content={node.children} /&gt;\n              &lt;/p&gt;\n            );\n        }\n      })}\n    &lt;/&gt;\n  );\n}</code></pre>",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1674795605195
      },
      {
        "content": "And in my page I use it like this:<br><code>&lt;RichTextSerializer content={activity?.intro} /&gt;</code>",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1674795635962
      },
      {
        "content": "I can&#x27;t get it to work, any suggestions?",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1674795741010
      },
      {
        "content": "It&#x27;s probably a small bug, but I don&#x27;t know where.<br>(I&#x27;m a product designer with a little of JS knowledge)",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1674795870012
      },
      {
        "content": "well.... I think I fix it after trying and redoing... <br><br>I change this: <br><pre><code class=\"hljs\">let text = (\n  &lt;span dangerouslySetInnerHTML={{ __html: escapeHTML(node.text) }} /&gt;\n);</code></pre><br><br>to this:<br><pre><code class=\"hljs\">let text = escapeHTML(node.text);</code></pre>",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1674797569120
      },
      {
        "content": "Weird.... I am curious what your data looked like to make that not work? I would have expected the original to work.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674836418210
      },
      {
        "content": "At the end, it was a type error, thanks!",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1675142027870
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Best practice for promoting pages to different environments?",
      "id": "1065692755994628098",
      "createdAt": 1674151352643
    },
    "messages": [
      {
        "content": "I’m working on defining our versioning / release promotion system for Payload CMS, and was wondering if there was a right way to go about this. For reference, in Contentful (🤮) you can have dif env versioning for the same page: dev, stg, or prod.<br><br>I see the versioning system, but don’t see a native approach for envs.<br><br>I’ve considered creating a duplicate of the page for each env, but then versioning branches off &amp; the collection will clutter. Now I’m thinking of having separate collections (which would involve scripting), or introducing a meta field for env &amp; adding in an Admin drop down to cycle through the latest versions for each env. <br><br>Any thoughts here?",
        "authorID": "762024707242983476",
        "authorName": "SenseiCain",
        "authorAvatar": "9614a98f6e8be1917387b983ce897ad1",
        "createdAtDate": 1674151352643
      },
      {
        "content": "hey @SenseiCain this is a great question. I&#x27;ve used Contentful lots before as well and I know exactly what you&#x27;re talking about. We just rely on drafts but there&#x27;s probably a really elegant way to do this with a few fields. @zubricks we should write up a tutorial for this",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674179228602
      },
      {
        "content": "Hi @jmikrut thanks for the response. That makes sense. So ideally we’d have lower envs query for the draft version of the document",
        "authorID": "762024707242983476",
        "authorName": "SenseiCain",
        "authorAvatar": "9614a98f6e8be1917387b983ce897ad1",
        "createdAtDate": 1674230514394
      },
      {
        "content": "I’ve been testing out the draft system, and everything seems to be working fine so far.<br><br>Wanted to offer a few points of feedback on versioning. 1 - it’d be really nice to have a numeric versioning system (wouldn’t need to be full on semver) to make it easier to talk through. Date stamps &amp; uuid’s aren’t very human friendly 🤖. 2 - you should be able to view the full document at specific versions in Admin. Only showing a change log might not be the best option for content ppl 👍🏻",
        "authorID": "762024707242983476",
        "authorName": "SenseiCain",
        "authorAvatar": "9614a98f6e8be1917387b983ce897ad1",
        "createdAtDate": 1674242961434
      },
      {
        "content": "+1 for this feature request",
        "authorID": "229336335222046726",
        "authorName": "viti",
        "authorAvatar": "24c0d66248d39f56348f5d56f9a35af0",
        "createdAtDate": 1674248525717
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "How can I use globalConfig slugs to use in relationTo's?",
      "id": "1060837770458832897",
      "createdAt": 1672993833890
    },
    "messages": [
      {
        "content": "Hello there. I&#x27;m currently working on a project with page types. Each page type can only appear once or multiple times on my site. For the page types that appear only once I used globalConfig and for the others collectionConfig. However relationTo doesn&#x27;t accept global slugs, so I can&#x27;t make links that go to my homepage for example (which is a global). Is there any way to allow global slugs in relationTo?<br><br>Thanks in advance!",
        "authorID": "934107997687402547",
        "authorName": "NH02",
        "authorAvatar": "bb09656c42c6ca6518c538c7c38b9393",
        "createdAtDate": 1672993833890
      },
      {
        "content": "@NH02 You should have a single collection called <code>pages</code> for all your pages, including the home page. Then use <code>relationTo: &#x27;pages&#x27;</code> in your link field anytime you need to link to a page.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673488081459
      },
      {
        "content": "Alright, thank you for the answer!",
        "authorID": "934107997687402547",
        "authorName": "NH02",
        "authorAvatar": "bb09656c42c6ca6518c538c7c38b9393",
        "createdAtDate": 1674115020528
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Admin panel ignores 'labels' in Blocks",
      "id": "1067781610767929435",
      "createdAt": 1674649374430
    },
    "messages": [
      {
        "content": "Hi all!<br>I have block with &#x27;labels&#x27; object, but Admin panel shows slug instead of labels. Possible bug?",
        "authorID": "270924561774673920",
        "authorName": "yagee",
        "authorAvatar": "8efdebe496357197f5f54c0085edc10f",
        "createdAtDate": 1674649374430
      },
      {
        "content": "Correction: labels appears in header of my array item, but not on button to add new block to array.<br>Still confused and I think it would be great if button to add new array item shows <code>labels.singular</code> instead of capitalized <code>slug</code>.",
        "authorID": "270924561774673920",
        "authorName": "yagee",
        "authorAvatar": "8efdebe496357197f5f54c0085edc10f",
        "createdAtDate": 1674649760133
      },
      {
        "content": "What version of payload are you on @yagee?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674652629509
      },
      {
        "content": "1.5.9",
        "authorID": "270924561774673920",
        "authorName": "yagee",
        "authorAvatar": "8efdebe496357197f5f54c0085edc10f",
        "createdAtDate": 1674654525648
      },
      {
        "content": "oic",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674654922965
      },
      {
        "content": "you need to put the labels on the <code>blocks</code> field",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674654977889
      },
      {
        "content": "So 1 level up from where you have them defined currently. Since blocks are of multiple types, you would say &quot;Add List or Item&quot; and the actual <em>block</em> fields would be <code>list</code> <em>or</em> <code>item</code>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674655090275
      },
      {
        "content": "@Jarrod <br><br>Thanks for response!<br>I think my explanation not clean (not native language), sorry for that.<br><br>Let me try again: there is my blocks editor, I have button with text &#x27;Добавить Content&#x27;, (slug name == &#x27;content&#x27;), but I want to change word &quot;Content&quot; to something else.<br>Is any way to do it?",
        "authorID": "270924561774673920",
        "authorName": "yagee",
        "authorAvatar": "8efdebe496357197f5f54c0085edc10f",
        "createdAtDate": 1674656088729
      },
      {
        "content": "Hey no need to apologize for english not being your native language 😄",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674656245120
      },
      {
        "content": "BUT I see what you are saying",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674656251922
      },
      {
        "content": "Same problem with arrays. I have <code>label: &#x27;Элемент списка&#x27;</code>, but in Admin panel I see <code>Добавить Li</code> instead of &#x27;Добавить Элемент списка&#x27;",
        "authorID": "270924561774673920",
        "authorName": "yagee",
        "authorAvatar": "8efdebe496357197f5f54c0085edc10f",
        "createdAtDate": 1674656296684
      },
      {
        "content": "If you use <code>labels</code> and specify singular/plural, this should work for you. I am not sure if just <code>label</code> should work too - but possibly... I think we use slug to create singular and plural labels if not specified",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674656300610
      },
      {
        "content": "I&#x27;v replaced <code>label: string</code> to <code>labels: {plural: string, singular: string}</code> and got what I need! Thank you for pointing me to right direction!",
        "authorID": "270924561774673920",
        "authorName": "yagee",
        "authorAvatar": "8efdebe496357197f5f54c0085edc10f",
        "createdAtDate": 1674656467974
      },
      {
        "content": "I think using labels is what I would recommend, since the package we use to create singular/plural words likely only supports <code>en</code> 🙁",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674656473740
      },
      {
        "content": "We can use both <code>label</code> and <code>labels</code> properties, so it works fine, just my misunderstanding documentation",
        "authorID": "270924561774673920",
        "authorName": "yagee",
        "authorAvatar": "8efdebe496357197f5f54c0085edc10f",
        "createdAtDate": 1674656691624
      }
    ],
    "messageCount": 14
  },
  {
    "info": {
      "name": "passing information in admin panel",
      "id": "1064868303056679002",
      "createdAt": 1673954787745
    },
    "messages": [
      {
        "content": "Hi,<br>i have following situation:<br>I have a parent child relationship of two collections. A Project and a Customer. Every Project has a Customer.  This is modeled as a relationship field in Project. It should be possible to create a new Project from the Customer list view which fills in the Customer relationship field automatically. How would this be possible? Somehow I would need to pass the Customer id to the edit Component of the Project collection.<br>What would be best practice for that?",
        "authorID": "306429157179392002",
        "authorName": "60pfennig",
        "authorAvatar": "91e7dc342f3cfef23552bf5a68018bbe",
        "createdAtDate": 1673954787745
      },
      {
        "content": "Hey @60pfennig , this is possible, but it would take a bit of customization with a UI field and some custom components.<br><br>Here is how I would go about this:",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674247170506
      },
      {
        "content": "- Create a <code>type: &#x27;ui&#x27;</code> field on your customers collection<br>- This collection would then have a custom Cell and Field component<br><br>Within these components, you would be able to do a fetch against the /projects endpoint to create a new project (as draft) with the right customer id, which can be fetched from the url params.<br><br>Maybe @dribbens has some other ideas.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674247573956
      },
      {
        "content": "Here is a custom field component example here: <br><br><a href=\"https://github.com/payloadcms/public-demo/blob/master/src/collections/Categories.ts#L36\">https://github.com/payloadcms/public-demo/blob/master/src/collections/Categories.ts#L36</a><br><a href=\"https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx#L14\">https://github.com/payloadcms/public-demo/blob/master/src/components/CategorySummary/index.tsx#L14</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674247658174
      },
      {
        "content": "I&#x27;ve done something like this before using a custom component that links to the admin UI for creating a relationship. For example:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">CreateProjectLink</span>: <span class=\"hljs-title class_\">React</span>.<span class=\"hljs-property\">FC</span> = <span class=\"hljs-function\">(<span class=\"hljs-params\">{rowData}</span>) =&gt;</span> {\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">{</span>`/<span class=\"hljs-attr\">admin</span>/<span class=\"hljs-attr\">collections</span>/<span class=\"hljs-attr\">projects</span>/<span class=\"hljs-attr\">create</span>?<span class=\"hljs-attr\">customer</span>=<span class=\"hljs-string\">${rowData.id}</span>`}&gt;</span>\n      Create\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span></span>\n  );\n};</code></pre><br>This would get used in the custom UI field:<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">CreateProject</span>: <span class=\"hljs-title class_\">Field</span> = {\n  <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;ui&#x27;</span>,\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;createProject&#x27;</span>,\n  <span class=\"hljs-attr\">admin</span>: {\n    <span class=\"hljs-attr\">components</span>: {\n      <span class=\"hljs-title class_\">Field</span>: <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-literal\">null</span>,\n      <span class=\"hljs-title class_\">Cell</span>: <span class=\"hljs-title class_\">CreateProjectLink</span>,\n    },\n  },\n};</code></pre><br>Then you need to have your relationship field pick up the value from the URL:<br><pre><code class=\"hljs ts\">{\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;customer&#x27;</span>,\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;relationship&#x27;</span>,\n          <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-string\">&#x27;customers&#x27;</span>,\n          <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n          <span class=\"hljs-attr\">defaultValue</span>: (): <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-function\"><span class=\"hljs-params\">null</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-variable language_\">window</span> !== <span class=\"hljs-string\">&#x27;undefined&#x27;</span>) {\n              <span class=\"hljs-keyword\">return</span> queryString.<span class=\"hljs-title function_\">parse</span>(<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">location</span>.<span class=\"hljs-property\">search</span>).<span class=\"hljs-property\">customer</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-built_in\">string</span>;\n            }\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;\n          },\n        },</code></pre><br>I hope this helps!",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1674248178169
      },
      {
        "content": "perfect thank you very much!",
        "authorID": "306429157179392002",
        "authorName": "60pfennig",
        "authorAvatar": "91e7dc342f3cfef23552bf5a68018bbe",
        "createdAtDate": 1675105195260
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Do not trigger afterRead hook after payload.update",
      "id": "1070692529797877791",
      "createdAt": 1675343391609
    },
    "messages": [
      {
        "content": "How can I make sure the afterRead hook is not triggered after a payload.update? Reason this happens is because I run a payload.update inside of my afterRead hook, which then seems to trigger itself in an infinite loop.",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675343391609
      },
      {
        "content": "hey @Alessio 🍣 - you could check the operation property within your afterRead hook, will that work for you?<br><br><pre><code class=\"hljs\">hooks: {\n  afterRead: [({ data, operation }) =&gt; {\n    if (operation === &#x27;update&#x27;) {\n      return null;\n    }\n    // do something here\n    return data;\n  }],\n}</code></pre>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675360562464
      },
      {
        "content": "@Alessio 🍣 you could probably attach a param to the req, and then check for that param inside your hooks",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675360891387
      },
      {
        "content": "O nice do that ^",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675361186500
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Hide collection from admin panel sidebar but not not from relationship field?",
      "id": "1068706036883669022",
      "createdAt": 1674869774791
    },
    "messages": [
      {
        "content": "I want a collection to be editable through a relationship field of another collection but it shouldn&#x27;t clutter up the sidebar. Is there a way?",
        "authorID": "1024331309486719056",
        "authorName": "linobino1",
        "authorAvatar": null,
        "createdAtDate": 1674869774791
      },
      {
        "content": "I’m not sure what you mean?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674870244718
      },
      {
        "content": "Sorry, I&#x27;ll provide more detail on my use case:<br><br>I have a collection <code>Movies</code> with relationship fields where I can select things like language, director, aspect ratio, etc.<br><br>I have a role <code>moderator</code> that allows for editing the movies. To keep the admin panel minimalistic, it would be nice if the collections  language, director, aspect ratio, etc. would be hidden to the moderator. When editing a movie, he should still be allowed to add new items to those collections via the movies relationship fields.",
        "authorID": "1024331309486719056",
        "authorName": "linobino1",
        "authorAvatar": null,
        "createdAtDate": 1674902133942
      },
      {
        "content": "Hi @linobino1 - check out the answer to this similar thread: <a href=\"https://discord.com/channels/967097582721572934/1064531848220381295/1064531848220381295\">https://discord.com/channels/967097582721572934/1064531848220381295/1064531848220381295</a><br><br>Also, we will be adding an <code>admin.hidden</code> feature or similar to support hiding collections without needing to define access control in our roadmap-2: <a href=\"https://github.com/payloadcms/payload/discussions/1462\">https://github.com/payloadcms/payload/discussions/1462</a>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675160842841
      },
      {
        "content": "cool, thank you! The proposed solution is custom css, targeting the menu items by their collection slug.",
        "authorID": "1024331309486719056",
        "authorName": "linobino1",
        "authorAvatar": null,
        "createdAtDate": 1675268799127
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "How to change the nav bar?",
      "id": "1070433148107751556",
      "createdAt": 1675281550195
    },
    "messages": [
      {
        "content": "Hi everyone, I&#x27;m trying to build a Learning Management System and I have a collection of courses and lessons which are related. I was wondering if there would be any way to show a nav like the one on the image. The goal would be to show the lessons nested in each course. Can anyone point me in the right direction to do that?<br>Thanks a lot!",
        "authorID": "978594935899062282",
        "authorName": "Martí Arnau - React",
        "authorAvatar": null,
        "createdAtDate": 1675281550195
      },
      {
        "content": "Grouping of collection is supported, but only one level deep for now.<br><br><a href=\"https://payloadcms.com/docs/configuration/collections#admin-options\">https://payloadcms.com/docs/configuration/collections#admin-options</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675285494946
      },
      {
        "content": "Thanks a lot, Elliot! I&#x27;ll try that",
        "authorID": "978594935899062282",
        "authorName": "Martí Arnau - React",
        "authorAvatar": null,
        "createdAtDate": 1675288153467
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "what would be the cheapest way to deploy a Payload CMS?",
      "id": "1066710456535883886",
      "createdAt": 1674393991360
    },
    "messages": [
      {
        "content": "I have builded a payload cms app for a art gallery, with a frontend on cloudfare. Where do you recommend deploying it, so the cost are very low? I have though of cloud functions as well...",
        "authorID": "467149273386057738",
        "authorName": "nikameush",
        "authorAvatar": "87f2ed750262dfb626eaab0995bbb9c6",
        "createdAtDate": 1674393991360
      },
      {
        "content": "Assuming not an insane throughput, deploying on a VM with Digital Ocean or Linode is likely the cheapest - $5/mo",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674396367921
      },
      {
        "content": "Deploy on aws free tier for 1 year, or oracle cloud free plan",
        "authorID": "905338600823070770",
        "authorName": "devs.kad",
        "authorAvatar": null,
        "createdAtDate": 1674396901294
      },
      {
        "content": "I am hosting payload on railway with mongoDB service. Estimated cost 3-3,5$/mo. No hassle setting up droplet, just push code and deploy!",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1674415564836
      },
      {
        "content": "",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1674415641079
      },
      {
        "content": "Even less atm",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1674415643802
      },
      {
        "content": "Cost ist calculated on RAM and CPU usage",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1674415677428
      },
      {
        "content": "Payload acts as CMS for SSG sveltekit site so not much throughput tho",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1674415756964
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Populate relationship field on click",
      "id": "1064065679952723991",
      "createdAt": 1673763427485
    },
    "messages": [
      {
        "content": "Hello!<br><br>I have a relationship field with countries. I need to implement some logic to it. For example, click on a button and select all countries from the EU.<br><br>What is the best way to do it? <br><br>I see that there is a UI field where I can create custom react components, but I would like just to add this button with logic to native relationship component.<br><br>Thanks in advance!",
        "authorID": "752838213781028884",
        "authorName": "Invest_it",
        "authorAvatar": "2ef618f2bc6b4024c6eecc6f32519ef3",
        "createdAtDate": 1673763427485
      },
      {
        "content": "Hey @Invest_it ! You could implement this with a UI field if you&#x27;d like however a better alternative could be the following - using 3 fields:<br>- Add a radio button to determine how to populate the field <code>[&quot;byGroup&quot;, &quot;bySelection&quot;]</code><br>- When <code>byGroup</code> is selected - conditionally render a select with groups. Then you&#x27;d need to wire up a <code>beforeChange</code> hook to fetch and fill the relationship field with the ids of the ones in that group.<br>- When an individual is selected: show the relationship field.<br><br>What do you think?",
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1674679815558
      },
      {
        "content": "Great ideas! How do you create a filed hook that is reactively triggered based on the selection of another field tho? I can&#x27;t seem get the field hooks to trigger when the same field is edited not to talk about when another field is updated.",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676348207339
      },
      {
        "content": "@KasparTr you would have to use a custom component and update it based on the value of another field. We have some docs that go into detail describing our react hooks so you can tie into the state of the form and update the state of fields. Check em out here and let me know if you run into anything!<br><br><a href=\"https://payloadcms.com/docs/admin/hooks\">https://payloadcms.com/docs/admin/hooks</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676478190618
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Import posts from Wordpress",
      "id": "1068171728028700802",
      "createdAt": 1674742385633
    },
    "messages": [
      {
        "content": "Which is the best way to import post from Wordpress?<br>Thank you!<br>Cheers",
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1674742385633
      },
      {
        "content": "Currently, we don&#x27;t have a way to do this that doesn&#x27;t involve scripting with the Local API. However, I think this is something that we may look into in the future.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674858204094
      },
      {
        "content": "Ok ok thank you",
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1675071853532
      },
      {
        "content": "@denolfe do you have an example of how to do that",
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1675077345565
      },
      {
        "content": "Sure, you would do something like this:<br><br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\n\nrequire(&quot;dotenv&quot;).config();\n\nconst { PAYLOAD_SECRET_KEY, MONGO_URL } = process.env;\n\n// This function ensures that there is at least one corresponding version for any document\n// within each of your draft-enabled collections.\n\nconst migratePosts = async () =&gt; {\n  // Initialize Payload\n  // IMPORTANT: make sure your ENV variables are filled properly here\n  // as the below variable names are just for reference.\n  await payload.init({\n    secret: PAYLOAD_SECRET_KEY,\n    mongoURL: MONGO_URL,\n    local: true,\n  });\n\n  // Read data from WordPress, you&#x27;ll need to figure this part out\n  const wpPosts = await getPostsFromWordPress();\n\n  for (const wpPost of wpPosts) {\n    await payload.create({\n      collection: &quot;posts&quot;,\n      // data to be saved\n      data: {\n        title: wpPost.title,\n        description: wpPost.description,\n      },\n  });\n};\n\nmigratePosts();</code></pre><br><br>Local API docs here: <a href=\"https://payloadcms.com/docs/local-api/overview#local-api\">https://payloadcms.com/docs/local-api/overview#local-api</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675106252140
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Alternative auth service",
      "id": "1064566040350167150",
      "createdAt": 1673882722700
    },
    "messages": [
      {
        "content": "Is there any documentation available about using services like Firebase Auth, AWS Cognito as the authentication for Payload?  I would expect to have to use claims in the tokens to know what groups the user is part of.<br><br>I would like to augment a service I have with payload but auth is done in another service.<br>Thanks!",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673882722700
      },
      {
        "content": "I am using Auth0 as provider and it works really well. I have no persistent <code>user</code> collection but only an auth enabled <code>session</code> collection. Replaced the login page with auth0 login, then use the callback to create a session, replaced the logout with auth0 too and when this callback triggers I delete the session. Was pretty straight forward.",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673886342256
      },
      {
        "content": "Are you able to embed the roles into the token claims or do you need a Payload user collection that defines the roles?",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673888613784
      },
      {
        "content": "mhmmm honestly I did not try an embedding, but if you would I am not sure how you could access the admin dashboard, it needs a collection to log in to",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673888897908
      },
      {
        "content": "oh interseting.  did you do create in dashboard and it creates a user in auth0 too or do you have to create on both?",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673889385475
      },
      {
        "content": "I&#x27;m just trying to scope how I might do this with firebase.",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673889400118
      },
      {
        "content": "One option would be to do a trigger on create in firebase that makes the user in the dashboard (and reverse for delete)",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673889435979
      },
      {
        "content": "I did it the other way around 🙂 you log into firebase, then come to payload dashboard with a valid cookie. Upon entering the url I check the cookie against firebase API to verify it, if it was verified I create a session for the user which is then used to browse and edit in the admin dashboard",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673889478917
      },
      {
        "content": "ah interesting.",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673889519898
      },
      {
        "content": "once you logout from the admin dashboard, I delete the session document",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673889522591
      },
      {
        "content": "I hope it makes sense, not sure if I explain it too well here",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673889532346
      },
      {
        "content": "do you use the email address in the token to match with a user in payload?",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673889541583
      },
      {
        "content": "I use the email to create the session (it is basically my username for payload) this way I can make sure to not create multiple sessions for the same firebase/auth0 user",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673889584461
      },
      {
        "content": "As this request comes up quite a few times, I might try to develop a plugin for that, once I finally finish my current plugin haha",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673889627128
      },
      {
        "content": "this is very useful!  are you the author of the auto0 plugin?",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673889723127
      },
      {
        "content": "I like the idea of having a user collection that I can add fields too, firebase auth is very limited in the data it holds about the user so my hope is to link the firebase user to the user collection.",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673889793222
      },
      {
        "content": "no, i wrote my implementation myself, not sure if the auth0 plugin was available then!",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673889804583
      },
      {
        "content": "oh yes that would be interesting, so then it would be semi-persistent and you assign roles+permissions based on the email I guess?",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673889836205
      },
      {
        "content": "that&#x27;s right.  I&#x27;m looking at a segmented wiki solution.  users can be part of one or more groups and have edit/view capabilities on the content that isused by that group and may have only view on content from other groups.",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673889922797
      },
      {
        "content": "I&#x27;m not 100% sure I can do this with payload but I&#x27;m looking into it.",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673889933962
      },
      {
        "content": "but thanks for your advice on the auth side!",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673889945956
      },
      {
        "content": "Any time, good luck! 🙂 if you plan to implement this as plugin feel free to post in the plugin channel, usually people will come around and collaborate/help out a bit 🙂",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673890039542
      },
      {
        "content": "Appreciate you being helpful as always Tim!",
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1674074964460
      }
    ],
    "messageCount": 22
  },
  {
    "info": {
      "name": "Can I make the User create page public / allowed without logging in?",
      "id": "1070050520754040893",
      "createdAt": 1675190324725
    },
    "messages": [
      {
        "content": "I want people to visit my app and register themselves before accessing other lists. Only the User creation page should be public. Setting the access controls for the Users list to be true doesn&#x27;t make the page public.",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675190324725
      },
      {
        "content": "@Kalon-Robson sorry to tag u, noticed u were typing before, any ideas at all where i should look?",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675195235220
      },
      {
        "content": "Hi @minanaro_3776, <br><br>By default collections and globals are only accessible by the admin user collection. You can give none admin users access by defining the return value as true<br><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">TestCollection</span>: <span class=\"hljs-title class_\">CollectionConfig</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&#x27;slug-name&#x27;</span>,\n  <span class=\"hljs-attr\">access</span>: {\n    <span class=\"hljs-attr\">read</span>: (): <span class=\"hljs-function\"><span class=\"hljs-params\">boolean</span> =&gt;</span> <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// Everyone can read Pages</span>\n  },</code></pre><br>p.s. Sorry I typed the message then left it unsent xD",
        "authorID": "618601682460344334",
        "authorName": "Kalon-Robson",
        "authorAvatar": "416a5969efb8ca3e0c40f9b37f5e2bf6",
        "createdAtDate": 1675195567033
      },
      {
        "content": "Is the above what your trying to achieve or are you needing some condition",
        "authorID": "618601682460344334",
        "authorName": "Kalon-Robson",
        "authorAvatar": "416a5969efb8ca3e0c40f9b37f5e2bf6",
        "createdAtDate": 1675195603519
      },
      {
        "content": "i tried setting read to true but it&#x27;s still forcing me to login",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675195608271
      },
      {
        "content": "Ah you want a none logged in user to see the admin cms?",
        "authorID": "618601682460344334",
        "authorName": "Kalon-Robson",
        "authorAvatar": "416a5969efb8ca3e0c40f9b37f5e2bf6",
        "createdAtDate": 1675195631036
      },
      {
        "content": "yeah only the Users list&#x27;s create page",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675195642581
      },
      {
        "content": "where we create a new user",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675195646802
      },
      {
        "content": "i want people to access this page",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675195651204
      },
      {
        "content": "to register",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675195653185
      },
      {
        "content": "instead of adding them myself",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675195658491
      },
      {
        "content": "they should only access the Users list&#x27;s create page",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675195670036
      },
      {
        "content": "I&#x27;m really not sure if that is possible. The standard approach would be to create a register page with a form that submits to Payload to create the user",
        "authorID": "618601682460344334",
        "authorName": "Kalon-Robson",
        "authorAvatar": "416a5969efb8ca3e0c40f9b37f5e2bf6",
        "createdAtDate": 1675195691875
      },
      {
        "content": "Let me take a look. One moment",
        "authorID": "618601682460344334",
        "authorName": "Kalon-Robson",
        "authorAvatar": "416a5969efb8ca3e0c40f9b37f5e2bf6",
        "createdAtDate": 1675195718181
      },
      {
        "content": "i initially thought of doing that",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675195736917
      },
      {
        "content": "so it&#x27;s not possible to let just anyone enter the admin panel?",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675195756811
      },
      {
        "content": "they have to always log in first?",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675195766607
      },
      {
        "content": "also i couldn&#x27;t find a way to access req.payload to make queries while creating new expressjs routes",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675195804691
      },
      {
        "content": "I suspect the above is the case. Using endpoints and components I reckon you should be able to create a register form similar the setup form.",
        "authorID": "618601682460344334",
        "authorName": "Kalon-Robson",
        "authorAvatar": "416a5969efb8ca3e0c40f9b37f5e2bf6",
        "createdAtDate": 1675195958268
      },
      {
        "content": "On your last point, are you trying to fetch or post data to payload from within an express route?",
        "authorID": "618601682460344334",
        "authorName": "Kalon-Robson",
        "authorAvatar": "416a5969efb8ca3e0c40f9b37f5e2bf6",
        "createdAtDate": 1675195994923
      },
      {
        "content": "i haven&#x27;t done anything yet but i&#x27;m going to post the register form data to make the user register",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196029260
      },
      {
        "content": "i remember reading about querying using a req property",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196050141
      },
      {
        "content": "like req.payload...something",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196062374
      },
      {
        "content": "the req object didn&#x27;t have that property",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196080075
      },
      {
        "content": "i&#x27;m doing that inside server.ts, after payload.init, an expressjs post route",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196110121
      },
      {
        "content": "Let me check something, one moment.",
        "authorID": "618601682460344334",
        "authorName": "Kalon-Robson",
        "authorAvatar": "416a5969efb8ca3e0c40f9b37f5e2bf6",
        "createdAtDate": 1675196150369
      },
      {
        "content": "So your using the parent express server when to access req.payload you need to use Payloads express server. [Edit: Corrected Below]<br><br>So if you move your route into your config inside endpoints[] You will get the payload property",
        "authorID": "618601682460344334",
        "authorName": "Kalon-Robson",
        "authorAvatar": "416a5969efb8ca3e0c40f9b37f5e2bf6",
        "createdAtDate": 1675196402199
      },
      {
        "content": "ohh",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196417735
      },
      {
        "content": "you should actually get <code>req.payload</code> everywhere on your app",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675196433958
      },
      {
        "content": "i&#x27;ll do that, thanks a lot for sparing your time! 😄",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196434308
      },
      {
        "content": "ok 1 sec let me try to access it again",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196452986
      },
      {
        "content": "oh",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196494429
      },
      {
        "content": "i think i just had the wrong types",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196498481
      },
      {
        "content": "for the request handler",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196500981
      },
      {
        "content": "thank you @jmikrut 😄",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196508181
      },
      {
        "content": "@jmikrut  hey while you&#x27;re here, could you tell me if it&#x27;s possible to let&#x27;s say we have a Users list, and I want everyone, without logging in, be able to view the new user create page and create a user, as if registering",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196557143
      },
      {
        "content": "or should i make a new route and handle that there like Kalon said",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196571626
      },
      {
        "content": "you&#x27;d need to add a custom admin panel route yourself",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675196574677
      },
      {
        "content": "ok i&#x27;ll do that, thanks a lot, i really appreciate Payload and how you guys respond to help threads! 🙂",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675196605487
      },
      {
        "content": "Wasn&#x27;t sure if Payload would perhaps clean out the req object before passing it over to other routes. Makes sense that it doesn&#x27;t",
        "authorID": "618601682460344334",
        "authorName": "Kalon-Robson",
        "authorAvatar": "416a5969efb8ca3e0c40f9b37f5e2bf6",
        "createdAtDate": 1675196606784
      },
      {
        "content": "<a href=\"https://payloadcms.com/docs/admin/components#custom-routes\">https://payloadcms.com/docs/admin/components#custom-routes</a>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675196625613
      },
      {
        "content": "yep, we DO scope most of Payload&#x27;s functionality to only Payload routes, but the <code>req.payload</code> middleware in specific is added to all Express stuff",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675196650044
      }
    ],
    "messageCount": 41
  },
  {
    "info": {
      "name": "MongooseError: Operation `users.countDocuments()` buffering timed out after 10000ms",
      "id": "1070732000006262794",
      "createdAt": 1675352802040
    },
    "messages": [
      {
        "content": "I keep getting this error when trying to run graphQLSchema  <code>PAYLOAD_CONFIG_PATH=src/payload.config.ts payload generate:graphQLSchema</code> <br><br><pre><code class=\"hljs\">const err = new MongooseError(message);\n                      ^\nMongooseError: Operation `users.countDocuments()` buffering timed out after 10000ms</code></pre><br><br>any idea why this is happening?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675352802040
      },
      {
        "content": "What version of payload are ya on?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675360750103
      },
      {
        "content": "the latest one <code>&quot;payload&quot;: &quot;1.6.3&quot;,</code>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675361232533
      },
      {
        "content": "Thats odd, the command under the hood runs with mongo disabled",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675368145513
      },
      {
        "content": "@Jarrod I just updated to <code>&quot;payload&quot;: &quot;1.6.4&quot;,</code> and still have the issue",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675462981647
      },
      {
        "content": "keeps saying <code>MongooseError: Operation</code>users.countDocuments()<code>buffering timed out after 10000ms</code>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675462997282
      },
      {
        "content": "changed to a fresh mongo db too",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675463026797
      },
      {
        "content": "@generator101 This was an issue that was fixed in 1.6.9.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676057867033
      },
      {
        "content": "Give it a try and let us know.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676057875933
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "How to trigger field hooks?",
      "id": "1074905454985093252",
      "createdAt": 1676347831246
    },
    "messages": [
      {
        "content": "When exactly should fields hooks be triggered?<br><br>I can&#x27;t get any of the hooks to trigger on field value change.<br><pre><code class=\"hljs\">{\n  name: &#x27;name&#x27;,\n  type: &#x27;text&#x27;,\n  hooks: {\n    beforeValidate: [(args) =&gt; {console.log(1)}],\n    beforeChange: [(args) =&gt; {console.log(2)}],\n    afterChange: [(args) =&gt; {console.log(3)}],\n    afterRead: [(args) =&gt; {console.log(4)}],\n  },\n}</code></pre> <br>Follup question: can you trigger one field based on the change of another field?",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676347831246
      },
      {
        "content": "These are all backend hooks. You would see those in your server console, but not the browser.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676386896145
      },
      {
        "content": "If you&#x27;re looking for admin UI react hooks, you can find those here: <a href=\"https://payloadcms.com/docs/admin/hooks\">https://payloadcms.com/docs/admin/hooks</a>",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676386958365
      },
      {
        "content": "These are useful when writing custom components and are more likely what you&#x27;re looking for.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676387027137
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Best way to handle many-to-many relationship?",
      "id": "1034836636686626897",
      "createdAt": 1666794680521
    },
    "messages": [
      {
        "content": "Say, I have two collections: <code>Books</code> and <code>Tags</code>. A book can have many tags, and a tag can be assigned to multiple books. When a book is tagged via relationship field (<code>tags</code>), I want the tag&#x27;s relationship field (<code>books</code>) to be updated accordingly (create/update/delete). Im not sure to do that as of now. Any ideas?",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1666794680521
      },
      {
        "content": "Hey @bombnp check the #plugins channel— the community has built a plugin to do exactly this for you!",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666801897715
      },
      {
        "content": "is it <a href=\"https://github.com/TimHal/pcms-backpop\">https://github.com/TimHal/pcms-backpop</a> ?",
        "authorID": "275258786388639744",
        "authorName": "bombnp",
        "authorAvatar": "4731ab4f51c57c8d12c2188742bcae83",
        "createdAtDate": 1666803039838
      },
      {
        "content": "yes!",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666807227892
      },
      {
        "content": "Is there plans to officially support this? The repo states it&#x27;s not ready for production (and in pre-alpha), but I would really like to use this feature in a production application",
        "authorID": "408784184765710337",
        "authorName": "TheDunco",
        "authorAvatar": "a1e249435ab12de7c11d8eba3011e259",
        "createdAtDate": 1676319265674
      },
      {
        "content": "yes it will be officially supported",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676389596877
      },
      {
        "content": "we have to tackle additional database support before diving in here much more deeply",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1676389606073
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Relation Field Typing",
      "id": "1072683238008573952",
      "createdAt": 1675818013432
    },
    "messages": [
      {
        "content": "Really appreciate the outstanding work on Local API type inferences!  Experiencing a small inconvenience, and wondering if there&#x27;s an obvious solution I&#x27;m missing here.<br><br>When requesting a relation field, the return type of the field would be <code>string | Collection</code>:",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1675818013432
      },
      {
        "content": "Is there a way to get post, such that the inferred type of post.notes is Note[] only?",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1675818060231
      },
      {
        "content": "I tried with depth:, but that doesn&#x27;t seem to make a difference.",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1675818090404
      },
      {
        "content": "This is one thing we&#x27;re talking about improving. Possibly passing depth, so the type will be able to properly be inferred as one or the other. More to come!",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676039667154
      },
      {
        "content": "Because it could be either based upon depth, it needed to be a union.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676039699131
      },
      {
        "content": "Glad to hear! <br>Luckily this can be worked around <code>(post.note as Note[]).map</code> or <code>post.notes.map(note =&gt; typeof note === &quot;string&quot; ? ... : ...)</code> for now.",
        "authorID": "196889179391655936",
        "authorName": "xHomu",
        "authorAvatar": "0cba605c25af82a2299b8b6f13ef40fd",
        "createdAtDate": 1676065583670
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Custom ID's are immutable?",
      "id": "1067443807072821259",
      "createdAt": 1674568835753
    },
    "messages": [
      {
        "content": "Maybe this is by design?<br>I&#x27;m running into trouble with the use of a custom ID for one of my collections. I&#x27;m actually using the custom ID as a URL safe slug with NextJS routing. Especially after duplicating an Article, I need to be able to change the ID so that the URL fits the new Article.<br>I&#x27;m using Payload v1.3.2<br><br>Here&#x27;s my CollectionConfig:<br><br><pre><code class=\"hljs\">const beforeDuplicate: BeforeDuplicate&lt;Article&gt; = ({ data }) =&gt; {\n  return {\n    ...data,\n    _id: data.id ? `${data.id}-copy` : &#x27;&#x27;,\n  };\n};\n\nconst Articles: CollectionConfig = {\n  slug: &#x27;articles&#x27;,\n  access: {\n    read: () =&gt; true,\n  },\n  admin: {\n    useAsTitle: &#x27;title&#x27;,\n    hooks: {\n      beforeDuplicate,\n    },\n  },\n  fields: [\n    {\n      name: &#x27;id&#x27;,\n      label: &#x27;URL Slug&#x27;,\n      type: &#x27;text&#x27;,\n      unique: true,\n      required: true,\n      validate: (val, args) =&gt; {\n        if (!urlSafeRegEx.test(val)) {\n          return &#x27;Please check if...&#x27;\n        }\n        return text(val, args)\n      },\n      admin: {\n        description: &#x27;Bla bla&#x27;,\n      }\n    },\n    {\n      name: &#x27;title&#x27;,\n      type: &#x27;text&#x27;,\n      localized: true,\n      required: true,\n    }\n  ]\n}</code></pre>",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674568835753
      },
      {
        "content": "Yes, IDs by design cannot be changed. You&#x27;ll need to create a new doc with the desired ID and move the data.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674571497904
      },
      {
        "content": "@rafael_drs is using beforeDuplicate, I think you could rename the <code>id</code> instead of the <code>_id</code> field, yeah?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674576377047
      },
      {
        "content": "Well, I tried <pre><code class=\"hljs\">id: data.id ? `${data.id}-copy` : &#x27;&#x27;,</code></pre> (without the underscore in front) but that way the beforeDuplicate function doesn&#x27;t solve the error about the id needing to be unique.",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674576567463
      },
      {
        "content": "does it throw a validation error? Saying the field is not unique?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674576685649
      },
      {
        "content": "Yep, it throws that error, specifically saying that the field <code>&#x27;_id&#x27;</code> is not unique",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674576734530
      },
      {
        "content": "So that&#x27;s why i&#x27;m storing the changed value of <code>data.id</code> into <code>_id</code> instead of into <code>id</code>",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674576782036
      },
      {
        "content": "I see, this is quite logical as they are used as database identifiers. However, would there be a way to skip the <code>unique</code> requirement in the validation during the operation of duplicating? Similar to how you can skip validation on the &#x27;create&#x27; and &#x27;update&#x27; operations?",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674576951864
      },
      {
        "content": "I guess a &#x27;duplicate&#x27; operation is actually just a &#x27;create&#x27; operation under the hood, but with all data pre-filled. So that wouldn&#x27;t be possible.",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674577052879
      },
      {
        "content": "Would there be any way to sort-of fake duplicate an entry? So that it just pre-fills a creation form, without directly saving it to the database.",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674577185860
      },
      {
        "content": "No, not currently.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674577264034
      },
      {
        "content": "I&#x27;ve seen someone write custom fields that pull data from the url params to fill fields, but I don&#x27;t think that&#x27;d be useful here.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674577308942
      },
      {
        "content": "Okay, noted!",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674577329501
      },
      {
        "content": "How many records are you talking here?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674577333235
      },
      {
        "content": "Not whole lot, I think there will be a total of about 50 Articles in the collections",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674577371037
      },
      {
        "content": "It&#x27;s just that there&#x27;s quite a lot of repeated values between them, so it would be nice to be able to duplicate them to speed up the process of filling every Article",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674577425654
      },
      {
        "content": "Writing a script is an option here.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674577437151
      },
      {
        "content": "Would have to make a map of before -&gt; after of the IDs, which would be a little tedious, but other than that - I don&#x27;t think it would be too bad",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674577491584
      },
      {
        "content": "Not sure if I follow, do you mean using a hook to store the new preferred id in a separate collection that references the original id that&#x27;s assigned on duplication?",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674577825751
      },
      {
        "content": "And then map that new id at the front-end?",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674577856983
      },
      {
        "content": "The custom ID is directly used as part of the URL for an article at the front-end, like: <a href=\"http://localhost:3001/articles/en/custom-id-here\">http://localhost:3001/articles/en/custom-id-here</a><br>NextJS than takes that ID from the URL params and uses that to query Payload&#x27;s GraphQL endpoint.<br>Is that bad practice, should I just keep the original generated ID and just add the slug as a separate field?",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674578227683
      },
      {
        "content": "@rafael_drs I would use a slug field tbh. Here is how you could do just that (and make it configurable)<br>- implementation: <a href=\"https://github.com/payloadcms/website-cms/blob/main/src/collections/Pages.ts#L100\">https://github.com/payloadcms/website-cms/blob/main/src/collections/Pages.ts#L100</a><br>- re-usable field: <a href=\"https://github.com/payloadcms/website-cms/blob/main/src/fields/slug.ts#L7\">https://github.com/payloadcms/website-cms/blob/main/src/fields/slug.ts#L7</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674580042620
      },
      {
        "content": "This is great, thank you!",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674580269610
      },
      {
        "content": "So upon saving any collection with this specific slugField, the title is grabbed, formatted and saved with the object, correct?",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674580375053
      },
      {
        "content": "Yes 👍  just make sure you have a title field on the collection",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674580412232
      },
      {
        "content": "You  could use this script to resave docs programmatically: <a href=\"https://github.com/payloadcms/payload/discussions/434\">https://github.com/payloadcms/payload/discussions/434</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674580454684
      },
      {
        "content": "You are a legend!",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674580554665
      },
      {
        "content": "You both are",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674580558971
      },
      {
        "content": "Thanks so much!",
        "authorID": "172112808668823552",
        "authorName": "rafael_drs",
        "authorAvatar": "310f2e39e19eab40059f290681bd7426",
        "createdAtDate": 1674580564436
      }
    ],
    "messageCount": 28
  },
  {
    "info": {
      "name": "Defining the order of collection table columns in admin list view",
      "id": "1074310327585492994",
      "createdAt": 1676205941817
    },
    "messages": [
      {
        "content": "Is there a simpler way of setting the order the list view columns display in the admin?<br><br>I find it really frustrating to have to deselect and reselect columns in the reverse order to what I want them displayed in the admin UI.<br><br>I&#x27;m hoping that there&#x27;s a way to define the default column order in code?",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676205941817
      },
      {
        "content": "you can do it, in your collection add <code>defaultColumns</code> in the admin with the name of the default fields name:<br><br><pre><code class=\"hljs\"> admin: {\n    defaultColumns: [&#x27;title&#x27;, &#x27;date&#x27;, &#x27;_status&#x27;, &#x27;createdBy&#x27;],\n  },</code></pre>",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1676241622568
      },
      {
        "content": "Thank you!",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676296618800
      },
      {
        "content": "I&#x27;ve added some further thoughts on this to a github discussion here: <a href=\"https://github.com/payloadcms/payload/discussions/2075\">https://github.com/payloadcms/payload/discussions/2075</a>",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676296847453
      },
      {
        "content": "@Kyr have you seen this? <a href=\"https://github.com/payloadcms/payload/pull/1865\">https://github.com/payloadcms/payload/pull/1865</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676296926052
      },
      {
        "content": "I had not... that&#x27;s awesome!",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676302570043
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Filtering by relationship fields generates invalid query",
      "id": "1065860821743312937",
      "createdAt": 1674191422640
    },
    "messages": [
      {
        "content": "When I use the admin to filter by a polymorphic relationship field, it queries the backend like this:<br><br><code>https://payload-cms.f4s.com/admin/collections/marlee-user-actions?page=1&amp;where%5Bor%5D%5B0%5D%5Band%5D%5B0%5D%5Bprogram%5D%5Bequals%5D%5BrelationTo%5D=marlee-programs&amp;where%5Bor%5D%5B0%5D%5Band%5D%5B0%5D%5Bprogram%5D%5Bequals%5D%5Bvalue%5D=63c7658380cf874477589598</code><br><br>And returns no results<br><br>Decoding that url-encoded payload, it&#x27;s applying the following filters:<br><code>where[or][0][and][0][program][equals][relationTo]: marlee-programs</code><br><code>where[or][0][and][0][program][equals][value]: 63c7658380cf874477589598</code><br><br>I believe it should be querying<br><code>where[or][0][and][0][program][relationTo][equals]: marlee-programs</code><br><code>where[or][0][and][0][program][value][equals]: 63c7658380cf874477589598</code><br>which returns the correct results when I alter the query (although it does not correctly select the filter values in the UI)<br><br>The field definition for the field in question is: <code>{ name: &quot;program&quot;, label:&quot;Program&quot;, type: &quot;relationship&quot;, relationTo: [&quot;marlee-programs&quot;] },</code><br><br>Switching to a regular relationship field (not polymorphic) fixes this, and suits my use case, but is still a bug, I believe.",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1674191422640
      },
      {
        "content": "Is it better to open this sort of thing here, or open an issue in GitHub?",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1674192045447
      },
      {
        "content": "Probably something like this should go in a gh discussion or even an issue, with possibly a screen recording!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674218435208
      },
      {
        "content": "If you don’t mind 🙂",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674218447706
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Upload collection bug",
      "id": "1071853173238665277",
      "createdAt": 1675620110569
    },
    "messages": [
      {
        "content": "I have a Products collection and when I upload an image while creating a Product, the uploaded image is displayed, but when I click X on the right and re-select another image to replace the upload image, the image is uploaded but I still get the &quot;Select a file&quot; component. What I can do?",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675620110569
      },
      {
        "content": "See this PR, sounds related<br><br><a href=\"https://github.com/payloadcms/payload/pull/1978\">https://github.com/payloadcms/payload/pull/1978</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675620428784
      },
      {
        "content": "i think it&#x27;s not the same, i don&#x27;t get that same image cache thing. when i update an image, the image doesn&#x27;t appear and the Select a file component stays the same like i haven&#x27;t uploaded anything already",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675621603608
      },
      {
        "content": "@minanaro_3776 that PR got merged, can you upgrade and give it a shot?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675871632902
      },
      {
        "content": "oh wow that was fast",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675871652521
      },
      {
        "content": "sure jarrod thanks a lot, i will!",
        "authorID": "1043123648216707073",
        "authorName": "minanaro_3776",
        "authorAvatar": "b95d30a2f7564689959555f07b1a62bc",
        "createdAtDate": 1675871661065
      },
      {
        "content": "If it does not work, create a minimal reproduction and open an issue. We are happy to look into it further if it is a bug!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675871668046
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Generating Types Error with Azure",
      "id": "1067549631904493638",
      "createdAt": 1674594066359
    },
    "messages": [
      {
        "content": "Good Afternoon fellow Payloaders,<br><br>For some reason when running command <code>payload generate:types</code> (yarn payload...),  I get an error relating to the Azure Storage Blob, this error is resolved when I hard code storageAdapter.ts, which for obvious reasons, cannot be left as the solution as it would pose a glaring security vulnerability.<br><br>Storage Adapter.ts<br><pre><code class=\"hljs\">import { azureBlobStorageAdapter } from &quot;@payloadcms/plugin-cloud-storage/azure&quot;;\n\n\nconst storageAdapter = azureBlobStorageAdapter({\n  connectionString: process.env.AZURE_STORAGE_CONNECTION_STRING,\n  containerName: process.env.AZURE_STORAGE_CONTAINER_NAME,\n  allowContainerCreate:\n    process.env.AZURE_STORAGE_ALLOW_CONTAINER_CREATE === &quot;true&quot;,\n  baseURL: process.env.AZURE_STORAGE_ACCOUNT_BASEURL,\n});\n\nexport default storageAdapter;</code></pre><br>Has anyone encountered a problem like this ?",
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1674594066359
      },
      {
        "content": "Ok so adding <pre><code class=\"hljs\">import dotenv from &quot;dotenv/config&quot;</code></pre> in payload.config and adding <pre><code class=\"hljs\">require(&#x27;dotenv&#x27;).config()</code></pre> in storageAdapter.ts solves the issue<br><br>incase anyone has the issue later<br><pre><code class=\"hljs\">/node_modules/@azure/storage-blob/dist/index.js:13642\n    if (connectionString.startsWith(&quot;UseDevelopmentStorage=true&quot;)) {\n                         ^\n\nTypeError: Cannot read property &#x27;startsWith&#x27; of undefined\n    at extractConnectionStringParts (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:13642:26)\n    at Function.fromConnectionString (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:24600:32)\n    at Object.adapter (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/adapters/azure/index.js:14:66)\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js:42:43\n    at Array.map (&lt;anonymous&gt;)\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js:38:164\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/config/build.js:15:84\n    at Array.reduce (&lt;anonymous&gt;)\n    at buildConfig (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/config/build.js:15:50)\n    at Object.&lt;anonymous&gt; (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/payload.config.js:17:44)\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.</code></pre>",
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1674594302658
      },
      {
        "content": "<pre><code class=\"hljs\">TypeError: Cannot read property &#x27;startsWith&#x27; of undefined\n    at extractConnectionStringParts (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:13642:26)\n    at Function.fromConnectionString (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@azure/storage-blob/dist/index.js:24600:32)\n    at Object.adapter (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/adapters/azure/index.js:14:66)\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js:42:43\n    at Array.map (&lt;anonymous&gt;)\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js:38:164\n    at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/config/build.js:15:84\n    at Array.reduce (&lt;anonymous&gt;)\n    at buildConfig (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/config/build.js:15:50)\n    at Object.&lt;anonymous&gt; (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/src/payload.config.ts:23:40)\n(node:96745) UnhandledPromiseRejectionWarning: Error: Error: can&#x27;t find the configuration file located at /Users/bcch-nicholas/Documents/GitHub/cardiac-backend/src/payload.config.ts.\n    at build (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/bin/build.js:35:15)\n    at Object.&lt;anonymous&gt; (/Users/bcch-nicholas/Documents/GitHub/cardiac-backend/node_modules/payload/dist/bin/index.js:16:9)\n    at Module._compile (internal/modules/cjs/loader.js:1085:14)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1114:10)\n    at Module.load (internal/modules/cjs/loader.js:950:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:790:12)\n    ...\n\n    </code></pre><br><br>So that will be more easily searchable by others",
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1674594497782
      },
      {
        "content": "If this is a &#x27;bad&#x27; or &#x27;hacky&#x27; solution, please lmk",
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1674594533511
      },
      {
        "content": "update: so the app builds, but does not serve (I run yarn build often during my development process when making potentiall breaking-changes)<br><br>if anyone gets why this might happen any and all feedback/assistance would be fantastic",
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1674598622837
      },
      {
        "content": "I’m not sure you need the dotenv import in the adapter file, but try adding it to your server.ts file (also keep it in your payload config file)",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674648647466
      },
      {
        "content": "@FireGuy_42 did you give this a shot?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674830378446
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Prevent users from accessing admin panel",
      "id": "1075047937555574904",
      "createdAt": 1676381801738
    },
    "messages": [
      {
        "content": "How do i define which loged in users can access the admin, and which cannot?<br><br>Do I need two seperate user collections (one for admin, one for regular user), or can I add a flag to my user collection for indicating admins?",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676381801738
      },
      {
        "content": "Would <code>access.admin</code> work for you? <a href=\"https://payloadcms.com/docs/access-control/collections\">https://payloadcms.com/docs/access-control/collections</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676381930415
      },
      {
        "content": "@jacobsfletch this makes me think that i need two seperate collections for users and for admins, is that correct?",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676381980573
      },
      {
        "content": "(as in, i can &quot;assign&quot; one collection to be the admin collection, and I cannot make this assignment on a per-user level)",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676382010656
      },
      {
        "content": "You could still use a single collection and implement role or user-based access control",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676382855700
      },
      {
        "content": "You can either assign a roles select field on the user and check that in your access control function, here&#x27;s example of that <a href=\"https://github.com/payloadcms/template-ecommerce/blob/main/src/access/admins.ts\">https://github.com/payloadcms/template-ecommerce/blob/main/src/access/admins.ts</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676382937910
      },
      {
        "content": "Or go even simpler and just add a checkbox to the user and check <em>that</em>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676382960566
      },
      {
        "content": "@jacobsfletch that is super helpful. thansk a bunch!",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676383018220
      },
      {
        "content": "sorry @jacobsfletch - one more question regarding this. How do i limit the access to the admin pabel based on a checkbox like that?",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676388778167
      },
      {
        "content": "as in, I dont want normal users being able to login in <code>/admin</code>",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676388850787
      },
      {
        "content": "Add a <code>canAccessAdmin</code> checkbox field to the user collection and then in your <code>access.admin</code> hook, do something like this:<br><pre><code class=\"hljs\">export const admins: Access = ({ req: { user } }) =&gt; user.canAccessAdmin</code></pre>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676389354279
      },
      {
        "content": "makes sense, but what i dont quite understand is where to use the <code>const Admins</code> of your example after I defined it.",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676390083270
      },
      {
        "content": "On your user collection, like this:<br><br><pre><code class=\"hljs\">{\n  slug: &#x27;users&#x27;,\n  auth: true,\n  access: {\n    admin: admins\n  }\n}</code></pre>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676390302131
      },
      {
        "content": "ahhh",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676390680900
      },
      {
        "content": "i really missed the obvious here, didnt I",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676390686274
      },
      {
        "content": "thank you so much!",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676390688752
      },
      {
        "content": "No prob!",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676390859363
      }
    ],
    "messageCount": 16
  },
  {
    "info": {
      "name": "Add rules in webpack config",
      "id": "1073014021135024219",
      "createdAt": 1675896878275
    },
    "messages": [
      {
        "content": "Hi ! hope you are all good. I&#x27;m facing a problem when I want to add an <code>option</code> to my <code>sass-loader</code>  in my webpack config<br>here my code:... (in my file payload.config.ts)...<br><pre><code class=\"hljs\">admin{\n webpack: (config) =&gt; {\n      config.module.rules.push(MyObjectIWantToPush);\n      return config;\n    },\n},</code></pre><br><br>...and I would like to add this object to my webpack config...<br><br><pre><code class=\"hljs\">{\n  loader: &quot;sass-loader/dist/cjs.js&quot;,\n  options: {\n    functions: {\n      &quot;env($variable)&quot;: variable =&gt; castToSass(process.env[variable]),\n    }\n  }\n}</code></pre><br><br>...in order to import some env variables in my .scss file<br><br>Is that simply possible or am I just out ? <br>Thanks in advance for any help <br><br>Viva Payload !!",
        "authorID": "986156968152555540",
        "authorName": "NF01",
        "authorAvatar": "a8f64e6e32015ae37f7d21a0a04bd885",
        "createdAtDate": 1675896878275
      },
      {
        "content": "Hey @NF01 — you should be able to control literally any part of the Payload webpack config that you need",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675910209757
      },
      {
        "content": "but I would say instead of pushing another sass loader, you should instead adjust our existing sass loader(s)",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675910224637
      },
      {
        "content": "i&#x27;ve never used functions like that for sass-loader so I&#x27;m not too familiar, but if the sass-loader supports it, it should work in Payload. Just make sure you&#x27;re extending our built-in loader instead of pushing your own",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675910249693
      },
      {
        "content": "okay well thanks a lot for the response,<br>so if I understand you well, I would have to do...<br><pre><code class=\"hljs\"> admin: {\n    webpack: (config) =&gt; ({\n      ...config,\n      module: {\n        ...config.module,\n        rules: {\n          ...config.module.rules,\n          ObjectConfigThatIWantToAdd,// The issue comes from here, error is that: Rulesetrule does not accept object\n        },\n      },\n    }),\n},</code></pre><br>(take from you doc)<br>... rather than my previous code ?<br><br>If it&#x27;s right, I already try it a bit and I&#x27;m facing the &quot;grammatical&quot;  error of webpack: &quot;the configuration object does not match the API schema&quot;<br>So I think my mistake come from my way of writing my code when I want to add my part of the config<br><br>To sum up I think it the grammar of payload to change a webpack config that I don&#x27;t get totally<br><br>Thanks for the help !!",
        "authorID": "986156968152555540",
        "authorName": "NF01",
        "authorAvatar": "a8f64e6e32015ae37f7d21a0a04bd885",
        "createdAtDate": 1675929107389
      },
      {
        "content": "At the end all good I find a way to do it more easily, I directly made a relative path in my scss file to point at my files",
        "authorID": "986156968152555540",
        "authorName": "NF01",
        "authorAvatar": "a8f64e6e32015ae37f7d21a0a04bd885",
        "createdAtDate": 1675939857411
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Has anyone integrated Next, Turborepo, and Payload?",
      "id": "1074072939412070470",
      "createdAt": 1676149344066
    },
    "messages": [
      {
        "content": "I saw the Remix boilerplate. Decided to try and build something similar with Next. I&#x27;ve had some issues.<br><br>1. Clone <a href=\"https://github.com/vercel/turbo/tree/main/examples/basic\">https://github.com/vercel/turbo/tree/main/examples/basic</a><br>2. Run npx create-payload-app in the apps folder to create a new cms folder w/ Payload<br>3. Add the ui and tsconfig workspace dependencies to Payload&#x27;s package.json<br>4. For simplicities sake, I won&#x27;t create a server, I just switch the port to 8000 on Payload<br>5. Run pnpm build and all goes well. Same case for pnpm run dev.<br>6. To test that I can access the packages within payload I open up payload.config.ts and import { Button } from &#x27;ui&#x27;.<br>7. I create a simple function that returns that button, ex: export const b = () =&gt; Button;<br>8. I get the error &quot;Cannot use import statement outside a module&quot;<br><br>Basically if I try to import anything from the UI package within this new Payload folder it treats it as if esmodules aren&#x27;t configured. I&#x27;ve messed around with Payload&#x27;s tsconfig.json and package.json - but run into the same sorts of errors over and over. Any insight to this? I&#x27;m sure it&#x27;s something dumb.",
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1676149344066
      },
      {
        "content": "Hey, I&#x27;m running almost this exact setup! I&#x27;m using npm instead of pnpm but if I had to guess pnpm is going to handle things better anyway 😅 <br><br>In regards to your issue however... I think you&#x27;re running into a recent change described in the 1.6.1 changelog: <a href=\"https://github.com/payloadcms/payload/releases/tag/v1.6.1\">https://github.com/payloadcms/payload/releases/tag/v1.6.1</a><br><br>In a nutshell, you need to set up transpilation <em>somewhere</em>. I ended up not being able to get it to work in my UI library so I just set it up for Payload as described by the PR mentioned in the changelog.",
        "authorID": "321229198234615808",
        "authorName": "Ellie",
        "authorAvatar": "7472ce50c8e25a58fb6ed48925a7c31d",
        "createdAtDate": 1676192588991
      },
      {
        "content": "@Ellie Thank you! This is definitely whats going on. But darn. Even changing what was mentioned in the changelog doesn&#x27;t resolve it. Still isn&#x27;t transpiling the button found in the basic turborepo demo.",
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1676233825314
      },
      {
        "content": "Hmmmm...though even downgrading Payload to 1.5.0 doesn&#x27;t seem to resolve it",
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1676234616355
      },
      {
        "content": "Ahhhh, dumb mistake on my part. Needed to use tsup to transpile the UI folder. So I guess Payload will import from &quot;ui/dist&quot;",
        "authorID": "1055071772585771178",
        "authorName": "samtietjen",
        "authorAvatar": "8d328d0fcc83a5942412477c296516f4",
        "createdAtDate": 1676236604919
      },
      {
        "content": "Sorry for the late reply... didn&#x27;t actually get a ping from you which is strange. Though I&#x27;m also new to these threads in Discord so idk 🤷‍♀️ But hey, I&#x27;m glad you solved it! Most tools ignore dependencies when transpiling by default but it seems you figured that one out yourself 😅",
        "authorID": "321229198234615808",
        "authorName": "Ellie",
        "authorAvatar": "7472ce50c8e25a58fb6ed48925a7c31d",
        "createdAtDate": 1676398157444
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Only receive the ID when accessing a FormBlock using the form-builder plugin",
      "id": "1072563834587459615",
      "createdAt": 1675789545438
    },
    "messages": [
      {
        "content": "I am currently using the REST API with an API key to pull page layout data from my payload CMS. Only the ID of the form, and not the contents, is shown when getting to a FormBlock.",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675789545438
      },
      {
        "content": "I thought it could be an access thing so I attempted overriding the access for the fields collection, but also had no luck there",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675789586407
      },
      {
        "content": "All of my other blocks return the nested data when pulling from my CMS, it is just the forms block from the plugin that seems to be having trouble",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675789631564
      },
      {
        "content": "Can you paste your REST request here?",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675792242347
      },
      {
        "content": "<pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">const</span> potentialFoundDocument = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(fetchURL, {\n        <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&quot;GET&quot;</span>,\n        <span class=\"hljs-attr\">headers</span>: {\n            <span class=\"hljs-string\">&quot;Content-Type&quot;</span>: <span class=\"hljs-string\">&quot;application/json&quot;</span>,\n            <span class=\"hljs-title class_\">Authorization</span>: <span class=\"hljs-string\">`users API-Key <span class=\"hljs-subst\">${apiKey}</span>`</span>,\n        },\n    }).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">res</span>) =&gt;</span> res.<span class=\"hljs-title function_\">json</span>());</code></pre>",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675796696088
      },
      {
        "content": "<pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">let</span> fetchURL = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${cmsURL}</span>/api/<span class=\"hljs-subst\">${collectionName}</span>`</span>;</code></pre><br>The fetchURL grabs from my pages collection",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675796748928
      },
      {
        "content": "Just following up. Any updates on this?",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675975193144
      },
      {
        "content": "<code>form</code> is just a simple relationship so it&#x27;s data is determined by either <code>access</code> and <code>depth</code>. The form plugin already throws <code>read: () =&gt; true</code> onto the config for you so it&#x27;s probably nothing to do with that. Do you have <code>depth</code> on your request or <code>maxDepth</code> anywhere in your config?",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675977084193
      },
      {
        "content": "Weird... Made no change besides setting maxDepth to 2, restarting the server and changing it back. Now the full form object populates",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1675978226018
      },
      {
        "content": "🧙",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675978708624
      },
      {
        "content": "Classic &quot;turn it off. turn it back on fix&quot;",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1676029276409
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "HTML to RichText (Slate.js)",
      "id": "1073291611892613230",
      "createdAt": 1675963061069
    },
    "messages": [
      {
        "content": "Hi everyone!, <br> I can try to import some posts from WP through local API but I have a problem with the content. <br>I don’t understand how can I convert HTML to RichText using slate.js. Someone could help me?",
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1675963061069
      },
      {
        "content": "Hey @stfn  checkout the Payload github, they have a ton of good examples of Payload in action alongside Next. <a href=\"https://github.com/payloadcms/website/tree/main/src/components/RichText\">https://github.com/payloadcms/website/tree/main/src/components/RichText</a><br><br>This is a pretty good example for the RichText Serializer",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675966273220
      },
      {
        "content": "Ok thank you but this is for &quot;frontend&quot; part, at the moment I try to import posts from WP so I have HTML and I need to transform into the RichText... Is there a way to do that?",
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1676018763786
      },
      {
        "content": "It looks like you might be able to use this to do what you are asking: <a href=\"https://docs.slatejs.org/v/v0.47/other-packages/index\">https://docs.slatejs.org/v/v0.47/other-packages/index</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676035159648
      },
      {
        "content": "Obviously you will want to test the input/output before running it on all of your data - but I think this would be an excellent starting point.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676035205790
      },
      {
        "content": "Ok thank! you I will try it",
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1676277917564
      },
      {
        "content": "if you are interested, this serializer works: <a href=\"https://github.com/thompsonsj/slate-serializers\">https://github.com/thompsonsj/slate-serializers</a><br>It works in each convertion html to slate and slate to html",
        "authorID": "928376918804430868",
        "authorName": "stfn",
        "authorAvatar": null,
        "createdAtDate": 1676373031762
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Type broblem in Custom Graphql query",
      "id": "1062719495946387486",
      "createdAt": 1673442472207
    },
    "messages": [
      {
        "content": "in resolver, i&#x27;m using local api which returns response in standard  like:  docs, totalDocs, limit, totalPages and etc. in custom Graphql query i should describe  same  Graphql type over and over, is any solution? can i user existing Graphql type objects?<br><pre><code class=\"hljs\">  queries: (GraphQL, payload) =&gt; {\n            return {\n                PostsBySlug: {\n                    type: new GraphQL.GraphQLObjectType({\n                        name: &#x27;PostsBySlug&#x27;,\n                        fields: {\n//                            docs: {\n//                                type:GraphQL.GraphQLList(Post)\n//                            },\n                            totalDocs: {\n                                type: GraphQL.GraphQLInt,\n                            },\n                            limit: {\n                                type: GraphQL.GraphQLInt,\n                            },\n                            totalPages: {\n                                type: GraphQL.GraphQLInt,\n                            },\n                           ...\n                        },\n                    }),\n                    args: {\n                        name: {\n                            type: new GraphQL.GraphQLNonNull(GraphQL.GraphQLString),\n                        }\n                    },\n                    resolve: PostsBySlug,\n                }\n            }\n        }</code></pre><br>Resolver:<br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\n\nconst PostsBySlug = async (_, args) =&gt; {\n    const tags = await payload.find({\n        collection: &#x27;tags&#x27;,\n        where: {\n            name: {\n                equals: args.name\n            }\n        },\n    });\n    const tag = tags?.docs?.[0]\n\n    const posts = await payload.find({\n        collection: &#x27;posts&#x27;,\n        where: {\n            tags: {\n                equals: tag.id\n            }\n        }\n    })\n    return posts\n}\nexport default PostsBySlug</code></pre>",
        "authorID": "349125160600600576",
        "authorName": "bumblebee",
        "authorAvatar": "d68860d197649e81bb7b0a4ce4555e02",
        "createdAtDate": 1673442472207
      },
      {
        "content": "Hi @bumblebee have you taken a look at our example here? <a href=\"https://payloadcms.com/docs/graphql/extending#example\">https://payloadcms.com/docs/graphql/extending#example</a>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675446678415
      },
      {
        "content": "@jesschow Yeahh",
        "authorID": "349125160600600576",
        "authorName": "bumblebee",
        "authorAvatar": "d68860d197649e81bb7b0a4ce4555e02",
        "createdAtDate": 1675448525490
      },
      {
        "content": "@bumblebee I think this  <code>buildPaginatedListType</code> function is what you&#x27;re looking for: <a href=\"https://github.com/payloadcms/payload/blob/071462b33beb4a38d703b88b203e63aa6bd2097e/src/graphql/schema/buildPaginatedListType.ts#L9\">https://github.com/payloadcms/payload/blob/071462b33beb4a38d703b88b203e63aa6bd2097e/src/graphql/schema/buildPaginatedListType.ts#L9</a>. We might have to export it for you but feel free to open a PR if needed 👍",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675458675200
      },
      {
        "content": "Morning, suffering from same issue. Try to setup a custom query for graphql and having issues retrieving docs. Try following this thread, but am not sure how to implement the BuildPaginatedListType",
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675763178936
      },
      {
        "content": "graphQL: {<br>    schemaOutputFile: path.resolve(__dirname, &#x27;generated-schema.graphql&#x27;),<br>    queries(GraphQL, payload) {<br>      return {<br>        PlacesByCityNameQuery: {<br>          type: buildPaginatedListType(&quot;PlacesByCityName&quot;,GraphQL.?)<br>          ,<br>          args: {<br>            name: {<br>              type: new GraphQL.GraphQLNonNull(GraphQL.GraphQLString),<br>            }<br><br>          },<br>          resolve: PlacesByCityName<br>        }<br>      }<br>    },<br>  },",
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675763199006
      },
      {
        "content": "I guess, my question would be what should I use for docType?",
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675763228986
      },
      {
        "content": "found the solution:",
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675786004291
      },
      {
        "content": "queries(GraphQL, payload) {<br>      return {<br>        PlacesByCityNameQuery: {<br>          type: buildPaginatedListType(&quot;PlacesByCityNameQuery&quot;, <strong>payload.collections.cities.graphQL.type</strong>)<br>          ,<br>          args: {<br>            name: {<br>              type: new GraphQL.GraphQLNonNull(GraphQL.GraphQLString),<br>            }<br><br>          },<br>          resolve: PlacesByCityName<br>        }<br>      }<br>    },",
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675786035550
      },
      {
        "content": "the doc type is in  payload.collections.&lt;your-slug&gt;.graphQL.type",
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675786092434
      },
      {
        "content": "for my resolver:",
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675786161540
      },
      {
        "content": "import payload from &#x27;payload&#x27;;<br><br>const PlacesByCityName = async (_, args) =&gt; {<br><br>    let found={docs:[]};<br><br>    const cities = await payload.find({<br>        collection: &#x27;cities&#x27;,<br>        where: {<br>            name: {<br>                contains: args.name<br>            }<br>        },<br>    });<br>    <br>    cities.docs.forEach(city =&gt; {<br>        if(searchExisting(city)){<br>            found.docs.push(city)<br>        }<br>    });<br><br>    return found;<br>}<br><br><br>const searchExisting=async(city)=&gt;{<br>    let search=await payload.find({<br>        collection:&#x27;places&#x27;,<br>        where:{<br>            city:{<br>                equals:city.id<br>            }<br>        }<br>    })<br>    if(search.totalDocs&gt;0){<br>        return true<br>    }else{<br>        return false<br>    }<br>}<br>export default PlacesByCityName;",
        "authorID": "915584690604359691",
        "authorName": "taongaB",
        "authorAvatar": null,
        "createdAtDate": 1675786168297
      }
    ],
    "messageCount": 11
  },
  {
    "info": {
      "name": "Removing collection from admin panel, while still retaining read access",
      "id": "1069966094498005052",
      "createdAt": 1675170195937
    },
    "messages": [
      {
        "content": "I have several collections that are readable by all, or multiple user roles, however, I do not want the users accessing the collections through the admin panel. How can I remove the collections from the admin panel  for those users while still retaining read access?",
        "authorID": "744383324629237872",
        "authorName": "Skumm",
        "authorAvatar": "9e953d25a78f40f8f8c2d2b72410d71b",
        "createdAtDate": 1675170195937
      },
      {
        "content": "Related: <a href=\"https://discord.com/channels/967097582721572934/1064531848220381295\">https://discord.com/channels/967097582721572934/1064531848220381295</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675171469606
      },
      {
        "content": "While CSS does work, is there a method to modify the query that populates the admin panel without creating a custom build?",
        "authorID": "744383324629237872",
        "authorName": "Skumm",
        "authorAvatar": "9e953d25a78f40f8f8c2d2b72410d71b",
        "createdAtDate": 1675174138499
      },
      {
        "content": "Another related 😀: <a href=\"https://discord.com/channels/967097582721572934/1068706036883669022\">https://discord.com/channels/967097582721572934/1068706036883669022</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675175226559
      },
      {
        "content": "We are planning to support a <code>hidden</code> property on collections",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675175242395
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Edit relationTo-item when relationship disabled/readonly.",
      "id": "1069083859938971648",
      "createdAt": 1674959854827
    },
    "messages": [
      {
        "content": "I&#x27;ve seen a post somewhere about this already, but can&#x27;t find it anymore.<br>The issue is that I cannot edit the item linked even though the button is shown and the item itself is not readonly.<br>Is this issue tracked? Will it be fixed?<br>Thanks 😊",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1674959854827
      },
      {
        "content": "Yes 👍 this is on our radar–we plan to allow document drawers to be able to be opened from read-only relationships.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675049437046
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "webpack < 5 used to include polyfills",
      "id": "1069381194162131005",
      "createdAt": 1675030744830
    },
    "messages": [
      {
        "content": "I&#x27;m using the Next.js starter template and trying to make API calls using afterChange hook to third party services using their SDK, but that results in 100s of the following exception.<br><br>BREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.<br>This is no longer the case. Verify if you need this module and configure a polyfill for it.<br><br>It works normally on the Next.js side though. Any idea on how to resolve this? StackOverflow answers do not work for me as none talks about 100s of exception at the same time.",
        "authorID": "327367968524861440",
        "authorName": "Wandering Nerd",
        "authorAvatar": null,
        "createdAtDate": 1675030744830
      },
      {
        "content": "Your hook is likely pulling in a library for server-only code. You&#x27;ll need to alias that code. Documentation here: <a href=\"https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules\">https://payloadcms.com/docs/admin/webpack#aliasing-server-only-modules</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675438365054
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Unable to duplicate collection item when title field is marked as unique",
      "id": "1066774522423951494",
      "createdAt": 1674409265858
    },
    "messages": [
      {
        "content": "As above.  Should the admin panel append a number behind like <code>Title 1</code> <code>Title 2</code> automatically?",
        "authorID": "204963517344776192",
        "authorName": "sjj1991",
        "authorAvatar": "cf40eec408b17d21c48dbd27c9a1f97a",
        "createdAtDate": 1674409265858
      },
      {
        "content": "Do you have &quot;unique&quot; set on the field itself in the collection config?",
        "authorID": "486710146651652106",
        "authorName": "notchris",
        "authorAvatar": "b37606a7b06253291fc1308b71bc02de",
        "createdAtDate": 1674413961308
      },
      {
        "content": "Every item should have a UID that would prevent this scenario",
        "authorID": "486710146651652106",
        "authorName": "notchris",
        "authorAvatar": "b37606a7b06253291fc1308b71bc02de",
        "createdAtDate": 1674413975985
      },
      {
        "content": "this is my collection config:<br><pre><code class=\"hljs\">const Projects: CollectionConfig = {\n  slug: &quot;projects&quot;,\n  access: {\n    read: () =&gt; true,\n  },\n  admin: {\n    useAsTitle: &quot;title&quot;,\n    group: &quot;Content&quot;,\n  },\n  versions: {\n    drafts: true,\n  },\n  fields: [\n    {\n      name: &quot;title&quot;,\n      type: &quot;text&quot;,\n      required: true,\n      unique: true,\n    },</code></pre>",
        "authorID": "204963517344776192",
        "authorName": "sjj1991",
        "authorAvatar": "cf40eec408b17d21c48dbd27c9a1f97a",
        "createdAtDate": 1674446632439
      },
      {
        "content": "Hi @sjj1991 - unique fields do not get appended automatically, to duplicate pages with unique fields you will want to add a custom function.<br><br>Collections support the <code>admin.hooks.beforeDuplicate</code> property, which is a function that accepts the current document&#x27;s data and active locale. You can take that data, augment / modify it, and return it before it gets used to duplicate the data.<br><br>Here is an example from one of our test suites: <a href=\"https://github.com/payloadcms/payload/blob/master/test/fields/collections/Indexed/index.ts\">https://github.com/payloadcms/payload/blob/master/test/fields/collections/Indexed/index.ts</a>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674470424238
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "How to show an error if image is not the right size?",
      "id": "1069866712624795658",
      "createdAt": 1675146501452
    },
    "messages": [
      {
        "content": "I want to specify an image size for a collection and show an error if the image I&#x27;m trying to add is not the right size.",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1675146501452
      },
      {
        "content": "You could add a custom validate function to the field.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675148261649
      },
      {
        "content": "Do you know any code that has a similar implementation for that?",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1675156887668
      },
      {
        "content": "Could this be handled by simply specifying resizeOptions on the collection? Because this deals with image files/sizes this may be tricky. You have 2 possible options in my mind:<br><br>1. A custom validate function that probes the image size. <a href=\"https://payloadcms.com/docs/fields/overview#validation\">https://payloadcms.com/docs/fields/overview#validation</a>. This might be tricky though because you&#x27;ll have to probe the image size from the file buffer.<br>2. A hook like beforeValidate or beforeChange to probe the image size. <a href=\"https://payloadcms.com/docs/hooks/collections#beforevalidate\">https://payloadcms.com/docs/hooks/collections#beforevalidate</a><br><br>You might benefit from looking at our image resizing and image size probing here: <a href=\"https://github.com/payloadcms/payload/blob/master/src/uploads/generateFileData.ts#L99\">https://github.com/payloadcms/payload/blob/master/src/uploads/generateFileData.ts#L99</a>. Sounds like you might have to do similar logic",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675438798042
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Preview example with app directory",
      "id": "1075079909053059203",
      "createdAt": 1676389424337
    },
    "messages": [
      {
        "content": "I&#x27;m struggling to get preview functionality working in the app directory.<br><br>I&#x27;m using the payload website + cms as a template but don&#x27;t appear to be able to get previewing, even a clean copy - I assume it works for you guys?<br><br>I&#x27;ve seen the following: <br><a href=\"https://github.com/payloadcms/payload/pull/1950\">https://github.com/payloadcms/payload/pull/1950</a>. This appears to rely on a <code>payloadToken</code> from <code>GetStaticPropsContext</code> .<br><br>How can this be accomplished within the app directory on the server?<br><br>I can only see <code>import { previewData } from &#x27;next/headers&#x27;;</code>  but this appears to only work on the client.<br><br>What I&#x27;ve implemented:<br>CMS:<br><pre><code class=\"hljs\">slug: &#x27;page&#x27;,\n  admin: {\n    useAsTitle: &#x27;Page&#x27;,\n    defaultColumns: [&#x27;title&#x27;, &#x27;slug&#x27;, &#x27;updatedAt&#x27;],\n    preview: (doc) =&gt; {\n      return `${process.env.PAYLOAD_PUBLIC_APP_URL}/api/preview?url=${formatAppURL(doc.slug)}`\n    },\n  versions: {\n    drafts: true\n  },\n  access: {\n    read: () =&gt; true,\n  },\n  },</code></pre><br>Website:<br><pre><code class=\"hljs\">export async function generateStaticParams(props) {\n  const pages = await fetchPages()\n  return pages.map((page) =&gt; {\n    return ({\n      slug: page.map(data =&gt; data?.slug),\n    })\n  })\n}</code></pre>",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676389424337
      },
      {
        "content": "@remy  afaik Next.js app directory does not yet support preview, but we&#x27;ll be the first to implement it as soon as it ships! That example uses the pages directory and will be merged within a day or two.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676389721052
      },
      {
        "content": "The woes of life of the bleeding edge 🗡️🩸",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676389945397
      },
      {
        "content": "Does this mean your website cms doesn&#x27;t have a functioning preview?",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676390052147
      },
      {
        "content": "Correct 🩸",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676390095072
      },
      {
        "content": "Livin on the edge",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676390103998
      },
      {
        "content": "It had preview for ~2 weeks until we decided to migrate to Next.js 13 beta",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676390146758
      },
      {
        "content": "For my future self and anyone else that looks this up, I believe this constitutes <em>Preview mode</em>: <a href=\"https://beta.nextjs.org/docs/app-directory-roadmap\">https://beta.nextjs.org/docs/app-directory-roadmap</a>",
        "authorID": "536888652257558538",
        "authorName": "remy",
        "authorAvatar": "a51bf6d5acf69d04ce856822b79a13ab",
        "createdAtDate": 1676392276442
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Unique constraint doesn't seem to work for email field",
      "id": "1067952769291526154",
      "createdAt": 1674690181802
    },
    "messages": [
      {
        "content": "Here&#x27;s my field config:<br><br><pre><code class=\"hljs ts\">    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;email&#x27;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;email&#x27;</span>,\n      <span class=\"hljs-attr\">unique</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">index</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>,\n    },</code></pre><br><br>The route doesn&#x27;t seem to be validating the <code>unique</code> constraint. From <a href=\"https://payloadcms.com/docs/fields/email#config\">https://payloadcms.com/docs/fields/email#config</a> it looks like <code>unique</code> can be used with <code>email</code> fields.<br><br>If it makes a difference, I added the constraint after the config was first used without it.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1674690181802
      },
      {
        "content": "Are there any indexes on that field in your db already? If you make another email with a different fieldname and make it unique what happens",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674694711220
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "FilterOptions for Array contains Array",
      "id": "1075322184697925702",
      "createdAt": 1676447187352
    },
    "messages": [
      {
        "content": "Hi,<br><br>I have the following Issue: <br><br>I have a category collection and a module collection, both of these have a technologies field (relationship field with hasMany option for a different collection). In my module field, I want to have a category field which automatically filters the available categories by the technologies of the module. <br><br>My main idea is to write a custom function that maps over the technologies of the module and checks if the technology is in the array of the categories&#x27; technology field and combine it with the OR clause. <br><br>I am honestly not sure if that is a viable solution and maybe there is something simpler, so if anybody has an idea it would be cool to hear it. Thanks in advance",
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1676447187352
      },
      {
        "content": "Have you seen the filterOptions property on relationship fields? It might be just what you are looking for <a href=\"https://payloadcms.com/docs/fields/relationship#filtering-relationship-options\">https://payloadcms.com/docs/fields/relationship#filtering-relationship-options</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676464167250
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Anyone has a good pointer on how to enable social logins ?",
      "id": "1071086861235277904",
      "createdAt": 1675437407550
    },
    "messages": [
      {
        "content": "Maybe an external service like auth0 or logto ?",
        "authorID": "240915797180940298",
        "authorName": "Oron",
        "authorAvatar": "fcb7f3548f20b48ee8a1780a32ce3d7a",
        "createdAtDate": 1675437407550
      },
      {
        "content": "Here is a plugin for auth0 written by a community-member: <a href=\"https://github.com/finkinfridom/payload-auth0-plugin\">https://github.com/finkinfridom/payload-auth0-plugin</a><br><br>Most SSO integrations are only accessible through an Enterprise license with Payload.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675442066443
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How hard is it to use an existing MongoDB database (That existed pre Payload) for PayloadCMS?",
      "id": "1055845443566829658",
      "createdAt": 1671803570406
    },
    "messages": [
      {
        "content": "Assume the schema of the documents in the collection is consistent.",
        "authorID": "276227047968210945",
        "authorName": "Harley Queens",
        "authorAvatar": "54b59995c428cbfd08a790f29a00e5df",
        "createdAtDate": 1671803570406
      },
      {
        "content": "We&#x27;re you able to use an existing DB? How&#x27;d it go?<br>I imagine you&#x27;d have a lot of tedious work trying to match up the collection field names exactly, but that it would work great once you got there.<br>The neat thing is that you won&#x27;t lose any data if old documents are updated in cases where your new fields don&#x27;t have 100% coverage of existing data.",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1675439015247
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Errors validating your Payload config",
      "id": "1067495824751345765",
      "createdAt": 1674581237734
    },
    "messages": [
      {
        "content": "Here we go again.<br><br>This is baffling. I started working on a new layout block, which I&#x27;ve so far ONLY added to the <code>reusable-content</code> collection. There were no errors when I started working on this an hour ago, and now when I run I get type errors on all the collections.<br><br>Ideas on how to dig deeper into this?<br><br><pre><code class=\"hljs shell\">[17:23:09] INFO (payload): Starting Payload...\n[17:23:36] ERROR (payload): There were 5 errors validating your Payload config\n[17:23:36] ERROR (payload): 1: Collection &quot;products&quot; &gt; Field &quot;value&quot; does not match any of the allowed types\n[17:23:36] ERROR (payload): 2: Collection &quot;essays&quot; &gt; Field &quot;value&quot; does not match any of the allowed types\n[17:23:36] ERROR (payload): 3: Collection &quot;collections&quot; &gt; Field &quot;value&quot; does not match any of the allowed types\n[17:23:36] ERROR (payload): 4: Collection &quot;pages&quot; &gt; Field &quot;value&quot; does not match any of the allowed types\n[17:23:36] ERROR (payload): 5: Collection &quot;reusable-content&quot; &gt; Field &quot;layout&quot; &gt; &quot;value&quot; does not match any of the allowed types\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.</code></pre>",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674581237734
      },
      {
        "content": "That was quick.<br>Thankfully I didn&#x27;t push a seemingly mundane property change.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674581543709
      },
      {
        "content": "<code>defaultValue</code> cannot be an empty string. You may want to update your type definition, so users get the warning in their IDE.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674581589095
      },
      {
        "content": "The value was on a field which I import into multiple layout blocks. I had simply removed the string, leaving <code>defaultValue: &#x27;&#x27;</code> rather than remove the property.",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1674581662763
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Generated type for upload field",
      "id": "1069454415444070560",
      "createdAt": 1675048202144
    },
    "messages": [
      {
        "content": "When running <code>generate:types</code>, upload fields using my <code>Images</code> collection are given the type <code>string | Image</code>.<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Opengraph</span> {\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">description</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">image</span>: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-title class_\">Image</span>;\n}</code></pre><br>This doesn&#x27;t make sense since the field needs subfields when querying it",
        "authorID": "492539613034971146",
        "authorName": "slava",
        "authorAvatar": "da5315004217f5d12e940e222a3d0292",
        "createdAtDate": 1675048202144
      },
      {
        "content": "Same thing is happening for <code>relationship</code> fields",
        "authorID": "492539613034971146",
        "authorName": "slava",
        "authorAvatar": "da5315004217f5d12e940e222a3d0292",
        "createdAtDate": 1675066872789
      },
      {
        "content": "Yes, in graphql, all fields down the tree are required to be filled out (cannot just specify image, you need to specify at least 1 nested field) - just the nature of graphql. The reason it is <code>string | Image</code>, stems from the RESTful API, if you have nested relationship fields you can add a <code>depth</code> query param to deepen or shallow the amount of nested relationships that get resolved.<br><br>For example - if you specify depth=0, relationships will not resolve and you will get the <code>id</code> in string format, hence the <code>string | Image</code> in your case",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675107342559
      },
      {
        "content": "What&#x27;s the approach for dealing with this in my framework? I&#x27;m fairly new to TS, do I have to add some kind of way to assert that the type isn&#x27;t a <code>string</code> in every instance the data is used? Seems like overkill/annoying for a case that isn&#x27;t even possible when using the GraphQL API (what I&#x27;m using)",
        "authorID": "492539613034971146",
        "authorName": "slava",
        "authorAvatar": "da5315004217f5d12e940e222a3d0292",
        "createdAtDate": 1675134758193
      },
      {
        "content": "Would adding some kind of flag to <code>payload generate:types</code> that tells it to ignore this <code>depth=0</code> case be possible?",
        "authorID": "492539613034971146",
        "authorName": "slava",
        "authorAvatar": "da5315004217f5d12e940e222a3d0292",
        "createdAtDate": 1675134804179
      },
      {
        "content": "Check out this related convo: <a href=\"https://discord.com/channels/967097582721572934/1061947681448153188\">https://discord.com/channels/967097582721572934/1061947681448153188</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675139666897
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Error using payload generate graphQLSchema",
      "id": "1069809115544694805",
      "createdAt": 1675132769238
    },
    "messages": [
      {
        "content": "Recently, started getting this error when trying to run <code>payload generate:graphQLSchema</code>:<br><br><pre><code class=\"hljs\">payload/node_modules/graphql/utilities/printSchema.js:54\n  const directives = schema.getDirectives().filter(directiveFilter);\n                            ^\n\nTypeError: Cannot read properties of undefined (reading &#x27;getDirectives&#x27;)</code></pre><br><br>The full command I&#x27;m using is <code>dotenv payload generate:graphQLSchema</code>, and <code>PAYLOAD_CONFIG_PATH</code> is defined in .env, though I have also tried running it with <code>-v PAYLOAD_CONFIG_PATH=src/payload.config.ts</code> just to be sure.<br><br>I have generated the GraphQL schema successfully recently, so wondering if this looks familiar to anyone.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675132769238
      },
      {
        "content": "Fixed in 1.6.3 <a href=\"https://github.com/payloadcms/payload/releases/tag/v1.6.3\">https://github.com/payloadcms/payload/releases/tag/v1.6.3</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675438399285
      },
      {
        "content": "@denolfe Thanks!",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675441298530
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "NextJS Error when using payload in same express server.",
      "id": "1068480390362308658",
      "createdAt": 1674815976468
    },
    "messages": [
      {
        "content": "Hi all! I use Payload in combination with NextJS. For that I made my own server.js that ensures that Next and Payload run on the same express server. However, I get the following error from NextJS.<br><br><pre><code class=\"hljs\">error - Error [ERR_REQUIRE_ESM]: require() of ES Module /&lt;PATH TO PROJECT&gt;/src/node_modules/react-dnd/dist/index.js from /&lt;PATH TO PROJECT&gt;/src/.next/server/pages/ planning/[[...args]].js not supported.</code></pre><br><br>Next tells me to replace the <code>require</code> statements, but since this is an external package (<code>react-dnd</code>) I can&#x27;t just change it.<br><br>When I run the application without a payload (just remove the <code>payload.init</code>), I don&#x27;t get the error and the NextJS app runs great. My suspicion is that this is a webpack configuration of payload, but I&#x27;m not really sure how to solve it. Does anyone have an idea?<br><br>Here&#x27;s the code of my server.js:<br><pre><code class=\"hljs\">// server.js\nconst dotenv = require(&quot;dotenv&quot;);\nconst express = require(&quot;express&quot;);\nconst next = require(&quot;next&quot;);\nconst payload = require(&quot;payload&quot;);\nconst path = require(&quot;path&quot;);\n\ntry {\n  dotenv.config({\n    path: path.resolve(__dirname, &quot;../.env&quot;),\n  });\n\n  if (!process.env.IS_DOCKER) {\n    dotenv.config({\n      path: path.resolve(__dirname, `../.env.local`),\n    });\n  }\n\n  const dev = process.env.NODE_ENV !== &quot;production&quot;;\n  const hostname = process.env.NEXT_PUBLIC_HOSTNAME || &quot;localhost&quot;;\n  const port = process.env.NEXT_PUBLIC_PORT || &quot;3000&quot;;\n  const { PAYLOAD_SECRET_KEY, MONGO_URL } = process.env;\n\n  const app = next({ dev, hostname, port });\n  const handle = app.getRequestHandler();\n\n  const server = express();\n\n  payload.init({\n    secret: PAYLOAD_SECRET_KEY,\n    mongoURL: MONGO_URL,\n    express: server,\n  });\n  server.all(&quot;*&quot;, (req, res) =&gt; handle(req, res));\n\n  app\n    .prepare()\n    .then(() =&gt; {\n      server.listen(process.env.PORT, async () =&gt; {\n        console.log(`Server listening on ${process.env.PORT}...`);\n      });\n    })\n    .catch((error) =&gt; {\n      console.log(error);\n    });\n} catch (e) {\n  console.error(e);\n}</code></pre>",
        "authorID": "1062755969270030376",
        "authorName": "voide",
        "authorAvatar": null,
        "createdAtDate": 1674815976468
      },
      {
        "content": "Is react-dnd ESM only? If so, that may be the issue.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675438143938
      },
      {
        "content": "If I remember correctly, react-dnd is ESNext. Should that matter? I don&#x27;t really understand why the application doesn&#x27;t work when I run Payload in the same express server, but if I just run NextJs on this express server, it works. These applications should be able to run independently of each other (on the same express server), right?",
        "authorID": "767650700536446990",
        "authorName": "voide",
        "authorAvatar": "7f83a2bf57fa1f3906f2f8445a020327",
        "createdAtDate": 1675682191711
      },
      {
        "content": "Unfortunately with TypeScript and tsconfigs, this isn&#x27;t as straight forward at times.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691274651
      },
      {
        "content": "If I were seeing that error, the first thing I&#x27;d look at is my tsconfig and also the react-dnd documentation about being ESM-only",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691316242
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Suggestion: Allow the \"options\" field property to be a function similar to hooks",
      "id": "1064471608833609728",
      "createdAt": 1673860208472
    },
    "messages": [
      {
        "content": "My idea here is that, for example with &quot;select&quot; fields, if the &quot;options&quot; property were to accept a function, and that function could access the data of other fields in the current collection/global, then it would become possible to have fields whose available options are dynamic based on the other values in the content item.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1673860208472
      },
      {
        "content": "Hey @Kyr feel free to open this one up as a discussion on Github, and we&#x27;ll go from there. Appreciate the idea!",
        "authorID": "364562745447940099",
        "authorName": "zubricks",
        "authorAvatar": "44115fecb609a69a5ef35b4d8ac908f6",
        "createdAtDate": 1673884352817
      },
      {
        "content": "Done: <a href=\"https://github.com/payloadcms/payload/discussions/1899\">https://github.com/payloadcms/payload/discussions/1899</a>",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1673944998523
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Migrate from KeystoneJS v4 (Keystone Classic)",
      "id": "1070191210834182194",
      "createdAt": 1675223867854
    },
    "messages": [
      {
        "content": "Ive got a number of older sites running keystone v4... Lately been wondering if i&#x27;ts possible to migrate these over to Payload. Seems doable, but does anybody have any insight to how challenging/possible this would be or have any ideas, pointers, experience doing something similar?",
        "authorID": "958604809215283250",
        "authorName": "joephuz",
        "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
        "createdAtDate": 1675223867854
      },
      {
        "content": "I haven&#x27;t used keystone for quite some time, but really what this comes down to is massaging data from keystone into the right form in order to put into Payload. That will determine how difficult of a task this is. You&#x27;d use the Payload local API for this inside of a script.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675441025988
      },
      {
        "content": "Here is some pseudo-code for you:<br><pre><code class=\"hljs\">import payload from &#x27;payload&#x27;;\n\nrequire(&#x27;dotenv&#x27;).config();\n\nconst { PAYLOAD_SECRET, MONGODB_URI } = process.env;\n\nconst migratePosts = async () =&gt; {\n  await payload.init({\n    secret: PAYLOAD_SECRET,\n    mongoURL: MONGODB_URI,\n    local: true,\n  });\n\n  // Retrieve &#x27;Posts&#x27; from keystone&#x27;\n  // Modify data accordingly\n  const postsToMigrate = [];\n  const adjustedPostData = adjust(postsToMigrate);\n\n  // Create new &#x27;Posts&#x27; in Payload\n  adjustedPostData.map(async post =&gt; {\n    const newPost = await payload.create({ collection: &#x27;posts&#x27;, data: post });\n  })\n\n};\n\nmigratePosts();</code></pre>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675441590449
      },
      {
        "content": "Also, here is a more advanced example migrating csv data which might be good to look at: <a href=\"https://github.com/payloadcms/payload/discussions/1660#discussioncomment-4485387\">https://github.com/payloadcms/payload/discussions/1660#discussioncomment-4485387</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675519991580
      },
      {
        "content": "Thanks for your feedback @denolfe … I’ve been working on this and it’s coming along great. I actually just started running the payload and keystone in tandem on different ports. Then in the keystone just make myself a temporary endpoint to hit payloads REST api after transforming the data to to the format for payload. Mostly straightforward but the trickiest part is the media files since those are handled drastically different (better) in payload. But overall got all of my tests working, just in the grunt work phase. Finally my front end should drop in pretty painlessly just tweaking all the queries over with payloads local Api! 👍",
        "authorID": "958604809215283250",
        "authorName": "joephuz",
        "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
        "createdAtDate": 1675918663747
      },
      {
        "content": "Another side note for the media files.. the original app is using S3 storage. I found the payload plugin which is AMAZING, but I had to trick it to port over my existing files/links. i did this by createing a basic, “not upload enabled” collection that mirrors the payload  media collection schema just using text and numbers etc. because payload would error if you hit the api without a file to upload. Once I run my script to inject all the existing docs I swap the collection slugs for the temporary “not upload” collection and the real upload collection and boom! Got all the s3 files ready to go!",
        "authorID": "958604809215283250",
        "authorName": "joephuz",
        "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
        "createdAtDate": 1675919156631
      },
      {
        "content": "Nice, this script might be somewhat relevant as well: <a href=\"https://github.com/payloadcms/payload/discussions/1834\">https://github.com/payloadcms/payload/discussions/1834</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675958523350
      },
      {
        "content": "Yes! I needed this thanks so much🙏",
        "authorID": "958604809215283250",
        "authorName": "joephuz",
        "authorAvatar": "a668b9d3f23523d2aae8ac84d9724c60",
        "createdAtDate": 1676095682747
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Solution Architecture Brainstorm",
      "id": "1064931866962038854",
      "createdAt": 1673969942561
    },
    "messages": [
      {
        "content": "I have a general question about the architecture of a solution I&#x27;m creating... <br><br>PREMISE: <br>I&#x27;m have a Turborepo with several Next.js apps inside. Each app is hosted on its own domain. I want each of these apps to have a CMS powered by Payload CMS. Note that I do have a shared UI and a shared DB set up in the Turborepo. <br><br>SOLUTIONS: <br>Here&#x27;s two architectural options I&#x27;m considering, and I would like some feedback as to which one y&#x27;all think would be the best solution. <br><br>1) I can integrate Payload CMS into <em>each</em> Next.js app such that when a client needs to access their CMS, they would remain in their own domain and within the context of their app. <br>- I can access the shared UI and DB such that the UI will remain consistent across all clients&#x27; CMSs. <br>- This option also makes it seemingly easier to package the CMS and the site together if I ever needed these codebases to not be in the monorepo any longer. <br><br>2) I can create <em>one</em> Payload CMS app (carefully handling access control for each client organization) for all of the clients to manage their content. <br>- This would make the traffic to the client&#x27;s site not include any CMS traffic. <br>- This does however mean that clients would be redirected to a different site (my in-house CMS) to manage their content. <br>- Would this affect my ability to implement a preview feature? <br>- I am considering this option because if I were to make changes to my CMS later on, there would be only one single Payload CMS to manage and update. <br>- I also like the idea of being able to manage all of my users across all clientele in one panel. <br><br>Any thoughts?  Please let me know if you have any questions regarding my thoughts and suggested approaches....",
        "authorID": "1047669407708610661",
        "authorName": "browniedev",
        "authorAvatar": "bc09a78c8bd507dffa53e59033933c80",
        "createdAtDate": 1673969942561
      },
      {
        "content": "Option 1, integrating Payload CMS into each Next.js app, would allow clients to access their CMS within the context of their own app and domain. This would make it easier to package the CMS and site together if needed, and allows you to use the shared UI and DB for consistency across all client CMSs. However, it may require more maintenance and updates if changes need to be made to the CMS for each individual app.<br><br>Option 2, creating one Payload CMS app for all clients, would allow you to manage all users and content in one panel, but may require more complex access control and redirect clients to a different site to manage their content. This option would also separate the CMS traffic from the client&#x27;s site traffic, which may be beneficial. However, it may be harder to implement a preview feature, and would require more maintenance and updates if changes need to be made to the CMS.<br><br>Ultimately, the best solution depends on your specific requirements and priorities. Some things to consider include the importance of preview feature, the need for consistent UI across all clients, ease of maintenance and updates, and the level of access control required.",
        "authorID": "930744788859359282",
        "authorName": "cookernetes",
        "authorAvatar": "10c087ae991709d87a90c5019f61c7d6",
        "createdAtDate": 1673971098131
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "How to setup row of image inside rich text?",
      "id": "1075195583108755556",
      "createdAt": 1676417003181
    },
    "messages": [
      {
        "content": "I want to implement multiple image in one row, does anybody know how to do this?",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676417003181
      }
    ],
    "messageCount": 0
  },
  {
    "info": {
      "name": "How to create a REST API query for an array from a collection?",
      "id": "1073500182462877706",
      "createdAt": 1676012788168
    },
    "messages": [
      {
        "content": "How can I create a query for tags title is equals to House &amp; Lot? Kindly check the image for reference the of my collection",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676012788168
      },
      {
        "content": "How to create a REST API query for an array from a collection?",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676012860737
      },
      {
        "content": "You can use dot notation in your query like this: <code>/api/properties?where[tags.title][equals]=House%20%26%20Lot</code>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676034118025
      },
      {
        "content": "I believe dot notation is for objects only.",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676038674361
      },
      {
        "content": "The rest api will parse the dot notation into the proper database query, it works for both objects and arrays.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676039475047
      },
      {
        "content": "You may have to nest another level down if you are using qs to parse your queries (not sure if you are or not). Regardless it would be something like:<br><br><pre><code class=\"hljs typescript\">{<span class=\"hljs-attr\">tags</span>: {<span class=\"hljs-attr\">title</span>: {<span class=\"hljs-attr\">equals</span>: <span class=\"hljs-string\">&quot;House &amp; Lot&quot;</span>}}}</code></pre>",
        "authorID": "1028003433090924695",
        "authorName": "blupandaman",
        "authorAvatar": "8d2d614fe5f612d9850c22759c6b046a",
        "createdAtDate": 1676039768513
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Auth integration with frontend",
      "id": "1064875632107978762",
      "createdAt": 1673956535127
    },
    "messages": [
      {
        "content": "Hello, I&#x27;m making this post because I have PayloadCMS as backend and NextJS as front-end. I&#x27;m very lost about how access the payload builtin authentication. I tried to take a look at <code>next-auth-frontend</code> repository but I didn&#x27;t understand much... I was hoping that someone has some more resources on the topic.<br><br>To be more specific, I&#x27;m looking at what API endpoints I can call to access Payload authentication from my frontend. But any other resource that can help is very welcome.<br>Edit: I was able to find the authentication endpoints inside the docs. Now I only need to submit the request to them",
        "authorID": "765140200438366209",
        "authorName": "Lloyd",
        "authorAvatar": "747c3cf51f84086ffb7b2a1d73eee84d",
        "createdAtDate": 1673956535127
      },
      {
        "content": "Update: someone who works at payload replied to me on Reddit and he said that I&#x27;m allowed to ask questions about NextJS too, so I will extend my initial question<br><br>I tried to integrate NextAuth inside my NextJS app, and followed to guide for authentication with Credentials. From [here](<a href=\"https://next-auth.js.org/providers/credentials\">https://next-auth.js.org/providers/credentials</a>)  but I don&#x27;t understand how to complete the code to make the request.",
        "authorID": "765140200438366209",
        "authorName": "Lloyd",
        "authorAvatar": "747c3cf51f84086ffb7b2a1d73eee84d",
        "createdAtDate": 1673964110772
      },
      {
        "content": "The example looks like this <br><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">CredentialsProvider</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;next-auth/providers/credentials&quot;</span>;\n...\n<span class=\"hljs-attr\">providers</span>: [\n  <span class=\"hljs-title class_\">CredentialsProvider</span>({\n    <span class=\"hljs-comment\">// The name to display on the sign in form (e.g. &quot;Sign in with...&quot;)</span>\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;Credentials&quot;</span>,\n    <span class=\"hljs-comment\">// `credentials` is used to generate a form on the sign in page.</span>\n    <span class=\"hljs-comment\">// You can specify which fields should be submitted, by adding keys to the `credentials` object.</span>\n    <span class=\"hljs-comment\">// e.g. domain, username, password, 2FA token, etc.</span>\n    <span class=\"hljs-comment\">// You can pass any HTML attribute to the &lt;input&gt; tag through the object.</span>\n    <span class=\"hljs-attr\">credentials</span>: {\n      <span class=\"hljs-attr\">username</span>: { <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;Username&quot;</span>, <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text&quot;</span>, <span class=\"hljs-attr\">placeholder</span>: <span class=\"hljs-string\">&quot;jsmith&quot;</span> },\n      <span class=\"hljs-attr\">password</span>: { <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;Password&quot;</span>, <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;password&quot;</span> }\n    },\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">authorize</span>(<span class=\"hljs-params\">credentials, req</span>) {\n      <span class=\"hljs-comment\">// Add logic here to look up the user from the credentials supplied</span>\n      <span class=\"hljs-keyword\">const</span> user = { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;J Smith&quot;</span>, <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">&quot;jsmith@example.com&quot;</span> }\n\n      <span class=\"hljs-keyword\">if</span> (user) {\n        <span class=\"hljs-comment\">// Any object returned will be saved in `user` property of the JWT</span>\n        <span class=\"hljs-keyword\">return</span> user\n      } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-comment\">// If you return null then an error will be displayed advising the user to check their details.</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>\n\n        <span class=\"hljs-comment\">// You can also Reject this callback with an Error thus the user will be sent to the error page with the error message as a query parameter</span>\n      }\n    }\n  })\n]\n...</code></pre>",
        "authorID": "765140200438366209",
        "authorName": "Lloyd",
        "authorAvatar": "747c3cf51f84086ffb7b2a1d73eee84d",
        "createdAtDate": 1673964129934
      },
      {
        "content": "And I don&#x27;t understand the part where it says <code>add logic here to look up the user from the credentials supplied</code>. What am I supposed to enter here?",
        "authorID": "765140200438366209",
        "authorName": "Lloyd",
        "authorAvatar": "747c3cf51f84086ffb7b2a1d73eee84d",
        "createdAtDate": 1673964192246
      },
      {
        "content": "Hey @Lloyd you&#x27;ve inspired me to a write a github discussion on this topic, check it out! <a href=\"https://github.com/payloadcms/payload/discussions/1902\">https://github.com/payloadcms/payload/discussions/1902</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673967820230
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Is it supposed to be possible to change the webpack config in a plugin?",
      "id": "1037343828497154078",
      "createdAt": 1667392441630
    },
    "messages": [
      {
        "content": "I would like to add some items to <code>resolve.alias</code> but it doesn&#x27;t seem to be affected:<br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">admin</span>: {\n  ...incomingConfig.<span class=\"hljs-property\">admin</span>,\n\n  <span class=\"hljs-attr\">webpack</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">incoming</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> incomingWebpack = incomingConfig.<span class=\"hljs-property\">admin</span>?.<span class=\"hljs-property\">webpack</span> || (<span class=\"hljs-function\">(<span class=\"hljs-params\">a</span>) =&gt;</span> a)\n    <span class=\"hljs-keyword\">const</span> config = <span class=\"hljs-title function_\">incomingWebpack</span>(incoming)\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;icmign applied&#x27;</span>)\n    <span class=\"hljs-keyword\">return</span> {\n      ...config,\n      <span class=\"hljs-attr\">resolve</span>: {\n        ...config.<span class=\"hljs-property\">resolve</span>,\n        <span class=\"hljs-attr\">alias</span>: {\n          ...config.<span class=\"hljs-property\">resolve</span>.<span class=\"hljs-property\">alias</span>,\n          <span class=\"hljs-attr\">axios</span>: <span class=\"hljs-literal\">false</span>,\n          <span class=\"hljs-string\">&#x27;passport-oauth2&#x27;</span>: <span class=\"hljs-literal\">false</span>,\n          <span class=\"hljs-string\">&#x27;express-session&#x27;</span>: <span class=\"hljs-literal\">false</span>,\n          <span class=\"hljs-attr\">passport</span>: <span class=\"hljs-literal\">false</span>,\n        },\n      },\n    }\n  },\n},</code></pre>",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667392441630
      },
      {
        "content": "Yes, absolutely you can do this",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667397073907
      },
      {
        "content": "you can see an example of how we do it in the cloud storage plugin",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667397084767
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/plugin-cloud-storage\">https://github.com/payloadcms/plugin-cloud-storage</a>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667397090406
      },
      {
        "content": "each adapter is responsible for extending the Webpack config",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667397097870
      },
      {
        "content": "you may need to <code>rm -Rf node_modules/.cache</code> to see changes",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1667397129094
      },
      {
        "content": "I&#x27;m building an oAuth plugin, is it ok if I publish the source code?",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667408026744
      },
      {
        "content": "<del>I have also tried to add a sign in button by setting <code>admin.components.beforeLogin</code> but it doesn&#x27;t seem to work.</del>",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667408113524
      },
      {
        "content": "Oh, just noticed what happened",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667408510399
      },
      {
        "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">oAuthPlugin</span>(<span class=\"hljs-params\">incoming: Config</span>): <span class=\"hljs-title class_\">Config</span> {\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable constant_\">CLIENTSIDE</span>) <span class=\"hljs-keyword\">return</span> incoming</code></pre>",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667408537019
      },
      {
        "content": "Thanks, the webpack config is working too now.",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1667409354766
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "problem with dispatchField - ADD_ROW doesn't show up and cause error when saving",
      "id": "1060874983452200990",
      "createdAt": 1673002706159
    },
    "messages": [
      {
        "content": "I have a problem recently that I try to use dispatchField with the type <code>ADD_ROW</code> but when the function is execute,<br><br><pre><code class=\"hljs\">const [fields, dispatchField] = useAllFormFields()\n\ndispatchField({\n  type: &#x27;ADD_ROW&#x27;,\n  path: &#x27;__path__&#x27;,\n  rowIndex: 0,\n  subFieldState: {\n    provider: {\n      initialValue: &#x27;&#x27;,\n      value: __value__,\n      valid: true,\n    },\n  },\n})</code></pre><br><br>I think the state has been updated but there is no row being add on the dash board and also cause an error on saving draft or publishing.<br><br><pre><code class=\"hljs\">[10:43:44] ERROR (payload): There was an error while creating a draft [object Object] with ID xxxxxxx.\n[10:43:44] ERROR (payload): _shows_versions validation failed: version.__path__: Cast to embedded failed for value &quot;1&quot; (type number) at path &quot;__path__&quot; because of &quot;ObjectParameterError&quot;\n[10:43:44] ERROR (payload): TypeError: Cannot read properties of undefined (reading &#x27;version&#x27;)</code></pre><br><br>The workaround I do now is to manually add the row and then deleted the manually created one before saving which I think it is the additional task.<br><br>I don&#x27;t know if there are any solution to solve this bug?",
        "authorID": "434737607742586880",
        "authorName": "iamPrompt",
        "authorAvatar": "f772fda196645994bd7821f5dc341293",
        "createdAtDate": 1673002706159
      },
      {
        "content": "@iamPrompt try to use the <code>useFormFields</code> hook instead, it&#x27;s much more performant and might easier to work with. <code>const { value } = useFormFields(([fields, dispatch]) =&gt; fields[path])</code>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673013618680
      },
      {
        "content": "Here&#x27;s some related docs, too: <a href=\"https://payloadcms.com/docs/admin/hooks#useformfields\">https://payloadcms.com/docs/admin/hooks#useformfields</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673013671590
      },
      {
        "content": "@jacobsfletch I think, to get the value is fine but the way to dispatch or create a row in an array in programming way is the real problem. I&#x27;m not sure that there might be some different in <code>dispatch</code> function or not by using <code>useFormFields</code>.<br>I have a few fields to change, I call dispatchField once at a time, everything fine, but the array one causing an error.",
        "authorID": "434737607742586880",
        "authorName": "iamPrompt",
        "authorAvatar": "f772fda196645994bd7821f5dc341293",
        "createdAtDate": 1673015441632
      },
      {
        "content": "As I saw in Array field-types <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Array/index.tsx#L102\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/Array/index.tsx#L102</a> when adding row in the array, there is a call to <code>dispatchRows</code> immediately after <code>dispatchFields</code> execute. I&#x27;m not sure whether <code>dispatchRows</code> is a thing, if so I have tried to find the way to access it but not successful as it might depending on its own fields. What I call is from other fields to set the value.",
        "authorID": "434737607742586880",
        "authorName": "iamPrompt",
        "authorAvatar": "f772fda196645994bd7821f5dc341293",
        "createdAtDate": 1673017722206
      },
      {
        "content": "@iamPrompt yes, to add a row to an array you also need to update that array field&#x27;s internal row state. @zubricks I think we should write a blog post about how to do this",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673045399364
      },
      {
        "content": "@jmikrut is there a quick solution how to do this?",
        "authorID": "434737607742586880",
        "authorName": "iamPrompt",
        "authorAvatar": "f772fda196645994bd7821f5dc341293",
        "createdAtDate": 1673058899026
      },
      {
        "content": "@jmikrut how do we update the array field&#x27;s internal row state?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675158509015
      },
      {
        "content": "we could certainly build a utility to make this easier but right now it would take some manual work",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675171635002
      },
      {
        "content": "Any idea about this??",
        "authorID": "434737607742586880",
        "authorName": "iamPrompt",
        "authorAvatar": "f772fda196645994bd7821f5dc341293",
        "createdAtDate": 1675871539395
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "Access control to unpublish",
      "id": "1070403097052057660",
      "createdAt": 1675274385465
    },
    "messages": [
      {
        "content": "Is there a way to add access control to unpublish a document?",
        "authorID": "435590980838621194",
        "authorName": "Cerize",
        "authorAvatar": null,
        "createdAtDate": 1675274385465
      },
      {
        "content": "Answered in GH Discussions here: <a href=\"https://github.com/payloadcms/payload/discussions/1996#discussioncomment-4845491\">https://github.com/payloadcms/payload/discussions/1996#discussioncomment-4845491</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675451494241
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "API Key issue",
      "id": "1069735518562168912",
      "createdAt": 1675115222350
    },
    "messages": [
      {
        "content": "There is a weird problem happening with the api key string, every time I&#x27;m changing workspace ex switching from personal to  work laptop or in production mode, the string is just doing this. It&#x27;s not just a display problem because the api key isn&#x27;t working anymore after the bug. Anyone having the same issue? (using payload 1.5.8)",
        "authorID": "122444319054495746",
        "authorName": "SKRY",
        "authorAvatar": "5b54bd085cab964c72bce21dcfe04638",
        "createdAtDate": 1675115222350
      },
      {
        "content": "Are you using the same secret key in both workspaces?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675115276347
      },
      {
        "content": "This might be the problem, I&#x27;m checking",
        "authorID": "122444319054495746",
        "authorName": "SKRY",
        "authorAvatar": "5b54bd085cab964c72bce21dcfe04638",
        "createdAtDate": 1675115381774
      },
      {
        "content": "That would be my best guess since this API key is encrypted using the key. Attempting to decrypt with a different key wouldn&#x27;t work and may result in what you&#x27;re seeing",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675115414540
      },
      {
        "content": "Ok yes the secret keys where different, thanks",
        "authorID": "122444319054495746",
        "authorName": "SKRY",
        "authorAvatar": "5b54bd085cab964c72bce21dcfe04638",
        "createdAtDate": 1675116001578
      },
      {
        "content": "No problem 👍",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675116012042
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Field type (group) not populating data when creating collection from the post request",
      "id": "1065538132436590622",
      "createdAt": 1674114487514
    },
    "messages": [
      {
        "content": "I am creating an entry from frontend by sending a post request to the collection route.<br>I have attached the data coming from frontend and also the payload collection.  Data is nested in an object. So i used the type group in the collection schema&#x27;s wherever needed.  Maybe i am not understanding this field type (group). and there are not much in the documentation about this type too. So can somebody help me. Only the products are populating for me which has the type array. Everything else is not populating.",
        "authorID": "941688759034970132",
        "authorName": "bigDaddy",
        "authorAvatar": "f59cf5ca783ae53f37e8a99cfbcc9a18",
        "createdAtDate": 1674114487514
      },
      {
        "content": "Hey! Do you get any error message for this? If so, could you attach it? My first guess was that groups are one of the ui-only field types but it seems to me that your code is mostly correct. I can have a deeper look in about 45 minutes, should you still have the problem then 🙂",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1674116955291
      },
      {
        "content": "Thanks tim for the reply, i noticed everything is fine and i was sending the request to the deployed url on which i never committed the latest changes. So Everything good now! 😅",
        "authorID": "941688759034970132",
        "authorName": "bigDaddy",
        "authorAvatar": "f59cf5ca783ae53f37e8a99cfbcc9a18",
        "createdAtDate": 1674118149391
      },
      {
        "content": "perfect, the errors that solve themselves are my favourites 😆 <br>Good luck to you 🙂",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1674118246215
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "How to query a a value inside hasMany?",
      "id": "1072878122225119302",
      "createdAt": 1675864477450
    },
    "messages": [
      {
        "content": "I have a field relationTo inside my collection that has hasMany. I&#x27;m trying to create a fetch query that can find a value inside of that field. How can I do that? Thanks",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1675864477450
      },
      {
        "content": "is relationTo and array or a string?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675871400346
      },
      {
        "content": "It a news tags, this is the sample news return<br><br>{<br>  newsTitle: &quot;Hello&quot;,<br>  ....<br>  tags: [<br>    {<br>       value: {<br>         title: &quot;Tag name&quot;,<br>         ....<br>       }<br>       relationTo: &quot;tags&quot;<br>    },<br>    {<br>     .... <br>    }<br>  ]<br>}<br><br>I want to query tags item title if its the same with &quot;Tag name&quot;",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1675894818444
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Admin 'error' after proxy config",
      "id": "1075421217349177474",
      "createdAt": 1676470798576
    },
    "messages": [
      {
        "content": "Hey all, started getting this error after changing my payload nginx config to server on /payload.<br><br><pre><code class=\"hljs\">EventSource&#x27;s response has a MIME type (&quot;text/html&quot;) that is not &quot;text/event-stream&quot;. Aborting the connection.</code></pre><br><br>The odd thing is that seemingly nothing is broken, it just loops this message, I assume as it tries to connect to hmr?<br><br>Happy to provide more info.",
        "authorID": "1049775120559898725",
        "authorName": "thisisnotchris",
        "authorAvatar": "b4da2105650b067c9b3765334ea4c43a",
        "createdAtDate": 1676470798576
      }
    ],
    "messageCount": 0
  },
  {
    "info": {
      "name": "Get draft document with Rest API call",
      "id": "1057641996468092968",
      "createdAt": 1672231901996
    },
    "messages": [
      {
        "content": "How i can i get draft document with API call?",
        "authorID": "685569866400399360",
        "authorName": "hanan_mehmood",
        "authorAvatar": "e4878a1f613a17a826d396b3b388bfa4",
        "createdAtDate": 1672231901996
      },
      {
        "content": "Using the local api?",
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1672300064357
      },
      {
        "content": "Hey @hanan_mehmood try <code>/api/[your-collection]?where[_status][equals]=draft</code>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1672911833554
      },
      {
        "content": "Either that, or if you want to fetch a specific page in draft mode, add  &quot;?draft=true&quot; to the url:",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1672911898834
      },
      {
        "content": "e.g /api/pages/XYZ?draft=true",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1672911914117
      },
      {
        "content": "Thank you all for replies 🙌🏻. Solution by Sandro worked for me at that time.",
        "authorID": "685569866400399360",
        "authorName": "hanan_mehmood",
        "authorAvatar": "e4878a1f613a17a826d396b3b388bfa4",
        "createdAtDate": 1674488849430
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Tabs nested inside block return incorrect siblingData",
      "id": "1057482225471463467",
      "createdAt": 1672193809622
    },
    "messages": [
      {
        "content": "When a TabsField is nested inside a block, the <em>siblingData</em> parameter in <code>condition</code> returns the data found in pageData.layout. In other fields at the same level (e.g., UploadField), <em>siblingData</em>  returns the field data for the specific block. <br><br>I would think that&#x27;s the expected behavior, as the conditional data returned by TabsField now doesn&#x27;t seem usable as you wouldn&#x27;t know which block to be getting the data from.<br><br>Am I doing something incorrectly, or is this working as intended?<br><br>Sample code: <br><br><pre><code class=\"hljs\">const DesktopImageField: UploadField = {\n    name: &#x27;desktopImage&#x27;,\n    type: &#x27;upload&#x27;,\n    relationTo: Images.slug,\n    required: true,\n    admin: {\n        condition: (data, siblingData) =&gt; {\n            console.log(&#x27;DesktopImage:&#x27;)\n            console.log(siblingData);\n            return true;\n        }\n    }\n}\n\nconst DesktopImageBackgroundField: UploadField = {\n    name: &#x27;desktopImageBackground&#x27;,\n    type: &#x27;upload&#x27;,\n    relationTo: Images.slug,\n    required: true,\n}\n\n\nconst desktopTab: Tab = {\n    label: &#x27;Desktop&#x27;,\n    fields: [\n        DesktopImageBackgroundField,\n    ]\n}\n\nconst ComplexTabsField: TabsField = {\n    type: &#x27;tabs&#x27;,\n    admin: {\n        condition: (data, siblingData) =&gt; {\n            console.log(&#x27;Tabs&#x27;)\n            console.log(siblingData);\n             return true;\n        }\n    },\n    tabs: [\n        desktopTab\n    ]\n}</code></pre>",
        "authorID": "1006736719950913566",
        "authorName": "kaitwalla",
        "authorAvatar": "e712c8c64bc4593e7dfb3578fc330815",
        "createdAtDate": 1672193809622
      },
      {
        "content": "Hi @kaitwalla - this is intended behavior, the initial tab is presentational-only. However, you can add a name property to any tab field and it will act like a group, then the sibling data would be as you described.<br><br><br>You can update the desktopTab in your example and compare:<br><pre><code class=\"hljs\">const desktopTab: Tab = {\n    name: &#x27;desktop&#x27;,\n    label: &#x27;Desktop&#x27;,\n    fields: [\n        DesktopImageBackgroundField,\n    ]\n}</code></pre><br><br>also docs: <a href=\"https://payloadcms.com/docs/fields/tabs#example\">https://payloadcms.com/docs/fields/tabs#example</a>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674812841135
      },
      {
        "content": "Thanks Jess, my issue was addressed in a fix last month: <a href=\"https://github.com/payloadcms/payload/pull/1789\">https://github.com/payloadcms/payload/pull/1789</a>",
        "authorID": "1006736719950913566",
        "authorName": "kaitwalla",
        "authorAvatar": "e712c8c64bc4593e7dfb3578fc330815",
        "createdAtDate": 1674842295319
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "can we create child dashboards of main payloadcms dashboards ?",
      "id": "1068224433480802446",
      "createdAt": 1674754951592
    },
    "messages": [
      {
        "content": "Can we create a learning management system in payloadCMS",
        "authorID": "1064587819214983229",
        "authorName": "JatinSongara",
        "authorAvatar": null,
        "createdAtDate": 1674754951592
      },
      {
        "content": "Can you provide more detail on what you would need to build?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674757298980
      },
      {
        "content": "I wanna build a Learning Management System , so I need 4 different dashboards 1 for student 1 for teacher/instructor 1 for Admin and 1 for superadmin",
        "authorID": "1064587819214983229",
        "authorName": "JatinSongara",
        "authorAvatar": null,
        "createdAtDate": 1674757815763
      },
      {
        "content": "When you say different dashboards. Are you referring to what collections are visible to the user or a completely custom dashboard page?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674757961331
      },
      {
        "content": "(I&#x27;m assuming you mean dashboards inside the Payload Admin)",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674757999212
      },
      {
        "content": "Yes",
        "authorID": "1064587819214983229",
        "authorName": "JatinSongara",
        "authorAvatar": null,
        "createdAtDate": 1674758006749
      },
      {
        "content": "For sure",
        "authorID": "1064587819214983229",
        "authorName": "JatinSongara",
        "authorAvatar": null,
        "createdAtDate": 1674758010159
      },
      {
        "content": "Rolls based access",
        "authorID": "1064587819214983229",
        "authorName": "JatinSongara",
        "authorAvatar": null,
        "createdAtDate": 1674758040532
      },
      {
        "content": "Sounds like you&#x27;d model this as each user has a <code>role</code> on it. Then have a series of access control functions that reference that field to determine what operations to allow.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674758101134
      },
      {
        "content": "👍",
        "authorID": "1064587819214983229",
        "authorName": "JatinSongara",
        "authorAvatar": null,
        "createdAtDate": 1674758149934
      },
      {
        "content": "Let me look into this",
        "authorID": "1064587819214983229",
        "authorName": "JatinSongara",
        "authorAvatar": null,
        "createdAtDate": 1674758160786
      },
      {
        "content": "Here are some reference links about how to configure RBAC:<br><br>- <a href=\"https://payloadcms.com/blog/build-your-own-rbac\">https://payloadcms.com/blog/build-your-own-rbac</a><br>- <a href=\"https://payloadcms.com/blog/access-control-overview\">https://payloadcms.com/blog/access-control-overview</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674758164989
      },
      {
        "content": "Thanks Man",
        "authorID": "1064587819214983229",
        "authorName": "JatinSongara",
        "authorAvatar": null,
        "createdAtDate": 1674758186998
      }
    ],
    "messageCount": 12
  },
  {
    "info": {
      "name": "Mime Type For Admin Condition Across Relations",
      "id": "1064957346700337202",
      "createdAt": 1673976017404
    },
    "messages": [
      {
        "content": "Currently I have a Media collection that can accept upload.mimeTypes: [&#x27;image/<em>&#x27;, &#x27;video/</em>&#x27;]<br><br>I have an Article collection that has a relationship to media. In the article collection I want to conditionally display fields using admin.condition based on if the mime type of the Media doc that is selected.<br><br>Is this possible? The selected media&#x27;s data is the media _id instead of the media doc as a whole. Is there a place I should write an api query to power admin.conditions for the fields i want to conditionally show on Articles?",
        "authorID": "1054487065674403972",
        "authorName": "grant_msft",
        "authorAvatar": null,
        "createdAtDate": 1673976017404
      },
      {
        "content": "@grant_msft yep I completely understand what your describing here, your media field is a relationship to an upload, which is just a reference to an id and not the full doc. What you need to do is fetch the full doc—but you should not make  <code>admin.condition</code> async because this function is run very frequently and this would not be performant. Instead, use another field named  <code>mimeType</code>  or similar, then in an  <code>afterChange</code> hook on your collection, fetch the full doc and save its mime-type to that field. This way it only makes the request once when the document is created or updated, and that data is now passed through to your condition as expected. What do you think?",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673978089193
      },
      {
        "content": "Awesome, this makes sense and I have tried this approach before posting here.<br><br>Do you have any examples of this flow?<br><br>I&#x27;ve tried what you described but I&#x27;m having trouble getting the afterChange hook to fire (I&#x27;m assuming I would see logs from it in my browser console when fired). Here is a snippet of my collection.<br><br><pre><code class=\"hljs\">const afterMediaChange: FieldHook = (args) =&gt; {\n    console.log(&#x27;afterMediaChange&#x27;, args);\n    return &#x27;&#x27;;\n};\n\nconst articles: CollectionConfig = {\n    slug: &#x27;articles&#x27;,\n    fields: [\n        // ....\n        {\n            name: &#x27;heromedia&#x27;,\n            label: &#x27;Hero Media&#x27;,\n            type: &#x27;relationship&#x27;,\n            relationTo: &#x27;media&#x27;,\n            hasMany: false,\n            hooks: {\n                afterChange: [afterMediaChange],\n            },\n        },\n    ]\n}</code></pre><br><br>Must I fully type the generics in FieldHook for this to work?",
        "authorID": "1054487065674403972",
        "authorName": "grant_msft",
        "authorAvatar": null,
        "createdAtDate": 1673981193332
      },
      {
        "content": "Hmm this looks correct to me. Are you saving the document to trigger the hook? Fully typing the field hook wouldn&#x27;t change anything here. Did your server restart after making this change? Try to throw a collection-level hook in here and see if that fires.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673981709769
      },
      {
        "content": "Oh its on save? I thought it was when selecting a new doc from the relationship. I&#x27;ve just been changing the value and I haven&#x27;t been saving.",
        "authorID": "1054487065674403972",
        "authorName": "grant_msft",
        "authorAvatar": null,
        "createdAtDate": 1673981832468
      },
      {
        "content": "Yep 👍 and that&#x27;s deliberate to avoid making many network requests",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673981916787
      },
      {
        "content": "<code>beforeChange</code> would work better here, too",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673982023848
      },
      {
        "content": "Got it. That adds a step for the use case in this flow. I might take a different approach then. Thanks for the info and help!",
        "authorID": "1054487065674403972",
        "authorName": "grant_msft",
        "authorAvatar": null,
        "createdAtDate": 1673982219964
      },
      {
        "content": "You could alternatively use a custom component that watches that field, makes the request on every change, and returns the mime-type",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673983559220
      },
      {
        "content": "In your custom component you&#x27;d fire the <code>useFormFields</code> hook to subscribe to the relationship, then use that value as a dependency of a <code>useEffect</code> that makes the request, something like this (not tested):<br><br><pre><code class=\"hljs ts\">  ...\n  <span class=\"hljs-keyword\">const</span> [mimeType, setMimeType] = useState&lt;<span class=\"hljs-built_in\">string</span>&gt;();\n  <span class=\"hljs-keyword\">const</span> { <span class=\"hljs-attr\">value</span>: mediaID } = <span class=\"hljs-title function_\">useFormFields</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">[fields, dispatch]</span>) =&gt;</span> fields.<span class=\"hljs-property\">media</span>);\n\n  <span class=\"hljs-title function_\">useEffect</span>(<span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">makeReq</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) =&gt; {\n      <span class=\"hljs-keyword\">const</span> req = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${YOUR_SERVER_URL}</span>/media/<span class=\"hljs-subst\">${mediaID}</span>`</span>)\n      <span class=\"hljs-keyword\">const</span> json = <span class=\"hljs-keyword\">await</span> req.<span class=\"hljs-title function_\">json</span>();\n      <span class=\"hljs-keyword\">if</span> (json.<span class=\"hljs-property\">mimeType</span>) {\n        <span class=\"hljs-title function_\">setMimeType</span>(json.<span class=\"hljs-property\">mimeType</span>)\n      }\n    }\n  }, [mediaID]);\n\n  <span class=\"hljs-keyword\">if</span> (mimeType.<span class=\"hljs-title function_\">startsWith</span>(<span class=\"hljs-string\">&#x27;image/&#x27;</span>)) {\n    <span class=\"hljs-keyword\">return</span> (\n      ...\n    )\n  }\n  \n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;</code></pre>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673984121423
      },
      {
        "content": "ah i see, that makes sense too.",
        "authorID": "1054487065674403972",
        "authorName": "grant_msft",
        "authorAvatar": null,
        "createdAtDate": 1673984214493
      }
    ],
    "messageCount": 10
  },
  {
    "info": {
      "name": "Reverse lookup",
      "id": "1068532832865112135",
      "createdAt": 1674828479735
    },
    "messages": [
      {
        "content": "Hi! <br><br>I have a schema like this<br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">CoursesCollection</span>: <span class=\"hljs-title class_\">CollectionConfig</span> = {\n  <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&quot;courses&quot;</span>,\n  <span class=\"hljs-attr\">fields</span>: [\n    <span class=\"hljs-comment\">// More fields ...</span>\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;topics&quot;</span>,\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;relationship&quot;</span>,\n      <span class=\"hljs-attr\">relationTo</span>: <span class=\"hljs-string\">&quot;topics&quot;</span>,\n      <span class=\"hljs-attr\">hasMany</span>: <span class=\"hljs-literal\">true</span>,\n    },\n  ],\n};\n\n <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">TopicCollection</span>: <span class=\"hljs-title class_\">CollectionConfig</span> = {\n   <span class=\"hljs-attr\">slug</span>: <span class=\"hljs-string\">&quot;topics&quot;</span>,\n   <span class=\"hljs-attr\">fields</span>: [<span class=\"hljs-comment\">/* some fields */</span>],\n };</code></pre><br><br>Now I would like to query every <code>Topic</code> via local API that is referenced at least by one <code>Course</code>. How would I go about this?<br><br>Is there anything I can use in the where clause here that would achieve that?<br><pre><code class=\"hljs ts\">  <span class=\"hljs-keyword\">const</span> topics = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-property\">find</span>&lt;<span class=\"hljs-title class_\">Topic</span>&gt;({\n    <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;topics&quot;</span>,\n    <span class=\"hljs-attr\">where</span>: {\n      \n    }\n  });</code></pre>",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1674828479735
      },
      {
        "content": "Reverse lookup",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1674828917403
      },
      {
        "content": "Not like you are describing. You could probably open a custom endpoint and write an aggregate query that joins the tables and then finds all topics that are present in the courses collection.<br><br>Or you could make 2 queries, 1 to get all the courses, then another to topics  <code>where: { id : { in: [array_of_topic_ids_from_courses] } }</code>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674829551856
      },
      {
        "content": "👍 and that first query to get courses might look something like this: <code>where: { &#x27;topics.id&#x27;: { hasValue: true } }</code>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1674831693548
      },
      {
        "content": "makes sense. Thank you!",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1674837848840
      },
      {
        "content": "<blockquote> You could probably open a custom endpoint<br></blockquote><br>May you point me to where I can learn more about custom logic liek this in the local api?",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1674837907720
      },
      {
        "content": "This custom logic would not be using the local api, you would be interacting with mongoose models themselves, which is totally doable and not that difficult. They are present anywhere <code>payload</code> is present, i.e. req.payload.<br><br>To access a model with the payload class, you do <code>payload.collections[collection-slug-here].Model</code>, and then you have access to that model from which you can write an aggregate query <code>payload.collections[collection-slug-here].Model.aggregate(…yourQueryHere…)</code>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674870883136
      },
      {
        "content": "You can read more about custom endpoints here <a href=\"https://payloadcms.com/docs/rest-api/overview\">https://payloadcms.com/docs/rest-api/overview</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674870995374
      },
      {
        "content": "perfect, thank you!",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1674926378705
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "How to upload/save Media file in media Collection through API.",
      "id": "1065583123716395018",
      "createdAt": 1674125214271
    },
    "messages": [
      {
        "content": "Hi, I want to upload media files to media collection in my nextjs Page component though API. It is in binary format. I,ve tried and document created successfully in mongodb  but actual file is missing. Code snippet would be more helpful.",
        "authorID": "1055906817881940069",
        "authorName": "Zeeshan",
        "authorAvatar": "2f7e0f4af189093c2c40bed516eb8754",
        "createdAtDate": 1674125214271
      },
      {
        "content": "Hi @Zeeshan - if I&#x27;m understanding correctly: you have a component on your front end that should upload a file to your media collection. Can you share how your component is creating a new media document? Are you using the REST API or local API?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674143888459
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Payload.collection is {} after Init when I try to seed",
      "id": "1070712231353917510",
      "createdAt": 1675348088826
    },
    "messages": [
      {
        "content": "Hi, I want to seed some database entries and I copied most of the seed example of the next-custom-server:<br><br><pre><code class=\"hljs\">const slugify = require(&#x27;slugify&#x27;);\n\nconst payload = require(&#x27;payload&#x27;);\n\nconst appearance = require(&#x27;./samples/appearance.json&#x27;);\n\nrequire(&#x27;dotenv&#x27;).config();\n\nconst { PAYLOAD_SECRET, MONGODB_URI } = process.env;\n\nconst formatSlug = (string) =&gt; slugify(string, { lower: true, strict: true });\n\npayload.init({\n  secret: PAYLOAD_SECRET,\n  mongoURL: MONGODB_URI,\n});\n\nconst seedDatabase = async () =&gt; {\n  const createEntry = async (entry, slug) =&gt; {\n    const req = await payload.create({\n      collection: slug,\n      data: {\n        name: entry,\n        slug: formatSlug(entry),\n      },\n    });\n    console.log(req);\n  };\n\n  const populateCollection = (dataSet) =&gt; {\n    for (const [key, value] of Object.entries(dataSet)) {\n      value.items.map((item) =&gt; {\n        createEntry(item, value.slug);\n      });\n      console.log(`${key} successfully seeded!`);\n    }\n  };\n\n  console.log(payload);\n\n  //populateCollection(appearance);\n\n  console.log(await payload.find({ collection: &#x27;articles&#x27; }));\n\n  /** await payload.create({\n    collection: &#x27;&#x27;,\n    data: {\n      name: &#x27;Seed test&#x27;,\n    },\n  });**/\n\n  console.log(&#x27;Seed completed!&#x27;);\n  process.exit(0);\n};\n\nseedDatabase();</code></pre><br><br>But when executing the seed command, I get the error that the collection does not exist. Upon examining the payload object it shows my that the collection is empty, (see next Post).<br><br>My guess is that I messed up something in the init...<br><br>Any help is appreciated. Thanks",
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675348088826
      },
      {
        "content": "The payload object:<br><br><pre><code class=\"hljs\">Payload {\n  collections: {},\n  versions: {},\n  encrypt: [Function: encrypt],\n  decrypt: [Function: decrypt],\n  Query: { name: &#x27;Query&#x27;, fields: {} },\n  Mutation: { name: &#x27;Mutation&#x27;, fields: {} },\n  errorResponses: [],\n  getAdminURL: [Function (anonymous)],\n  getAPIURL: [Function (anonymous)],\n  create: [AsyncFunction (anonymous)],\n  find: [AsyncFunction (anonymous)],\n  findByID: [AsyncFunction (anonymous)],\n  update: [AsyncFunction (anonymous)],\n  delete: [AsyncFunction (anonymous)],\n  findVersions: [AsyncFunction (anonymous)],\n  findVersionByID: [AsyncFunction (anonymous)],\n  restoreVersion: [AsyncFunction (anonymous)],\n  login: [AsyncFunction (anonymous)],\n  forgotPassword: [AsyncFunction (anonymous)],\n  resetPassword: [AsyncFunction (anonymous)],\n  unlock: [AsyncFunction (anonymous)],\n  verifyEmail: [AsyncFunction (anonymous)],\n  findGlobal: [AsyncFunction (anonymous)],\n  updateGlobal: [AsyncFunction (anonymous)],\n  findGlobalVersions: [AsyncFunction (anonymous)],\n  findGlobalVersionByID: [AsyncFunction (anonymous)],\n  restoreGlobalVersion: [AsyncFunction (anonymous)]\n}</code></pre>",
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675348100999
      },
      {
        "content": "what Payload version are you on?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675351408204
      },
      {
        "content": "See if putting it in <code>onInit</code> fixes the problem:<br><pre><code class=\"hljs ts\">payload.<span class=\"hljs-title function_\">init</span>({\n  ...\n  <span class=\"hljs-attr\">onInit</span>: <span class=\"hljs-function\">() =&gt;</span> {<span class=\"hljs-comment\">/* your initialization */</span>}\n});</code></pre><br>I agree that this shouldn&#x27;t be happening if you&#x27;re not using <code>initAsync</code>, but worth a try to pin down the issue.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675352232863
      },
      {
        "content": "well, it&#x27;s worth noting that payload.init is now asynchronous as of 1.6.0, and his code above is not awaiting init",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675352335958
      },
      {
        "content": "so if he&#x27;s on a new version that&#x27;s prob the reason",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675352342656
      },
      {
        "content": "That&#x27;d do it.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675352402534
      },
      {
        "content": "1.6.3.",
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675354798869
      },
      {
        "content": "Ah thanks that&#x27;s it",
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675354821254
      },
      {
        "content": "Thanks",
        "authorID": "381079209197699083",
        "authorName": "Dave Damage",
        "authorAvatar": "5fef5bfd83d91da97935ea4df109ad5a",
        "createdAtDate": 1675354851280
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "Payload good as a Wiki?",
      "id": "1064565542490472448",
      "createdAt": 1673882604001
    },
    "messages": [
      {
        "content": "Hi!  I really do like payload and I&#x27;m hoping this question aligns with it&#x27;s features.<br>I want to create a wiki that allows for groups of users to share and edit content and publish that content for other groups to view.<br>Essentially I&#x27;d need to track the groups that users could be part of and expose only the editing of content that they are allowed to edit within that group (content could be editable by author or the group members).<br>In addition, group users (and maybe outside) could post comments on the content.<br>Thanks for any advise!",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673882604001
      },
      {
        "content": "Hi @rogueturnip (really good username), absolutely payload would work for your use case. You can utilize access control functions to manage who can read/update/create your content based on their role or group. Read more about access control here: <a href=\"https://payloadcms.com/docs/access-control/collections\">https://payloadcms.com/docs/access-control/collections</a>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1673886172335
      },
      {
        "content": "Thanks!  I&#x27;m glad this is supported.  What would be an effective way to create &quot;groups of users&quot;, sort of like departments in a company that would edit/create (as permissions permit).  And could a user be part of 2 departments and have different permissions in each?",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673888143722
      },
      {
        "content": "The best way to go about this would be to add a <code>department</code>  select field (with hasMany: true) to your users collection. Then you would reference that field as needed inside access control.<br><br>Here is a blog post about how to set this up: <a href=\"https://payloadcms.com/blog/build-your-own-rbac\">https://payloadcms.com/blog/build-your-own-rbac</a><br><br>You can also see examples of access control functions that do something similar in our CMS repo here: <a href=\"https://github.com/payloadcms/website-cms/tree/main/src/access\">https://github.com/payloadcms/website-cms/tree/main/src/access</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1673897494839
      },
      {
        "content": "Thanks!  can that department field be an array for multiple departments?",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1673913385943
      },
      {
        "content": "Yep, that&#x27;s what the <code>hasMany: true</code> Elliot mentioned is for",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1673926046950
      },
      {
        "content": "Hi, I&#x27;m trying to get a similar group structure working. I have users assigned with owner, admin or member roles and can be assigned to one or more groups.<br><br>For example:<br><br>User_1, Owner<br>User_2, Owner, Groups [Group_1, Group_2, Group_3, Group_4]<br>User_3, Owner, Groups [Group 2]<br>User_4, Owner, Groups [Group_3, Group_4]<br><br>I have an IsOwnerOrHasOrganisationAccess that filters what a user can see based on the Groups they are assigned to. This works fine on all Collections apart from on the Users Collection. <br><br>The challenge comes when I log in as User_4. I don&#x27;t want them to be able to see or edit User_2 in the Users Collection. I&#x27;m currently using a filter using the In method, however, this returns User_2 because Group_3 and Group_4 are in User 2&#x27;s Groups array. Any suggestions for how I can prevent  User_2 from being returned?",
        "authorID": "1060105222166429707",
        "authorName": "ShaunyBoy",
        "authorAvatar": "f7f2e9361e8a54ce6e72580ac7b967af",
        "createdAtDate": 1675895786683
      },
      {
        "content": "@ShaunyBoy I&#x27;m not sure I follow fully, but typically we&#x27;d handle this by having an <code>IsOwnerOrSelf</code> function instead of just checking for the Owner role.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675958734138
      },
      {
        "content": "Hopefully that helps",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675958738646
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "Relationships crash when selected",
      "id": "1064746794917056533",
      "createdAt": 1673925817947
    },
    "messages": [
      {
        "content": "Hi again.<br><br>Ran into another problem, this time with relationship fields. When I select an entry from the field, the entire site crashes to a blank screen. In the dev console, I see:<br><br> <code>main.b617255bc7fdc0143d7d.js:49 Uncaught Error: Minified React error #31; visit https://reactjs.org/docs/error-decoder.html?invariant=31&amp;args[]=object%20with%20keys%20%7BrelationTo%2C%20value%7D for the full message or use the non-minified dev environment for full errors and additional helpful warnings.</code><br><br>Visiting that URL yields: <code>Objects are not valid as a React child (found: object with keys {relationTo, value}). If you meant to render a collection of children, use an array instead.</code><br><br>The other notice on that error panel reads:<br><br><code>react_devtools_backend.js:4012 react-i18next:: react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional. {relationTo: &#x27;marlee-programs&#x27;, value: &#x27;63c60ae72ed9f7fdf850d830&#x27;}</code><br><br>It looks like whatever&#x27;s generating the options for the select is, for some reason, generating <code>{relationTo, value}</code> objects, instead of just <code>{value}</code>?",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1673925817947
      },
      {
        "content": "Confirmed that this only occurred when the field was named <code>program</code>. Renaming the field removed the problem, and if it was renamed back, the problem re-occurred. Possibly this is a restricted field name that should be documented/detected during build?",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1673926222609
      },
      {
        "content": "No, scratch that, it&#x27;s when the relationship field is also set as <code>useAsTitle</code> that everything breaks",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1673927140851
      },
      {
        "content": "Even more specific, it&#x27;s when the relationship field is set to <code>useAsTitle</code> <strong>and</strong> <code>relatedTo</code> is passed an array (even if it&#x27;s only an array of one)",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1673935201905
      },
      {
        "content": "That might be because setting <code>relationTo</code> as array makes the relationship polymorphic and then the reference is not stored as simple objectId but as record with slug+id 🤔",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673935591817
      },
      {
        "content": "Right. Just working my way through the code now. I was lead up this path, because all the example docs use arrays, so if it&#x27;s supposed to be an advanced use-case, possibly change the docs, so the simple way is the first way people see 😛",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1673938155656
      },
      {
        "content": "it&#x27;s a trap to lure people into digging deeper in the code 😆",
        "authorID": "245330411570331648",
        "authorName": "Exo",
        "authorAvatar": "89dc36c16a792f49d0e75c3d0765fdaa",
        "createdAtDate": 1673938499275
      },
      {
        "content": "Anyway, I have a workaround that works for me (don&#x27;t use polymorphic relations :P), so I&#x27;ll mark this as answered. I&#x27;ve added a PR that solves nothing, but reproduces the bug in the test suite<br><br><a href=\"https://github.com/payloadcms/payload/pull/1898\">https://github.com/payloadcms/payload/pull/1898</a>",
        "authorID": "181408213537652736",
        "authorName": "andrewhows",
        "authorAvatar": "e941af5c74a97bc72e0b1da94a04e9e6",
        "createdAtDate": 1673939149699
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "How to implement \"Content Staging\" feature?",
      "id": "1068897239285645322",
      "createdAt": 1674915360996
    },
    "messages": [
      {
        "content": "Hi! We are migrating from a feature-rich SaaS CMS and I&#x27;m trying to match a feature called Content Staging. Essentially it creates a new version of a page that content editors can work on long term (for large overhaul changes), while the original page can still be worked on (edited and republished) normally. Content-staged pages are shown in a separate section in the UI, and can be worked on independently of the original version. Then when the long term edits are complete and approved, the editor can publish the &quot;content staged&quot; page, which effectively overwrites whatever version the page is currently in. As a bonus, it also allows for batch releases, where you can select multiple content-staged pages and publish them together.",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1674915360996
      },
      {
        "content": "Payload drafts aren’t quite as robust as you’re describing but I could see this being supported long-term. Basically, we’d allow previous versions to be worked on without forcing them to be restored first. A temporary workaround could be to maintain a duplicate draft page, and work on <em>that</em>.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675050102208
      },
      {
        "content": "Related discussion: <a href=\"https://discord.com/channels/967097582721572934/1069000193317556235\">https://discord.com/channels/967097582721572934/1069000193317556235</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675050310635
      },
      {
        "content": "@jacobsfletch  thanks, that&#x27;s great to hear! Yes, it seems it would be working on a draft without restoring, and probably also giving it a tag of some sort (e.g. <code>staging</code>). Then being able to access that version through graphql similar to how drafts are accessed now... maybe instead of a boolean it would look something like this: <code>{Pages(draft:&quot;staging&quot;) {...}}</code> Ideally there would also be some sort of UI geared toward managing/publishing these as well. <br><br>I&#x27;ve just started looking at Payload last week so still exploring the possibility of using a duplicate document to achieve this in some way.<br><br>Happy to discuss with the team to clarify the use case, if you&#x27;re looking for input.",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675085164918
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "How to visualy improve in what language your content is edited",
      "id": "1072189880362344519",
      "createdAt": 1675700387803
    },
    "messages": [
      {
        "content": "Hi, <br>I&#x27;ve set up german and english as locale for my content and it works well. Now testing myself I started to put german content into english content as I didn&#x27;t realize that I am still switched to english. At the moment the only way to realize what language the content is set to, is to check the language switch in the sidebar. Is there a way to visually improve what language I am editing right now? Whats the best practice there. I&#x27;m a bit concerned editors will have similar problems as me.",
        "authorID": "352817312803586048",
        "authorName": "christophK",
        "authorAvatar": "0717076fbf3e1058a679f5d21fab0c56",
        "createdAtDate": 1675700387803
      },
      {
        "content": "Hey @christophK , this is on our roadmap as priority 1 actually! Roadmap item here: <a href=\"https://github.com/payloadcms/payload/discussions/1234\">https://github.com/payloadcms/payload/discussions/1234</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676038545862
      },
      {
        "content": "Great to see that its coming!",
        "authorID": "352817312803586048",
        "authorName": "christophK",
        "authorAvatar": "0717076fbf3e1058a679f5d21fab0c56",
        "createdAtDate": 1676334574524
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How to deploy PayloadCMS to vercel?",
      "id": "1073493609468407808",
      "createdAt": 1676011221044
    },
    "messages": [
      {
        "content": "Hello, is there a tutorial for deploying payload to vercel. Thanks",
        "authorID": "950202910095081473",
        "authorName": "johnmadrigal_",
        "authorAvatar": "b7ed475cf3de264fee113ff334d70ccb",
        "createdAtDate": 1676011221044
      },
      {
        "content": "The cool guys are developing a way to help you deploy with ease 🙂 . see: <a href=\"https://github.com/payloadcms/payload/discussions/583\">https://github.com/payloadcms/payload/discussions/583</a>",
        "authorID": "1054787039339495474",
        "authorName": "Martin R",
        "authorAvatar": "0053f8652dc08a03c69a03708d98f339",
        "createdAtDate": 1676015340959
      },
      {
        "content": "More to come regarding deploying on platforms with serverless functions 😏",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676071925487
      },
      {
        "content": "As of now, Payload requires a Node.js backend to be deployed",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676071992497
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "Sorting on multiple fields?",
      "id": "1074130763131400232",
      "createdAt": 1676163130315
    },
    "messages": [
      {
        "content": "Is it possible to sort by one field, then another when using the REST API?<br><br>In SQL terms I&#x27;m looking for the equivalent of <code>SORT BY FieldA DESC, FieldB ASC</code>",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1676163130315
      },
      {
        "content": "Currently no. This would make a great addition. You can submit a feature request in our github discussions and we will assess the priority or somebody in the community can pick it up!",
        "authorID": "969226489549713438",
        "authorName": "dribbens",
        "authorAvatar": "f5c79aff07b9e2b1df382d61c45cb9da",
        "createdAtDate": 1676345118968
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Best way to implement cron functions?",
      "id": "1065190213904760864",
      "createdAt": 1674031537272
    },
    "messages": [
      {
        "content": "We&#x27;re looking to have real time events going on the platform with time-sensitive functions such as opening and closing an event for user interactions and more.<br><br>So we need to run cron functions and I&#x27;m just wondering what&#x27;s the best way to approach this in Payload?<br><br>I can run my own cron functions inside <code>onInit</code> in server.ts, is there a better approach people have had or? Trying to get a sanity check on this, many thanks!",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674031537272
      },
      {
        "content": "hi, have a look a the payload demo example. they are using nodecron there 🙂<br><a href=\"https://github.com/payloadcms/public-demo/blob/master/src/server.ts\">https://github.com/payloadcms/public-demo/blob/master/src/server.ts</a>",
        "authorID": "306429157179392002",
        "authorName": "60pfennig",
        "authorAvatar": "91e7dc342f3cfef23552bf5a68018bbe",
        "createdAtDate": 1674034967452
      },
      {
        "content": "Brilliant, thanks mate!",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674052296183
      },
      {
        "content": "I implemented that. That particular library is really easy to work with 👍",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674052658184
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "How to set a default value for the rich text component?",
      "id": "1065813702512750602",
      "createdAt": 1674180188540
    },
    "messages": [
      {
        "content": "Hello! I&#x27;m creating a custom plugin and trying to render the rich text component  inside a modal but for some reason the defaultValue doesn&#x27;t work for me",
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1674180188540
      },
      {
        "content": "What does it do for ya?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674180709807
      },
      {
        "content": "the plugin?",
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1674180784154
      },
      {
        "content": "The default value",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674180795119
      },
      {
        "content": "just some text <br><code>const note = [\n    {\n      type: &quot;p&quot;,\n      children: [{ text: &quot;some text&quot; }],\n    },\n  ]</code>",
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1674180890650
      },
      {
        "content": "oooooo I just looked at the component, it looks like it currently does not actually use the default value as a prop",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674181138518
      },
      {
        "content": "But, it should",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674181147014
      },
      {
        "content": "Looks like it’s importing it from a file",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674181163608
      },
      {
        "content": "aha, so is it a bug or something? is there a workaround to set a default value?",
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1674181337364
      },
      {
        "content": "The workaround would be to create a component like:<br><code>const WithForm = () =&gt; &lt;Form&gt;{children}&lt;/Form&gt;</code><br><br>And then use it to wrap your form components, where you would use an effect to set the form state of that field to the default value (on first render only) if that field does not already have a value equal to the value here (you’d use JSON.stringify() to compare) <a href=\"https://github.com/payloadcms/payload/blob/master/src/fields/richText/defaultValue.ts\">https://github.com/payloadcms/payload/blob/master/src/fields/richText/defaultValue.ts</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674181792008
      },
      {
        "content": "Or you could make a PR that adds defaultValue to the destructured props object in the RichText component 🙂 you’d still need to do the stringify check in that component though.<br><br>Lmk if that’s something you’d be up for!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674181909368
      },
      {
        "content": "<blockquote>Or you could make a PR that adds defaultValue to the destructured props object in the RichText component<br></blockquote>sounds good, will do this weekend",
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1674182070573
      },
      {
        "content": "Awesome! Ping me if you run into anything or want any guidance 🙂",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674182257491
      },
      {
        "content": "Sure, thanks!",
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1674182398334
      },
      {
        "content": "hey @Jarrod , I added a PR for that<br><a href=\"https://github.com/payloadcms/payload/pull/1937\">https://github.com/payloadcms/payload/pull/1937</a>",
        "authorID": "1050078247209140286",
        "authorName": "Mng",
        "authorAvatar": null,
        "createdAtDate": 1674477692450
      },
      {
        "content": "beautiful",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674480837758
      },
      {
        "content": "Thanks!!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674480856497
      }
    ],
    "messageCount": 16
  },
  {
    "info": {
      "name": "Bug in docs",
      "id": "1064507700827914260",
      "createdAt": 1673868813474
    },
    "messages": [
      {
        "content": "<a href=\"https://payloadcms.com/docs/graphql/extending\">https://payloadcms.com/docs/graphql/extending</a><br><br>in custom Graphql query example, args and resolver property must be outside from GraphQLObjectType",
        "authorID": "349125160600600576",
        "authorName": "bumblebee",
        "authorAvatar": "d68860d197649e81bb7b0a4ce4555e02",
        "createdAtDate": 1673868813474
      },
      {
        "content": "@bumblebee nice catch! Would you be willing to open a PR for this?",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1673879298990
      },
      {
        "content": "@jacobsfletch  Sure 🤩",
        "authorID": "349125160600600576",
        "authorName": "bumblebee",
        "authorAvatar": "d68860d197649e81bb7b0a4ce4555e02",
        "createdAtDate": 1673959613792
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Getting Payload Sass Error",
      "id": "1067481961108607027",
      "createdAt": 1674577932384
    },
    "messages": [
      {
        "content": "Hello everyone,<br><br>Trust you are having a great day!<br><br>I&#x27;m getting this error &amp; do not know how to solve it (Image also attached):<br><br><pre><code class=\"hljs\">ERROR in ./node_modules/payload/dist/admin/scss/app.scss (./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./node_modules/payload/dist/admin/scss/app.scss)\nModule build failed (from ./node_modules/sass-loader/dist/cjs.js):\nSassError: Can&#x27;t find stylesheet to import.\n    ╷\n180 │ @import &#x27;~payload-user-css&#x27;;\n    │         ^^^^^^^^^^^^^^^^^^^\n    ╵\n  node_modules/payload/dist/admin/scss/app.scss 180:9  root stylesheet\n\nwebpack compiled with 1 error</code></pre><br><br>Any help would be appreciated.<br><br>Thank you very much for your time!",
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1674577932384
      },
      {
        "content": "Are you attempting to import <code>@import &#x27;~payload/scss&#x27;;</code>?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674580234456
      },
      {
        "content": "No, I am not",
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1674582121142
      },
      {
        "content": "Are you importing one of your own css files, using a path alias? You will need to use relative paths for now. This is known shortcoming, the inability to use path aliases.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674582325463
      },
      {
        "content": "Very interesting, I do not make use of path aliases. Is there a command I can run to see which file is causing this error?",
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1674582937502
      },
      {
        "content": "Just looked at the code, are you using <code>config.admin.css</code> in your payload.config.ts to set a custom path for a css file?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674583009743
      },
      {
        "content": "its saying that it cannot find <em>that</em> file/path",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674583042034
      },
      {
        "content": "You are awesome! <br><br>I commented out my <code>config.admin.css</code> &amp; everything works now.",
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1674583363187
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Random bug where pages in a collection disappear (but still in database)",
      "id": "1072789027842953236",
      "createdAt": 1675843235694
    },
    "messages": [
      {
        "content": "I started getting this really weird issue after upgrading to Payload 1.6 from 1.5.9. For context, I am using ISG with Next 13&#x27;s App Directory, with a cache limit of 10 seconds while I make updates to the site for testing. I am using MongoDB Atlas, running Payload inside a Docker Container on Google Cloud Run.<br><br>I have found that when refreshing the page on my Next 13 app in quick succession, it causes Payload to freakout and hide all of the pages in my Pages collection. The data is still in Mongodb, and additionally, I can retrieve them by going to my global navbar which uses a relationship to my pages. I can then select the edit button in the relationship dropdown and save each page. This brings them all back, but it is going to be a pain to do when I have over 50 pages on my website.<br><br>Has anyone else had this issue?<br><br>I ran in the versions migration script, maybe it&#x27;s an error with the new versions not playing nicely.",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675843235694
      },
      {
        "content": "not sure if this is related, but after update to latest version on payload form plugin on random fields I miss the values even if in database the data is there (checked myself). Seems a bit the same behavior <br>notice on the first image how the Rich text is empty and in the db the value is there",
        "authorID": "386056031102304256",
        "authorName": "Nedsilon",
        "authorAvatar": "798d144674cfe0ee1b39a8588bc8b846",
        "createdAtDate": 1675847953462
      },
      {
        "content": "I do have the form plugin in my project. Maybe that is causing some of the issue",
        "authorID": "191776538205618177",
        "authorName": "Mark | Omniux",
        "authorAvatar": "1fea66dea70c9d5e50593c3d16d1bfaf",
        "createdAtDate": 1675859719335
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "In the RichText field - why check for default value before setting value?",
      "id": "1063188118997586021",
      "createdAt": 1673554200649
    },
    "messages": [
      {
        "content": "In <a href=\"https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/RichText/RichText.tsx#L185\">https://github.com/payloadcms/payload/blob/master/src/admin/components/forms/field-types/RichText/RichText.tsx#L185</a> you will find the <code>val !== defaultValue</code> check before setting the value. Why? Wouldn&#x27;t this prevent you from making the richtext field empty again?",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1673554200649
      },
      {
        "content": "this is because we only want to <code>setValue</code> of the form <em><strong>if it has changed from default</strong></em>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675442801275
      },
      {
        "content": "an optimization for not marking the form as modified right away when the field loads. Slate fires that event quite frequently, so we filter out to only those that matter",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675442819897
      },
      {
        "content": "the form will have already stored the default value if there is no value",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675442832694
      },
      {
        "content": "and i believe that because this is a direct equality comparison, once you <em><strong>change</strong></em> the value back to empty, it will not be directly equal any longer",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675442939629
      },
      {
        "content": "AKA - this is why you can successfully clear out a field right now even with this code in place",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675442951117
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "how to run payloadcms app from git",
      "id": "1062053368593383514",
      "createdAt": 1673283655070
    },
    "messages": [
      {
        "content": "how to run payloadcms app from git?",
        "authorID": "680820827804925953",
        "authorName": "Sora",
        "authorAvatar": "84460ba76680abd54e80ab5954aa3a6e",
        "createdAtDate": 1673283655070
      },
      {
        "content": "Hey @Sora! Would love to help you out, could you give me a little bit more info on what you are trying to do? Thanks!",
        "authorID": "1032341301619871785",
        "authorName": "patrikkozak",
        "authorAvatar": "b3a52ead667696b013ea4640360dc661",
        "createdAtDate": 1673906430947
      },
      {
        "content": "already solved",
        "authorID": "680820827804925953",
        "authorName": "Sora",
        "authorAvatar": "84460ba76680abd54e80ab5954aa3a6e",
        "createdAtDate": 1673943852987
      },
      {
        "content": "just ran create payload app",
        "authorID": "680820827804925953",
        "authorName": "Sora",
        "authorAvatar": "84460ba76680abd54e80ab5954aa3a6e",
        "createdAtDate": 1673943861103
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "How to call REST endpoint with multiple filters",
      "id": "1073580622066487377",
      "createdAt": 1676031966464
    },
    "messages": [
      {
        "content": "I checked the docs here <a href=\"https://payloadcms.com/docs/queries/overview#and-or-logic\">https://payloadcms.com/docs/queries/overview#and-or-logic</a>, but no sample for the REST API request<br><br>example<br><a href=\"http://localhost:3000/api/projects?where[year][equals]=2019[and][featured][equals]=false\">http://localhost:3000/api/projects?where[year][equals]=2019[and][featured][equals]=false</a>",
        "authorID": "411679135664963585",
        "authorName": "mo7sen",
        "authorAvatar": "e4cd04275914574db2c2a2d3604bbc4f",
        "createdAtDate": 1676031966464
      },
      {
        "content": "Try <a href=\"http://localhost:3000/api/projects?where[and][year][equals]=2019&amp;where[and][featured][equals]=false\">http://localhost:3000/api/projects?where[and][year][equals]=2019&amp;where[and][featured][equals]=false</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1676033722689
      },
      {
        "content": "@jacobsfletch <br>I used that library and it helped <a href=\"https://www.npmjs.com/package/qs\">https://www.npmjs.com/package/qs</a>",
        "authorID": "411679135664963585",
        "authorName": "mo7sen",
        "authorAvatar": "e4cd04275914574db2c2a2d3604bbc4f",
        "createdAtDate": 1676034608435
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "SEO plugin",
      "id": "1068306616455282779",
      "createdAt": 1674774545540
    },
    "messages": [
      {
        "content": "Is there a way to extend the SEO plugin to show additional fields? for example: og:title and og:description tags for FB shares, similarly, to add twitter tags? I&#x27;m seeing that each platform has different title/description length recommendations so I thought it could be ideal to have all the meta tags under the SEO plugin if possible. Thanks",
        "authorID": "372021382789332993",
        "authorName": "liorix",
        "authorAvatar": null,
        "createdAtDate": 1674774545540
      },
      {
        "content": "The plugin doesn&#x27;t currently allow you to pass custom fields through, although that would be a simple feature for us to add. It&#x27;s possible that the plugin could natively support some OG meta but this is not on the roadmap yet. Would custom fields work for you? For example, a <code>fields</code> array on the plugin config?",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1674832039947
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Your serverURL cannot have a path.",
      "id": "1072281303887646800",
      "createdAt": 1675722184870
    },
    "messages": [
      {
        "content": "Why is this check in place? Trying to use Payload with Google Cloud Functions which have a path in the URL. It seems to work fine when manually editing the <code>dist</code> that&#x27;s produced.",
        "authorID": "231715673435275274",
        "authorName": "ar0n",
        "authorAvatar": "e6a5af8848f616788947e68f115c0d37",
        "createdAtDate": 1675722184870
      },
      {
        "content": "Where are you receiving an error or restriction regarding this?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676053676930
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Image resize doesn't work",
      "id": "1066036423712587957",
      "createdAt": 1674233289412
    },
    "messages": [
      {
        "content": "I am trying to resize new images on upload, so that client&#x27;s photos get downsized to a max width of 2000px.<br><br>What I&#x27;m doing wrong?<br><br><code>upload: {\n  staticURL: &#x27;/media&#x27;,\n  staticDir: &#x27;media&#x27;,\n  mimeTypes: [&#x27;image/*&#x27;],\n  disableLocalStorage: true,\n  resizeOptions: {\n  width: 2000,\n  kernel: &#x27;nearest&#x27;,\n  fit: &#x27;cover&#x27;,\n  position: &#x27;entropy&#x27;,\n  withoutEnlargement: true,\n  }}</code><br><br>On the admin ui the size and weight is correct but on server is uploaded like the original",
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674233289412
      },
      {
        "content": "Admin ui after upload",
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674233486435
      },
      {
        "content": "Image size on server",
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674233507415
      },
      {
        "content": "Let me see if I can recreate",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234046849
      },
      {
        "content": "This works for me. I uploaded a 317kb file and the result was 116 bytes (20px width).",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234263164
      },
      {
        "content": "<pre><code class=\"hljs\">    resizeOptions: {\n      width: 20,\n      kernel: &#x27;nearest&#x27;,\n      fit: &#x27;cover&#x27;,\n      position: &#x27;entropy&#x27;,\n      withoutEnlargement: true,\n    },</code></pre>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234277734
      },
      {
        "content": "Are you using any plugins? I see you have <code>disableLocalStorage: true</code>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234356402
      },
      {
        "content": "<code>plugins: [cloudStorage({ collections: { media: { adapter: adapterGCS } } })],</code>",
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674234371906
      },
      {
        "content": "<code>const adapterGCS = gcsAdapter({\n    options: {\n        keyFilename: &#x27;./src/util/*.json&#x27;,\n    },\n    bucket: process.env.GCS_BUCKET,\n});</code>",
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674234403507
      },
      {
        "content": "I have tried so many times",
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674234417902
      },
      {
        "content": "On the server still che original image",
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674234436781
      },
      {
        "content": "Okay, this info helps",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234450950
      },
      {
        "content": "Even when clicking on the image title on che admin ui<br>I get che full image",
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674234457540
      },
      {
        "content": "Let me take a quick look on how the plugin may treat resizing differently",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234464817
      },
      {
        "content": "I&#x27;m going to log this as a possible bug @MadRaf . This will take some investigating.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674234942355
      },
      {
        "content": "Issue logged here: <a href=\"https://github.com/payloadcms/plugin-cloud-storage/issues/35\">https://github.com/payloadcms/plugin-cloud-storage/issues/35</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674235193957
      },
      {
        "content": "Thank you 💪",
        "authorID": "378870262332129280",
        "authorName": "MadRaf",
        "authorAvatar": "ef6433f85ce8b2fcf1166db7b68d94a4",
        "createdAtDate": 1674235653241
      },
      {
        "content": "this is happening to me as well, the size and image dimensions are shown in the admin, but when I go to the S3 the original image is uploaded, <br><br>the only thing that has worked for me is converting from png to jpg, but resizing and shrinking doesn&#x27;t work",
        "authorID": "391293587922485252",
        "authorName": "Hyra10",
        "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
        "createdAtDate": 1675381681708
      },
      {
        "content": "Let me take a look into this today",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675432426023
      },
      {
        "content": "@Hyra10 What version of Payload are you on? This appears to be working fine on my end.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675432623120
      },
      {
        "content": "I am on lastest version 1.6.3",
        "authorID": "391293587922485252",
        "authorName": "Hyra10",
        "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
        "createdAtDate": 1675485575700
      },
      {
        "content": "Can you post your config? It sounds like this is working as expected. Payload will always upload the original file.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675519665178
      },
      {
        "content": "You have the option of doing a resize on the original as well within your config",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675519679584
      },
      {
        "content": "this is my payload.config.ts<br><br><pre><code class=\"hljs\">    cloudStorage({\n      collections: {\n        // Enable cloud storage for Media collection\n        assets: {\n          disableLocalStorage: true,\n          // Create the S3 adapter\n          adapter: s3Adapter({\n            config: {\n              region: process.env.AWS_REGION,\n              credentials: {\n                accessKeyId: process.env.S3_ACCESS_KEY_ID,\n                secretAccessKey: process.env.S3_SECRET_ACCESS_KEY,\n              },\n            },\n            bucket: process.env.S3_BUCKET,\n          }),\n        },\n      },\n    }),</code></pre><br><br><br>I understand what you say that it will always store the original file but it doesn&#x27;t store the resized file, is it stored somewhere else?",
        "authorID": "391293587922485252",
        "authorName": "Hyra10",
        "authorAvatar": "930bc5beaa28b294cc7c1af61014f3f4",
        "createdAtDate": 1675526749988
      },
      {
        "content": "The original file will be resized according to the <code>upload.resizeOptions</code> property. Resizing for other specific sizes happens within the <code>imageSizes</code> array. Is this how your upload config on the collection is configured?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675690996252
      },
      {
        "content": "",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691119352
      },
      {
        "content": "Hope that makes sense",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691122987
      }
    ],
    "messageCount": 26
  },
  {
    "info": {
      "name": "How do I define a field that can be added but not edited and not visible when editing?",
      "id": "1069301116363341834",
      "createdAt": 1675011652795
    },
    "messages": [
      {
        "content": "I have a collection of AWS keys (AccessKeyId/SecretAccessKey pairs). When I add a key, the fields for these two properties should be visible and enabled. When editing, these two fields must not be visible to the user, and should be neither visible nor editable. They should also be removed from any http API call, but present for local API calls. Other fields in this collection should be editable<br><br>I tried a few things, but I can&#x27;t get it to work exactly as I want it to work. I&#x27;d love some help and directions in this matter<br><br>Thanks",
        "authorID": "1004634747105972225",
        "authorName": "tantalum",
        "authorAvatar": "68d2f32d5429362e6bcf185ec5a749c7",
        "createdAtDate": 1675011652795
      },
      {
        "content": "have you used disabled and readonly?",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675021150582
      },
      {
        "content": "Can disabled and readonly be conditional? Didn&#x27;t see a hint to that. Fields need to be:<br>1. When creating - Required &amp; Editable<br>2. When editing &amp; in http API (but not local API) - Completely invisible/non-existent<br>3. The fact they&#x27;re missing from updates should not fail the update, and should keep the previous values",
        "authorID": "1004634747105972225",
        "authorName": "tantalum",
        "authorAvatar": "68d2f32d5429362e6bcf185ec5a749c7",
        "createdAtDate": 1675028869098
      },
      {
        "content": "You could create another separate field just for creation, then in the beforeValidate hook copy/move its value over to the actual keys field if the operation is &quot;create&quot;.<br>Then set access to that separate field to false on edit, and hide it as well (with custom components or so?).<br>Would that be an option?<br>Even though very complicated. Maybe the payload team can help...",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675044345579
      },
      {
        "content": "That&#x27;s actually a clean and elegant solution, and it fits my use case very well. Didn&#x27;t think of that,  Thank you 🙂",
        "authorID": "1004634747105972225",
        "authorName": "tantalum",
        "authorAvatar": "68d2f32d5429362e6bcf185ec5a749c7",
        "createdAtDate": 1675057787682
      },
      {
        "content": "wait, I think read can be conditional the way you need it: <a href=\"https://payloadcms.com/docs/access-control/fields#read\">https://payloadcms.com/docs/access-control/fields#read</a>",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675063294889
      },
      {
        "content": "<blockquote>Returns a boolean which allows or denies the ability to read a field&#x27;s value. If false, the entire property is omitted from the resulting document.</blockquote>",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675063320883
      },
      {
        "content": "Regrattably this is not exactly what I need, when a field is omitted due to Access being false, the submitted form does not include it, and therefore validation fails because it&#x27;s mandatory. But your previous answer took me places, I have begun implementing it, and it looks and behaves perfectly. Thanks again :)\\",
        "authorID": "1004634747105972225",
        "authorName": "tantalum",
        "authorAvatar": "68d2f32d5429362e6bcf185ec5a749c7",
        "createdAtDate": 1675090435027
      },
      {
        "content": "You&#x27;re welcome! Don&#x27;t forget to mark as answered : )",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675091154558
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "Draft posts until approved for publish?",
      "id": "1066494351817048084",
      "createdAt": 1674342467980
    },
    "messages": [
      {
        "content": "I want to create a collection called guest posts where my visitors can submit blog posts. But I want to have those posts in draft mode first until approved by admin. Any idea how to do that?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674342467980
      },
      {
        "content": "You could implement the draft feature, and access control-wise block the normal users from publishing - but allow the admins to do  it? Idk if you can do that but that&#x27;s how I&#x27;d think about it...",
        "authorID": "930744788859359282",
        "authorName": "cookernetes",
        "authorAvatar": "10c087ae991709d87a90c5019f61c7d6",
        "createdAtDate": 1674343164733
      },
      {
        "content": "@cookernetes exactly right, use role-based access control for this.",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1674434679617
      },
      {
        "content": "I want to allow non-registered users to post using front-end stuff, would role-based access pose any restrictions on that?",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674439856660
      },
      {
        "content": "In your hook you would set the post to draft status if the request was made anonymously (no <code>req.user</code>)",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1674440150487
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Node ESM Trouble from unknown origins",
      "id": "1071523101290004521",
      "createdAt": 1675541415284
    },
    "messages": [
      {
        "content": "The <code>web</code> folder is generated by <code>svelte-kit</code> using its node adapter",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675541511429
      },
      {
        "content": "Relevant snippet of my <code>package.json</code>:",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675541556788
      },
      {
        "content": "Node ESM Trouble from unknown origins",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675541587960
      },
      {
        "content": "@hypersonic.dev Can you post your tsconfig.json?",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675545371839
      },
      {
        "content": "Sure",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545383669
      },
      {
        "content": "one sec",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545386186
      },
      {
        "content": "<pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;compilerOptions&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;target&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;es5&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;lib&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;dom&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;dom.iterable&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;esnext&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;allowJs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;strict&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">false</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;esModuleInterop&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;skipLibCheck&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;outDir&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;./dist&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;rootDir&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;./src&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;jsx&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;react&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;importsNotUsedAsValues&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;error&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;moduleResolution&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;node&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;paths&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n      <span class=\"hljs-attr\">&quot;payload/generated-types&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./src/payload-types.ts&quot;</span><span class=\"hljs-punctuation\">]</span>\n    <span class=\"hljs-punctuation\">}</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;include&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;src&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;exclude&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;node_modules&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;dist&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;build&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;ts-node&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;transpileOnly&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;swc&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;esm&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span></code></pre>",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545428706
      },
      {
        "content": "Mh try using<br><code>&quot;module&quot;: &quot;commonjs&quot;,</code><br><br>(had some problems myself without it). And maybe that <code>&quot;esm&quot;: true</code> would cause problems too.<br><br>Not an expert in the pains and horrors of cjs/esm - but payload is still on commonjs and is not using esmodules yet, which sometmes causes errors",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675545536738
      },
      {
        "content": "you&#x27;re running both payload and sveltekit from the same server?",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675545570196
      },
      {
        "content": "Yes I am",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545586048
      },
      {
        "content": "The <code>esm: true</code> should only affect <code>ts-node</code>",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545606426
      },
      {
        "content": "Ohh I wasn&#x27;t clear",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545632441
      },
      {
        "content": "iinteresting, would love to try that as well! But I figured there would be <em>some</em> issue since sveltekit is on esm and payload on cjs",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675545633803
      },
      {
        "content": "This error only rears its head when I run the start command",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545656819
      },
      {
        "content": "It was working without trouble on <code>v1.5.9</code> 🥹",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545679125
      },
      {
        "content": "oooh I see",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675545840923
      },
      {
        "content": "This didn&#x27;t work btw",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545933404
      },
      {
        "content": "I&#x27;m using <code>esbuild</code> not <code>tsc</code> cli",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675545948964
      },
      {
        "content": "prob something to do with those new changes introduced in 1.6.0 there.<br><br>Did it generate the server.mjs file instead of a server.js on 1.5.9 as well?",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675546014177
      },
      {
        "content": "Yes I did",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546081288
      },
      {
        "content": "I just literally updated the payload version and made the changes to my <code>server.mts</code> file",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546112199
      },
      {
        "content": "and the start command doesn&#x27;t work anymore",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546142246
      },
      {
        "content": "Did you update the package.json as well? Prob something @jmikrut can help since he made that <a href=\"https://github.com/payloadcms/payload/pull/1847\">https://github.com/payloadcms/payload/pull/1847</a> PR which probably broke it",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675546459664
      },
      {
        "content": "might be:",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546575800
      },
      {
        "content": "<pre><code class=\"hljs\">  &quot;ts-node&quot;: {\n    &quot;transpileOnly&quot;: true,\n    &quot;swc&quot;: true,\n    &quot;esm&quot;: true\n  }</code></pre>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546578916
      },
      {
        "content": "notice that it says <code>esm: true</code>?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546584688
      },
      {
        "content": "for some reason your build process is outputting the config as mjs",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546592892
      },
      {
        "content": "😅",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546602983
      },
      {
        "content": "you may also have <code>type: &quot;module&quot;</code> defined in your package json",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546604333
      },
      {
        "content": "it seems to have worked for him in v1.5.9 though",
        "authorID": "360823574644129795",
        "authorName": "Alessio 🍣",
        "authorAvatar": "26359ab79ba70a596b72c3d6e48ca682",
        "createdAtDate": 1675546615760
      },
      {
        "content": "That&#x27;s intentional",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546621239
      },
      {
        "content": "old <code>load.js</code>",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546634898
      },
      {
        "content": "that&#x27;s because loading a payload config <em><strong>before</strong></em> 1.6.0 went through automatic transpilation no matter what",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546635551
      },
      {
        "content": "<em><strong>now</strong></em> the config doesn&#x27;t go through any transpilation at all in prod mode for speed / performance",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546656988
      },
      {
        "content": "so your barebones node environment, and your project settings, now need to be able to work with mjs files",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546689235
      },
      {
        "content": "i.e. @hypersonic.dev that screenshot made sure that right before we load your payload config, we implement swc/register to make sure any file that gets required afterward goes through transpilation",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546740203
      },
      {
        "content": "and you added <pre><code class=\"hljs\">&quot;module&quot;: &quot;commonjs&quot;,</code></pre>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546786850
      },
      {
        "content": "to your compilerOptions, and that didnt work?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675546791998
      },
      {
        "content": "Yes, that&#x27;s because I&#x27;m using esbuild instead of tsc",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546815033
      },
      {
        "content": "To transpile the files",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546822946
      },
      {
        "content": "Esbuild tends to do its own thing",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546855803
      },
      {
        "content": "Actually I just got an idea",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675546970559
      },
      {
        "content": "To transpile <code>payload.config.mts</code> to <code>payload.config.cjs</code> and check if that works",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675547002102
      },
      {
        "content": "THERE IS PROGRESS!!",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675548285823
      },
      {
        "content": "I FIXED IT",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675550770995
      },
      {
        "content": "Relevant links for future reference: <a href=\"https://github.com/evanw/esbuild/issues/2023\">https://github.com/evanw/esbuild/issues/2023</a>, <a href=\"https://github.com/flex-development/toggle-pkg-type\">https://github.com/flex-development/toggle-pkg-type</a>",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675550807830
      },
      {
        "content": "My solution:",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675550839732
      },
      {
        "content": "Every payload related file is compiled to payload (i.e collections &amp; <code>payload.config.ts</code>) is transpiled to use the <code>.cjs</code> extension, while everything else uses the <code>.mjs</code> extension",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675550966261
      },
      {
        "content": "As for the command that starts the server, I use the <code>toggle-pkg-type</code> to stop <code>&quot;type&quot;:&quot;module&quot;</code> from being set in the package.json",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675551035109
      },
      {
        "content": "Thanks everyone for pointing me in the right direction!",
        "authorID": "521690392983371776",
        "authorName": "hypersonic.dev",
        "authorAvatar": "e5eb7ca314f65914dbac99a0ca26ff16",
        "createdAtDate": 1675551114665
      }
    ],
    "messageCount": 51
  },
  {
    "info": {
      "name": "Custom GraphQL query nested field returns null",
      "id": "1053525957329305600",
      "createdAt": 1671250561793
    },
    "messages": [
      {
        "content": "Hi, I have a custom GraphQL query to grab a <code>Page</code> by its slug. A <code>Page</code> contains a relation towards <code>meta</code> and an array called <code>content</code>.<br><br>If I try to access the anything within the <code>meta</code> relation, it always gives me <code>null</code> . It works for the <code>content</code> though. And if I log the result in the console, I do see <code>meta</code> as an Object<br><br>I&#x27;ve tried adding <code>access.read</code> to be <code>() =&gt; true</code> everywhere to see if it would affect it to no avail. Putting <code>depth</code> also on the query did not work :&lt; <br><br><strong>GQL query (in playground):</strong><br><pre><code class=\"hljs\">{\n  PageBySlug(slug: &quot;blog&quot;) {\n    id\n    content {\n      ... on ComponentPageMargin {\n        __typename\n        height\n      }\n      ... on ComponentPageBlockCardHeader {\n        __typename\n        title\n        description\n        id\n        blockName\n      }\n    }\n    meta {\n      id\n    }\n  }\n}</code></pre><br><br><strong>Custom query:</strong><br><pre><code class=\"hljs ts\"><span class=\"hljs-comment\">// src/queries/pageBySlug.ts</span>\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">GraphQL</span> =\n  <span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">&quot;/home/rayhanw/code/rayhanw/learn/blog/apple/node_modules/graphql/index&quot;</span>);\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">PageBySlug</span> = <span class=\"hljs-function\">(<span class=\"hljs-params\">\n  graphQL: GraphQL,\n  payload: Payload\n</span>) =&gt;</span> <span class=\"hljs-title class_\">Record</span>&lt;<span class=\"hljs-built_in\">string</span>, <span class=\"hljs-built_in\">unknown</span>&gt;;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">resolve</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">\n  _: <span class=\"hljs-built_in\">unknown</span>,\n  args: {\n    slug: <span class=\"hljs-built_in\">string</span>;\n  },\n  ctx: {\n    req: PayloadRequest;\n    res: Response;\n  }\n</span>) =&gt; {\n  <span class=\"hljs-keyword\">const</span> { payload } = ctx.<span class=\"hljs-property\">req</span>;\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">options</span>: <span class=\"hljs-title class_\">Options</span> = {\n    <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;pages&quot;</span>,\n    <span class=\"hljs-attr\">depth</span>: <span class=\"hljs-number\">10</span>,\n    <span class=\"hljs-attr\">where</span>: {\n      <span class=\"hljs-attr\">slug</span>: { <span class=\"hljs-attr\">equals</span>: args.<span class=\"hljs-property\">slug</span> },\n    },\n    <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-number\">1</span>,\n  };\n  <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> (payload <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">Payload</span>).<span class=\"hljs-title function_\">find</span>(options);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">dir</span>(result.<span class=\"hljs-property\">docs</span>[<span class=\"hljs-number\">0</span>]);\n\n  <span class=\"hljs-keyword\">return</span> result.<span class=\"hljs-property\">docs</span>[<span class=\"hljs-number\">0</span>];\n};\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">PageBySlug</span>: <span class=\"hljs-title class_\">PageBySlug</span> = <span class=\"hljs-function\">(<span class=\"hljs-params\">graphQL, payload</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">type</span>: payload.<span class=\"hljs-property\">Query</span>.<span class=\"hljs-property\">fields</span>.<span class=\"hljs-property\">Page</span>.<span class=\"hljs-property\">type</span>,\n    <span class=\"hljs-attr\">args</span>: {\n      <span class=\"hljs-attr\">slug</span>: { <span class=\"hljs-attr\">type</span>: graphQL.<span class=\"hljs-property\">GraphQLString</span> },\n    },\n    <span class=\"hljs-attr\">depth</span>: <span class=\"hljs-number\">10</span>,\n    resolve,\n  };\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">PageBySlug</span>;\n\n<span class=\"hljs-comment\">// payload.config.ts</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">buildConfig</span>({\n  <span class=\"hljs-comment\">// [...]</span>\n  <span class=\"hljs-title function_\">queries</span>(<span class=\"hljs-params\">GraphQL, payload</span>) {\n    <span class=\"hljs-keyword\">return</span> {\n      <span class=\"hljs-title class_\">PageBySlug</span>: <span class=\"hljs-title class_\">PageBySlug</span>(<span class=\"hljs-title class_\">GraphQL</span>, payload),\n    };\n  },\n  <span class=\"hljs-comment\">// [...]</span>\n})</code></pre><br><br>Thank you!",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1671250561793
      },
      {
        "content": "@Domosaurus  do you still need help with this issue? if so, could you log the result again and share here?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674755635648
      },
      {
        "content": "Sorry, I haven&#x27;t gotten the chance to revisit this. But I ended up not using this as the built-in one was enough. So it should be ok to be marked as answered",
        "authorID": "106345742565654528",
        "authorName": "Domosaurus",
        "authorAvatar": "fa77b7292de1007c45f794efc78e58c3",
        "createdAtDate": 1674804185769
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "How to handle local api authentication error?",
      "id": "1073211161480274000",
      "createdAt": 1675943880196
    },
    "messages": [
      {
        "content": "I essentially want to do this:<br><br><pre><code class=\"hljs ts\">  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">login</span>({\n      <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&quot;users&quot;</span>,\n      <span class=\"hljs-attr\">data</span>: { email, password },\n      res,\n    });\n  } <span class=\"hljs-keyword\">catch</span> (e) {\n    <span class=\"hljs-keyword\">if</span> (e <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-title class_\">AuthenticationError</span>) {\n      <span class=\"hljs-comment\">// handle error</span>\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-keyword\">throw</span> e;\n    }\n  }</code></pre><br><br>but it looks like I cannot import <code>AuthenticationError</code> from payloadCMS. What is the best way to handle the auth error ?",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1675943880196
      },
      {
        "content": "I don&#x27;t see a reason why we wouldn&#x27;t export this error type (along with the others). Let me get a PR going",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056673663
      },
      {
        "content": "PR opened here: <a href=\"https://github.com/payloadcms/payload/pull/2061\">https://github.com/payloadcms/payload/pull/2061</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056936896
      },
      {
        "content": "In the meantime, you&#x27;d have to check the error message (clunky I know)",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676056987618
      },
      {
        "content": "and doing <code>instanceof APIError</code>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676057027307
      },
      {
        "content": "awesome, thank you!",
        "authorID": "814899246540914698",
        "authorName": "moritz",
        "authorAvatar": "0806a9a0b90edcb1316ee9465f54a0a6",
        "createdAtDate": 1676059375259
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Can we add a custom document _status option other than Draft/Published/Changed?",
      "id": "1069000193317556235",
      "createdAt": 1674939907150
    },
    "messages": [
      {
        "content": "The documentation states &quot;a document can be shown with one of three &#x27;statuses&#x27;: <em>Draft</em>, <em>Published</em> or <em>Changed</em>.&quot; Is it possible to add another custom status to this?  E.g. <em>Staged</em>. <br><br>I&#x27;m trying to find a way to stage long-term changes (e.g. complete content overhaul) to a page while keeping in tact the normal editing functionality for quick edits (e.g. fix typo).",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1674939907150
      },
      {
        "content": "This is not possible, currently. It seems rather niche as well. Adding an additional checkbox or select to handle the additional state might be a possible workaround.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674940826983
      },
      {
        "content": "I’d second this request. Having additional statuses could be used to form a workflow. <br><br>I.e. editor creates content but can’t publish it. They move it to a status for review. <br><br>Content admin the checks content and approves it, moving it to a status for staging. <br><br>A deployment of the site that can pull staged content then is checked to ensure it displays correctly before it’s finally published. <br><br>This is a pretty common use case in larger content teams and the reason why most enterprise cms include some sort of content workflow.",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674983047629
      },
      {
        "content": "Eg <a href=\"https://kontent.ai/learn/tutorials/manage-kontent-ai/roles-and-workflow/manage-workflows/\">https://kontent.ai/learn/tutorials/manage-kontent-ai/roles-and-workflow/manage-workflows/</a>",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1674983126311
      },
      {
        "content": "Thanks for confirming!  I don&#x27;t agree that it&#x27;s niche—though it doesn&#x27;t seem to be a common feature in the open-source CMS world, it&#x27;s a feature of most major SaaS CMS that enables teams to customize workflows to fit their needs. <br><br>I&#x27;m trying to wrap my head around the checkbox workaround, but I think there are a few problems. It would require the content editor to keep going back and restoring versions to switch between editing the live and staging versions. Would it always retain the &quot;staging&quot; draft? Also not sure if there be a reliable way to preview that page from our web app?",
        "authorID": "869429674596524062",
        "authorName": "Douggie O",
        "authorAvatar": null,
        "createdAtDate": 1675004445317
      },
      {
        "content": "Related discussion: <a href=\"https://discord.com/channels/967097582721572934/1068897239285645322\">https://discord.com/channels/967097582721572934/1068897239285645322</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675050371204
      },
      {
        "content": "I see what you mean. There is definitely room for some sort of &quot;workflow&quot; plugin to make this type of flow easier.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675091238674
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "ecosystem.config.js",
      "id": "1070933675077812326",
      "createdAt": 1675400885124
    },
    "messages": [
      {
        "content": "Does anyone have an example pm2 ecosystem.config.js they could share? I&#x27;m having a really difficult time just getting a Payload &quot;hello world&quot; running on EC2 with basic NGINX config and PM2.",
        "authorID": "583007768311758886",
        "authorName": "ericpugh",
        "authorAvatar": "c6dbe07e1e07ff34376eb02a869fd18a",
        "createdAtDate": 1675400885124
      },
      {
        "content": "What do you have so far in your ecosystem file?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675431286037
      },
      {
        "content": "I&#x27;ve tried a bunch of things, currently have: <br><pre><code class=\"hljs\">module.exports = {  \n apps: [  \n   {  \n     name: &#x27;payloadcms-test&#x27;,  \n     script: &#x27;cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js&#x27;,  \n     instances: &#x27;max&#x27;,  \n     exec_mode: &#x27;cluster&#x27;,  \n     autorestart: true\n   },  \n ],  \n}</code></pre>",
        "authorID": "583007768311758886",
        "authorName": "ericpugh",
        "authorAvatar": "c6dbe07e1e07ff34376eb02a869fd18a",
        "createdAtDate": 1675436157442
      },
      {
        "content": "This gives me a 502 &quot;Bad Gateway&quot; from NGINX, and the only thing I can find in the PM2 logs is <br><pre><code class=\"hljs\">1|payloadc | SyntaxError: Invalid or unexpected token</code></pre>",
        "authorID": "583007768311758886",
        "authorName": "ericpugh",
        "authorAvatar": "c6dbe07e1e07ff34376eb02a869fd18a",
        "createdAtDate": 1675436261557
      },
      {
        "content": "Note: if I run <code>npm run serve</code> from the project root (which is the same as the &quot;script&quot; property in the ecosystem config, the site <em>does</em> serve. It doesn&#x27;t really work because of some CORS issue, but I think that does rule out an issue with NGINX.",
        "authorID": "583007768311758886",
        "authorName": "ericpugh",
        "authorAvatar": "c6dbe07e1e07ff34376eb02a869fd18a",
        "createdAtDate": 1675436404661
      },
      {
        "content": "Hm. I think I figured it out (I&#x27;m relatively new to node.js, so not sure <em>why</em> or what to do about it) but the issue was <code>exec_mode: &#x27;cluster&#x27;</code> I removed that property (which defaults to &quot;fork&quot;) and the app works.",
        "authorID": "583007768311758886",
        "authorName": "ericpugh",
        "authorAvatar": "c6dbe07e1e07ff34376eb02a869fd18a",
        "createdAtDate": 1675450193657
      }
    ],
    "messageCount": 5
  },
  {
    "info": {
      "name": "Clean structure for managing complex permissions?",
      "id": "1066293456605028363",
      "createdAt": 1674294570829
    },
    "messages": [
      {
        "content": "So currently I&#x27;ve found that when you need rather complex permissions,  you can end up writing a lot of code, as powerful as it is...<br>Here&#x27;s an example of what I have across my app<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> hasRoleOrSelf =\n  (<span class=\"hljs-attr\">role</span>: <span class=\"hljs-title class_\">User</span>[<span class=\"hljs-string\">&#x27;role&#x27;</span>]): <span class=\"hljs-title class_\">Access</span>&lt;<span class=\"hljs-built_in\">any</span>, <span class=\"hljs-title class_\">User</span>&gt; =&gt;\n  <span class=\"hljs-function\">(<span class=\"hljs-params\">{ req: { user } }</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (user) {\n      <span class=\"hljs-keyword\">const</span> userRole = user?.<span class=\"hljs-property\">role</span>\n\n      <span class=\"hljs-keyword\">if</span> (userRole === role) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">PriorityMap</span>[userRole] &gt;= <span class=\"hljs-title class_\">PriorityMap</span>[role]) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n\n      <span class=\"hljs-keyword\">return</span> {\n        <span class=\"hljs-attr\">id</span>: {\n          <span class=\"hljs-attr\">equals</span>: user.<span class=\"hljs-property\">id</span>,\n        },\n      }\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  }</code></pre><br><br>So this checks if the user has the right role (or of higher priority like super admin) OR it matches the id of the content...<br>Now if I want to re-use this as well as extend it with logic for an additional type of user like customer, I need a different function entirely.<br><br>Does anybody have an example of a better structure? It would be nice if the access hooks took in an array instead or maybe if it could define an OR/AND combination of permission checks which would make it easier to extend.<br><br>edit:<br>I landed on something like this, where the extension function takes in the user from the request (might update it to take the whole request in the future) so that I can attach custom extensions where needed, so that customers can interact with specific fields or parts of the API<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> hasRoleOrSelf =\n  (<span class=\"hljs-attr\">role</span>: <span class=\"hljs-title class_\">User</span>[<span class=\"hljs-string\">&#x27;role&#x27;</span>], extension?: extensionFunction): <span class=\"hljs-title class_\">Access</span>&lt;<span class=\"hljs-built_in\">any</span>, <span class=\"hljs-title class_\">User</span>&gt; =&gt;\n  <span class=\"hljs-function\">(<span class=\"hljs-params\">{ req: { user } }</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (user) {\n      <span class=\"hljs-keyword\">if</span> (extension) {\n        <span class=\"hljs-keyword\">const</span> validatedExtension = <span class=\"hljs-title function_\">extension</span>(user)\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> validatedExtension === <span class=\"hljs-string\">&#x27;boolean&#x27;</span>) <span class=\"hljs-keyword\">return</span> validatedExtension\n      }\n\n      <span class=\"hljs-keyword\">const</span> userRole = user?.<span class=\"hljs-property\">role</span>\n\n      <span class=\"hljs-keyword\">if</span> (userRole === role) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">PriorityMap</span>[userRole] &gt;= <span class=\"hljs-title class_\">PriorityMap</span>[role]) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\n\n      <span class=\"hljs-keyword\">return</span> {\n        <span class=\"hljs-attr\">id</span>: {\n          <span class=\"hljs-attr\">equals</span>: user.<span class=\"hljs-property\">id</span>,\n        },\n      }\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\n  }</code></pre>",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674294570829
      },
      {
        "content": "This is the typical pattern that we see used. I agree that it is powerful but can get quite complex at some point. We&#x27;ve talked about creating a plugin for RBAC that implements more traditional roles, policies, scopes in the future. Is that something you&#x27;d be interested in?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675441773241
      },
      {
        "content": "Possibly yeah, I thought about writing something like that as well, for most permissions it&#x27;s simple enough, the issue comes when you&#x27;re dealing with multiple types of users (eg. staff and end users) who might then own different types of content. <br>For example we have orders, we want customers to view/manage only their own orders, for obvious reasons, and only certain staff roles to have access to view orders or certain sensitive user information like addresses.<br><br>My thinking was to try and make a function that takes an array of permission functions instead, that would make it easier to extend...so i can do something like<br><pre><code class=\"hljs\">read: [\n   hasRole(&#x27;manager&#x27;),\n   isCustomerReferenced(),\n],</code></pre><br>then if one of them matches, it would pass...will think about it more once this project is done!",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1675487515202
      },
      {
        "content": "You could definitely get pretty advanced here - even recreating something akin to IAM roles/permissions in AWS.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675489608654
      },
      {
        "content": "Here&#x27;s a link to someone leveraging the casl package to do some roles: <a href=\"https://discord.com/channels/967097582721572934/1002670004522725528/1002671690360311888\">https://discord.com/channels/967097582721572934/1002670004522725528/1002671690360311888</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675489651200
      },
      {
        "content": "Could also roll your own somewhat using types",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675489699600
      },
      {
        "content": "interesting, thanks for the reference...good to see the conversation i was having in my head",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1675490103389
      },
      {
        "content": "Yeah, I definitely think there is room for a first party RBAC plugin to simplify this",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675519553998
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Download - export from a collection",
      "id": "1062197981966782554",
      "createdAt": 1673318133585
    },
    "messages": [
      {
        "content": "I was looking for a plugin or field to download the data shown on a collection page but didn&#x27;t find anything, someone has a recommendation on how to implement this in the better (easiest) way possible? 😅",
        "authorID": "706208036439588934",
        "authorName": "akacronos",
        "authorAvatar": "6f1f79489add6cb4d6f26a7df670a8ec",
        "createdAtDate": 1673318133585
      },
      {
        "content": "You could open a custom endpoint on your collection, where you pass the doc id as a query param - your endpoint would be responsible getting the data and transforming it into a download. I would have to do some googlin&#x27; but this would be a good starting point!<br><br>Heres some info about custom endpoints: <a href=\"https://payloadcms.com/docs/rest-api/overview#custom-endpoints\">https://payloadcms.com/docs/rest-api/overview#custom-endpoints</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675438161221
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Media List Component Thumbnail",
      "id": "1042138554903580732",
      "createdAt": 1668535593487
    },
    "messages": [
      {
        "content": "Does the component support displaying SVGs? On our site we are uploading svgs and the thumbnail is displaying as a broken. What&#x27;s also interesting is on the API response for that media the proper s3 url is returned. The thumbnail href is not correct (only for svgs)",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1668535593487
      },
      {
        "content": "Are you using the <code>@payloadcms/plugin-cloud-storage</code> for this? Would love to get more detail on recreating the issue.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1668801917611
      },
      {
        "content": "Yeah, connected to an S3 bucket",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1668824600365
      },
      {
        "content": "SVG loads fine through the api / frontend and on S3. It’s only in the media collection thumbnail.",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1668824640289
      },
      {
        "content": "Using the source code for media that I found on the demo cms",
        "authorID": "473343795782615060",
        "authorName": "damnstaychill",
        "authorAvatar": "ea1c1ee0f361e2eeb5f35b7ce5253c52",
        "createdAtDate": 1668824650493
      },
      {
        "content": "Bumping this, were you able to make any progress?",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1670263258057
      },
      {
        "content": "can confirm this still unfortunately doesn&#x27;t work 😦 the image path location for svgs for the media thumbnail just returns undefined (but the api values are fine)",
        "authorID": "225910068078444544",
        "authorName": "sesons",
        "authorAvatar": "513f60e24dd5d968544cf645c8cc3cf7",
        "createdAtDate": 1676129067217
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "Check which part of the Where query a document was matched against.",
      "id": "1070206874420510760",
      "createdAt": 1675227602344
    },
    "messages": [
      {
        "content": "Hello, I&#x27;ve got a slight problem currently. We are using an older version of payload and cannot update currently due to conflicting changes in future updates, so i&#x27;m doing a Payload Local API query to achieve a uniqueness check, but I want to know which part of the query it matched against in a or/and queries<br><br>a few solutions around this would be to have seperate queries for each type we are matching against, but the problem is that this is slow as for each field we want to compare uniqueness against would be its own query which could be upwards of 5-20.<br><br>next one is to pull all the documents for a collection and manually compare myself with a function and throw error specific to the field if we found a match. but the problem here is that the more documents we add, the longer it will take every time so this is kind of out of the question.<br><br>ideal solution would be that the unique flag works on fields but for some reason it does not in our version.<br>so this is why I&#x27;ve presented the idea of asking for which part of the query matched the document(s) returned.<br><br>ie doc 0 was returned as it matched {fieldName: { equals: value}} in an or/and query even though there are other parts to the query. i&#x27;m unsure if this is possible with payload or even mongoose.",
        "authorID": "284901071468494848",
        "authorName": "L U N A / R \\",
        "authorAvatar": "e4071306a07f6735d3f1da488c888f9f",
        "createdAtDate": 1675227602344
      },
      {
        "content": "Currently using Payload version 1.2.4",
        "authorID": "284901071468494848",
        "authorName": "L U N A / R \\",
        "authorAvatar": "e4071306a07f6735d3f1da488c888f9f",
        "createdAtDate": 1675227679757
      },
      {
        "content": "Hey @L U N A / R \\ I am curious as to what is holding you back from updating Payload?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675286882498
      },
      {
        "content": "We are close to releasing a product and the team has decided to stick to current version for now until we have time go through and refactor/update code/packages where needed. We looked into the most recent version available but wasn’t in full release was still in a revision stage last we checked. Updating is out of my control unfortunately.",
        "authorID": "284901071468494848",
        "authorName": "L U N A / R \\",
        "authorAvatar": "e4071306a07f6735d3f1da488c888f9f",
        "createdAtDate": 1675290956035
      },
      {
        "content": "Current solution was to do the query and then go through the returned docs and manually check for the fields",
        "authorID": "284901071468494848",
        "authorName": "L U N A / R \\",
        "authorAvatar": "e4071306a07f6735d3f1da488c888f9f",
        "createdAtDate": 1675291039050
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Directory structure for Next.js app and PayloadCMS?",
      "id": "1071441392129282188",
      "createdAt": 1675521934302
    },
    "messages": [
      {
        "content": "Hello team,<br>My question is that is it a working way to install Next.js as the frontend and Payload as backend in the same idrectory, along-side one another? Or should I just keep them in separate folders, but inside one, main folder?<br><br>How do you guys do it normally, the way it works nice and dandy?",
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1675521934302
      },
      {
        "content": "Check their github, they have a nextjs project combined with payload template there 🙂",
        "authorID": "220308673988263938",
        "authorName": "nicht hzK",
        "authorAvatar": "0b29ee5d6e099d791fb399f06e03bd7e",
        "createdAtDate": 1675554783619
      },
      {
        "content": "This matters on the project really. We prefer to keep the frontend and backend in separate repos, adn therefore allows easier separate deployments. However, as mentioned above, we do have an example with them combined here: <a href=\"https://github.com/payloadcms/nextjs-custom-server\">https://github.com/payloadcms/nextjs-custom-server</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675691876645
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "payload.update help with arrays and hasMany relationship fields",
      "id": "1075390011182157886",
      "createdAt": 1676463358446
    },
    "messages": [
      {
        "content": "What is the recommended approach for updating array and hasMany relationship fields?<br><br>### 1) hasMany relationship fields<br>I have an Customer collection, and I want to add an order id to the hasMany relationship field. What&#x27;s the approach to take here?<br><br>### 2) array fields<br>If I want to push a new object to an array, what is the recommended approach here?<br><br>Some example code for both cases would be <em>really</em> helpful here.<br><br>Thanks!",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676463358446
      },
      {
        "content": "@payloadcms team - would really appreciate a guide here.<br><br>When we create a relationship field, it produces an array at the API level, but when I add a new <code>id</code> to the field through <code>payload.update()</code>  do we again treat is as an array?<br><br>Would this be a correct approach:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">payloadCustomer</span>: <span class=\"hljs-title class_\">CustomerType</span> = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">findByID</span>({\n  <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;customers&#x27;</span>,\n  <span class=\"hljs-attr\">id</span>: newOrUpdatedOrder.<span class=\"hljs-property\">customerRelationship</span>.<span class=\"hljs-property\">id</span>,\n});\n\n<span class=\"hljs-keyword\">if</span> (payloadCustomer.<span class=\"hljs-property\">stripe</span>.<span class=\"hljs-property\">customerId</span> === <span class=\"hljs-string\">&#x27;&#x27;</span>) {\n  <span class=\"hljs-keyword\">const</span> stripeCustomer = <span class=\"hljs-keyword\">await</span> stripe.<span class=\"hljs-property\">customers</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">email</span>: customer.<span class=\"hljs-property\">email</span>,\n    <span class=\"hljs-attr\">name</span>: customer.<span class=\"hljs-property\">name</span>,\n    <span class=\"hljs-attr\">address</span>: customer.<span class=\"hljs-property\">address</span>,\n  });\n\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">updatedCustomer</span>: <span class=\"hljs-title class_\">CustomerType</span> = <span class=\"hljs-keyword\">await</span> payload.<span class=\"hljs-title function_\">update</span>({\n    <span class=\"hljs-attr\">collection</span>: <span class=\"hljs-string\">&#x27;customers&#x27;</span>,\n    <span class=\"hljs-attr\">id</span>: payloadCustomer.<span class=\"hljs-property\">id</span>,\n    <span class=\"hljs-attr\">data</span>: {\n      <span class=\"hljs-attr\">stripeCustomerId</span>: stripeCustomer.<span class=\"hljs-property\">id</span>,\n      <span class=\"hljs-attr\">orders</span>: [\n        ...payloadCustomer.<span class=\"hljs-property\">orders</span>,\n        newOrUpdatedOrder.<span class=\"hljs-property\">id</span>,\n      ],\n    },\n  });\n}</code></pre>",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676474981165
      },
      {
        "content": "and if the <code>hasMany</code> is set to false, how do we treat this field from <code>payload.update</code> is it an array of length 1, or is it a string of id?",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676475930102
      },
      {
        "content": "I&#x27;ve found the docs have been updated since the last time I checked many moons ago 👍",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676476212945
      },
      {
        "content": "Hey @jakehopking to update an array (relationship or not), you need merge the existing array data with the new one as you are doing above.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1676477596387
      },
      {
        "content": "Of fundamental importance for anyone who gets stuck on this for more time than they should:<br><br>You need to map over the array you intend to spread back in, and only return the <code>id</code> .<br><br>A relationship <code>hasMany</code> only stores an array of id, and when we query with say, <code>payload.findById</code> it returns these populated as would be expected, so when you spread back in, then you need to filter out everything except the id. Like so:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">orders</span>: [\n  ...payloadCustomer.<span class=\"hljs-property\">orders</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">order</span>) =&gt;</span> order.<span class=\"hljs-property\">id</span>),\n  newOrUpdatedOrder.<span class=\"hljs-property\">id</span>,\n],</code></pre>",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676483148173
      },
      {
        "content": "@Jarrod Thanks, but I&#x27;m still a bit confused. The above realisation got me most of the way.... however I notice that the <code>hasMany</code> can actually hold arrays with multiple items with the same id. Is this expected? How best to filter out?",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676483778922
      },
      {
        "content": "do I need to do something like this to ensure no duplicates??<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">orders</span>: <span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">from</span>(\n  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([\n    ...payloadCustomer.<span class=\"hljs-property\">orders</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">order</span>) =&gt;</span> order.<span class=\"hljs-property\">id</span>),\n    newOrUpdatedOrder.<span class=\"hljs-property\">id</span>,\n  ]),\n),</code></pre>",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676483830574
      },
      {
        "content": "-<br>seems like this should be handled at the api level?<br>-",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676483854737
      },
      {
        "content": "",
        "authorID": "357456032454410240",
        "authorName": "jakehopking",
        "authorAvatar": "be04dbc0304e7d0f1e98613aff048199",
        "createdAtDate": 1676483954004
      }
    ],
    "messageCount": 9
  },
  {
    "info": {
      "name": "Why do FilterOptionsProps pass in a Partial user?",
      "id": "1075408795502653622",
      "createdAt": 1676467836977
    },
    "messages": [
      {
        "content": "Is it because the JWT does not contain all fields?<br><pre><code class=\"hljs\">FilterOptionsProps&lt;T = any&gt; = {\n    id: string | number;\n    user: Partial&lt;User&gt;;</code></pre>",
        "authorID": "476523795251855360",
        "authorName": "thgh",
        "authorAvatar": "7a6dc70a50b1fe0de52c0e1a358e8fa5",
        "createdAtDate": 1676467836977
      }
    ],
    "messageCount": 0
  },
  {
    "info": {
      "name": "User permissions by group",
      "id": "1065657394492870686",
      "createdAt": 1674142921804
    },
    "messages": [
      {
        "content": "Hi!  I&#x27;m trying to setup an access permission setting that is defined in a &quot;group&quot; that content is created under.<br><br>My example would be<br>&quot;group1&quot; <br>- createdBy user1<br>- editors [user2, user3]<br>- members [ user4]<br><br>WHat I want to be able to do is when the group is created assign users to both editor and members but exclude the users from each list and not show the createdBy user (user4 would not show up in the select list for editors cause they are a member, or if they do it would remove them from members)<br><br>The second part of the question,  is there a page someone can point me to that would show how I can access this information so I can use it in the Collection access definition?<br><br>Thanks!",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1674142921804
      },
      {
        "content": "if this is a bad way to do this I&#x27;m open to other ways.  But the use case I&#x27;m building to has content in different groups and users can have different permissions for each group.",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1674143039904
      },
      {
        "content": "I found I should be using filterOptions, and working through the logic on it.",
        "authorID": "683183485095247925",
        "authorName": "rogueturnip",
        "authorAvatar": "040410f8e5c4b30f9e9d4ad27745523b",
        "createdAtDate": 1674168400104
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Suddenly not getting PAYLOAD_PUBLIC_* in process.env in client bundle",
      "id": "1069706320418181180",
      "createdAt": 1675108260970
    },
    "messages": [
      {
        "content": "For some reason I&#x27;m no longer getting my environment variables in <code>process.env</code> anymore on the client side. Has there been a change to this? Any ideas?",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675108260970
      },
      {
        "content": "Is it calling dotenv at the top to pull in the .env file?",
        "authorID": "486710146651652106",
        "authorName": "notchris",
        "authorAvatar": "b37606a7b06253291fc1308b71bc02de",
        "createdAtDate": 1675108710829
      },
      {
        "content": "On the server the environment is loaded fine, yes.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675108744665
      },
      {
        "content": "On the client, <code>process.env</code> is <code>{}</code>.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675108759563
      },
      {
        "content": "I think it&#x27;s defined in the webpack config on client",
        "authorID": "486710146651652106",
        "authorName": "notchris",
        "authorAvatar": "b37606a7b06253291fc1308b71bc02de",
        "createdAtDate": 1675108793759
      },
      {
        "content": "Do you know at what path? I&#x27;m doing a deep merge on the webpack config with a bunch of my own stuff. Was working before, but maybe it&#x27;s clobbering whichever key has the environment stuff.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675109065203
      },
      {
        "content": "I&#x27;m not 100% sure but I&#x27;ve seen it done like...",
        "authorID": "486710146651652106",
        "authorName": "notchris",
        "authorAvatar": "b37606a7b06253291fc1308b71bc02de",
        "createdAtDate": 1675109118591
      },
      {
        "content": "<pre><code class=\"hljs\">plugins: [\n  new webpack.DefinePlugin({\n    &#x27;process.env&#x27;: {\n    }\n  })\n]</code></pre>",
        "authorID": "486710146651652106",
        "authorName": "notchris",
        "authorAvatar": "b37606a7b06253291fc1308b71bc02de",
        "createdAtDate": 1675109137533
      },
      {
        "content": "Very strange, the plugins key is not getting clobbered and a <code>DefinePlugin</code> instance with the expected env vars is kinda there...",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675109357369
      },
      {
        "content": "but it looks like:<br><pre><code class=\"hljs ts\"><span class=\"hljs-title class_\">DefinePlugin</span> {\n  <span class=\"hljs-attr\">definitions</span>: {\n    <span class=\"hljs-string\">&#x27;process.env.PAYLOAD_PUBLIC_KEY&#x27;</span>: <span class=\"hljs-string\">&#x27;value&#x27;</span>\n  }\n}</code></pre>",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675109424192
      },
      {
        "content": "No wonder it isn&#x27;t working 😦",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675109469659
      },
      {
        "content": "I am facing the same problem as well . I noticed this happens only when the NODE_ENV is set to &#x27;production&#x27; where as it works fine when it is &#x27;development&#x27;. Is that the same with you?",
        "authorID": "884837823931375646",
        "authorName": "sowmyapeta",
        "authorAvatar": null,
        "createdAtDate": 1675109609487
      },
      {
        "content": "Don&#x27;t think that&#x27;s the issue mate. The reason this isn&#x27;t working on my end is that they are using webpack string substitution in the preprocessor to simulate the existence of <code>process.env</code>.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675109746728
      },
      {
        "content": "Meaning if it doesn&#x27;t look exactly like <code>process.env.SOME_NAME</code>, but for example looks like <code>process.env[SOME_NAME]</code> or anything else, it won&#x27;t get picked up.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675109795973
      },
      {
        "content": "check out this convo: <a href=\"https://github.com/payloadcms/payload/issues/1654#issuecomment-1403972303\">https://github.com/payloadcms/payload/issues/1654#issuecomment-1403972303</a>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675113029298
      },
      {
        "content": "@\\ ឵឵឵  In addition to the above link. We dynamically generate that by looking at all values in process.env and look for the prefix. It doesn&#x27;t need to be in the exact form of <code>process.env.SOME_NAME</code>, it&#x27;s generated.<br><br><a href=\"https://github.com/payloadcms/payload/blob/master/src/webpack/getBaseConfig.ts#L67\">https://github.com/payloadcms/payload/blob/master/src/webpack/getBaseConfig.ts#L67</a>",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675113667134
      },
      {
        "content": "<code>DefinePlugin</code> is not that smart. You&#x27;re not implicitly creating a global <code>process.env</code> that can be accessed on the client, it&#x27;s just doing string substitution on the files in the bundle.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675114480694
      }
    ],
    "messageCount": 16
  },
  {
    "info": {
      "name": "Issues with deployment",
      "id": "1052327558659715144",
      "createdAt": 1670964841285
    },
    "messages": [
      {
        "content": "Hi there! We have a Next.js frontend hosted on Vercel and a Payload CMS admin hosted on Render. As of recently, we&#x27;ve been having issues with deploying anything (&quot;Error occurred prerendering page...&quot;). <br><br>Nothing has been changed in the code that would affect this sudden issue, so I&#x27;m trying to rule out possibilities right now. <br><br>Could this be an issue with Payload CMS? Maybe a recent update?",
        "authorID": "688751754510467189",
        "authorName": "room_n",
        "authorAvatar": "294e6b033ee19eb566e8f955ac109e31",
        "createdAtDate": 1670964841285
      },
      {
        "content": "I think you need more context to know what is the root cause of the issue here. What happens if you build locally while pointing to your CMS hosted on Render?",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1670965573064
      },
      {
        "content": "Did you solve it? I faced the same problem.",
        "authorID": "996606499663118336",
        "authorName": "dapsipli",
        "authorAvatar": null,
        "createdAtDate": 1675053690553
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Can you trigger DOM to redraw in field level hooks?",
      "id": "1074895941557039184",
      "createdAt": 1676345563068
    },
    "messages": [
      {
        "content": "I am facing a challenge, where the form fields should be refreshed after a relationship field is updated. The reason is that other fields are populated, using default values, based on the relationship field selection.<br><br>Is it possible to refresh the DOM in field level hooks or is there a better methods to ensure reactivity?",
        "authorID": "567578449439621124",
        "authorName": "KasparTr",
        "authorAvatar": "547ce3050e5d90dd3b8e0ae12b8cd05d",
        "createdAtDate": 1676345563068
      }
    ],
    "messageCount": 0
  },
  {
    "info": {
      "name": "Search block fields",
      "id": "1054264885283926036",
      "createdAt": 1671426735946
    },
    "messages": [
      {
        "content": "Is there a way to query in GraphQl if a block contains a string value",
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1671426735946
      },
      {
        "content": "bump",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1672850287714
      },
      {
        "content": "Not in GraphQL there isn&#x27;t, due to the strict typing necessary for GraphQL inputs. But this is an open roadmap item",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673286650414
      },
      {
        "content": "right now, you could use the REST API and dot notation to search on block fields",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673286658000
      },
      {
        "content": "there are a few discussions open re: how to do this",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673286664529
      },
      {
        "content": "Do you know if anyone has done this yet?",
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1673583810625
      },
      {
        "content": "in graphql? or REST?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673615857072
      },
      {
        "content": "REST",
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1673827062490
      },
      {
        "content": "in REST you certainly can",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673876997937
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/discussions/852\">https://github.com/payloadcms/payload/discussions/852</a>",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673877071433
      },
      {
        "content": "take a read through this",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673877073648
      },
      {
        "content": "it&#x27;s not exacxtly the same as to what you&#x27;re asking, but the principle is the same",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673877085007
      },
      {
        "content": "you can create dot-notation based nested field where queries",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1673877093435
      },
      {
        "content": "Thanks @jmikrut I&#x27;ll have a look",
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1673909596685
      },
      {
        "content": "Does the above only work in the CMS?",
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1674022082284
      },
      {
        "content": "what do you mean?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674052619171
      },
      {
        "content": "it works in REST API",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674052624796
      },
      {
        "content": "and local API",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1674052634184
      },
      {
        "content": "Im using it with NextJS.",
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1674172213359
      },
      {
        "content": "But I think Im not doing it right",
        "authorID": "1009647354758054068",
        "authorName": "christopher.nowlan",
        "authorAvatar": "dd3e3473c973fa3dd493e55c12b1bf78",
        "createdAtDate": 1674172226000
      }
    ],
    "messageCount": 19
  },
  {
    "info": {
      "name": "Admin account returns undefined",
      "id": "1044275014347784252",
      "createdAt": 1669044965112
    },
    "messages": [
      {
        "content": "I managed to successfully set up Payload with AWS Lambda and MongoDB Atlas, but only one thing seems to be broken - when I click on my profile, my API URL is <code>undefined</code> and in general the data for my account is not loaded. There are two requests in the Network tab of DevTools and one of them is HTTP 400, while the other is 200 and contains my user data with the correct ID and everything. What could be the problem?",
        "authorID": "583713322700898304",
        "authorName": "dodov",
        "authorAvatar": "963cac7b9d70846918bedd06cc4cc389",
        "createdAtDate": 1669044965112
      },
      {
        "content": "Oh, I think I&#x27;ve found it. The 400 request is:<br><pre><code class=\"hljs\">/api/users/62fb90287bed9b334e530765?depth=0?locale=en</code></pre><br>There are two question marks, which means that only <code>?locale=en</code> is the actual query string, while <code>?depth=0</code> remains as part of the path. Then, <code>62fb90287bed9b334e530765?depth=0</code> is an invalid ID and the request fails.<br><br>Looks like it&#x27;s an issue with Payload? I think the request URL was formed by Payload code. @Jarrod should I open an issue on GitHub?",
        "authorID": "583713322700898304",
        "authorName": "dodov",
        "authorAvatar": "963cac7b9d70846918bedd06cc4cc389",
        "createdAtDate": 1669045299000
      },
      {
        "content": "@dodov Yes, please open an issue! A minimal payload config for reproduction would be amazing to include as well.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1669046627343
      },
      {
        "content": "I went ahead and opened an issue: <a href=\"https://github.com/payloadcms/payload/issues/1472\">https://github.com/payloadcms/payload/issues/1472</a><br><br>I&#x27;ll try to make a reproduction config, sure!",
        "authorID": "583713322700898304",
        "authorName": "dodov",
        "authorAvatar": "963cac7b9d70846918bedd06cc4cc389",
        "createdAtDate": 1669046920375
      },
      {
        "content": "I&#x27;ve added some more context in the issue. The short answer is - the problem appears even on the live demo site of Payload.",
        "authorID": "583713322700898304",
        "authorName": "dodov",
        "authorAvatar": "963cac7b9d70846918bedd06cc4cc389",
        "createdAtDate": 1669048678030
      },
      {
        "content": "Nice, that is perfect.",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1669048828229
      },
      {
        "content": "Thank you!",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1669048831763
      },
      {
        "content": "Hey @dodov how&#x27;s ur experience so far running Payload CMS in Lambda? I&#x27;m exploring this option right now, but I &#x27;m having some issues with Dockerfile.<br><br>Maybe you could help? I send you PM",
        "authorID": "278945317771018240",
        "authorName": "kasmobir",
        "authorAvatar": "99b1da29576e5ebb0709705b82eeb8fc",
        "createdAtDate": 1675074159668
      }
    ],
    "messageCount": 7
  },
  {
    "info": {
      "name": "Hide the dashboard account section for certain roles.",
      "id": "1066973751956230174",
      "createdAt": 1674456765880
    },
    "messages": [
      {
        "content": "I have set all access levels of the <code>Users</code> collection to Administrator only. However, when I log in as the editor user, the account section of the dashboard page (<a href=\"http://localhost:3000/admin/account\">http://localhost:3000/admin/account</a>)  is still visible, even though the terminal is throwing <code>ERROR (payload): Forbidden: You are not allowed to perform this action.</code>.<br><br>Is it possible to hide the account part from certain roles by using access control, or is there more configuration to achieve this?",
        "authorID": "354438130067177475",
        "authorName": "ken⌁ryu",
        "authorAvatar": "fef5eda1a6d55cb4b2e1aeec1adc2bf5",
        "createdAtDate": 1674456765880
      },
      {
        "content": "@ken⌁ryu it seems like users should always have access to their account details, this is required for authentication. Would it work for you to just <em>hide</em> those fields within the admin panel?",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675454731368
      },
      {
        "content": "You should be able to do this via custom CSS: <a href=\"https://payloadcms.com/docs/admin/customizing-css#customizing-css-and-scss\">https://payloadcms.com/docs/admin/customizing-css#customizing-css-and-scss</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675454804357
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Tagging",
      "id": "1035533037091426405",
      "createdAt": 1666960715316
    },
    "messages": [
      {
        "content": "Hi,<br><br>I&#x27;m after a way of &#x27;tagging&#x27; collection items with arbitrary strings, similar to taxonomies in WordPress. Has anyone implemented something similar before? Use case is, you might have X different collections and you want to grab all items from all collections which are tagged with <code>Beauty</code>.<br><br>Thanks,<br>Ash",
        "authorID": "781099510423224322",
        "authorName": "asheboy",
        "authorAvatar": null,
        "createdAtDate": 1666960715316
      },
      {
        "content": "ok so to make sure i understand, you <em><strong>don&#x27;t want</strong></em> to use a relationship to another collection",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666962089325
      },
      {
        "content": "i probably would, especially now that we have the &quot;add inline relationship&quot; feature where you can just easily add a new &quot;tag&quot; if it doesn&#x27;t exist",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1666962106886
      },
      {
        "content": "After talking this through, we have actually gone with a hidden collection and a relationship input!",
        "authorID": "781099510423224322",
        "authorName": "asheboy",
        "authorAvatar": null,
        "createdAtDate": 1666966306120
      },
      {
        "content": "Thank you",
        "authorID": "781099510423224322",
        "authorName": "asheboy",
        "authorAvatar": null,
        "createdAtDate": 1666966309815
      },
      {
        "content": "how did you hide the collection from the admin bar?",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675960797107
      },
      {
        "content": "@fewbar we didn&#x27;t end up implementing this",
        "authorID": "781099510423224322",
        "authorName": "asheboy",
        "authorAvatar": null,
        "createdAtDate": 1675961519503
      },
      {
        "content": "You can disable it from the admin bar like this, but I&#x27;m not sure if you can then still use it in a realtionship",
        "authorID": "781099510423224322",
        "authorName": "asheboy",
        "authorAvatar": null,
        "createdAtDate": 1675961576295
      },
      {
        "content": "mhh ok thanks",
        "authorID": "1044822902572318781",
        "authorName": "fewbar",
        "authorAvatar": null,
        "createdAtDate": 1675961607165
      }
    ],
    "messageCount": 8
  },
  {
    "info": {
      "name": "Experiencing crashes when MongoDB connection drops (Atlas)",
      "id": "1070485342945300631",
      "createdAt": 1675293994414
    },
    "messages": [
      {
        "content": "Fairly frequently getting errors like:<br><pre><code class=\"hljs\">/home/x/repo/payload/node_modules/mongodb/src/cmap/connection.ts:353\n      op.cb(new MongoNetworkError(message));\n            ^\nMongoNetworkError: connection 3 to 37.74.243.28:27017 closed\n    at Connection.onClose (/home/x/repo/payload/node_modules/mongodb/src/cmap/connection.ts:353:13)\n    at TLSSocket.&lt;anonymous&gt; (/home/x/repo/payload/node_modules/mongodb/src/cmap/connection.ts:258:42)\n    at TLSSocket.emit (node:events:513:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at node:net:301:12\n    at TCP.done (node:_tls_wrap:588:7) {\n  [Symbol(errorLabels)]: Set(1) { &#x27;RetryableWriteError&#x27; }\n}\n[nodemon] app crashed - waiting for file changes before starting...</code></pre><br>Is anyone experiencing similar issues on Atlas or anywhere else? Is this expected behaviour? In the past, I was getting occasional failed requests due to connection close, but now, more often than not, the app as a whole is crashing when the DB connection drops. Would be very interested if anybody has any tips on how to address this.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675293994414
      },
      {
        "content": "Experiencing crashes when MongoDB connection drops (Atlas)",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675296778532
      },
      {
        "content": "Same/similar issue when using <code>retryWrites=false</code>:<br><pre><code class=\"hljs\">MongoNetworkError: connection 7 to 37.74.243.28:27017 closed\n    at Connection.onClose (/home/x/repo/payload/node_modules/mongodb/src/cmap/connection.ts:353:13)\n    at TLSSocket.&lt;anonymous&gt; (/home/x/repo/payload/node_modules/mongodb/src/cmap/connection.ts:258:42)\n    at TLSSocket.emit (node:events:513:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at node:net:301:12\n    at TCP.done (node:_tls_wrap:588:7) {\n  [Symbol(errorLabels)]: Set(0) {}\n}\n[nodemon] app crashed - waiting for file changes before starting...</code></pre>",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675298681181
      },
      {
        "content": "Bump.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675352057414
      },
      {
        "content": "do you get a lot of traffic? I also use MongoDB Atlas and so far didnt have any issues but it is just me testing my project",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675355717781
      },
      {
        "content": "I&#x27;m experiencing this already during development, needs to be fixed before deploy.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675357970772
      },
      {
        "content": "maybe you can try to add all ips to network access",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675361357842
      },
      {
        "content": "",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675361359849
      },
      {
        "content": "and see if that changes anything",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675361386147
      },
      {
        "content": "@generator101 do you also user MongoDB Atlas in serverless mode?",
        "authorID": "943687018020495380",
        "authorName": "pugbyte",
        "authorAvatar": "9e019a6d298de629db0fc661580538ca",
        "createdAtDate": 1675363511527
      },
      {
        "content": "yes",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675363534828
      },
      {
        "content": "Yep, it&#x27;s configured that way. The app connects fine, but when the first connection closes (they don&#x27;t stay open forever with Atlas, esepcially Serverless), the error is not getting handled and the app crashes. The error is routine, and based on the stack trace it&#x27;s an unhandled promise rejection, meaning most likely culprit is a missing <code>await</code> somewhere.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1675363599041
      },
      {
        "content": "maybe you can try to deploy it but dont launch yet and see if you face this issue",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675363673498
      },
      {
        "content": "I never had this issue and also one of my app is deployed to railway.app",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675363686047
      },
      {
        "content": "the only issue I had with mongo was when that IP was not set so the connection would get blocked",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675363716052
      },
      {
        "content": "Hmm, so something specific w/ Atlas Serverless? I&#x27;d be curious if you could document the steps to recreate this consistently.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676053268489
      },
      {
        "content": "I wouldn&#x27;t count on it being something to do with Atlas Serverless specifically, just that Serverless tends to drop connections more frequently than you might see with a standard cluster. It appears to be an unhandled promise rejection, meaning somewhere a call to Mongoose is not being  <code>await</code>ed and the error isn&#x27;t being handled by the enclosing <code>try {} catch {}</code> block.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1676142054913
      },
      {
        "content": "@denolfe Fixed.",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1676301754869
      },
      {
        "content": "<a href=\"https://github.com/payloadcms/payload/pull/2078\">https://github.com/payloadcms/payload/pull/2078</a>",
        "authorID": "1033006865661050921",
        "authorName": "\\ ឵឵឵",
        "authorAvatar": null,
        "createdAtDate": 1676301756155
      },
      {
        "content": "Great! We&#x27;ll get this looked at soon 👍",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676308027640
      }
    ],
    "messageCount": 19
  },
  {
    "info": {
      "name": "Live preview with NextJS",
      "id": "1059443765951074314",
      "createdAt": 1672661477316
    },
    "messages": [
      {
        "content": "I just recently discovered Payload and fell in love with it immediately. <br><br>I&#x27;m now trying to set up a live preview with the NextJS Frontend which is deployed on vercel. The goal would be to have 2 windows open, edit the content in payload on the left side, see the changes on the preview website in real time (small delays are fine). <br><br>My Idea was to set up a separate deploy with an auth wall on a subdomain (preview.xyz.com) that get&#x27;s the data in draft mode after the user has logged in with his payload credentials. Using the autosave feature, the content on the preview page should be updated every 2 seconds. <br><br>One unsolved question is how to actually refresh the page content: I could let the page query the content every 2 seconds, or maybe set up a websocket connection to the payload express app? Since I haven&#x27;t done anything similar before, I&#x27;d love to hear if anyone thinks this will work, or if there are better/simpler ways to implement this.",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1672661477316
      },
      {
        "content": "Hey @Sandro Wegmann — I do think that a simple websocket or messaging service would be the best way to do this",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1672670973205
      },
      {
        "content": "and this is on our radar to build into Payload for sure, natively, although as of right now, you could do this on your own using SocketIO or similar",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1672670996307
      },
      {
        "content": "Sandro you are doing the lords work, if you figure it out lmk. Would love to implement a live preview, I wish there was documentation on implementation of just the preview functionality with next similar to what Prismic, DatoCMS, etc... Trying to hack something together to show team proof of concept",
        "authorID": "741147904017956896",
        "authorName": "FireGuy_42",
        "authorAvatar": "17319f1f75e1da2721c916a4283d7c6e",
        "createdAtDate": 1672967621797
      },
      {
        "content": "Same here, would love this! As of right now I just refetch the draft data each 2seconds on a preview route.<br><br>Using SocketIO seems interesting for sure.",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1672989554269
      },
      {
        "content": "I&#x27;ll post in here when I&#x27;ve figured sth out 😉",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1672995343834
      },
      {
        "content": "@FireGuy_42 @AngeloK I actually managed to get it working.  Check my post in the Showcase Channel or hmu 🙂",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673544975875
      },
      {
        "content": "Very nice! I would love to try and implement this in my project. It&#x27;s SvelteKit tho, but the functionality stays the same I guess.",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1673591439225
      },
      {
        "content": "Yup, you just have to implement a functionality in the frontend to 1. Authenticate a user (send a login request to payload) and 2. if logged in, listen to update calls from the server. This is a bit tricky if you&#x27;re using Nextjs along with SSG etc. but I don&#x27;t know about sveltekit",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673599998894
      },
      {
        "content": "Here&#x27;s what you have to do serverside <pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// Instead of just calling app.listen</span>\n<span class=\"hljs-comment\">// app.listen(process.env.PAYLOAD_PUBLIC_INTERNAL_SERVER_URL.split(&#x27;:&#x27;)[2]);</span>\n\n<span class=\"hljs-comment\">// create an http server (or https if you aren&#x27;t using a reverse proxy)</span>\n<span class=\"hljs-keyword\">const</span> server = http.<span class=\"hljs-title function_\">createServer</span>(app)\nserver.<span class=\"hljs-title function_\">listen</span>(process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PAYLOAD_PUBLIC_INTERNAL_SERVER_URL</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;:&#x27;</span>)[<span class=\"hljs-number\">2</span>], <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`HTTP Server running on port <span class=\"hljs-subst\">${process.env.PAYLOAD_PUBLIC_INTERNAL_SERVER_URL.split(<span class=\"hljs-string\">&#x27;:&#x27;</span>)[<span class=\"hljs-number\">2</span>]}</span>`</span>);\n});\n\n<span class=\"hljs-comment\">// Socket.io</span>\n<span class=\"hljs-comment\">// Now pass the server instance to socket io, to create a websocket server on the same port</span>\n<span class=\"hljs-keyword\">const</span> io = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;socket.io&#x27;</span>)(server, {\n  <span class=\"hljs-attr\">cors</span>: {\n    <span class=\"hljs-attr\">origin</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">WHITELIST_ORIGINS</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;,&#x27;</span>),\n  }\n});\n\nio.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&#x27;connection&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">socket</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;New client connected&#x27;</span>);\n\n  socket.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&#x27;disconnect&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-comment\">// console.log(&#x27;Client disconnected&#x27;)</span>\n  });\n})\n\n<span class=\"hljs-comment\">// You can&#x27;t call io.emit directly from the payload hooks, it throws errors. </span>\n<span class=\"hljs-comment\">// As a workaround, you can set up a simple endpoint that emits the update </span>\napp.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">&#x27;/updatePreview&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;update preview called&#x27;</span>)\n  <span class=\"hljs-comment\">// Check if authorization header contains PAYLOAD_SECRET</span>\n  <span class=\"hljs-keyword\">if</span> (req.<span class=\"hljs-property\">headers</span>.<span class=\"hljs-property\">authorization</span> !== process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PAYLOAD_PUBLIC_SERVER_SECRET</span>) {\n    res.<span class=\"hljs-title function_\">sendStatus</span>(<span class=\"hljs-number\">401</span>)\n    <span class=\"hljs-keyword\">return</span>\n  }\n  io.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;update&#x27;</span>)\n})</code></pre>",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673600178132
      },
      {
        "content": "Now, in the payload hooks, add an afterChange Hook: <br><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">if</span> (args.<span class=\"hljs-property\">doc</span>.<span class=\"hljs-property\">_status</span> !== <span class=\"hljs-string\">&#x27;published&#x27;</span>) {\n            <span class=\"hljs-keyword\">try</span> {\n              <span class=\"hljs-title function_\">axios</span>({\n                <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;post&#x27;</span>,\n                <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">`<span class=\"hljs-subst\">${process.env.PAYLOAD_PUBLIC_INTERNAL_SERVER_URL}</span>/updatePreview`</span>,\n                <span class=\"hljs-attr\">headers</span>: {\n                  <span class=\"hljs-string\">&#x27;Authorization&#x27;</span>: <span class=\"hljs-string\">`<span class=\"hljs-subst\">${process.env.PAYLOAD_PUBLIC_SERVER_SECRET}</span>`</span>\n                }\n              })\n            } <span class=\"hljs-keyword\">catch</span> (e) {\n              <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(e)\n            }\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Not published, skipping revalidation&#x27;</span>)</code></pre><br>This will just call the api endpoint you&#x27;ve just set up and emit the update message",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673600287310
      },
      {
        "content": "if you write code blocks and want them to be syntax highlighted for readability, you can append the language after the 3 back ticks. For typescript it would be 3 back ticks followed by the word <code>typescript</code>",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673615786960
      },
      {
        "content": "Oh damn thanks @Jarrod ! This is my first time really using discord haha",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1673716415940
      },
      {
        "content": "No prob! Was just letting you know 😃",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1673717106972
      },
      {
        "content": "@Sandro Wegmann finally had the chance to test this out. Works like a charm!",
        "authorID": "839912789560000522",
        "authorName": "AngeloK",
        "authorAvatar": "2e3e151a983a45a08f0c57b4ac4a149e",
        "createdAtDate": 1674414228142
      },
      {
        "content": "Gosh I&#x27;m a real grave-digger here, but if anyones interested, my solution (developed accidentally in parallel with this one haha) is perhaps a bit more involved, but the authentication part is quite interesting so I figured I should probably post it. It does require the two apps (frontend and payload) to be one the same-ish URL (ie. www.example.com and cms.example.com) but works pretty well I would say!<br><br><pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> io = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Server</span>(server, {\n  <span class=\"hljs-attr\">cors</span>: {\n    <span class=\"hljs-attr\">origin</span>: <span class=\"hljs-variable constant_\">WEB_URL</span>,\n    <span class=\"hljs-attr\">credentials</span>: <span class=\"hljs-literal\">true</span>,\n  },\n  <span class=\"hljs-attr\">allowRequest</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">req, callback</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> cookies = <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">fromEntries</span>(\n      req.<span class=\"hljs-property\">headers</span>.<span class=\"hljs-property\">cookie</span>\n        ?.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;; &quot;</span>)\n        .<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">cookie</span>) =&gt;</span> cookie.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;=&quot;</span>))\n        .<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">tuple</span>) =&gt;</span> tuple.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">2</span>) ?? []\n    );\n    <span class=\"hljs-keyword\">const</span> payloadToken = cookies[<span class=\"hljs-string\">&quot;payload-token&quot;</span>];\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> payloadToken !== <span class=\"hljs-string\">&quot;string&quot;</span>) {\n      <span class=\"hljs-title function_\">callback</span>(<span class=\"hljs-string\">&quot;Not signed in&quot;</span>, <span class=\"hljs-literal\">false</span>);\n      <span class=\"hljs-keyword\">return</span>;\n    }\n    jwt.<span class=\"hljs-title function_\">verify</span>(payloadToken, payload.<span class=\"hljs-property\">secret</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> {\n      <span class=\"hljs-keyword\">if</span> (err) {\n        <span class=\"hljs-title function_\">callback</span>(<span class=\"hljs-string\">&quot;Invalid token&quot;</span>, <span class=\"hljs-literal\">false</span>);\n        <span class=\"hljs-keyword\">return</span>;\n      }\n      <span class=\"hljs-title function_\">callback</span>(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">true</span>);\n    });\n  },\n});</code></pre>",
        "authorID": "321229198234615808",
        "authorName": "Ellie",
        "authorAvatar": "7472ce50c8e25a58fb6ed48925a7c31d",
        "createdAtDate": 1676445934310
      }
    ],
    "messageCount": 15
  },
  {
    "info": {
      "name": "How to enable bulk edit in collection list",
      "id": "1055804770339786793",
      "createdAt": 1671793873153
    },
    "messages": [
      {
        "content": "How can I enable a bulk editing mode in the list of a collection? <br><br>I&#x27;d like to select multiple documents with a checkbox and then delete them in a click.<br><br>I&#x27;v read in the docs that there is a possibility to override the list view, it&#x27;s the only way to do it?",
        "authorID": "781922386076499978",
        "authorName": "MatteoNaif",
        "authorAvatar": null,
        "createdAtDate": 1671793873153
      },
      {
        "content": "Bulk operations is a planned feature in our roadmap and will be available soon - you can keep in the loop here: <a href=\"https://github.com/payloadcms/payload/discussions/1382\">https://github.com/payloadcms/payload/discussions/1382</a>",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1671794234771
      },
      {
        "content": "Thanks! I&#x27;m looking forward! 🙂",
        "authorID": "781922386076499978",
        "authorName": "MatteoNaif",
        "authorAvatar": null,
        "createdAtDate": 1671802081265
      },
      {
        "content": "+1 for this, I was testing submissions and created over 20 test posts, bulk edit would be nice to delete all of them at once",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674579557593
      },
      {
        "content": "Absolutely, lol",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1674580133011
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "Is it possible to use Payloads' email and password validator on the frontend, like Next.js?",
      "id": "1070961204899614750",
      "createdAt": 1675407448745
    },
    "messages": [
      {
        "content": "Hello,<br>I have a little project for a gaming community portal and I need to make a registration/login module in Next.js for users to be able to login into in the website and forums. My question is, that can I use somehow the built-in email and password validator of paylod for this purpose?",
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1675407448745
      },
      {
        "content": "I have the same question.",
        "authorID": "941688759034970132",
        "authorName": "bigDaddy",
        "authorAvatar": "f59cf5ca783ae53f37e8a99cfbcc9a18",
        "createdAtDate": 1675415036729
      },
      {
        "content": "I guess it could be easier, if I only tried it, but it would be even easier if someone could tell me if it&#x27;s even possible or not.",
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1675419666788
      },
      {
        "content": "I dont want to discourage you from using payload cms for your project but for your specific need , have you heard of <a href=\"https://www.discourse.org?\">https://www.discourse.org?</a> In that case you dont need to do a lot of custom coding",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675430476335
      },
      {
        "content": "Thanks ,but it&#x27;s a non-profit project i am making, so i don&#x27;t want to pay for any of its components, I imagined it all made by hand or coded by hand.",
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1675434014564
      },
      {
        "content": "discourse is open source too (<a href=\"https://github.com/discourse/discourse\">https://github.com/discourse/discourse</a>) i used a long time ago for a project and a lot of stuff for managing a community is built in.",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675436779145
      },
      {
        "content": "On second thought ans taking a glance at it, it might be just what I need, it&#x27;s even coatumizable theme-wise",
        "authorID": "537385969230413846",
        "authorName": "Arskeliss",
        "authorAvatar": "0f72f4c0d2fd2e561a9063bc21e64f73",
        "createdAtDate": 1675461464911
      }
    ],
    "messageCount": 6
  },
  {
    "info": {
      "name": "User access issue",
      "id": "1064620149384159293",
      "createdAt": 1673895623299
    },
    "messages": [
      {
        "content": "Hello! I&#x27;m having issues with user authentication and collection access. So I log in (as admin) and the try to create another user.<br>The post request sends correctly the cookie cookie: &#x27;payload-token=&lt;token&gt; but the access create function gets user as undefined.<br><br>Am I missing something?",
        "authorID": "468994630365609985",
        "authorName": "gaboluque",
        "authorAvatar": "ef3cafdc42601db472dede6d2908252f",
        "createdAtDate": 1673895623299
      },
      {
        "content": "Hey @gaboluque, have you defined your own create function for the Users collection or is this happening with the default user collection?",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674079745825
      },
      {
        "content": "Nope, nothing custom. Strange enough when I changed port from 80 to 8000 the issue stop happening",
        "authorID": "468994630365609985",
        "authorName": "gaboluque",
        "authorAvatar": "ef3cafdc42601db472dede6d2908252f",
        "createdAtDate": 1674092115817
      },
      {
        "content": "Strange! I&#x27;m glad it&#x27;s working now 👍",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1674129580377
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "onInput Hook",
      "id": "1068870646827847721",
      "createdAt": 1674909020860
    },
    "messages": [
      {
        "content": "Is it planned to add an onInput Hook to the standard fields? This would be very practical for<br>1. Live Previews<br>2. dynamic Title fields (e.g. Contact has firstName and lastName, and you&#x27;re using a dynamically updated field fullName for the title)",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674909020860
      },
      {
        "content": "I think this is recommended approach to this would be a custom element, it&#x27;s what I&#x27;m looking at to achieve a similar thing for a slug field but havent started working on it yet",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674910710745
      },
      {
        "content": "Jep, however, in case of a live preview, every field would need that Hook, means i&#x27;d have to recreate all payload field types which wouldn&#x27;t be an optimal solution i guess😅",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674915079830
      },
      {
        "content": "@Sandro Wegmann You could still use a custom component for this as @noheadphones suggests, but subscribe to the entire form state. Check this out: <a href=\"https://payloadcms.com/docs/admin/hooks#useformfields\">https://payloadcms.com/docs/admin/hooks#useformfields</a>",
        "authorID": "808734492645785600",
        "authorName": "jacobsfletch",
        "authorAvatar": "cfb0dda51cec514f07387fafddb55269",
        "createdAtDate": 1675130909098
      }
    ],
    "messageCount": 3
  },
  {
    "info": {
      "name": "'SelectInput' JSX type error",
      "id": "1074531834060357653",
      "createdAt": 1676258753076
    },
    "messages": [
      {
        "content": "When trying to re-use the <code>SelectInput</code> component in my own custom admin component, I get this type error:<br><br><blockquote>&#x27;SelectInput&#x27; cannot be used as a JSX component.<br>  Its return type &#x27;ReactElement&lt;any, any&gt;&#x27; is not a valid JSX element.<br>    Type &#x27;ReactElement&lt;any, any&gt;&#x27; is missing the following properties from type &#x27;Element&#x27;: tag, attrs, statets(2786)<br></blockquote><br>From some googling, I think this may have something to do with conflicting React versions, or else some kind of issue with TypeScript not using the correct React version.<br><br>However, I only have one version of React present in my project and it&#x27;s <code>^18.2.0</code>, the same as Payload CMS.<br><br>I also added the following to my package.json which did not seem to help:<br><br><pre><code class=\"hljs json\">  <span class=\"hljs-attr\">&quot;overrides&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;react&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^18.2.0&quot;</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;resolutions&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;react&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^18.2.0&quot;</span>\n  <span class=\"hljs-punctuation\">}</span></code></pre><br><br>My tsconfig is as follows:<br><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;compilerOptions&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n      <span class=\"hljs-attr\">&quot;allowJs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;baseUrl&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;esModuleInterop&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;lib&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;es2019&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;es2020.bigint&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;es2020.string&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;es2020.symbol.wellknown&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;jsx&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;react&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;module&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;commonjs&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;moduleResolution&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;node&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;noEmitOnError&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;outDir&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;./dist&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;paths&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n        <span class=\"hljs-attr\">&quot;bundles/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;bundles/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n        <span class=\"hljs-attr\">&quot;lib/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;lib/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n        <span class=\"hljs-attr\">&quot;combat/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;bundles/myelin-turn-combat/lib/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n        <span class=\"hljs-attr\">&quot;types/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;types/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n        <span class=\"hljs-attr\">&quot;payload/generated-types&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./bundles/myelin-cms/payload-types.ts&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;pretty&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;resolveJsonModule&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;skipLibCheck&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;sourceMap&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;target&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;es2019&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;typeRoots&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n        <span class=\"hljs-string\">&quot;./node_modules/@types&quot;</span>\n      <span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n\n  <span class=\"hljs-attr\">&quot;include&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;bundles&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;lib&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;node_modules/ranvier&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;config.json&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;server.ts&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;tests&quot;</span><span class=\"hljs-punctuation\">,</span> \n    <span class=\"hljs-string\">&quot;payload.config.ts&quot;</span>\n  <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n\n  <span class=\"hljs-attr\">&quot;//&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;The myelinPanel is built by Vite and has its own TSConfig&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;exclude&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">&quot;bundles/myelin-panel/src&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">&quot;bundles/myelin-panel/dist&quot;</span>\n  <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n\n  <span class=\"hljs-attr\">&quot;ts-node&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;require&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;tsconfig-paths/register&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;swc&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span></code></pre><br><br>(note &quot;jsx&quot;: &quot;react&quot;)<br><br>And finally, the component where the error crops up is as follows (I didn&#x27;t implement any custom behavior yet due to running into this issue right away):<br><pre><code class=\"hljs tsx\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">CustomSelect</span>: <span class=\"hljs-title class_\">React</span>.<span class=\"hljs-property\">FC</span>&lt;<span class=\"hljs-title class_\">SelectInputProps</span>&gt; = <span class=\"hljs-function\">(<span class=\"hljs-params\">props</span>) =&gt;</span> {\n  <span class=\"hljs-comment\">// const { value, setValue } = useField&lt;SelectInputProps&gt;(props);</span>\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">SelectInput</span>\n      {<span class=\"hljs-attr\">...props</span>}\n    /&gt;</span></span>\n  );\n}</code></pre>",
        "authorID": "362971518969315328",
        "authorName": "hyper light thrifter",
        "authorAvatar": "b92ab03cf1127660b2340bd60ebc5730",
        "createdAtDate": 1676258753076
      },
      {
        "content": "Something else I can add: I changed the file with the component from <code>tsx</code> to <code>jsx</code> and everything compiles fine and the Select field works. So it&#x27;s 100% a types issue.",
        "authorID": "362971518969315328",
        "authorName": "hyper light thrifter",
        "authorAvatar": "b92ab03cf1127660b2340bd60ebc5730",
        "createdAtDate": 1676337766195
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Conditionally render field options",
      "id": "1072527167122047016",
      "createdAt": 1675780803233
    },
    "messages": [
      {
        "content": "I have a collection of <code>categories</code>. Each category has an array field with <code>subcategories</code>. I have another collection <code>posts</code> with fields of <code>category</code> and <code>subcategory</code>. I have specified that the category field is related to the categories collection. However, how could I conditionally render the options for the subcategory field once a category has been chosen? <code>admin: { condition }</code> only allows me to show or hide the filed but not to render its options based on a payload request that uses the data from the previous field.",
        "authorID": "978401445265178764",
        "authorName": "Theodore",
        "authorAvatar": null,
        "createdAtDate": 1675780803233
      },
      {
        "content": "Have you taken a look at the field conditional logic docs here? <a href=\"https://payloadcms.com/docs/fields/overview#conditional-logic\">https://payloadcms.com/docs/fields/overview#conditional-logic</a>. This should support dot notation which will help for your use-case.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1676038881077
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "File permissions for Digital Ocean Spaces + CDN",
      "id": "1068952437727166485",
      "createdAt": 1674928521330
    },
    "messages": [
      {
        "content": "Hey, so I&#x27;m using the official cloud storage plugin configured with the S3 adapter for DO spaces and my files upload correctly however they&#x27;re all being uploaded with &quot;private&quot; permissions by default and there doesn&#x27;t seem to be a way to change that; therefore any files I upload isn&#x27;t publicly accessible by end users via the CDN.<br><br>I tried enabling <code>disablePayloadAccessControl: true,</code> in case it did something internally but it didn&#x27;t help in this regard.<br><br>Short of hacking the plugin, is there another solution people have?",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674928521330
      },
      {
        "content": "Ok found the solution, just add <code>acl: &#x27;public-read&#x27;,</code> into your adapter config and then all uploaded files will be public in the bucket",
        "authorID": "858693520012476436",
        "authorName": "noheadphones",
        "authorAvatar": "db21160ec6d6b123e83a8b6768467352",
        "createdAtDate": 1674929621733
      }
    ],
    "messageCount": 1
  },
  {
    "info": {
      "name": "Variable \\\"$postID\\\" of type \\\"String\\\" used in position expecting type \\\"JSON\\\"",
      "id": "1066565603487404085",
      "createdAt": 1674359455702
    },
    "messages": [
      {
        "content": "I created a collection called States and when I try to query it, I get this error<br><br><pre><code class=\"hljs\">query States($postID: String) {\n        States(where: { id: { equals: $postID } }) {\n            docs{\n        id\n        name\n      }\n        }\n    }</code></pre><br><br>I want to pass the  post ID via a variable<br><br><pre><code class=\"hljs\">{\n  &quot;postID&quot;: &quot;22&quot;\n}</code></pre><br><br>in graphql playground I get this error: <br><br><pre><code class=\"hljs\">{\n  &quot;error&quot;: {\n    &quot;errors&quot;: [\n      {\n        &quot;message&quot;: &quot;Variable \\&quot;$postID\\&quot; of type \\&quot;String\\&quot; used in position expecting type \\&quot;JSON\\&quot;.&quot;,\n        &quot;locations&quot;: [\n          {\n            &quot;line&quot;: 1,\n            &quot;column&quot;: 22\n          },\n          {\n            &quot;line&quot;: 2,\n            &quot;column&quot;: 39\n          }\n        ]\n      }\n    ]\n  }\n}</code></pre>",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674359455702
      },
      {
        "content": "Hey @generator101 , what version are you on and have you recently updated? There was a bug related to this that was fixed and will be in the next release.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674396248193
      },
      {
        "content": "Thanks @denolfe , i am on latest version 1.5.9",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1674404502009
      },
      {
        "content": "@generator101 does this issue persist on latest? 1.6.4",
        "authorID": "854377910689202256",
        "authorName": "jesschow",
        "authorAvatar": "cd84347e723519ad6fe9dafb1530dbc5",
        "createdAtDate": 1675445807461
      },
      {
        "content": "I am not sure, I changes some structures and did not face this issue anymore. Can close this issue. Thanks",
        "authorID": "944284724824801302",
        "authorName": "generator101",
        "authorAvatar": null,
        "createdAtDate": 1675462951686
      }
    ],
    "messageCount": 4
  },
  {
    "info": {
      "name": "not assignable to type 'FieldHook<any, any, any>[]",
      "id": "1071384975066275890",
      "createdAt": 1675508483426
    },
    "messages": [
      {
        "content": "I can&#x27;t see what I&#x27;m doing wrong in this definition of a field hook:<br><br><pre><code class=\"hljs ts\"><span class=\"hljs-attr\">hooks</span>: {\n    <span class=\"hljs-attr\">beforeValidate</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">args</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">const</span> {value=<span class=\"hljs-string\">&#x27;&#x27;</span>, data} = args;\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">name</span>:<span class=\"hljs-built_in\">string</span> = value;\n\n        <span class=\"hljs-title function_\">getOwnedGames</span>().<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">games</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">const</span> game = games.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">g</span> =&gt;</span> g.<span class=\"hljs-property\">appid</span> === data.<span class=\"hljs-property\">steamGame</span>)\n            <span class=\"hljs-keyword\">if</span> (game.<span class=\"hljs-property\">length</span> !== <span class=\"hljs-number\">0</span>)\n                name = game[<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">name</span>\n        });\n\n        <span class=\"hljs-keyword\">return</span> name;\n    }\n}</code></pre><br><br>I&#x27;m getting the error <code>TS2322: Type &#x27;(args: any) =&gt; string&#x27; is not assignable to type &#x27;FieldHook&lt;any, any, any&gt;[]&#x27;.</code>",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675508483426
      },
      {
        "content": "<a href=\"https://tenor.com/view/mib-men-in-black-will-gif-20590125\">https://tenor.com/view/mib-men-in-black-will-gif-20590125</a>",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675512678656
      },
      {
        "content": "Ignore that - realised it takes an array 🤦‍♂️",
        "authorID": "365498720726286349",
        "authorName": "Kyr",
        "authorAvatar": "80448b45efe7253a0cc090c246e96c09",
        "createdAtDate": 1675512714312
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "The following field is invalid",
      "id": "1070498252933308456",
      "createdAt": 1675297072395
    },
    "messages": [
      {
        "content": "Hello everyone,<br><br>Trust you are having a great day!<br><br>I have a collection that used to have a field with the name of <code>slug</code> which also had <code>unique</code> set to <code>true</code>. I removed that field &amp; I&#x27;m getting this error: <code>The following field is invalid: slug</code>.<br><br>How can I fix this?<br><br>Thank you!",
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1675297072395
      },
      {
        "content": "Hey @Luciano! You likely  have to manually remove the index from the db (not difficult to do). Let me know if that resolved your issue 👍",
        "authorID": "281120856527077378",
        "authorName": "Jarrod",
        "authorAvatar": "13f36e4a409884dd6dbdee1b9be1a525",
        "createdAtDate": 1675301052654
      },
      {
        "content": "Hey @Jarrod! Yes, that  resolved my issue. Thank you very much for your time!",
        "authorID": "1014197588670558258",
        "authorName": "Luciano",
        "authorAvatar": "8c75ead1d83ad55af624d523bccee6a8",
        "createdAtDate": 1675332803326
      }
    ],
    "messageCount": 2
  },
  {
    "info": {
      "name": "Clean install, app does not run",
      "id": "1069639304307023923",
      "createdAt": 1675092283084
    },
    "messages": [
      {
        "content": "via node <code>v19.5.0</code> on an M1 mac<br><br>I run <code>npx create-payload-app</code>, fill in the settings and run a local mongo instance. After visiting <code>http://localhost:3000/admin</code> i just get module build failed.<br><br>Lots of the errors seem to stem from tailwind through webpack, not sure of what would be the best way to debug or fix this.<br><br><br><pre><code class=\"hljs\">$ npm run dev\n\n&gt; rfcms@1.0.0 dev\n&gt; cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts nodemon\n\n[nodemon] 2.0.20\n[nodemon] to restart at any time, enter `rs`\n[nodemon] watching path(s): *.*\n[nodemon] watching extensions: ts\n[nodemon] starting `ts-node src/server.ts`\n[15:01:56] INFO (payload): Starting Payload...\n[15:01:57] INFO (payload): Payload Admin URL: http://localhost:3000/admin\n[15:01:57] INFO (payload): Connected to Mongo server successfully!\n&lt;i&gt; [webpack-dev-middleware] wait until bundle finished: /adminindex.html\nwebpack built c4a4bdbe77f7a14ad36d in 4416ms\nERROR in ./node_modules/payload/dist/admin/components/elements/ArrayAction/index.scss (./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./node_modules/payload/dist/admin/components/elements/ArrayAction/index.scss)</code></pre>",
        "authorID": "165553880720080896",
        "authorName": "ds",
        "authorAvatar": "be7047dfd3b5239be387a4038aba16a4",
        "createdAtDate": 1675092283084
      },
      {
        "content": "so just to be clear, you&#x27;re attempting to use Tailwind?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675106954582
      },
      {
        "content": "by overriding your webpack config or similar?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675106965504
      },
      {
        "content": "no i haven&#x27;t overrode anything, I just ran the <code>create-payload-app</code> script",
        "authorID": "165553880720080896",
        "authorName": "ds",
        "authorAvatar": "be7047dfd3b5239be387a4038aba16a4",
        "createdAtDate": 1675110607904
      },
      {
        "content": "and <code>npm run dev</code> and thats the error i get",
        "authorID": "165553880720080896",
        "authorName": "ds",
        "authorAvatar": "be7047dfd3b5239be387a4038aba16a4",
        "createdAtDate": 1675110619137
      },
      {
        "content": "interesting, we don&#x27;t use tailwind at all, and i don&#x27;t see anything regarding tailwind in the error message but we will give it a shot to see if we can reproduce",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675112516480
      },
      {
        "content": "what version of Node are you on?",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675112519119
      },
      {
        "content": "I&#x27;m not able to recreate with latest create-payload-app.",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675112815900
      },
      {
        "content": "I&#x27;m on Intel though, might have someone try M1",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675112858165
      },
      {
        "content": "I have M1, can&#x27;t recreate",
        "authorID": "364124941832159242",
        "authorName": "jmikrut",
        "authorAvatar": "75c6eefb2f22c067ecb125f7837833f3",
        "createdAtDate": 1675112882944
      },
      {
        "content": "i found the problem- i did ran <code>npx create-payload-app</code> within the directory of an existing app",
        "authorID": "165553880720080896",
        "authorName": "ds",
        "authorAvatar": "be7047dfd3b5239be387a4038aba16a4",
        "createdAtDate": 1675115199179
      },
      {
        "content": "i ran the command in a clean directory and it seemed to work",
        "authorID": "165553880720080896",
        "authorName": "ds",
        "authorAvatar": "be7047dfd3b5239be387a4038aba16a4",
        "createdAtDate": 1675115216748
      },
      {
        "content": "Awesome, glad you were able to figure it out",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1675115228671
      },
      {
        "content": "guess webpack doesnt mingle well with multiple projects",
        "authorID": "165553880720080896",
        "authorName": "ds",
        "authorAvatar": "be7047dfd3b5239be387a4038aba16a4",
        "createdAtDate": 1675115241514
      },
      {
        "content": "thanks for following up!",
        "authorID": "165553880720080896",
        "authorName": "ds",
        "authorAvatar": "be7047dfd3b5239be387a4038aba16a4",
        "createdAtDate": 1675115248693
      }
    ],
    "messageCount": 14
  },
  {
    "info": {
      "name": "Extending Payload Schema from outside",
      "id": "1067896834330202213",
      "createdAt": 1674676845868
    },
    "messages": [
      {
        "content": "I have a collection that I&#x27;d like to use from within payload, and from an external express app that uses mongoose.<br><br>Is it save to have a schema  in payload with e.g. name:text, description:richText and a separate Mongoose Schema with age:number linked to the same collection?",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674676845868
      },
      {
        "content": "Extending Payload Schema from outside",
        "authorID": "900030932617162793",
        "authorName": "Sandro Wegmann",
        "authorAvatar": "51018814dbca15d823817ac63e505824",
        "createdAtDate": 1674676877230
      },
      {
        "content": "This isn&#x27;t something we&#x27;ve tested. If the output of the Payload model matches that of how your external application reads/writes, I don&#x27;t see why it wouldn&#x27;t work (assuming I understand what you&#x27;re saying)",
        "authorID": "967118574445547650",
        "authorName": "denolfe",
        "authorAvatar": "4b4f2116891f3b207b508b1c03a6f931",
        "createdAtDate": 1674750433008
      }
    ],
    "messageCount": 2
  }
]